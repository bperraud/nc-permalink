/**
 * SPDX-FileCopyrightText: 2023 Ferdinand Thiessen <opensource@fthiessen.de>
 *
 * SPDX-License-Identifier: AGPL-3.0-or-later
 */
import type { UserConfigFn } from 'vite';
import type { BaseOptions, NodePolyfillsOptions } from './baseConfig.js';
import type { EmptyJSDirPluginOptions } from './plugins/EmptyJSDir.js';
import injectCSSPlugin from 'vite-plugin-css-injected-by-js';
import { REUSELicensesPluginOptions } from './plugins/REUSELicensesPlugin.js';
type VitePluginInjectCSSOptions = Parameters<typeof injectCSSPlugin>[0];
export interface AppOptions extends Omit<BaseOptions, 'inlineCSS'> {
    /**
     * Override the `appName`, by default the name from the `appinfo/info.xml` and if not found the name from `package.json` is used.
     * But if that name differs from the app id used for the Nextcloud app you need to override it.
     */
    appName?: string;
    /**
     * Prefix to use for assets and chunks
     * @default '{appName}-'
     */
    assetsPrefix?: string;
    /**
     * Inject all styles inside the javascript bundle instead of emitting a .css file
     * @default false
     */
    inlineCSS?: boolean | VitePluginInjectCSSOptions;
    /**
     * When not using inline css and using `cssCodeSplit` this option allows to create
     * one CSS entry file for each JS entry point instead of only one for each JS entry point with styles.
     *
     * @default false
     */
    createEmptyCSSEntryPoints?: boolean;
    /**
     * Whether to empty the 'js' directory
     * Pass `false` to disable clearing the directory,
     * it is also possible to pass options to the plugin.
     * @default true
     */
    emptyOutputDirectory?: boolean | EmptyJSDirPluginOptions;
    /**
     * Inject polyfills for node packages
     * By default all node core modules are polyfilled, including prefixed with `node:` protocol
     *
     * @default '{ protocolImports: true }'
     */
    nodePolyfills?: boolean | NodePolyfillsOptions;
    /**
     * Location of license summary file of third party dependencies
     * Pass `false` to disable generating a license file.
     *
     * @default 'js/vendor.LICENSE.txt'
     */
    thirdPartyLicense?: false | string;
    /**
     * Extract license information from built assets into `.license` files
     * This is needed to be REUSE complient
     */
    extractLicenseInformation?: true | REUSELicensesPluginOptions;
}
/**
 * Create a vite config for your nextcloud app
 *
 * @param entries Entry points of your app
 * @param options App related options for the vite config
 * @return {UserConfigFn} The vite config
 * @example
 * export default createAppConfig({
 *   main: path.resolve(path.join('src', 'main.js')),
 *   settings: path.resolve(path.join('src', 'settings.js')),
 * })
 */
export declare const createAppConfig: (entries: {
    [entryAlias: string]: string;
}, options?: AppOptions) => UserConfigFn;
export {};
