import { INode } from '@nextcloud/files';
import { MaybeRef } from '@vueuse/core';
interface PreviewOptions {
    /**
     * Size of the previews in px
     * @default 32
     */
    size?: number;
    /**
     * Should the preview fall back to the mime type icon
     * @default true
     */
    mimeFallback?: boolean;
    /**
     * Should the preview be cropped or fitted
     * @default false (meaning it gets fitted)
     */
    cropPreview?: boolean;
}
/**
 * Generate the preview URL of a file node
 *
 * @param node The node to generate the preview for
 * @param options Preview options
 */
export declare function getPreviewURL(node: INode, options?: PreviewOptions): URL | null;
export declare const usePreviewURL: (node: MaybeRef<INode>, options?: MaybeRef<PreviewOptions>) => {
    previewURL: import('vue').Ref<{
        hash: string;
        host: string;
        hostname: string;
        href: string;
        toString: () => string;
        readonly origin: string;
        password: string;
        pathname: string;
        port: string;
        protocol: string;
        search: string;
        readonly searchParams: {
            readonly size: number;
            append: (name: string, value: string) => void;
            delete: (name: string, value?: string) => void;
            get: (name: string) => string | null;
            getAll: (name: string) => string[];
            has: (name: string, value?: string) => boolean;
            set: (name: string, value: string) => void;
            sort: () => void;
            toString: () => string;
            forEach: (callbackfn: (value: string, key: string, parent: URLSearchParams) => void, thisArg?: any) => void;
            entries: () => IterableIterator<[string, string]>;
            keys: () => IterableIterator<string>;
            values: () => IterableIterator<string>;
            [Symbol.iterator]: () => IterableIterator<[string, string]>;
        };
        username: string;
        toJSON: () => string;
    } | null>;
    previewLoaded: import('vue').Ref<boolean>;
};
export {};
