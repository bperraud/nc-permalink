type __VLS_Props = {
    currentView: 'files' | 'recent' | 'favorites';
    filterString: string;
    isCollapsed: boolean;
    disabledNavigation: boolean;
};
declare const _default: import('vue').DefineComponent<__VLS_TypePropsToOption<__VLS_Props>, {}, {}, {}, {}, import('vue').ComponentOptionsMixin, import('vue').ComponentOptionsMixin, {
    "update:currentView": (v: "files" | "favorites" | "recent") => void;
    "update:filterString": (v: string) => void;
}, string, Readonly<import('vue').ExtractPropTypes<__VLS_TypePropsToOption<__VLS_Props>>>, {}>;
export default _default;
type __VLS_NonUndefinedable<T> = T extends undefined ? never : T;
type __VLS_TypePropsToOption<T> = {
    [K in keyof T]-?: {} extends Pick<T, K> ? {
        type: import('vue').PropType<__VLS_NonUndefinedable<T[K]>>;
    } : {
        type: import('vue').PropType<T[K]>;
        required: true;
    };
};
