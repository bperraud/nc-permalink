import { IDialogButton, DialogSeverity } from './types';
type __VLS_Props = {
    /**
     * Headline of the dialog
     */
    name: string;
    /**
     * Main text of the dialog
     */
    text: string;
    /**
     * HTML content
     * @deprecated DO NOT USE! This is just for backwards compatibility and will be removed in the near future!
     */
    html?: string;
    /**
     * Buttons on the dialog
     */
    buttons?: IDialogButton[];
    /**
     * Severity of the dialog - if a notecard is used
     */
    severity?: DialogSeverity;
};
declare const _default: import('vue').DefineComponent<__VLS_TypePropsToOption<__VLS_Props>, {}, {}, {}, {}, import('vue').ComponentOptionsMixin, import('vue').ComponentOptionsMixin, {}, string, Readonly<import('vue').ExtractPropTypes<__VLS_TypePropsToOption<__VLS_Props>>>, {}>;
export default _default;
type __VLS_NonUndefinedable<T> = T extends undefined ? never : T;
type __VLS_TypePropsToOption<T> = {
    [K in keyof T]-?: {} extends Pick<T, K> ? {
        type: import('vue').PropType<__VLS_NonUndefinedable<T[K]>>;
    } : {
        type: import('vue').PropType<T[K]>;
        required: true;
    };
};
