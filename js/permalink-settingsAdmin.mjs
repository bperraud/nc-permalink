(function() {
  "use strict";
  try {
    if (typeof document != "undefined") {
      var elementStyle = document.createElement("style");
      elementStyle.appendChild(document.createTextNode(`@charset "UTF-8";/**
 * SPDX-FileCopyrightText: 2019 Nextcloud GmbH and Nextcloud contributors
 * SPDX-License-Identifier: AGPL-3.0-or-later
 */
/**
 * SPDX-FileCopyrightText: 2021 Nextcloud GmbH and Nextcloud contributors
 * SPDX-License-Identifier: AGPL-3.0-or-later
 */
/*
* Ensure proper alignment of the vue material icons
*/
.material-design-icon {
  display: flex;
  align-self: center;
  justify-self: center;
  align-items: center;
  justify-content: center;
}
.nc-button-group-base > div {
  text-align: center;
  color: var(--color-text-maxcontrast);
}
.nc-button-group-base ul.nc-button-group-content {
  display: flex;
  gap: 4px;
  justify-content: space-between;
}
.nc-button-group-base ul.nc-button-group-content li {
  flex: 1 1;
}
.nc-button-group-base ul.nc-button-group-content .action-button {
  padding: 0 !important;
  width: 100%;
  display: flex;
  justify-content: center;
}
.nc-button-group-base ul.nc-button-group-content .action-button.action-button--active {
  background-color: var(--color-primary-element);
  border-radius: var(--border-radius-large);
  color: var(--color-primary-element-text);
}
.nc-button-group-base ul.nc-button-group-content .action-button.action-button--active:hover, .nc-button-group-base ul.nc-button-group-content .action-button.action-button--active:focus, .nc-button-group-base ul.nc-button-group-content .action-button.action-button--active:focus-within {
  background-color: var(--color-primary-element-hover);
}
.nc-button-group-base ul.nc-button-group-content .action-button .action-button__pressed-icon {
  display: none;
}/**
 * SPDX-FileCopyrightText: 2019 Nextcloud GmbH and Nextcloud contributors
 * SPDX-License-Identifier: AGPL-3.0-or-later
 */
/**
 * SPDX-FileCopyrightText: 2021 Nextcloud GmbH and Nextcloud contributors
 * SPDX-License-Identifier: AGPL-3.0-or-later
 */
/*
* Ensure proper alignment of the vue material icons
*/
.material-design-icon[data-v-7bf21eca] {
  display: flex;
  align-self: center;
  justify-self: center;
  align-items: center;
  justify-content: center;
}
.app-navigation-caption[data-v-7bf21eca] {
  color: var(--color-text-maxcontrast);
  line-height: var(--default-clickable-area);
  white-space: nowrap;
  text-overflow: ellipsis;
  box-shadow: none !important;
  user-select: none;
  pointer-events: none;
  margin-inline-start: 12px;
  padding-inline-end: 14px;
  height: var(--default-clickable-area);
  display: flex;
  align-items: center;
}/**
 * SPDX-FileCopyrightText: 2019 Nextcloud GmbH and Nextcloud contributors
 * SPDX-License-Identifier: AGPL-3.0-or-later
 */
/**
 * SPDX-FileCopyrightText: 2021 Nextcloud GmbH and Nextcloud contributors
 * SPDX-License-Identifier: AGPL-3.0-or-later
 */
/*
* Ensure proper alignment of the vue material icons
*/
.material-design-icon[data-v-96242645] {
  display: flex;
  align-self: center;
  justify-self: center;
  align-items: center;
  justify-content: center;
}

/**
 * SPDX-FileCopyrightText: 2019 Nextcloud GmbH and Nextcloud contributors
 * SPDX-License-Identifier: AGPL-3.0-or-later
 */
li.action[data-v-96242645]:hover, li.action.active[data-v-96242645] {
  border-radius: 6px;
  padding: 0;
}
li.action[data-v-96242645]:hover {
  background-color: var(--color-background-hover);
}
.action--disabled[data-v-96242645] {
  pointer-events: none;
  opacity: 0.5;
}
.action--disabled[data-v-96242645]:hover, .action--disabled[data-v-96242645]:focus {
  cursor: default;
  opacity: 0.5;
}
.action--disabled *[data-v-96242645] {
  opacity: 1 !important;
}
.action-checkbox[data-v-96242645] {
  display: flex;
  align-items: flex-start;
  width: 100%;
  height: auto;
  margin: 0;
  padding: 0;
  cursor: pointer;
  white-space: nowrap;
  color: var(--color-main-text);
  border: 0;
  border-radius: 0;
  background-color: transparent;
  box-shadow: none;
  font-weight: normal;
  line-height: var(--default-clickable-area);
  /* checkbox/radio fixes */
}
.action-checkbox__checkbox[data-v-96242645] {
  position: absolute;
  inset-inline-start: 0 !important;
  z-index: -1;
  opacity: 0;
}
.action-checkbox__label[data-v-96242645] {
  display: flex;
  align-items: center;
  width: 100%;
  padding: 0 !important;
  padding-inline-end: calc((var(--default-clickable-area) - 16px) / 2) !important;
}
.action-checkbox__label[data-v-96242645]::before {
  margin-block: 0 !important;
  margin-inline: calc((var(--default-clickable-area) - 14px) / 2) !important;
}
.action-checkbox--disabled[data-v-96242645],
.action-checkbox--disabled .action-checkbox__label[data-v-96242645] {
  cursor: pointer;
}/**
 * SPDX-FileCopyrightText: 2019 Nextcloud GmbH and Nextcloud contributors
 * SPDX-License-Identifier: AGPL-3.0-or-later
 */
/**
 * SPDX-FileCopyrightText: 2021 Nextcloud GmbH and Nextcloud contributors
 * SPDX-License-Identifier: AGPL-3.0-or-later
 */
/*
* Ensure proper alignment of the vue material icons
*/
.material-design-icon[data-v-d174eb12] {
  display: flex;
  align-self: center;
  justify-self: center;
  align-items: center;
  justify-content: center;
}

/**
 * SPDX-FileCopyrightText: 2019 Nextcloud GmbH and Nextcloud contributors
 * SPDX-License-Identifier: AGPL-3.0-or-later
 */
/**
 * color-text-lighter		normal state
 * color-text-lighter		active state
 * color-text-maxcontrast 	disabled state
 */
/* Default global values */
button[data-v-d174eb12]:not(.button-vue),
input[data-v-d174eb12]:not([type=range]),
textarea[data-v-d174eb12] {
  margin: 0;
  padding: 7px 6px;
  cursor: text;
  color: var(--color-text-lighter);
  border: 1px solid var(--color-border-dark);
  border-radius: var(--border-radius);
  outline: none;
  background-color: var(--color-main-background);
  font-size: 13px;
  /* Primary action button, use sparingly */
}
button[data-v-d174eb12]:not(.button-vue):not(:disabled):not(.primary):hover, button[data-v-d174eb12]:not(.button-vue):not(:disabled):not(.primary):focus, button:not(.button-vue):not(:disabled):not(.primary).active[data-v-d174eb12],
input[data-v-d174eb12]:not([type=range]):not(:disabled):not(.primary):hover,
input[data-v-d174eb12]:not([type=range]):not(:disabled):not(.primary):focus,
input:not([type=range]):not(:disabled):not(.primary).active[data-v-d174eb12],
textarea[data-v-d174eb12]:not(:disabled):not(.primary):hover,
textarea[data-v-d174eb12]:not(:disabled):not(.primary):focus,
textarea:not(:disabled):not(.primary).active[data-v-d174eb12] {
  /* active class used for multiselect */
  border-color: var(--color-primary-element);
  outline: none;
}
button[data-v-d174eb12]:not(.button-vue):not(:disabled):not(.primary):active,
input[data-v-d174eb12]:not([type=range]):not(:disabled):not(.primary):active,
textarea[data-v-d174eb12]:not(:disabled):not(.primary):active {
  color: var(--color-text-light);
  outline: none;
  background-color: var(--color-main-background);
}
button[data-v-d174eb12]:not(.button-vue):disabled,
input[data-v-d174eb12]:not([type=range]):disabled,
textarea[data-v-d174eb12]:disabled {
  cursor: default;
  opacity: 0.5;
  color: var(--color-text-maxcontrast);
  background-color: var(--color-background-dark);
}
button[data-v-d174eb12]:not(.button-vue):required,
input[data-v-d174eb12]:not([type=range]):required,
textarea[data-v-d174eb12]:required {
  box-shadow: none;
}
button[data-v-d174eb12]:not(.button-vue):invalid,
input[data-v-d174eb12]:not([type=range]):invalid,
textarea[data-v-d174eb12]:invalid {
  border-color: var(--color-error);
  box-shadow: none !important;
}
button:not(.button-vue).primary[data-v-d174eb12],
input:not([type=range]).primary[data-v-d174eb12],
textarea.primary[data-v-d174eb12] {
  cursor: pointer;
  color: var(--color-primary-element-text);
  border-color: var(--color-primary-element);
  background-color: var(--color-primary-element);
}
button:not(.button-vue).primary[data-v-d174eb12]:not(:disabled):hover, button:not(.button-vue).primary[data-v-d174eb12]:not(:disabled):focus, button:not(.button-vue).primary[data-v-d174eb12]:not(:disabled):active,
input:not([type=range]).primary[data-v-d174eb12]:not(:disabled):hover,
input:not([type=range]).primary[data-v-d174eb12]:not(:disabled):focus,
input:not([type=range]).primary[data-v-d174eb12]:not(:disabled):active,
textarea.primary[data-v-d174eb12]:not(:disabled):hover,
textarea.primary[data-v-d174eb12]:not(:disabled):focus,
textarea.primary[data-v-d174eb12]:not(:disabled):active {
  border-color: var(--color-primary-element-light);
  background-color: var(--color-primary-element-light);
}
button:not(.button-vue).primary[data-v-d174eb12]:not(:disabled):active,
input:not([type=range]).primary[data-v-d174eb12]:not(:disabled):active,
textarea.primary[data-v-d174eb12]:not(:disabled):active {
  color: var(--color-primary-element-text-dark);
}
button:not(.button-vue).primary[data-v-d174eb12]:disabled,
input:not([type=range]).primary[data-v-d174eb12]:disabled,
textarea.primary[data-v-d174eb12]:disabled {
  cursor: default;
  color: var(--color-primary-element-text-dark);
  background-color: var(--color-primary-element);
}

/**
 * SPDX-FileCopyrightText: 2019 Nextcloud GmbH and Nextcloud contributors
 * SPDX-License-Identifier: AGPL-3.0-or-later
 */
li.action[data-v-d174eb12]:hover, li.action.active[data-v-d174eb12] {
  border-radius: 6px;
  padding: 0;
}
li.action[data-v-d174eb12]:hover {
  background-color: var(--color-background-hover);
}
.action--disabled[data-v-d174eb12] {
  pointer-events: none;
  opacity: 0.5;
}
.action--disabled[data-v-d174eb12]:hover, .action--disabled[data-v-d174eb12]:focus {
  cursor: default;
  opacity: 0.5;
}
.action--disabled *[data-v-d174eb12] {
  opacity: 1 !important;
}
.action-input[data-v-d174eb12] {
  display: flex;
  align-items: flex-start;
  width: 100%;
  height: auto;
  margin: 0;
  padding: 0;
  cursor: pointer;
  white-space: nowrap;
  color: var(--color-main-text);
  border: 0;
  border-radius: 0;
  background-color: transparent;
  box-shadow: none;
  font-weight: normal;
}
.action-input__icon-wrapper[data-v-d174eb12] {
  display: flex;
  align-self: center;
  align-items: center;
  justify-content: center;
}
.action-input__icon-wrapper[data-v-d174eb12] .material-design-icon {
  width: var(--default-clickable-area);
  height: var(--default-clickable-area);
  opacity: 1;
}
.action-input__icon-wrapper[data-v-d174eb12] .material-design-icon .material-design-icon__svg {
  vertical-align: middle;
}
.action-input > span[data-v-d174eb12] {
  cursor: pointer;
  white-space: nowrap;
}
.action-input__icon[data-v-d174eb12] {
  min-width: 0; /* Overwrite icons*/
  min-height: 0;
  padding: calc(var(--default-clickable-area) / 2) 0 calc(var(--default-clickable-area) / 2) var(--default-clickable-area);
  background-position: calc((var(--default-clickable-area) - 16px) / 2) center;
  background-size: 16px;
}
.action-input__form[data-v-d174eb12] {
  display: flex;
  align-items: center;
  flex: 1 1 auto;
  margin: 4px 0;
  padding-inline-end: calc((var(--default-clickable-area) - 16px) / 2);
}
.action-input__container[data-v-d174eb12] {
  position: relative;
  width: 100%;
}
.action-input__input-container[data-v-d174eb12] {
  display: flex;
}
.action-input__input-container .colorpicker__trigger[data-v-d174eb12], .action-input__input-container .colorpicker__preview[data-v-d174eb12] {
  width: 100%;
}
.action-input__input-container .colorpicker__preview[data-v-d174eb12] {
  width: 100%;
  height: 36px;
  border-radius: var(--border-radius-large);
  border: 2px solid var(--color-border-maxcontrast);
  box-shadow: none !important;
}
.action-input__text-label[data-v-d174eb12] {
  padding: 4px 0;
  display: block;
}
.action-input__text-label--hidden[data-v-d174eb12] {
  position: absolute;
  inset-inline-start: 0;
  width: 1px;
  height: 1px;
  overflow: hidden;
  z-index: -1;
  opacity: 0;
}
.action-input__datetimepicker[data-v-d174eb12] {
  width: 100%;
}
.action-input__datetimepicker[data-v-d174eb12] .mx-input {
  margin: 0;
}
.action-input__multi[data-v-d174eb12] {
  width: 100%;
}
li:last-child > .action-input[data-v-d174eb12] {
  padding-bottom: calc((var(--default-clickable-area) - 16px) / 2 - 4px);
}
li:first-child > .action-input[data-v-d174eb12]:not(.action-input--visible-label) {
  padding-top: calc((var(--default-clickable-area) - 16px) / 2 - 4px);
}/**
 * SPDX-FileCopyrightText: 2019 Nextcloud GmbH and Nextcloud contributors
 * SPDX-License-Identifier: AGPL-3.0-or-later
 */
/**
 * SPDX-FileCopyrightText: 2021 Nextcloud GmbH and Nextcloud contributors
 * SPDX-License-Identifier: AGPL-3.0-or-later
 */
/*
* Ensure proper alignment of the vue material icons
*/
.material-design-icon {
  display: flex;
  align-self: center;
  justify-self: center;
  align-items: center;
  justify-content: center;
}

/**
* SPDX-FileCopyrightText: 2020 Nextcloud GmbH and Nextcloud contributors
* SPDX-License-Identifier: AGPL-3.0-or-later
*/
.mx-icon-left:before,
.mx-icon-right:before,
.mx-icon-double-left:before,
.mx-icon-double-right:before,
.mx-icon-double-left:after,
.mx-icon-double-right:after {
  content: "";
  position: relative;
  top: -1px;
  display: inline-block;
  width: 10px;
  height: 10px;
  vertical-align: middle;
  border-style: solid;
  border-color: currentColor;
  border-width: 2px 0 0 2px;
  border-radius: 1px;
  box-sizing: border-box;
  transform-origin: center;
  transform: rotate(-45deg) scale(0.7);
}

.mx-icon-double-left:after {
  left: -4px;
}

.mx-icon-double-right:before {
  left: 4px;
}

.mx-icon-right:before,
.mx-icon-double-right:before,
.mx-icon-double-right:after {
  transform: rotate(135deg) scale(0.7);
}

.mx-btn {
  box-sizing: border-box;
  line-height: 1;
  font-size: 14px;
  font-weight: 500;
  padding: 7px 15px;
  margin: 0;
  cursor: pointer;
  background-color: transparent;
  outline: none;
  border: 1px solid rgba(0, 0, 0, 0.1);
  border-radius: 4px;
  color: #73879c;
  white-space: nowrap;
}
.mx-btn:hover {
  border-color: #1284e7;
  color: #1284e7;
}
.mx-btn:disabled, .mx-btn.disabled {
  color: #ccc;
  cursor: not-allowed;
}

.mx-btn-text {
  border: 0;
  padding: 0 4px;
  text-align: left;
  line-height: inherit;
}

.mx-scrollbar {
  height: 100%;
}
.mx-scrollbar:hover .mx-scrollbar-track {
  opacity: 1;
}

.mx-scrollbar-wrap {
  height: 100%;
  overflow-x: hidden;
  overflow-y: auto;
}

.mx-scrollbar-track {
  position: absolute;
  top: 2px;
  right: 2px;
  bottom: 2px;
  width: 6px;
  z-index: 1;
  border-radius: 4px;
  opacity: 0;
  transition: opacity 0.24s ease-out;
}
.mx-scrollbar-track .mx-scrollbar-thumb {
  position: absolute;
  width: 100%;
  height: 0;
  cursor: pointer;
  border-radius: inherit;
  background-color: rgba(144, 147, 153, 0.3);
  transition: background-color 0.3s;
}

.mx-zoom-in-down-enter-active,
.mx-zoom-in-down-leave-active {
  opacity: 1;
  transform: scaleY(1);
  transition: transform 0.3s cubic-bezier(0.23, 1, 0.32, 1), opacity 0.3s cubic-bezier(0.23, 1, 0.32, 1);
  transform-origin: center top;
}

.mx-zoom-in-down-enter,
.mx-zoom-in-down-enter-from,
.mx-zoom-in-down-leave-to {
  opacity: 0;
  transform: scaleY(0);
}

.mx-datepicker {
  position: relative;
  display: inline-block;
  width: 210px;
}
.mx-datepicker svg {
  width: 1em;
  height: 1em;
  vertical-align: -0.15em;
  fill: currentColor;
  overflow: hidden;
}

.mx-datepicker-range {
  width: 320px;
}

.mx-datepicker-inline {
  width: auto;
}

.mx-input-wrapper {
  position: relative;
}

.mx-input {
  display: inline-block;
  box-sizing: border-box;
  width: 100%;
  height: 34px;
  padding: 6px 30px;
  padding-left: 10px;
  font-size: 14px;
  line-height: 1.4;
  color: #555;
  background-color: #fff;
  border: 1px solid #ccc;
  border-radius: 4px;
  box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075);
}
.mx-input:hover, .mx-input:focus {
  border-color: #409aff;
}
.mx-input:disabled, .mx-input.disabled {
  color: #ccc;
  background-color: #f3f3f3;
  border-color: #ccc;
  cursor: not-allowed;
}
.mx-input:focus {
  outline: none;
}
.mx-input::-ms-clear {
  display: none;
}

.mx-icon-calendar,
.mx-icon-clear {
  position: absolute;
  top: 50%;
  right: 8px;
  transform: translateY(-50%);
  font-size: 16px;
  line-height: 1;
  color: rgba(0, 0, 0, 0.5);
  vertical-align: middle;
}

.mx-icon-clear {
  cursor: pointer;
}
.mx-icon-clear:hover {
  color: rgba(0, 0, 0, 0.8);
}

.mx-datepicker-main {
  font: 14px/1.5 "Helvetica Neue", Helvetica, Arial, "Microsoft Yahei", sans-serif;
  color: #73879c;
  background-color: #fff;
  border: 1px solid #e8e8e8;
}

.mx-datepicker-popup {
  position: absolute;
  margin-top: 1px;
  margin-bottom: 1px;
  box-shadow: 0 6px 12px rgba(0, 0, 0, 0.175);
  z-index: 2001;
}

.mx-datepicker-sidebar {
  float: left;
  box-sizing: border-box;
  width: 100px;
  padding: 6px;
  overflow: auto;
}

.mx-datepicker-sidebar + .mx-datepicker-content {
  margin-left: 100px;
  border-left: 1px solid #e8e8e8;
}

.mx-datepicker-body {
  position: relative;
  user-select: none;
}

.mx-btn-shortcut {
  display: block;
  padding: 0 6px;
  line-height: 24px;
}

.mx-range-wrapper {
  display: flex;
}
@media (max-width: 750px) {
  .mx-range-wrapper {
    flex-direction: column;
  }
}

.mx-datepicker-header {
  padding: 6px 8px;
  border-bottom: 1px solid #e8e8e8;
}

.mx-datepicker-footer {
  padding: 6px 8px;
  text-align: right;
  border-top: 1px solid #e8e8e8;
}

.mx-calendar {
  box-sizing: border-box;
  width: 248px;
  padding: 6px 12px;
}
.mx-calendar + .mx-calendar {
  border-left: 1px solid #e8e8e8;
}

.mx-calendar-header, .mx-time-header {
  box-sizing: border-box;
  height: 34px;
  line-height: 34px;
  text-align: center;
  overflow: hidden;
}

.mx-btn-icon-left,
.mx-btn-icon-double-left {
  float: left;
}

.mx-btn-icon-right,
.mx-btn-icon-double-right {
  float: right;
}

.mx-calendar-header-label {
  font-size: 14px;
}

.mx-calendar-decade-separator {
  margin: 0 2px;
}
.mx-calendar-decade-separator:after {
  content: "~";
}

.mx-calendar-content {
  position: relative;
  height: 224px;
  box-sizing: border-box;
}
.mx-calendar-content .cell {
  cursor: pointer;
}
.mx-calendar-content .cell:hover {
  color: #73879c;
  background-color: rgb(243.15, 248.85, 253.8);
}
.mx-calendar-content .cell.active {
  color: #fff;
  background-color: #1284e7;
}
.mx-calendar-content .cell.in-range, .mx-calendar-content .cell.hover-in-range {
  color: #73879c;
  background-color: rgb(219.45, 236.55, 251.4);
}
.mx-calendar-content .cell.disabled {
  cursor: not-allowed;
  color: #ccc;
  background-color: #f3f3f3;
}

.mx-calendar-week-mode .mx-date-row {
  cursor: pointer;
}
.mx-calendar-week-mode .mx-date-row:hover {
  background-color: rgb(243.15, 248.85, 253.8);
}
.mx-calendar-week-mode .mx-date-row.mx-active-week {
  background-color: rgb(219.45, 236.55, 251.4);
}
.mx-calendar-week-mode .mx-date-row .cell:hover {
  color: inherit;
  background-color: transparent;
}
.mx-calendar-week-mode .mx-date-row .cell.active {
  color: inherit;
  background-color: transparent;
}

.mx-week-number {
  opacity: 0.5;
}

.mx-table {
  table-layout: fixed;
  border-collapse: separate;
  border-spacing: 0;
  width: 100%;
  height: 100%;
  box-sizing: border-box;
  text-align: center;
}
.mx-table th {
  padding: 0;
  font-weight: 500;
  vertical-align: middle;
}
.mx-table td {
  padding: 0;
  vertical-align: middle;
}

.mx-table-date td,
.mx-table-date th {
  height: 32px;
  font-size: 12px;
}
.mx-table-date .today {
  color: rgb(41.7, 144.3, 233.4);
}
.mx-table-date .cell.not-current-month {
  color: #ccc;
  background: none;
}

.mx-time {
  flex: 1;
  width: 224px;
  background: #fff;
}
.mx-time + .mx-time {
  border-left: 1px solid #e8e8e8;
}

.mx-calendar-time {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}

.mx-time-header {
  border-bottom: 1px solid #e8e8e8;
}

.mx-time-content {
  height: 224px;
  box-sizing: border-box;
  overflow: hidden;
}

.mx-time-columns {
  display: flex;
  width: 100%;
  height: 100%;
  overflow: hidden;
}

.mx-time-column {
  flex: 1;
  position: relative;
  border-left: 1px solid #e8e8e8;
  text-align: center;
}
.mx-time-column:first-child {
  border-left: 0;
}
.mx-time-column .mx-time-list {
  margin: 0;
  padding: 0;
  list-style: none;
}
.mx-time-column .mx-time-list::after {
  content: "";
  display: block;
  height: 192px;
}
.mx-time-column .mx-time-item {
  cursor: pointer;
  font-size: 12px;
  height: 32px;
  line-height: 32px;
}
.mx-time-column .mx-time-item:hover {
  color: #73879c;
  background-color: rgb(243.15, 248.85, 253.8);
}
.mx-time-column .mx-time-item.active {
  color: #1284e7;
  background-color: transparent;
  font-weight: 700;
}
.mx-time-column .mx-time-item.disabled {
  cursor: not-allowed;
  color: #ccc;
  background-color: #f3f3f3;
}

.mx-time-option {
  cursor: pointer;
  padding: 8px 10px;
  font-size: 14px;
  line-height: 20px;
}
.mx-time-option:hover {
  color: #73879c;
  background-color: rgb(243.15, 248.85, 253.8);
}
.mx-time-option.active {
  color: #1284e7;
  background-color: transparent;
  font-weight: 700;
}
.mx-time-option.disabled {
  cursor: not-allowed;
  color: #ccc;
  background-color: #f3f3f3;
}

.mx-datepicker[data-v-0ace0de] {
  user-select: none;
  color: var(--color-main-text);
  /* INPUT CONTAINER */
}
.mx-datepicker[data-v-0ace0de] svg {
  fill: var(--color-main-text);
}
.mx-datepicker[data-v-0ace0de] .mx-input-wrapper .mx-input {
  width: 100%;
  border: 2px solid var(--color-border-maxcontrast);
  background-color: var(--color-main-background);
  background-clip: content-box;
}
.mx-datepicker[data-v-0ace0de] .mx-input-wrapper .mx-input:active:not(.disabled), .mx-datepicker[data-v-0ace0de] .mx-input-wrapper .mx-input:hover:not(.disabled), .mx-datepicker[data-v-0ace0de] .mx-input-wrapper .mx-input:focus:not(.disabled) {
  border-color: var(--color-primary-element);
}
.mx-datepicker[data-v-0ace0de] .mx-input-wrapper:disabled, .mx-datepicker[data-v-0ace0de] .mx-input-wrapper.disabled {
  cursor: not-allowed;
  opacity: 0.7;
}
.mx-datepicker[data-v-0ace0de] .mx-input-wrapper .mx-icon-calendar,
.mx-datepicker[data-v-0ace0de] .mx-input-wrapper .mx-icon-clear {
  color: var(--color-text-lighter);
}

.mx-datepicker-main {
  color: var(--color-main-text);
  border: 1px solid var(--color-border);
  background-color: var(--color-main-background);
  font-family: var(--font-face) !important;
  line-height: 1.5;
}
.mx-datepicker-main svg {
  fill: var(--color-main-text);
}
.mx-datepicker-main.mx-datepicker-popup {
  z-index: 2000;
  box-shadow: none;
}
.mx-datepicker-main.mx-datepicker-popup .mx-datepicker-sidebar + .mx-datepicker-content {
  border-left: 1px solid var(--color-border);
}
.mx-datepicker-main.show-week-number .mx-calendar {
  width: 296px;
}
.mx-datepicker-main .mx-datepicker-header {
  border-bottom: 1px solid var(--color-border);
}
.mx-datepicker-main .mx-datepicker-footer {
  border-top: 1px solid var(--color-border);
}
.mx-datepicker-main .mx-datepicker-btn-confirm {
  background-color: var(--color-primary-element);
  border-color: var(--color-primary-element);
  color: var(--color-primary-element-text) !important;
  opacity: 1 !important;
}
.mx-datepicker-main .mx-datepicker-btn-confirm:hover {
  background-color: var(--color-primary-element-light) !important;
  border-color: var(--color-primary-element-light) !important;
}
.mx-datepicker-main .mx-calendar {
  width: 264px;
  padding: 5px;
}
.mx-datepicker-main .mx-calendar.mx-calendar-week-mode {
  width: 296px;
}
.mx-datepicker-main .mx-time + .mx-time,
.mx-datepicker-main .mx-calendar + .mx-calendar {
  border-left: 1px solid var(--color-border);
}
.mx-datepicker-main .mx-range-wrapper {
  display: flex;
  overflow: hidden;
}
.mx-datepicker-main .mx-range-wrapper .mx-calendar-content .mx-table-date .cell {
  border-radius: var(--border-radius-small);
}
.mx-datepicker-main .mx-range-wrapper .mx-calendar-content .mx-table-date .cell.active {
  border-radius: var(--border-radius-small) 0 0 var(--border-radius-small);
}
.mx-datepicker-main .mx-range-wrapper .mx-calendar-content .mx-table-date .cell.in-range + .cell.active {
  border-radius: 0 var(--border-radius-small) var(--border-radius-small) 0;
}
.mx-datepicker-main .mx-table {
  text-align: center;
}
.mx-datepicker-main .mx-table thead > tr > th {
  text-align: center;
  opacity: 0.5;
  color: var(--color-main-text);
}
.mx-datepicker-main .mx-table tr:focus,
.mx-datepicker-main .mx-table tr:hover,
.mx-datepicker-main .mx-table tr:active {
  background-color: transparent;
}
.mx-datepicker-main .mx-table .cell {
  transition: all 100ms ease-in-out;
  text-align: center;
  opacity: 0.7;
  border-radius: var(--border-radius-small);
  min-height: var(--clickable-area-small) !important;
}
.mx-datepicker-main .mx-table .cell > * {
  cursor: pointer;
}
.mx-datepicker-main .mx-table .cell.today {
  opacity: 1;
  font-weight: bold;
  background-color: transparent;
  color: var(--color-primary-element);
  border-radius: var(--border-radius-small);
}
.mx-datepicker-main .mx-table .cell.today:hover, .mx-datepicker-main .mx-table .cell.today:focus {
  color: var(--color-primary-element-text);
}
.mx-datepicker-main .mx-table .cell.in-range, .mx-datepicker-main .mx-table .cell.disabled {
  border-radius: var(--border-radius-small);
  color: var(--color-main-text);
  opacity: 1;
}
.mx-datepicker-main .mx-table .cell.in-range {
  opacity: 0.7;
}
.mx-datepicker-main .mx-table .cell.not-current-month {
  opacity: 0.5;
  color: var(--color-text-maxcontrast);
}
.mx-datepicker-main .mx-table .cell.not-current-month:hover, .mx-datepicker-main .mx-table .cell.not-current-month:focus {
  opacity: 1;
}
.mx-datepicker-main .mx-table .cell:hover, .mx-datepicker-main .mx-table .cell:focus, .mx-datepicker-main .mx-table .cell.actived, .mx-datepicker-main .mx-table .cell.active, .mx-datepicker-main .mx-table .cell.in-range {
  opacity: 1;
  color: var(--color-primary-element-text);
  background-color: var(--color-primary-element);
  font-weight: bold;
}
.mx-datepicker-main .mx-table .cell.disabled {
  opacity: 1;
  color: var(--color-main-text);
  border-radius: var(--border-radius-small);
}
.mx-datepicker-main .mx-table .mx-week-number {
  text-align: center;
  opacity: 0.7;
  border-radius: 50px;
}
.mx-datepicker-main .mx-table span.mx-week-number,
.mx-datepicker-main .mx-table li.mx-week-number,
.mx-datepicker-main .mx-table span.cell,
.mx-datepicker-main .mx-table li.cell {
  min-height: 32px;
}
.mx-datepicker-main .mx-table.mx-table-date thead, .mx-datepicker-main .mx-table.mx-table-date tbody, .mx-datepicker-main .mx-table.mx-table-year, .mx-datepicker-main .mx-table.mx-table-month {
  display: flex;
  flex-direction: column;
  justify-content: space-around;
}
.mx-datepicker-main .mx-table.mx-table-date thead tr, .mx-datepicker-main .mx-table.mx-table-date tbody tr, .mx-datepicker-main .mx-table.mx-table-year tr, .mx-datepicker-main .mx-table.mx-table-month tr {
  display: inline-flex;
  align-items: center;
  flex: 1 1 32px;
  justify-content: space-around;
  min-height: 32px;
  color: var(--color-main-text);
}
.mx-datepicker-main .mx-table.mx-table-date thead th,
.mx-datepicker-main .mx-table.mx-table-date thead td, .mx-datepicker-main .mx-table.mx-table-date tbody th,
.mx-datepicker-main .mx-table.mx-table-date tbody td, .mx-datepicker-main .mx-table.mx-table-year th,
.mx-datepicker-main .mx-table.mx-table-year td, .mx-datepicker-main .mx-table.mx-table-month th,
.mx-datepicker-main .mx-table.mx-table-month td {
  display: flex;
  align-items: center;
  flex: 0 1 32%;
  justify-content: center;
  min-width: 32px;
  height: 95%;
  min-height: 32px;
  transition: background 100ms ease-in-out;
  color: var(--color-main-text);
}
.mx-datepicker-main .mx-table.mx-table-year tr th,
.mx-datepicker-main .mx-table.mx-table-year tr td {
  flex-basis: 48%;
}
.mx-datepicker-main .mx-table.mx-table-date tr th,
.mx-datepicker-main .mx-table.mx-table-date tr td {
  flex-basis: 32px;
}
.mx-datepicker-main .mx-btn {
  min-width: 32px;
  height: 32px;
  margin: 0 2px !important;
  padding: 0;
  cursor: pointer;
  text-decoration: none;
  opacity: 1;
  color: var(--color-main-text);
  border-radius: var(--border-radius-small);
  line-height: 20px;
}
.mx-datepicker-main .mx-btn:hover, .mx-datepicker-main .mx-btn:focus {
  opacity: 1;
  color: var(--color-main-text);
  background-color: var(--color-background-darker);
}
.mx-datepicker-main .mx-calendar-header, .mx-datepicker-main .mx-time-header {
  display: inline-flex;
  align-items: center;
  justify-content: space-between;
  width: 100%;
  height: var(--default-clickable-area);
  margin-bottom: 4px;
}
.mx-datepicker-main .mx-calendar-header button, .mx-datepicker-main .mx-time-header button {
  min-width: 32px;
  min-height: 32px;
  margin: 0;
  cursor: pointer;
  text-align: center;
  text-decoration: none;
  opacity: 1;
  color: var(--color-main-text);
  border-radius: var(--border-radius-small);
  background-color: transparent;
  line-height: 20px;
}
.mx-datepicker-main .mx-calendar-header button:hover, .mx-datepicker-main .mx-time-header button:hover, .mx-datepicker-main .mx-calendar-header button:focus, .mx-datepicker-main .mx-time-header button:focus {
  opacity: 1;
  color: var(--color-main-text);
  background-color: var(--color-background-darker);
}
.mx-datepicker-main .mx-calendar-header button.mx-btn-icon-double-left, .mx-datepicker-main .mx-time-header button.mx-btn-icon-double-left, .mx-datepicker-main .mx-calendar-header button.mx-btn-icon-left, .mx-datepicker-main .mx-time-header button.mx-btn-icon-left, .mx-datepicker-main .mx-calendar-header button.mx-btn-icon-right, .mx-datepicker-main .mx-time-header button.mx-btn-icon-right, .mx-datepicker-main .mx-calendar-header button.mx-btn-icon-double-right, .mx-datepicker-main .mx-time-header button.mx-btn-icon-double-right {
  align-items: center;
  justify-content: center;
  width: 32px;
  padding: 0;
}
.mx-datepicker-main .mx-calendar-header button.mx-btn-icon-double-left > i, .mx-datepicker-main .mx-time-header button.mx-btn-icon-double-left > i, .mx-datepicker-main .mx-calendar-header button.mx-btn-icon-left > i, .mx-datepicker-main .mx-time-header button.mx-btn-icon-left > i, .mx-datepicker-main .mx-calendar-header button.mx-btn-icon-right > i, .mx-datepicker-main .mx-time-header button.mx-btn-icon-right > i, .mx-datepicker-main .mx-calendar-header button.mx-btn-icon-double-right > i, .mx-datepicker-main .mx-time-header button.mx-btn-icon-double-right > i {
  background-repeat: no-repeat;
  background-size: 16px;
  background-position: center;
  filter: var(--background-invert-if-dark);
  display: inline-block;
  width: 32px;
  height: 32px;
}
.mx-datepicker-main .mx-calendar-header button.mx-btn-icon-double-left > i::after, .mx-datepicker-main .mx-time-header button.mx-btn-icon-double-left > i::after, .mx-datepicker-main .mx-calendar-header button.mx-btn-icon-double-left > i::before, .mx-datepicker-main .mx-time-header button.mx-btn-icon-double-left > i::before, .mx-datepicker-main .mx-calendar-header button.mx-btn-icon-left > i::after, .mx-datepicker-main .mx-time-header button.mx-btn-icon-left > i::after, .mx-datepicker-main .mx-calendar-header button.mx-btn-icon-left > i::before, .mx-datepicker-main .mx-time-header button.mx-btn-icon-left > i::before, .mx-datepicker-main .mx-calendar-header button.mx-btn-icon-right > i::after, .mx-datepicker-main .mx-time-header button.mx-btn-icon-right > i::after, .mx-datepicker-main .mx-calendar-header button.mx-btn-icon-right > i::before, .mx-datepicker-main .mx-time-header button.mx-btn-icon-right > i::before, .mx-datepicker-main .mx-calendar-header button.mx-btn-icon-double-right > i::after, .mx-datepicker-main .mx-time-header button.mx-btn-icon-double-right > i::after, .mx-datepicker-main .mx-calendar-header button.mx-btn-icon-double-right > i::before, .mx-datepicker-main .mx-time-header button.mx-btn-icon-double-right > i::before {
  content: none;
}
.mx-datepicker-main .mx-calendar-header button.mx-btn-text, .mx-datepicker-main .mx-time-header button.mx-btn-text {
  line-height: initial;
}
.mx-datepicker-main .mx-calendar-header .mx-calendar-header-label, .mx-datepicker-main .mx-time-header .mx-calendar-header-label {
  display: flex;
  color: var(--color-main-text);
}
.mx-datepicker-main .mx-calendar-header .mx-btn-icon-double-left > i, .mx-datepicker-main .mx-time-header .mx-btn-icon-double-left > i {
  background-image: url("data:image/svg+xml,%3c!--%20-%20SPDX-FileCopyrightText:%202020%20Google%20Inc.%20-%20SPDX-License-Identifier:%20Apache-2.0%20--%3e%3csvg%20xmlns='http://www.w3.org/2000/svg'%20width='24'%20height='24'%20fill='%23222'%3e%3cpath%20d='M18.4%207.4L17%206l-6%206%206%206%201.4-1.4-4.6-4.6%204.6-4.6m-6%200L11%206l-6%206%206%206%201.4-1.4L7.8%2012l4.6-4.6z'/%3e%3c/svg%3e");
}
.mx-datepicker-main .mx-calendar-header .mx-btn-icon-left > i, .mx-datepicker-main .mx-time-header .mx-btn-icon-left > i {
  background-image: url("data:image/svg+xml,%3c!--%20-%20SPDX-FileCopyrightText:%202020%20Google%20Inc.%20-%20SPDX-License-Identifier:%20Apache-2.0%20--%3e%3csvg%20xmlns='http://www.w3.org/2000/svg'%20width='24'%20height='24'%20fill='%23222'%3e%3cpath%20d='M15.4%2016.6L10.8%2012l4.6-4.6L14%206l-6%206%206%206%201.4-1.4z'/%3e%3c/svg%3e");
}
.mx-datepicker-main .mx-calendar-header .mx-btn-icon-right > i, .mx-datepicker-main .mx-time-header .mx-btn-icon-right > i {
  background-image: url("data:image/svg+xml,%3c!--%20-%20SPDX-FileCopyrightText:%202020%20Google%20Inc.%20-%20SPDX-License-Identifier:%20Apache-2.0%20--%3e%3csvg%20xmlns='http://www.w3.org/2000/svg'%20width='24'%20height='24'%20fill='%23222'%3e%3cpath%20d='M8.6%2016.6l4.6-4.6-4.6-4.6L10%206l6%206-6%206-1.4-1.4z'/%3e%3c/svg%3e");
}
.mx-datepicker-main .mx-calendar-header .mx-btn-icon-double-right > i, .mx-datepicker-main .mx-time-header .mx-btn-icon-double-right > i {
  background-image: url("data:image/svg+xml,%3c!--%20-%20SPDX-FileCopyrightText:%202020%20Google%20Inc.%20-%20SPDX-License-Identifier:%20Apache-2.0%20--%3e%3csvg%20xmlns='http://www.w3.org/2000/svg'%20width='24'%20height='24'%20fill='%23222'%3e%3cpath%20d='M5.6%207.4L7%206l6%206-6%206-1.4-1.4%204.6-4.6-4.6-4.6m6%200L13%206l6%206-6%206-1.4-1.4%204.6-4.6-4.6-4.6z'/%3e%3c/svg%3e");
}
.mx-datepicker-main .mx-calendar-header button.mx-btn-icon-right, .mx-datepicker-main .mx-time-header button.mx-btn-icon-right {
  order: 2;
}
.mx-datepicker-main .mx-calendar-header button.mx-btn-icon-double-right, .mx-datepicker-main .mx-time-header button.mx-btn-icon-double-right {
  order: 3;
}
.mx-datepicker-main .mx-calendar-week-mode .mx-date-row .mx-week-number {
  font-weight: bold;
}
.mx-datepicker-main .mx-calendar-week-mode .mx-date-row:hover, .mx-datepicker-main .mx-calendar-week-mode .mx-date-row.mx-active-week {
  opacity: 1;
  border-radius: var(--border-radius-small);
  background-color: var(--color-background-dark);
}
.mx-datepicker-main .mx-calendar-week-mode .mx-date-row:hover td, .mx-datepicker-main .mx-calendar-week-mode .mx-date-row.mx-active-week td {
  background-color: transparent;
}
.mx-datepicker-main .mx-calendar-week-mode .mx-date-row:hover td, .mx-datepicker-main .mx-calendar-week-mode .mx-date-row:hover td:hover, .mx-datepicker-main .mx-calendar-week-mode .mx-date-row:hover td:focus, .mx-datepicker-main .mx-calendar-week-mode .mx-date-row.mx-active-week td, .mx-datepicker-main .mx-calendar-week-mode .mx-date-row.mx-active-week td:hover, .mx-datepicker-main .mx-calendar-week-mode .mx-date-row.mx-active-week td:focus {
  color: inherit;
}
.mx-datepicker-main .mx-calendar-week-mode .mx-date-row.mx-active-week {
  color: var(--color-primary-element-text);
  background-color: var(--color-primary-element);
}
.mx-datepicker-main .mx-calendar-week-mode .mx-date-row.mx-active-week td {
  opacity: 0.7;
  font-weight: normal;
}
.mx-datepicker-main .mx-time {
  background-color: var(--color-main-background);
}
.mx-datepicker-main .mx-time .mx-time-header {
  justify-content: center;
  border-bottom: 1px solid var(--color-border);
  opacity: 1 !important;
  background-color: transparent;
}
.mx-datepicker-main .mx-time .mx-time-column {
  border-left: 1px solid var(--color-border);
}
.mx-datepicker-main .mx-time .mx-time-option.active,
.mx-datepicker-main .mx-time .mx-time-item.active {
  background-color: var(--color-primary-element);
  color: var(--color-primary-element-text);
}
.mx-datepicker-main .mx-time .mx-time-option:hover,
.mx-datepicker-main .mx-time .mx-time-item:hover {
  background-color: var(--color-background-hover);
  color: var(--color-main-text);
}
.mx-datepicker-main .mx-time .mx-time-option.disabled,
.mx-datepicker-main .mx-time .mx-time-item.disabled {
  cursor: not-allowed;
  opacity: 0.5;
  color: var(--color-main-text);
}/**
 * SPDX-FileCopyrightText: 2019 Nextcloud GmbH and Nextcloud contributors
 * SPDX-License-Identifier: AGPL-3.0-or-later
 */
/**
 * SPDX-FileCopyrightText: 2021 Nextcloud GmbH and Nextcloud contributors
 * SPDX-License-Identifier: AGPL-3.0-or-later
 */
/*
* Ensure proper alignment of the vue material icons
*/
.material-design-icon[data-v-9cec8c69] {
  display: flex;
  align-self: center;
  justify-self: center;
  align-items: center;
  justify-content: center;
}
.mx-datepicker[data-v-9cec8c69] .mx-input-wrapper .mx-input {
  background-clip: border-box;
}
.datetime-picker-inline-icon[data-v-9cec8c69] {
  opacity: 0.3;
  border: none;
  background-color: transparent;
  border-radius: 0;
  padding: 0 !important;
  margin: 0;
}
.datetime-picker-inline-icon--highlighted[data-v-9cec8c69] {
  opacity: 0.7;
}
.datetime-picker-inline-icon[data-v-9cec8c69]:focus, .datetime-picker-inline-icon[data-v-9cec8c69]:hover {
  opacity: 1;
}/**
 * SPDX-FileCopyrightText: 2019 Nextcloud GmbH and Nextcloud contributors
 * SPDX-License-Identifier: AGPL-3.0-or-later
 */
/**
 * SPDX-FileCopyrightText: 2021 Nextcloud GmbH and Nextcloud contributors
 * SPDX-License-Identifier: AGPL-3.0-or-later
 */
/*
* Ensure proper alignment of the vue material icons
*/
.material-design-icon {
  display: flex;
  align-self: center;
  justify-self: center;
  align-items: center;
  justify-content: center;
}
.v-popper--theme-dropdown.v-popper__popper.timezone-select__popper .v-popper__wrapper {
  border-radius: var(--border-radius-large);
}
.v-popper--theme-dropdown.v-popper__popper.timezone-select__popper .v-popper__wrapper .v-popper__inner {
  padding: 4px;
  border-radius: var(--border-radius-large);
}
.v-popper--theme-dropdown.v-popper__popper.timezone-select__popper .v-popper__wrapper .v-popper__inner .timezone-popover-wrapper__label {
  padding: 4px 0;
  padding-left: 14px;
}
.v-popper--theme-dropdown.v-popper__popper.timezone-select__popper .v-popper__wrapper .v-popper__inner .timezone-popover-wrapper__timezone-select.v-select.select {
  min-width: 246px;
  left: -8px !important;
}
.v-popper--theme-dropdown.v-popper__popper.timezone-select__popper .v-popper__wrapper .v-popper__inner .timezone-popover-wrapper__timezone-select.v-select .vs__dropdown-toggle {
  border-radius: calc(var(--border-radius-large) - 4px);
}
.v-popper--theme-dropdown.v-popper__popper.timezone-select__popper .v-popper__wrapper .v-popper__inner .timezone-popover-wrapper__timezone-select.v-select.vs--open .vs__dropdown-toggle {
  border-bottom-left-radius: 0;
  border-bottom-right-radius: 0;
}
.v-popper--theme-dropdown.v-popper__popper.timezone-select__popper .v-popper__wrapper .v-popper__inner .timezone-popover-wrapper__timezone-select.v-select.vs--open.select--drop-up .vs__dropdown-toggle {
  border-radius: 0 0 calc(var(--border-radius-large) - 4px) calc(var(--border-radius-large) - 4px);
}
.vs__dropdown-menu--floating {
  z-index: 100001 !important;
}/**
 * SPDX-FileCopyrightText: 2019 Nextcloud GmbH and Nextcloud contributors
 * SPDX-License-Identifier: AGPL-3.0-or-later
 */
/**
 * SPDX-FileCopyrightText: 2021 Nextcloud GmbH and Nextcloud contributors
 * SPDX-License-Identifier: AGPL-3.0-or-later
 */
/*
* Ensure proper alignment of the vue material icons
*/
.material-design-icon {
  display: flex;
  align-self: center;
  justify-self: center;
  align-items: center;
  justify-content: center;
}
body {
  /**
   * Set custom vue-select CSS variables.
   * Needs to be on the body (not :root) for theming to apply (see nextcloud/server#36462)
   */
  /* Search Input */
  --vs-search-input-color: var(--color-main-text);
  --vs-search-input-bg: var(--color-main-background);
  --vs-search-input-placeholder-color: var(--color-text-maxcontrast);
  /* Font */
  --vs-font-size: var(--default-font-size);
  --vs-line-height: var(--default-line-height);
  /* Disabled State */
  --vs-state-disabled-bg: var(--color-background-hover);
  --vs-state-disabled-color: var(--color-text-maxcontrast);
  --vs-state-disabled-controls-color: var(--color-text-maxcontrast);
  --vs-state-disabled-cursor: not-allowed;
  --vs-disabled-bg: var(--color-background-hover);
  --vs-disabled-color: var(--color-text-maxcontrast);
  --vs-disabled-cursor: not-allowed;
  /* Borders */
  --vs-border-color: var(--color-border-maxcontrast);
  --vs-border-width: var(--border-width-input, 2px) !important;
  --vs-border-style: solid;
  --vs-border-radius: var(--border-radius-large);
  /* Component Controls: Clear, Open Indicator */
  --vs-controls-color: var(--color-main-text);
  /* Selected */
  --vs-selected-bg: var(--color-background-hover);
  --vs-selected-color: var(--color-main-text);
  --vs-selected-border-color: var(--vs-border-color);
  --vs-selected-border-style: var(--vs-border-style);
  --vs-selected-border-width: var(--vs-border-width);
  /* Dropdown */
  --vs-dropdown-bg: var(--color-main-background);
  --vs-dropdown-color: var(--color-main-text);
  --vs-dropdown-z-index: 9999;
  --vs-dropdown-box-shadow: 0px 2px 2px 0px var(--color-box-shadow);
  /* Options */
  --vs-dropdown-option-padding: 8px 20px;
  /* Active State */
  --vs-dropdown-option--active-bg: var(--color-background-hover);
  --vs-dropdown-option--active-color: var(--color-main-text);
  /* Keyboard Focus State */
  --vs-dropdown-option--kb-focus-box-shadow: inset 0px 0px 0px 2px var(--vs-border-color);
  /* Deselect State */
  --vs-dropdown-option--deselect-bg: var(--color-error);
  --vs-dropdown-option--deselect-color: #fff;
  /* Transitions */
  --vs-transition-duration: 0ms;
  /* Actions */
  --vs-actions-padding: 0 8px 0 4px;
}
.v-select.select {
  /* Override default vue-select styles */
  min-height: var(--default-clickable-area);
  min-width: 260px;
  margin: 0 0 var(--default-grid-baseline);
}
.v-select.select.vs--open {
  --vs-border-width: var(--border-width-input-focused, 2px);
}
.v-select.select .select__label {
  display: block;
  margin-bottom: 2px;
}
.v-select.select .vs__selected {
  height: calc(var(--default-clickable-area) - 2 * var(--vs-border-width) - var(--default-grid-baseline));
  margin: calc(var(--default-grid-baseline) / 2);
  padding-block: 0;
  padding-inline: 12px 8px;
  border-radius: 16px !important;
  background: var(--color-primary-element-light);
  border: none;
}
.v-select.select.vs--open .vs__selected:first-of-type {
  margin-inline-start: calc(var(--default-grid-baseline) / 2 - (var(--border-width-input-focused, 2px) - var(--border-width-input, 2px))) !important;
}
.v-select.select .vs__search {
  text-overflow: ellipsis;
  color: var(--color-main-text);
  min-height: unset !important;
  height: calc(var(--default-clickable-area) - 2 * var(--vs-border-width)) !important;
}
.v-select.select .vs__search::placeholder {
  color: var(--color-text-maxcontrast);
}
.v-select.select .vs__search, .v-select.select .vs__search:focus {
  margin: 0;
}
.v-select.select .vs__dropdown-toggle {
  position: relative;
  max-height: 100px;
  padding: 0;
  overflow-y: auto;
}
.v-select.select .vs__actions {
  position: sticky;
  top: 0;
}
.v-select.select .vs__clear {
  margin-right: 2px;
}
.v-select.select.vs--open .vs__dropdown-toggle {
  border-width: var(--border-width-input-focused);
  outline: 2px solid var(--color-main-background);
  border-color: var(--color-main-text);
  border-bottom-color: transparent;
}
.v-select.select:not(.vs--disabled, .vs--open) .vs__dropdown-toggle:hover {
  outline: 2px solid var(--color-main-background);
  border-color: var(--color-main-text);
}
.v-select.select.vs--disabled .vs__search,
.v-select.select.vs--disabled .vs__selected {
  color: var(--color-text-maxcontrast);
}
.v-select.select.vs--disabled .vs__clear,
.v-select.select.vs--disabled .vs__deselect {
  display: none;
}
.v-select.select--no-wrap .vs__selected-options {
  flex-wrap: nowrap;
  overflow: auto;
  min-width: unset;
}
.v-select.select--no-wrap .vs__selected-options .vs__selected {
  min-width: unset;
}
.v-select.select--drop-up.vs--open .vs__dropdown-toggle {
  border-radius: 0 0 var(--vs-border-radius) var(--vs-border-radius);
  border-top-color: transparent;
  border-bottom-color: var(--color-main-text);
}
.v-select.select .vs__selected-options {
  min-height: calc(var(--default-clickable-area) - 2 * var(--vs-border-width));
  padding: 0 5px;
}
.v-select.select .vs__selected-options .vs__selected ~ .vs__search[readonly] {
  position: absolute;
}
.v-select.select.vs--single.vs--loading .vs__selected, .v-select.select.vs--single.vs--open .vs__selected {
  max-width: 100%;
  opacity: 1;
  color: var(--color-text-maxcontrast);
}
.v-select.select.vs--single .vs__selected-options {
  flex-wrap: nowrap;
}
.v-select.select.vs--single .vs__selected {
  background: unset !important;
}
.vs__dropdown-menu {
  border-width: var(--border-width-input-focused) !important;
  border-color: var(--color-main-text) !important;
  outline: none !important;
  box-shadow: -2px 0 0 var(--color-main-background), 0 2px 0 var(--color-main-background), 2px 0 0 var(--color-main-background), !important;
  padding: 4px !important;
}
.vs__dropdown-menu--floating {
  /* Fallback styles overidden by programmatically set inline styles */
  width: max-content;
  position: absolute;
  top: 0;
  left: 0;
}
.vs__dropdown-menu--floating-placement-top {
  border-radius: var(--vs-border-radius) var(--vs-border-radius) 0 0 !important;
  border-top-style: var(--vs-border-style) !important;
  border-bottom-style: none !important;
  box-shadow: 0 -2px 0 var(--color-main-background), -2px 0 0 var(--color-main-background), 2px 0 0 var(--color-main-background), !important;
}
.vs__dropdown-menu .vs__dropdown-option {
  border-radius: 6px !important;
}
.vs__dropdown-menu .vs__no-options {
  color: var(--color-text-lighter) !important;
}
.user-select .vs__selected {
  padding-inline: 0 5px !important;
}/**
 * SPDX-FileCopyrightText: 2019 Nextcloud GmbH and Nextcloud contributors
 * SPDX-License-Identifier: AGPL-3.0-or-later
 */
/**
 * SPDX-FileCopyrightText: 2021 Nextcloud GmbH and Nextcloud contributors
 * SPDX-License-Identifier: AGPL-3.0-or-later
 */
/*
* Ensure proper alignment of the vue material icons
*/
.material-design-icon[data-v-f6384352] {
  display: flex;
  align-self: center;
  justify-self: center;
  align-items: center;
  justify-content: center;
}
.name-parts[data-v-f6384352] {
  display: flex;
  max-width: 100%;
  cursor: inherit;
}
.name-parts__first[data-v-f6384352] {
  overflow: hidden;
  text-overflow: ellipsis;
}
.name-parts__first[data-v-f6384352], .name-parts__last[data-v-f6384352] {
  white-space: pre;
  cursor: inherit;
}
.name-parts__first strong[data-v-f6384352], .name-parts__last strong[data-v-f6384352] {
  font-weight: bold;
}/**
 * SPDX-FileCopyrightText: 2019 Nextcloud GmbH and Nextcloud contributors
 * SPDX-License-Identifier: AGPL-3.0-or-later
 */
/**
 * SPDX-FileCopyrightText: 2021 Nextcloud GmbH and Nextcloud contributors
 * SPDX-License-Identifier: AGPL-3.0-or-later
 */
/*
* Ensure proper alignment of the vue material icons
*/
.material-design-icon[data-v-5b8f093f] {
  display: flex;
  align-self: center;
  justify-self: center;
  align-items: center;
  justify-content: center;
}
.mention-bubble--primary .mention-bubble__content[data-v-5b8f093f] {
  color: var(--color-primary-element-text);
  background-color: var(--color-primary-element);
}
.mention-bubble__wrapper[data-v-5b8f093f] {
  position: relative;
  max-width: 150px;
  height: 18px;
  vertical-align: text-bottom;
  display: inline-flex;
  align-items: center;
}
.mention-bubble__content[data-v-5b8f093f] {
  display: inline-flex;
  overflow: hidden;
  align-items: center;
  max-width: 100%;
  height: 20px;
  -webkit-user-select: none;
  user-select: none;
  padding-inline: 2px 6px;
  border-radius: 10px;
  background-color: var(--color-background-dark);
}
.mention-bubble__icon[data-v-5b8f093f] {
  position: relative;
  width: 16px;
  height: 16px;
  border-radius: 8px;
  background-color: var(--color-background-darker);
  background-repeat: no-repeat;
  background-position: center;
  background-size: 12px;
}
.mention-bubble__icon--with-avatar[data-v-5b8f093f] {
  color: inherit;
  background-size: cover;
}
.mention-bubble__title[data-v-5b8f093f] {
  overflow: hidden;
  margin-inline-start: 2px;
  white-space: nowrap;
  text-overflow: ellipsis;
}
.mention-bubble__title[data-v-5b8f093f]::before {
  content: attr(title);
}
.mention-bubble__select[data-v-5b8f093f] {
  position: absolute;
  z-index: -1;
  inset-inline-start: -100vw;
  width: 1px;
  height: 1px;
  overflow: hidden;
}/**
 * SPDX-FileCopyrightText: 2019 Nextcloud GmbH and Nextcloud contributors
 * SPDX-License-Identifier: AGPL-3.0-or-later
 */
/**
 * SPDX-FileCopyrightText: 2021 Nextcloud GmbH and Nextcloud contributors
 * SPDX-License-Identifier: AGPL-3.0-or-later
 */
/*
* Ensure proper alignment of the vue material icons
*/
.material-design-icon[data-v-a0f4d73a] {
  display: flex;
  align-self: center;
  justify-self: center;
  align-items: center;
  justify-content: center;
}
.option[data-v-a0f4d73a] {
  display: flex;
  align-items: center;
  width: 100%;
  height: var(--height);
  cursor: inherit;
}
.option__avatar[data-v-a0f4d73a] {
  margin-right: var(--margin);
}
.option__details[data-v-a0f4d73a] {
  display: flex;
  flex: 1 1;
  flex-direction: column;
  justify-content: center;
  min-width: 0;
}
.option__lineone[data-v-a0f4d73a] {
  color: var(--color-main-text);
}
.option__linetwo[data-v-a0f4d73a] {
  color: var(--color-text-maxcontrast);
}
.option__lineone[data-v-a0f4d73a], .option__linetwo[data-v-a0f4d73a] {
  overflow: hidden;
  white-space: nowrap;
  text-overflow: ellipsis;
  line-height: 1.2;
}
.option__lineone strong[data-v-a0f4d73a], .option__linetwo strong[data-v-a0f4d73a] {
  font-weight: bold;
}
.option--compact .option__lineone[data-v-a0f4d73a] {
  font-size: 14px;
}
.option--compact .option__linetwo[data-v-a0f4d73a] {
  font-size: 11px;
  line-height: 1.5;
  margin-top: -4px;
}
.option__icon[data-v-a0f4d73a] {
  width: var(--default-clickable-area);
  height: var(--default-clickable-area);
  color: var(--color-text-maxcontrast);
}
.option__icon.icon[data-v-a0f4d73a] {
  flex: 0 0 var(--default-clickable-area);
  opacity: 0.7;
  background-position: center;
  background-size: 16px;
}
.option__details[data-v-a0f4d73a], .option__lineone[data-v-a0f4d73a], .option__linetwo[data-v-a0f4d73a], .option__icon[data-v-a0f4d73a] {
  cursor: inherit;
}/**
 * SPDX-FileCopyrightText: 2019 Nextcloud GmbH and Nextcloud contributors
 * SPDX-License-Identifier: AGPL-3.0-or-later
 */
/**
 * SPDX-FileCopyrightText: 2021 Nextcloud GmbH and Nextcloud contributors
 * SPDX-License-Identifier: AGPL-3.0-or-later
 */
/*
* Ensure proper alignment of the vue material icons
*/
.material-design-icon[data-v-f132fa9c] {
  display: flex;
  align-self: center;
  justify-self: center;
  align-items: center;
  justify-content: center;
}
.avatardiv[data-v-f132fa9c] {
  position: relative;
  display: inline-block;
  width: var(--size);
  height: var(--size);
}
.avatardiv--unknown[data-v-f132fa9c] {
  position: relative;
  background-color: var(--color-main-background);
  white-space: normal;
}
.avatardiv[data-v-f132fa9c]:not(.avatardiv--unknown) {
  background-color: var(--color-main-background) !important;
  box-shadow: 0 0 5px rgba(0, 0, 0, 0.05) inset;
}
.avatardiv--with-menu[data-v-f132fa9c] {
  cursor: pointer;
}
.avatardiv--with-menu .action-item[data-v-f132fa9c] {
  position: absolute;
  top: 0;
  left: 0;
}
.avatardiv--with-menu[data-v-f132fa9c] .action-item__menutoggle {
  cursor: pointer;
  opacity: 0;
}
.avatardiv--with-menu[data-v-f132fa9c]:focus-within .action-item__menutoggle, .avatardiv--with-menu[data-v-f132fa9c]:hover .action-item__menutoggle, .avatardiv--with-menu.avatardiv--with-menu-loading[data-v-f132fa9c] .action-item__menutoggle {
  opacity: 1;
}
.avatardiv--with-menu:focus-within img[data-v-f132fa9c], .avatardiv--with-menu:hover img[data-v-f132fa9c], .avatardiv--with-menu.avatardiv--with-menu-loading img[data-v-f132fa9c] {
  opacity: 0.3;
}
.avatardiv--with-menu[data-v-f132fa9c] .action-item__menutoggle,
.avatardiv--with-menu img[data-v-f132fa9c] {
  transition: opacity var(--animation-quick);
}
.avatardiv--with-menu[data-v-f132fa9c]  .button-vue,
.avatardiv--with-menu[data-v-f132fa9c]  .button-vue__icon {
  height: var(--size);
  min-height: var(--size);
  width: var(--size) !important;
  min-width: var(--size);
}
.avatardiv--with-menu[data-v-f132fa9c] >  .button-vue, .avatardiv--with-menu[data-v-f132fa9c] >  .action-item .button-vue {
  --button-radius: calc(var(--size) / 2);
}
.avatardiv .avatardiv__initials-wrapper[data-v-f132fa9c] {
  display: block;
  height: var(--size);
  width: var(--size);
  background-color: var(--color-main-background);
  border-radius: calc(var(--size) / 2);
}
.avatardiv .avatardiv__initials-wrapper .avatardiv__initials[data-v-f132fa9c] {
  position: absolute;
  top: 0;
  left: 0;
  display: block;
  width: 100%;
  text-align: center;
  font-weight: normal;
}
.avatardiv img[data-v-f132fa9c] {
  width: 100%;
  height: 100%;
  object-fit: cover;
}
.avatardiv .material-design-icon[data-v-f132fa9c] {
  width: var(--size);
  height: var(--size);
}
.avatardiv .avatardiv__user-status[data-v-f132fa9c] {
  box-sizing: border-box;
  position: absolute;
  inset-inline-end: -4px;
  bottom: -4px;
  min-height: 14px;
  min-width: 14px;
  max-height: 18px;
  max-width: 18px;
  height: 40%;
  width: 40%;
  line-height: 1;
  font-size: clamp(var(--font-size-small, 13px), 85%, var(--default-font-size));
  border: 2px solid var(--color-main-background);
  background-color: var(--color-main-background);
  background-repeat: no-repeat;
  background-size: 16px;
  background-position: center;
  border-radius: 50%;
}
.acli:hover .avatardiv .avatardiv__user-status[data-v-f132fa9c] {
  border-color: var(--color-background-hover);
  background-color: var(--color-background-hover);
}
.acli.active .avatardiv .avatardiv__user-status[data-v-f132fa9c] {
  border-color: var(--color-primary-element-light);
  background-color: var(--color-primary-element-light);
}
.avatardiv .avatardiv__user-status--icon[data-v-f132fa9c] {
  border: none;
  background-color: transparent;
}
.avatardiv .popovermenu-wrapper[data-v-f132fa9c] {
  position: relative;
  display: inline-block;
}
.avatar-class-icon[data-v-f132fa9c] {
  display: block;
  border-radius: calc(var(--size) / 2);
  background-color: var(--color-background-darker);
  height: 100%;
}/**
 * SPDX-FileCopyrightText: 2019 Nextcloud GmbH and Nextcloud contributors
 * SPDX-License-Identifier: AGPL-3.0-or-later
 */
/**
 * SPDX-FileCopyrightText: 2021 Nextcloud GmbH and Nextcloud contributors
 * SPDX-License-Identifier: AGPL-3.0-or-later
 */
/*
* Ensure proper alignment of the vue material icons
*/
.material-design-icon[data-v-30c015f0] {
  display: flex;
  align-self: center;
  justify-self: center;
  align-items: center;
  justify-content: center;
}

/**
 * SPDX-FileCopyrightText: 2019 Nextcloud GmbH and Nextcloud contributors
 * SPDX-License-Identifier: AGPL-3.0-or-later
 */
li.action[data-v-30c015f0]:hover, li.action.active[data-v-30c015f0] {
  border-radius: 6px;
  padding: 0;
}
li.action[data-v-30c015f0]:hover {
  background-color: var(--color-background-hover);
}
.action-link[data-v-30c015f0] {
  display: flex;
  align-items: flex-start;
  width: 100%;
  height: auto;
  margin: 0;
  padding: 0;
  padding-inline-end: calc((var(--default-clickable-area) - 16px) / 2);
  box-sizing: border-box;
  cursor: pointer;
  white-space: nowrap;
  color: var(--color-main-text);
  border: 0;
  border-radius: 0;
  background-color: transparent;
  box-shadow: none;
  font-weight: normal;
  font-size: var(--default-font-size);
  line-height: var(--default-clickable-area);
}
.action-link > span[data-v-30c015f0] {
  cursor: pointer;
  white-space: nowrap;
}
.action-link__icon[data-v-30c015f0] {
  width: var(--default-clickable-area);
  height: var(--default-clickable-area);
  opacity: 1;
  background-position: calc((var(--default-clickable-area) - 16px) / 2) center;
  background-size: 16px;
  background-repeat: no-repeat;
}
.action-link[data-v-30c015f0] .material-design-icon {
  width: var(--default-clickable-area);
  height: var(--default-clickable-area);
  opacity: 1;
}
.action-link[data-v-30c015f0] .material-design-icon .material-design-icon__svg {
  vertical-align: middle;
}
.action-link__longtext-wrapper[data-v-30c015f0], .action-link__longtext[data-v-30c015f0] {
  max-width: 220px;
  line-height: 1.6em;
  padding: calc((var(--default-clickable-area) - 1.6em) / 2) 0;
  cursor: pointer;
  text-align: start;
  overflow: hidden;
  text-overflow: ellipsis;
}
.action-link__longtext[data-v-30c015f0] {
  cursor: pointer;
  white-space: pre-wrap !important;
}
.action-link__name[data-v-30c015f0] {
  font-weight: bold;
  text-overflow: ellipsis;
  overflow: hidden;
  white-space: nowrap;
  max-width: 100%;
  display: inline-block;
}
.action-link__menu-icon[data-v-30c015f0] {
  margin-inline: auto calc((var(--default-clickable-area) - 16px) / 2 * -1);
}/**
 * SPDX-FileCopyrightText: 2019 Nextcloud GmbH and Nextcloud contributors
 * SPDX-License-Identifier: AGPL-3.0-or-later
 */
/**
 * SPDX-FileCopyrightText: 2021 Nextcloud GmbH and Nextcloud contributors
 * SPDX-License-Identifier: AGPL-3.0-or-later
 */
/*
* Ensure proper alignment of the vue material icons
*/
.material-design-icon[data-v-579c6b4d] {
  display: flex;
  align-self: center;
  justify-self: center;
  align-items: center;
  justify-content: center;
}

/**
 * SPDX-FileCopyrightText: 2019 Nextcloud GmbH and Nextcloud contributors
 * SPDX-License-Identifier: AGPL-3.0-or-later
 */
li.action[data-v-579c6b4d]:hover, li.action.active[data-v-579c6b4d] {
  border-radius: 6px;
  padding: 0;
}
li.action[data-v-579c6b4d]:hover {
  background-color: var(--color-background-hover);
}
.action-router[data-v-579c6b4d] {
  display: flex;
  align-items: flex-start;
  width: 100%;
  height: auto;
  margin: 0;
  padding: 0;
  padding-inline-end: calc((var(--default-clickable-area) - 16px) / 2);
  box-sizing: border-box;
  cursor: pointer;
  white-space: nowrap;
  color: var(--color-main-text);
  border: 0;
  border-radius: 0;
  background-color: transparent;
  box-shadow: none;
  font-weight: normal;
  font-size: var(--default-font-size);
  line-height: var(--default-clickable-area);
}
.action-router > span[data-v-579c6b4d] {
  cursor: pointer;
  white-space: nowrap;
}
.action-router__icon[data-v-579c6b4d] {
  width: var(--default-clickable-area);
  height: var(--default-clickable-area);
  opacity: 1;
  background-position: calc((var(--default-clickable-area) - 16px) / 2) center;
  background-size: 16px;
  background-repeat: no-repeat;
}
.action-router[data-v-579c6b4d] .material-design-icon {
  width: var(--default-clickable-area);
  height: var(--default-clickable-area);
  opacity: 1;
}
.action-router[data-v-579c6b4d] .material-design-icon .material-design-icon__svg {
  vertical-align: middle;
}
.action-router__longtext-wrapper[data-v-579c6b4d], .action-router__longtext[data-v-579c6b4d] {
  max-width: 220px;
  line-height: 1.6em;
  padding: calc((var(--default-clickable-area) - 1.6em) / 2) 0;
  cursor: pointer;
  text-align: start;
  overflow: hidden;
  text-overflow: ellipsis;
}
.action-router__longtext[data-v-579c6b4d] {
  cursor: pointer;
  white-space: pre-wrap !important;
}
.action-router__name[data-v-579c6b4d] {
  font-weight: bold;
  text-overflow: ellipsis;
  overflow: hidden;
  white-space: nowrap;
  max-width: 100%;
  display: inline-block;
}
.action-router__menu-icon[data-v-579c6b4d] {
  margin-inline: auto calc((var(--default-clickable-area) - 16px) / 2 * -1);
}
.action--disabled[data-v-579c6b4d] {
  pointer-events: none;
  opacity: 0.5;
}
.action--disabled[data-v-579c6b4d]:hover, .action--disabled[data-v-579c6b4d]:focus {
  cursor: default;
  opacity: 0.5;
}
.action--disabled *[data-v-579c6b4d] {
  opacity: 1 !important;
}/**
 * SPDX-FileCopyrightText: 2019 Nextcloud GmbH and Nextcloud contributors
 * SPDX-License-Identifier: AGPL-3.0-or-later
 */
/**
 * SPDX-FileCopyrightText: 2021 Nextcloud GmbH and Nextcloud contributors
 * SPDX-License-Identifier: AGPL-3.0-or-later
 */
/*
* Ensure proper alignment of the vue material icons
*/
.material-design-icon[data-v-824615f4] {
  display: flex;
  align-self: center;
  justify-self: center;
  align-items: center;
  justify-content: center;
}

/**
 * SPDX-FileCopyrightText: 2019 Nextcloud GmbH and Nextcloud contributors
 * SPDX-License-Identifier: AGPL-3.0-or-later
 */
li.action[data-v-824615f4]:hover, li.action.active[data-v-824615f4] {
  border-radius: 6px;
  padding: 0;
}
li.action[data-v-824615f4]:hover {
  background-color: var(--color-background-hover);
}
.action-text[data-v-824615f4] {
  display: flex;
  align-items: flex-start;
  width: 100%;
  height: auto;
  margin: 0;
  padding: 0;
  padding-inline-end: calc((var(--default-clickable-area) - 16px) / 2);
  box-sizing: border-box;
  cursor: pointer;
  white-space: nowrap;
  color: var(--color-main-text);
  border: 0;
  border-radius: 0;
  background-color: transparent;
  box-shadow: none;
  font-weight: normal;
  font-size: var(--default-font-size);
  line-height: var(--default-clickable-area);
}
.action-text > span[data-v-824615f4] {
  cursor: pointer;
  white-space: nowrap;
}
.action-text__icon[data-v-824615f4] {
  width: var(--default-clickable-area);
  height: var(--default-clickable-area);
  opacity: 1;
  background-position: calc((var(--default-clickable-area) - 16px) / 2) center;
  background-size: 16px;
  background-repeat: no-repeat;
}
.action-text[data-v-824615f4] .material-design-icon {
  width: var(--default-clickable-area);
  height: var(--default-clickable-area);
  opacity: 1;
}
.action-text[data-v-824615f4] .material-design-icon .material-design-icon__svg {
  vertical-align: middle;
}
.action-text__longtext-wrapper[data-v-824615f4], .action-text__longtext[data-v-824615f4] {
  max-width: 220px;
  line-height: 1.6em;
  padding: calc((var(--default-clickable-area) - 1.6em) / 2) 0;
  cursor: pointer;
  text-align: start;
  overflow: hidden;
  text-overflow: ellipsis;
}
.action-text__longtext[data-v-824615f4] {
  cursor: pointer;
  white-space: pre-wrap !important;
}
.action-text__name[data-v-824615f4] {
  font-weight: bold;
  text-overflow: ellipsis;
  overflow: hidden;
  white-space: nowrap;
  max-width: 100%;
  display: inline-block;
}
.action-text__menu-icon[data-v-824615f4] {
  margin-inline: auto calc((var(--default-clickable-area) - 16px) / 2 * -1);
}
.action--disabled[data-v-824615f4] {
  pointer-events: none;
  opacity: 0.5;
}
.action--disabled[data-v-824615f4]:hover, .action--disabled[data-v-824615f4]:focus {
  cursor: default;
  opacity: 0.5;
}
.action--disabled *[data-v-824615f4] {
  opacity: 1 !important;
}
.action-text[data-v-824615f4],
.action-text span[data-v-824615f4] {
  cursor: default;
}/**
 * SPDX-FileCopyrightText: 2019 Nextcloud GmbH and Nextcloud contributors
 * SPDX-License-Identifier: AGPL-3.0-or-later
 */
/**
 * SPDX-FileCopyrightText: 2021 Nextcloud GmbH and Nextcloud contributors
 * SPDX-License-Identifier: AGPL-3.0-or-later
 */
/*
* Ensure proper alignment of the vue material icons
*/
.material-design-icon[data-v-0555d8d0] {
  display: flex;
  align-self: center;
  justify-self: center;
  align-items: center;
  justify-content: center;
}
.user-status-icon[data-v-0555d8d0] {
  display: flex;
  justify-content: center;
  align-items: center;
  min-width: 16px;
  min-height: 16px;
  max-width: 20px;
  max-height: 20px;
}
.user-status-icon--invisible[data-v-0555d8d0] {
  filter: var(--background-invert-if-dark);
}:host,:root{--vs-colors--lightest:rgba(60,60,60,0.26);--vs-colors--light:rgba(60,60,60,0.5);--vs-colors--dark:#333;--vs-colors--darkest:rgba(0,0,0,0.15);--vs-search-input-color:inherit;--vs-search-input-bg:#fff;--vs-search-input-placeholder-color:inherit;--vs-font-size:1rem;--vs-line-height:1.4;--vs-state-disabled-bg:#f8f8f8;--vs-state-disabled-color:var(--vs-colors--light);--vs-state-disabled-controls-color:var(--vs-colors--light);--vs-state-disabled-cursor:not-allowed;--vs-border-color:var(--vs-colors--lightest);--vs-border-width:1px;--vs-border-style:solid;--vs-border-radius:4px;--vs-actions-padding:4px 6px 0 3px;--vs-controls-color:var(--vs-colors--light);--vs-controls-size:1;--vs-controls--deselect-text-shadow:0 1px 0 #fff;--vs-selected-bg:#f0f0f0;--vs-selected-color:var(--vs-colors--dark);--vs-selected-border-color:var(--vs-border-color);--vs-selected-border-style:var(--vs-border-style);--vs-selected-border-width:var(--vs-border-width);--vs-dropdown-bg:#fff;--vs-dropdown-color:inherit;--vs-dropdown-z-index:1000;--vs-dropdown-min-width:160px;--vs-dropdown-max-height:350px;--vs-dropdown-box-shadow:0px 3px 6px 0px var(--vs-colors--darkest);--vs-dropdown-option-bg:#000;--vs-dropdown-option-color:var(--vs-dropdown-color);--vs-dropdown-option-padding:3px 20px;--vs-dropdown-option--active-bg:#136cfb;--vs-dropdown-option--active-color:#fff;--vs-dropdown-option--kb-focus-box-shadow:inset 0px 0px 0px 2px #949494;--vs-dropdown-option--deselect-bg:#fb5858;--vs-dropdown-option--deselect-color:#fff;--vs-transition-timing-function:cubic-bezier(1,-0.115,0.975,0.855);--vs-transition-duration:150ms}.v-select{font-family:inherit;position:relative}.v-select,.v-select *{box-sizing:border-box}:root{--vs-transition-timing-function:cubic-bezier(1,0.5,0.8,1);--vs-transition-duration:0.15s}@-webkit-keyframes vSelectSpinner{0%{transform:rotate(0deg)}to{transform:rotate(1turn)}}@keyframes vSelectSpinner{0%{transform:rotate(0deg)}to{transform:rotate(1turn)}}.vs__fade-enter-active,.vs__fade-leave-active{pointer-events:none;transition:opacity var(--vs-transition-duration) var(--vs-transition-timing-function)}.vs__fade-enter,.vs__fade-leave-to{opacity:0}:root{--vs-disabled-bg:var(--vs-state-disabled-bg);--vs-disabled-color:var(--vs-state-disabled-color);--vs-disabled-cursor:var(--vs-state-disabled-cursor)}.vs--disabled .vs__clear,.vs--disabled .vs__dropdown-toggle,.vs--disabled .vs__open-indicator,.vs--disabled .vs__open-indicator-button,.vs--disabled .vs__search,.vs--disabled .vs__selected{background-color:var(--vs-disabled-bg);cursor:var(--vs-disabled-cursor)}.v-select[dir=rtl] .vs__actions{padding:0 3px 0 6px}.v-select[dir=rtl] .vs__clear{margin-left:6px;margin-right:0}.v-select[dir=rtl] .vs__deselect{margin-left:0;margin-right:2px}.v-select[dir=rtl] .vs__dropdown-menu{text-align:right}.vs__dropdown-toggle{-webkit-appearance:none;-moz-appearance:none;appearance:none;background:var(--vs-search-input-bg);border:var(--vs-border-width) var(--vs-border-style) var(--vs-border-color);border-radius:var(--vs-border-radius);display:flex;padding:0 0 4px;white-space:normal}.vs__selected-options{display:flex;flex-basis:100%;flex-grow:1;flex-wrap:wrap;min-width:0;padding:0 2px;position:relative}.vs__actions{align-items:center;display:flex;padding:var(--vs-actions-padding)}.vs--searchable .vs__dropdown-toggle{cursor:text}.vs--unsearchable .vs__dropdown-toggle{cursor:pointer}.vs--open .vs__dropdown-toggle{border-bottom-color:transparent;border-bottom-left-radius:0;border-bottom-right-radius:0}.vs__open-indicator-button{background-color:transparent;border:0;cursor:pointer;padding:0}.vs__open-indicator{fill:var(--vs-controls-color);transform:scale(var(--vs-controls-size));transition:transform var(--vs-transition-duration) var(--vs-transition-timing-function);transition-timing-function:var(--vs-transition-timing-function)}.vs--open .vs__open-indicator{transform:rotate(180deg) scale(var(--vs-controls-size))}.vs--loading .vs__open-indicator{opacity:0}.vs__clear{fill:var(--vs-controls-color);background-color:transparent;border:0;cursor:pointer;margin-right:8px;padding:0}.vs__dropdown-menu{background:var(--vs-dropdown-bg);border:var(--vs-border-width) var(--vs-border-style) var(--vs-border-color);border-radius:0 0 var(--vs-border-radius) var(--vs-border-radius);border-top-style:none;box-shadow:var(--vs-dropdown-box-shadow);box-sizing:border-box;color:var(--vs-dropdown-color);display:block;left:0;list-style:none;margin:0;max-height:var(--vs-dropdown-max-height);min-width:var(--vs-dropdown-min-width);overflow-y:auto;padding:5px 0;position:absolute;text-align:left;top:calc(100% - var(--vs-border-width));width:100%;z-index:var(--vs-dropdown-z-index)}.vs__no-options{text-align:center}.vs__dropdown-option{clear:both;color:var(--vs-dropdown-option-color);cursor:pointer;display:block;line-height:1.42857143;padding:var(--vs-dropdown-option-padding);white-space:nowrap}.vs__dropdown-option--highlight{background:var(--vs-dropdown-option--active-bg);color:var(--vs-dropdown-option--active-color)}.vs__dropdown-option--kb-focus{box-shadow:var(--vs-dropdown-option--kb-focus-box-shadow)}.vs__dropdown-option--deselect{background:var(--vs-dropdown-option--deselect-bg);color:var(--vs-dropdown-option--deselect-color)}.vs__dropdown-option--disabled{background:var(--vs-state-disabled-bg);color:var(--vs-state-disabled-color);cursor:var(--vs-state-disabled-cursor)}.vs__selected{align-items:center;background-color:var(--vs-selected-bg);border:var(--vs-selected-border-width) var(--vs-selected-border-style) var(--vs-selected-border-color);border-radius:var(--vs-border-radius);color:var(--vs-selected-color);display:flex;line-height:var(--vs-line-height);margin:4px 2px 0;min-width:0;padding:0 .25em;z-index:0}.vs__deselect{fill:var(--vs-controls-color);-webkit-appearance:none;-moz-appearance:none;appearance:none;background:none;border:0;cursor:pointer;display:inline-flex;margin-left:4px;padding:0;text-shadow:var(--vs-controls--deselect-text-shadow)}.vs--single .vs__selected{background-color:transparent;border-color:transparent}.vs--single.vs--loading .vs__selected,.vs--single.vs--open .vs__selected{max-width:100%;opacity:.4;position:absolute}.vs--single.vs--searching .vs__selected{display:none}.vs__search::-webkit-search-cancel-button{display:none}.vs__search::-ms-clear,.vs__search::-webkit-search-decoration,.vs__search::-webkit-search-results-button,.vs__search::-webkit-search-results-decoration{display:none}.vs__search,.vs__search:focus{-webkit-appearance:none;-moz-appearance:none;appearance:none;background:none;border:1px solid transparent;border-left:none;box-shadow:none;color:var(--vs-search-input-color);flex-grow:1;font-size:var(--vs-font-size);line-height:var(--vs-line-height);margin:4px 0 0;max-width:100%;outline:none;padding:0 7px;width:0;z-index:1}.vs__search::-moz-placeholder{color:var(--vs-search-input-placeholder-color)}.vs__search:-ms-input-placeholder{color:var(--vs-search-input-placeholder-color)}.vs__search::placeholder{color:var(--vs-search-input-placeholder-color)}.vs--unsearchable .vs__search{opacity:1}.vs--unsearchable:not(.vs--disabled) .vs__search{cursor:pointer}.vs--single.vs--searching:not(.vs--open):not(.vs--loading) .vs__search{opacity:.2}.vs__spinner{align-self:center;-webkit-animation:vSelectSpinner 1.1s linear infinite;animation:vSelectSpinner 1.1s linear infinite;border:.9em solid hsla(0,0%,39%,.1);border-left-color:rgba(60,60,60,.45);font-size:5px;opacity:0;overflow:hidden;text-indent:-9999em;transform:translateZ(0) scale(var(--vs-controls--spinner-size,var(--vs-controls-size)));transition:opacity .1s}.vs__spinner,.vs__spinner:after{border-radius:50%;height:5em;transform:scale(var(--vs-controls--spinner-size,var(--vs-controls-size)));width:5em}.vs--loading .vs__spinner{opacity:1}

/*# sourceMappingURL=vue-select.css.map*//**
 * SPDX-FileCopyrightText: 2019 Nextcloud GmbH and Nextcloud contributors
 * SPDX-License-Identifier: AGPL-3.0-or-later
 */
/**
 * SPDX-FileCopyrightText: 2021 Nextcloud GmbH and Nextcloud contributors
 * SPDX-License-Identifier: AGPL-3.0-or-later
 */
/*
* Ensure proper alignment of the vue material icons
*/
.material-design-icon[data-v-a606e088] {
  display: flex;
  align-self: center;
  justify-self: center;
  align-items: center;
  justify-content: center;
}
.native-datetime-picker[data-v-a606e088] {
  display: flex;
  flex-direction: column;
}
.native-datetime-picker .native-datetime-picker--label[data-v-a606e088] {
  margin-block-end: 2px;
}
.native-datetime-picker .native-datetime-picker--input[data-v-a606e088] {
  --input-border-width-offset: calc(var(--border-width-input-focused, 2px) - var(--border-width-input, 2px));
  width: 100%;
  flex: 0 0 auto;
  margin: 0;
  padding-inline-start: calc(var(--border-radius-large) + var(--input-border-width-offset));
  padding-inline-end: calc(var(--default-grid-baseline) + var(--input-border-width-offset));
  border: var(--border-width-input, 2px) solid var(--color-border-maxcontrast);
}
.native-datetime-picker .native-datetime-picker--input[data-v-a606e088]:active:not([disabled]), .native-datetime-picker .native-datetime-picker--input[data-v-a606e088]:hover:not([disabled]), .native-datetime-picker .native-datetime-picker--input[data-v-a606e088]:focus:not([disabled]), .native-datetime-picker .native-datetime-picker--input[data-v-a606e088]:focus-within:not([disabled]) {
  border-color: var(--color-main-text);
  border-width: var(--border-width-input-focused, 2px);
  box-shadow: 0 0 0 2px var(--color-main-background) !important;
  --input-border-width-offset: 0px;
}
[data-theme-light] .native-datetime-picker--input[data-v-a606e088],
[data-themes*=light] .native-datetime-picker--input[data-v-a606e088] {
  color-scheme: light;
}
[data-theme-dark] .native-datetime-picker--input[data-v-a606e088],
[data-themes*=dark] .native-datetime-picker--input[data-v-a606e088] {
  color-scheme: dark;
}
@media (prefers-color-scheme: light) {
[data-theme-default] .native-datetime-picker--input[data-v-a606e088],
  [data-themes*=default] .native-datetime-picker--input[data-v-a606e088] {
    color-scheme: light;
}
}
@media (prefers-color-scheme: dark) {
[data-theme-default] .native-datetime-picker--input[data-v-a606e088],
  [data-themes*=default] .native-datetime-picker--input[data-v-a606e088] {
    color-scheme: dark;
}
}/**
 * SPDX-FileCopyrightText: 2019 Nextcloud GmbH and Nextcloud contributors
 * SPDX-License-Identifier: AGPL-3.0-or-later
 */
/**
 * SPDX-FileCopyrightText: 2021 Nextcloud GmbH and Nextcloud contributors
 * SPDX-License-Identifier: AGPL-3.0-or-later
 */
/*
* Ensure proper alignment of the vue material icons
*/
.material-design-icon[data-v-09fb8faa] {
  display: flex;
  align-self: center;
  justify-self: center;
  align-items: center;
  justify-content: center;
}
[data-v-09fb8faa] .password-field__input--secure-text {
  -webkit-text-security: disc;
}/**
 * SPDX-FileCopyrightText: 2019 Nextcloud GmbH and Nextcloud contributors
 * SPDX-License-Identifier: AGPL-3.0-or-later
 */
/**
 * SPDX-FileCopyrightText: 2021 Nextcloud GmbH and Nextcloud contributors
 * SPDX-License-Identifier: AGPL-3.0-or-later
 */
/*
* Ensure proper alignment of the vue material icons
*/
.material-design-icon[data-v-8f3abf17] {
  display: flex;
  align-self: center;
  justify-self: center;
  align-items: center;
  justify-content: center;
}
.input-field[data-v-8f3abf17] {
  --input-border-radius: var(--border-radius-element, var(--border-radius-large));
  --input-padding-start: var(--border-radius-large);
  --input-padding-end: var(--border-radius-large);
  position: relative;
  width: 100%;
  margin-block-start: 6px;
}
.input-field--disabled[data-v-8f3abf17] {
  opacity: 0.4;
  filter: saturate(0.4);
}
.input-field--label-outside[data-v-8f3abf17] {
  margin-block-start: 0;
}
.input-field--leading-icon[data-v-8f3abf17] {
  --input-padding-start: calc(var(--default-clickable-area) - var(--default-grid-baseline));
}
.input-field--trailing-icon[data-v-8f3abf17] {
  --input-padding-end: calc(var(--default-clickable-area) - var(--default-grid-baseline));
}
.input-field--pill[data-v-8f3abf17] {
  --input-border-radius: var(--border-radius-pill);
}
.input-field__main-wrapper[data-v-8f3abf17] {
  height: var(--default-clickable-area);
  position: relative;
}
.input-field__input[data-v-8f3abf17] {
  --input-border-width-offset: calc(var(--border-width-input-focused, 2px) - var(--border-width-input, 2px));
  background-color: var(--color-main-background);
  color: var(--color-main-text);
  border: var(--border-width-input, 2px) solid var(--color-border-maxcontrast);
  border-radius: var(--input-border-radius);
  cursor: pointer;
  -webkit-appearance: textfield !important;
  -moz-appearance: textfield !important;
  appearance: textfield !important;
  font-size: var(--default-font-size);
  text-overflow: ellipsis;
  height: calc(var(--default-clickable-area) - 2 * var(--input-border-width-offset)) !important;
  width: 100%;
  padding-inline: calc(var(--input-padding-start) + var(--input-border-width-offset)) calc(var(--input-padding-end) + var(--input-border-width-offset));
  padding-block: var(--input-border-width-offset);
}
.input-field__input[data-v-8f3abf17]::placeholder {
  color: var(--color-text-maxcontrast);
}
.input-field__input[data-v-8f3abf17]:active:not([disabled]), .input-field__input[data-v-8f3abf17]:hover:not([disabled]), .input-field__input[data-v-8f3abf17]:focus:not([disabled]) {
  border-color: var(--color-main-text);
  border-width: var(--border-width-input-focused, 2px);
  box-shadow: 0 0 0 2px var(--color-main-background) !important;
  --input-border-width-offset: 0px;
}
.input-field__input:focus + .input-field__label[data-v-8f3abf17], .input-field__input:hover:not(:placeholder-shown) + .input-field__label[data-v-8f3abf17] {
  color: var(--color-main-text);
}
.input-field__input[data-v-8f3abf17]:focus {
  cursor: text;
}
.input-field__input[data-v-8f3abf17]:disabled {
  cursor: default;
}
.input-field__input[data-v-8f3abf17]:focus-visible {
  box-shadow: unset !important;
}
.input-field__input--success[data-v-8f3abf17] {
  border-color: var(--color-success) !important;
}
.input-field__input--success[data-v-8f3abf17]:focus-visible {
  box-shadow: rgb(248, 250, 252) 0px 0px 0px 2px, var(--color-primary-element) 0px 0px 0px 4px, rgba(0, 0, 0, 0.05) 0px 1px 2px 0px;
}
.input-field__input--error[data-v-8f3abf17], .input-field__input[data-v-8f3abf17]:user-invalid {
  border-color: var(--color-error) !important;
}
.input-field__input--error[data-v-8f3abf17]:focus-visible, .input-field__input[data-v-8f3abf17]:user-invalid:focus-visible {
  box-shadow: rgb(248, 250, 252) 0px 0px 0px 2px, var(--color-primary-element) 0px 0px 0px 4px, rgba(0, 0, 0, 0.05) 0px 1px 2px 0px;
}
.input-field:not(.input-field--label-outside) .input-field__input[data-v-8f3abf17]:not(:focus)::placeholder {
  opacity: 0;
}
.input-field__label[data-v-8f3abf17] {
  --input-label-font-size: var(--default-font-size);
  position: absolute;
  margin-inline: var(--input-padding-start) var(--input-padding-end);
  max-width: fit-content;
  font-size: var(--input-label-font-size);
  inset-block-start: calc((var(--default-clickable-area) - 1lh) / 2);
  inset-inline: var(--border-width-input-focused, 2px);
  color: var(--color-text-maxcontrast);
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  pointer-events: none;
  transition: height var(--animation-quick), inset-block-start var(--animation-quick), font-size var(--animation-quick), color var(--animation-quick), background-color var(--animation-quick) var(--animation-slow);
}
.input-field__input:focus + .input-field__label[data-v-8f3abf17], .input-field__input:not(:placeholder-shown) + .input-field__label[data-v-8f3abf17] {
  --input-label-font-size: 13px;
  line-height: 1.5;
  inset-block-start: calc(-1.5 * var(--input-label-font-size) / 2);
  font-weight: 500;
  border-radius: var(--default-grid-baseline) var(--default-grid-baseline) 0 0;
  background-color: var(--color-main-background);
  padding-inline: var(--default-grid-baseline);
  margin-inline: calc(var(--input-padding-start) - var(--default-grid-baseline)) calc(var(--input-padding-end) - var(--default-grid-baseline));
  transition: height var(--animation-quick), inset-block-start var(--animation-quick), font-size var(--animation-quick), color var(--animation-quick);
}
.input-field__icon[data-v-8f3abf17] {
  position: absolute;
  height: var(--default-clickable-area);
  width: var(--default-clickable-area);
  display: flex;
  align-items: center;
  justify-content: center;
  opacity: 0.7;
  inset-block-end: 0;
}
.input-field__icon--leading[data-v-8f3abf17] {
  inset-inline-start: 0px;
}
.input-field__icon--trailing[data-v-8f3abf17] {
  inset-inline-end: 0px;
}
.input-field__trailing-button[data-v-8f3abf17] {
  --button-size: calc(var(--default-clickable-area) - 2 * var(--border-width-input-focused, 2px)) !important;
  --button-radius: calc(var(--input-border-radius) - var(--border-width-input-focused, 2px));
}
.input-field__trailing-button.button-vue[data-v-8f3abf17] {
  position: absolute;
  top: var(--border-width-input-focused, 2px);
  inset-inline-end: var(--border-width-input-focused, 2px);
}
.input-field__trailing-button.button-vue[data-v-8f3abf17]:focus-visible {
  box-shadow: none !important;
}
.input-field__helper-text-message[data-v-8f3abf17] {
  padding-block: 4px;
  padding-inline: var(--border-radius-large);
  display: flex;
  align-items: center;
  color: var(--color-text-maxcontrast);
}
.input-field__helper-text-message__icon[data-v-8f3abf17] {
  margin-inline-end: 8px;
}
.input-field__helper-text-message--error[data-v-8f3abf17] {
  color: var(--color-error-text);
}
.input-field__helper-text-message--success[data-v-8f3abf17] {
  color: var(--color-success-text);
}/**
 * SPDX-FileCopyrightText: 2019 Nextcloud GmbH and Nextcloud contributors
 * SPDX-License-Identifier: AGPL-3.0-or-later
 */
/**
 * SPDX-FileCopyrightText: 2021 Nextcloud GmbH and Nextcloud contributors
 * SPDX-License-Identifier: AGPL-3.0-or-later
 */
/*
* Ensure proper alignment of the vue material icons
*/
.material-design-icon[data-v-8ddd08c0] {
  display: flex;
  align-self: center;
  justify-self: center;
  align-items: center;
  justify-content: center;
}

/**
 * SPDX-FileCopyrightText: 2019 Nextcloud GmbH and Nextcloud contributors
 * SPDX-License-Identifier: AGPL-3.0-or-later
 */
li.action[data-v-8ddd08c0]:hover, li.action.active[data-v-8ddd08c0] {
  border-radius: 6px;
  padding: 0;
}
li.action[data-v-8ddd08c0]:hover {
  background-color: var(--color-background-hover);
}
.action--disabled[data-v-8ddd08c0] {
  pointer-events: none;
  opacity: 0.5;
}
.action--disabled[data-v-8ddd08c0]:hover, .action--disabled[data-v-8ddd08c0]:focus {
  cursor: default;
  opacity: 0.5;
}
.action--disabled *[data-v-8ddd08c0] {
  opacity: 1 !important;
}
.action-radio[data-v-8ddd08c0] {
  display: flex;
  align-items: flex-start;
  width: 100%;
  height: auto;
  margin: 0;
  padding: 0;
  cursor: pointer;
  white-space: nowrap;
  color: var(--color-main-text);
  border: 0;
  border-radius: 0;
  background-color: transparent;
  box-shadow: none;
  font-weight: normal;
  line-height: var(--default-clickable-area);
  /* checkbox/radio fixes */
}
.action-radio__radio[data-v-8ddd08c0] {
  position: absolute;
  inset-inline-start: 0 !important;
  z-index: -1;
  opacity: 0;
}
.action-radio__label[data-v-8ddd08c0] {
  display: flex;
  align-items: center;
  width: 100%;
  padding: 0 !important;
  padding-inline-end: calc((var(--default-clickable-area) - 16px) / 2) !important;
}
.action-radio__label[data-v-8ddd08c0]::before {
  margin: calc((var(--default-clickable-area) - 14px) / 2) !important;
}
.action-radio--disabled[data-v-8ddd08c0],
.action-radio--disabled .action-radio__label[data-v-8ddd08c0] {
  cursor: pointer;
}/**
 * SPDX-FileCopyrightText: 2019 Nextcloud GmbH and Nextcloud contributors
 * SPDX-License-Identifier: AGPL-3.0-or-later
 */
/**
 * SPDX-FileCopyrightText: 2021 Nextcloud GmbH and Nextcloud contributors
 * SPDX-License-Identifier: AGPL-3.0-or-later
 */
/*
* Ensure proper alignment of the vue material icons
*/
.material-design-icon[data-v-3e2324b7] {
  display: flex;
  align-self: center;
  justify-self: center;
  align-items: center;
  justify-content: center;
}
.action-separator[data-v-3e2324b7] {
  height: 0;
  margin: 5px 10px 5px 15px;
  border-bottom: 1px solid var(--color-border-dark);
  cursor: default;
}/**
 * SPDX-FileCopyrightText: 2019 Nextcloud GmbH and Nextcloud contributors
 * SPDX-License-Identifier: AGPL-3.0-or-later
 */
/**
 * SPDX-FileCopyrightText: 2021 Nextcloud GmbH and Nextcloud contributors
 * SPDX-License-Identifier: AGPL-3.0-or-later
 */
/*
* Ensure proper alignment of the vue material icons
*/
.material-design-icon[data-v-a9c08a7c] {
  display: flex;
  align-self: center;
  justify-self: center;
  align-items: center;
  justify-content: center;
}

/**
 * SPDX-FileCopyrightText: 2019 Nextcloud GmbH and Nextcloud contributors
 * SPDX-License-Identifier: AGPL-3.0-or-later
 */
/**
 * color-text-lighter		normal state
 * color-text-lighter		active state
 * color-text-maxcontrast 	disabled state
 */
/* Default global values */
button[data-v-a9c08a7c]:not(.button-vue),
input[data-v-a9c08a7c]:not([type=range]),
textarea[data-v-a9c08a7c] {
  margin: 0;
  padding: 7px 6px;
  cursor: text;
  color: var(--color-text-lighter);
  border: 1px solid var(--color-border-dark);
  border-radius: var(--border-radius);
  outline: none;
  background-color: var(--color-main-background);
  font-size: 13px;
  /* Primary action button, use sparingly */
}
button[data-v-a9c08a7c]:not(.button-vue):not(:disabled):not(.primary):hover, button[data-v-a9c08a7c]:not(.button-vue):not(:disabled):not(.primary):focus, button:not(.button-vue):not(:disabled):not(.primary).active[data-v-a9c08a7c],
input[data-v-a9c08a7c]:not([type=range]):not(:disabled):not(.primary):hover,
input[data-v-a9c08a7c]:not([type=range]):not(:disabled):not(.primary):focus,
input:not([type=range]):not(:disabled):not(.primary).active[data-v-a9c08a7c],
textarea[data-v-a9c08a7c]:not(:disabled):not(.primary):hover,
textarea[data-v-a9c08a7c]:not(:disabled):not(.primary):focus,
textarea:not(:disabled):not(.primary).active[data-v-a9c08a7c] {
  /* active class used for multiselect */
  border-color: var(--color-primary-element);
  outline: none;
}
button[data-v-a9c08a7c]:not(.button-vue):not(:disabled):not(.primary):active,
input[data-v-a9c08a7c]:not([type=range]):not(:disabled):not(.primary):active,
textarea[data-v-a9c08a7c]:not(:disabled):not(.primary):active {
  color: var(--color-text-light);
  outline: none;
  background-color: var(--color-main-background);
}
button[data-v-a9c08a7c]:not(.button-vue):disabled,
input[data-v-a9c08a7c]:not([type=range]):disabled,
textarea[data-v-a9c08a7c]:disabled {
  cursor: default;
  opacity: 0.5;
  color: var(--color-text-maxcontrast);
  background-color: var(--color-background-dark);
}
button[data-v-a9c08a7c]:not(.button-vue):required,
input[data-v-a9c08a7c]:not([type=range]):required,
textarea[data-v-a9c08a7c]:required {
  box-shadow: none;
}
button[data-v-a9c08a7c]:not(.button-vue):invalid,
input[data-v-a9c08a7c]:not([type=range]):invalid,
textarea[data-v-a9c08a7c]:invalid {
  border-color: var(--color-error);
  box-shadow: none !important;
}
button:not(.button-vue).primary[data-v-a9c08a7c],
input:not([type=range]).primary[data-v-a9c08a7c],
textarea.primary[data-v-a9c08a7c] {
  cursor: pointer;
  color: var(--color-primary-element-text);
  border-color: var(--color-primary-element);
  background-color: var(--color-primary-element);
}
button:not(.button-vue).primary[data-v-a9c08a7c]:not(:disabled):hover, button:not(.button-vue).primary[data-v-a9c08a7c]:not(:disabled):focus, button:not(.button-vue).primary[data-v-a9c08a7c]:not(:disabled):active,
input:not([type=range]).primary[data-v-a9c08a7c]:not(:disabled):hover,
input:not([type=range]).primary[data-v-a9c08a7c]:not(:disabled):focus,
input:not([type=range]).primary[data-v-a9c08a7c]:not(:disabled):active,
textarea.primary[data-v-a9c08a7c]:not(:disabled):hover,
textarea.primary[data-v-a9c08a7c]:not(:disabled):focus,
textarea.primary[data-v-a9c08a7c]:not(:disabled):active {
  border-color: var(--color-primary-element-light);
  background-color: var(--color-primary-element-light);
}
button:not(.button-vue).primary[data-v-a9c08a7c]:not(:disabled):active,
input:not([type=range]).primary[data-v-a9c08a7c]:not(:disabled):active,
textarea.primary[data-v-a9c08a7c]:not(:disabled):active {
  color: var(--color-primary-element-text-dark);
}
button:not(.button-vue).primary[data-v-a9c08a7c]:disabled,
input:not([type=range]).primary[data-v-a9c08a7c]:disabled,
textarea.primary[data-v-a9c08a7c]:disabled {
  cursor: default;
  color: var(--color-primary-element-text-dark);
  background-color: var(--color-primary-element);
}

/**
 * SPDX-FileCopyrightText: 2019 Nextcloud GmbH and Nextcloud contributors
 * SPDX-License-Identifier: AGPL-3.0-or-later
 */
li.action[data-v-a9c08a7c]:hover, li.action.active[data-v-a9c08a7c] {
  border-radius: 6px;
  padding: 0;
}
li.action[data-v-a9c08a7c]:hover {
  background-color: var(--color-background-hover);
}
.action--disabled[data-v-a9c08a7c] {
  pointer-events: none;
  opacity: 0.5;
}
.action--disabled[data-v-a9c08a7c]:hover, .action--disabled[data-v-a9c08a7c]:focus {
  cursor: default;
  opacity: 0.5;
}
.action--disabled *[data-v-a9c08a7c] {
  opacity: 1 !important;
}
.action-text-editable[data-v-a9c08a7c] {
  display: flex;
  align-items: flex-start;
  width: 100%;
  height: auto;
  margin: 0;
  padding: 0;
  cursor: pointer;
  white-space: nowrap;
  color: var(--color-main-text);
  border: 0;
  border-radius: 0;
  background-color: transparent;
  box-shadow: none;
  font-weight: normal;
  line-height: var(--default-clickable-area);
  /* Inputs inside popover supports text, submit & reset */
}
.action-text-editable > span[data-v-a9c08a7c] {
  cursor: pointer;
  white-space: nowrap;
}
.action-text-editable__icon[data-v-a9c08a7c] {
  min-width: 0; /* Overwrite icons*/
  min-height: 0;
  /* Keep padding to define the width to
  	assure correct position of a possible text */
  padding: calc(var(--default-clickable-area) / 2) 0 calc(var(--default-clickable-area) / 2) var(--default-clickable-area);
  background-position: calc((var(--default-clickable-area) - 16px) / 2) center;
  background-size: 16px;
}
.action-text-editable[data-v-a9c08a7c] .material-design-icon {
  width: var(--default-clickable-area);
  height: var(--default-clickable-area);
  opacity: 1;
}
.action-text-editable[data-v-a9c08a7c] .material-design-icon .material-design-icon__svg {
  vertical-align: middle;
}
.action-text-editable__form[data-v-a9c08a7c] {
  display: flex;
  flex: 1 1 auto;
  flex-direction: column;
  position: relative;
  margin: 4px 0;
  padding-inline-end: calc((var(--default-clickable-area) - 16px) / 2);
}
.action-text-editable__submit[data-v-a9c08a7c] {
  position: absolute;
  inset-inline-start: 0;
  top: auto;
  width: 1px;
  height: 1px;
  overflow: hidden;
  z-index: -1;
  opacity: 0;
}
.action-text-editable__label[data-v-a9c08a7c] {
  display: flex;
  align-items: center;
  justify-content: center;
  position: absolute;
  inset-inline-end: calc((var(--default-clickable-area) - 16px) / 2 + 1px);
  bottom: 1px;
  width: calc(var(--default-clickable-area) - 8px);
  height: calc(var(--default-clickable-area) - 8px);
  box-sizing: border-box;
  margin: 0;
  padding: 7px 6px;
  border: 0;
  border-radius: 50%;
  /* Avoid background under border */
  background-color: var(--color-main-background);
  background-clip: padding-box;
}
.action-text-editable__label[data-v-a9c08a7c], .action-text-editable__label *[data-v-a9c08a7c] {
  cursor: pointer;
}
.action-text-editable__textarea[data-v-a9c08a7c] {
  flex: 1 1 auto;
  color: inherit;
  border-color: var(--color-border-maxcontrast);
  min-height: calc(var(--default-clickable-area) * 2 - 8px); /* twice the element margin-y */
  max-height: calc(var(--default-clickable-area) * 3 - 8px); /* twice the element margin-y */
  min-width: calc(var(--default-clickable-area) * 4);
  width: 100% !important;
  margin: 0;
  /* only show confirm borders if input is not focused */
}
.action-text-editable__textarea[data-v-a9c08a7c]:disabled {
  cursor: default;
}
.action-text-editable__textarea:not(:active):not(:hover):not(:focus):invalid + .action-text-editable__label[data-v-a9c08a7c] {
  background-color: var(--color-error);
}
.action-text-editable__textarea:not(:active):not(:hover):not(:focus):not(:disabled) + .action-text-editable__label[data-v-a9c08a7c]:active, .action-text-editable__textarea:not(:active):not(:hover):not(:focus):not(:disabled) + .action-text-editable__label[data-v-a9c08a7c]:hover, .action-text-editable__textarea:not(:active):not(:hover):not(:focus):not(:disabled) + .action-text-editable__label[data-v-a9c08a7c]:focus {
  background-color: var(--color-primary-element);
  color: var(--color-primary-element-text);
}
.action-text-editable__textarea:active:not(:disabled) + .action-text-editable__label[data-v-a9c08a7c], .action-text-editable__textarea:hover:not(:disabled) + .action-text-editable__label[data-v-a9c08a7c], .action-text-editable__textarea:focus:not(:disabled) + .action-text-editable__label[data-v-a9c08a7c] {
  /* above previous input */
  z-index: 2;
  border-color: var(--color-primary-element);
  border-inline-start-color: transparent;
}
li:last-child > .action-text-editable[data-v-a9c08a7c] {
  margin-bottom: calc((var(--default-clickable-area) - 16px) / 2 - 4px);
}
li:first-child > .action-text-editable[data-v-a9c08a7c] {
  margin-top: calc((var(--default-clickable-area) - 16px) / 2 - 4px);
}/**
 * SPDX-FileCopyrightText: 2019 Nextcloud GmbH and Nextcloud contributors
 * SPDX-License-Identifier: AGPL-3.0-or-later
 */
/**
 * SPDX-FileCopyrightText: 2021 Nextcloud GmbH and Nextcloud contributors
 * SPDX-License-Identifier: AGPL-3.0-or-later
 */
/*
* Ensure proper alignment of the vue material icons
*/
.material-design-icon[data-v-0bdd48d0] {
  display: flex;
  align-self: center;
  justify-self: center;
  align-items: center;
  justify-content: center;
}
.app-details-toggle[data-v-0bdd48d0] {
  position: sticky;
  width: var(--default-clickable-area);
  height: var(--default-clickable-area);
  padding: calc((var(--default-clickable-area) - 16px) / 2);
  cursor: pointer;
  opacity: 0.6;
  transform: rotate(180deg);
  background-color: var(--color-main-background);
  z-index: 2000;
  top: var(--app-navigation-padding);
  inset-inline-start: calc(var(--default-clickable-area) + var(--app-navigation-padding) * 2);
}
.app-details-toggle--mobile[data-v-0bdd48d0] {
  inset-inline-start: var(--app-navigation-padding);
}
.app-details-toggle[data-v-0bdd48d0]:active, .app-details-toggle[data-v-0bdd48d0]:hover, .app-details-toggle[data-v-0bdd48d0]:focus {
  opacity: 1;
}/**
 * SPDX-FileCopyrightText: 2019 Nextcloud GmbH and Nextcloud contributors
 * SPDX-License-Identifier: AGPL-3.0-or-later
 */
/**
 * SPDX-FileCopyrightText: 2021 Nextcloud GmbH and Nextcloud contributors
 * SPDX-License-Identifier: AGPL-3.0-or-later
 */
/*
* Ensure proper alignment of the vue material icons
*/
.material-design-icon[data-v-bfc6f887] {
  display: flex;
  align-self: center;
  justify-self: center;
  align-items: center;
  justify-content: center;
}
.app-content[data-v-bfc6f887] {
  position: initial;
  z-index: 1000;
  flex-basis: 100vw;
  height: 100%;
  margin: 0 !important;
  background-color: var(--color-main-background);
  min-width: 0;
}
.app-content[data-v-bfc6f887]:not(.app-content--has-list) {
  overflow: auto;
}
.app-content-wrapper[data-v-bfc6f887] {
  position: relative;
  width: 100%;
  height: 100%;
}
.app-content-wrapper--no-split.app-content-wrapper--show-list[data-v-bfc6f887]  .app-content-list {
  display: flex;
}
.app-content-wrapper--no-split.app-content-wrapper--show-list[data-v-bfc6f887]  .app-content-details {
  display: none;
}
.app-content-wrapper--no-split.app-content-wrapper--show-details[data-v-bfc6f887]  .app-content-list {
  display: none;
}
.app-content-wrapper--no-split.app-content-wrapper--show-details[data-v-bfc6f887]  .app-content-details {
  display: block;
}
[data-v-bfc6f887] .splitpanes.default-theme .app-content-list {
  max-width: none;
  /* Thin scrollbar is hard to catch on resizable columns */
  scrollbar-width: auto;
}
[data-v-bfc6f887] .splitpanes.default-theme .splitpanes__pane {
  background-color: transparent;
  transition: none;
}
[data-v-bfc6f887] .splitpanes.default-theme .splitpanes__pane-list {
  min-width: 300px;
  position: sticky;
}
@media only screen and (width < 1024px) {
[data-v-bfc6f887] .splitpanes.default-theme .splitpanes__pane-list {
    display: none;
}
}
[data-v-bfc6f887] .splitpanes.default-theme .splitpanes__pane-details {
  overflow-y: auto;
}
@media only screen and (width < 1024px) {
[data-v-bfc6f887] .splitpanes.default-theme .splitpanes__pane-details {
    min-width: 100%;
}
}
[data-v-bfc6f887] .splitpanes.default-theme .splitpanes__splitter {
  background-color: var(--color-main-background);
}
[data-v-bfc6f887] .splitpanes.default-theme .splitpanes__splitter::before,[data-v-bfc6f887] .splitpanes.default-theme .splitpanes__splitter::after {
  background-color: var(--color-border);
}
[data-v-bfc6f887] .splitpanes.default-theme.splitpanes--vertical .splitpanes__splitter {
  border-left: 1px solid var(--color-border);
}
[data-v-bfc6f887] .splitpanes.default-theme.splitpanes--horizontal .splitpanes__splitter {
  border-top: 1px solid var(--color-border);
}
.app-content-wrapper--show-list[data-v-bfc6f887] .app-content-list {
  max-width: none;
}.splitpanes{display:-webkit-box;display:-ms-flexbox;display:flex;width:100%;height:100%}.splitpanes--vertical{-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row}.splitpanes--horizontal{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}.splitpanes--dragging *{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.splitpanes__pane{width:100%;height:100%;overflow:hidden}.splitpanes--vertical .splitpanes__pane{-webkit-transition:width .2s ease-out;-o-transition:width .2s ease-out;transition:width .2s ease-out}.splitpanes--horizontal .splitpanes__pane{-webkit-transition:height .2s ease-out;-o-transition:height .2s ease-out;transition:height .2s ease-out}.splitpanes--dragging .splitpanes__pane{-webkit-transition:none;-o-transition:none;transition:none}.splitpanes__splitter{-ms-touch-action:none;touch-action:none}.splitpanes--vertical>.splitpanes__splitter{min-width:1px;cursor:col-resize}.splitpanes--horizontal>.splitpanes__splitter{min-height:1px;cursor:row-resize}.splitpanes.default-theme .splitpanes__pane{background-color:#f2f2f2}.splitpanes.default-theme .splitpanes__splitter{background-color:#fff;-webkit-box-sizing:border-box;box-sizing:border-box;position:relative;-ms-flex-negative:0;flex-shrink:0}.splitpanes.default-theme .splitpanes__splitter:before,.splitpanes.default-theme .splitpanes__splitter:after{content:"";position:absolute;top:50%;left:50%;background-color:#00000026;-webkit-transition:background-color .3s;-o-transition:background-color .3s;transition:background-color .3s}.splitpanes.default-theme .splitpanes__splitter:hover:before,.splitpanes.default-theme .splitpanes__splitter:hover:after{background-color:#00000040}.splitpanes.default-theme .splitpanes__splitter:first-child{cursor:auto}.default-theme.splitpanes .splitpanes .splitpanes__splitter{z-index:1}.default-theme.splitpanes--vertical>.splitpanes__splitter,.default-theme .splitpanes--vertical>.splitpanes__splitter{width:7px;border-left:1px solid #eee;margin-left:-1px}.default-theme.splitpanes--vertical>.splitpanes__splitter:before,.default-theme.splitpanes--vertical>.splitpanes__splitter:after,.default-theme .splitpanes--vertical>.splitpanes__splitter:before,.default-theme .splitpanes--vertical>.splitpanes__splitter:after{-webkit-transform:translateY(-50%);-ms-transform:translateY(-50%);transform:translateY(-50%);width:1px;height:30px}.default-theme.splitpanes--vertical>.splitpanes__splitter:before,.default-theme .splitpanes--vertical>.splitpanes__splitter:before{margin-left:-2px}.default-theme.splitpanes--vertical>.splitpanes__splitter:after,.default-theme .splitpanes--vertical>.splitpanes__splitter:after{margin-left:1px}.default-theme.splitpanes--horizontal>.splitpanes__splitter,.default-theme .splitpanes--horizontal>.splitpanes__splitter{height:7px;border-top:1px solid #eee;margin-top:-1px}.default-theme.splitpanes--horizontal>.splitpanes__splitter:before,.default-theme.splitpanes--horizontal>.splitpanes__splitter:after,.default-theme .splitpanes--horizontal>.splitpanes__splitter:before,.default-theme .splitpanes--horizontal>.splitpanes__splitter:after{-webkit-transform:translateX(-50%);-ms-transform:translateX(-50%);transform:translate(-50%);width:30px;height:1px}.default-theme.splitpanes--horizontal>.splitpanes__splitter:before,.default-theme .splitpanes--horizontal>.splitpanes__splitter:before{margin-top:-2px}.default-theme.splitpanes--horizontal>.splitpanes__splitter:after,.default-theme .splitpanes--horizontal>.splitpanes__splitter:after{margin-top:1px}
/**
 * SPDX-FileCopyrightText: 2019 Nextcloud GmbH and Nextcloud contributors
 * SPDX-License-Identifier: AGPL-3.0-or-later
 */
/**
 * SPDX-FileCopyrightText: 2021 Nextcloud GmbH and Nextcloud contributors
 * SPDX-License-Identifier: AGPL-3.0-or-later
 */
/*
* Ensure proper alignment of the vue material icons
*/
.material-design-icon {
  display: flex;
  align-self: center;
  justify-self: center;
  align-items: center;
  justify-content: center;
}
.app-navigation,
.app-content {
  /** Distance of the app navigation toggle and the first navigation item to the top edge of the app content container */
  --app-navigation-padding: calc(var(--default-grid-baseline, 4px) * 2);
}/**
 * SPDX-FileCopyrightText: 2019 Nextcloud GmbH and Nextcloud contributors
 * SPDX-License-Identifier: AGPL-3.0-or-later
 */
/**
 * SPDX-FileCopyrightText: 2021 Nextcloud GmbH and Nextcloud contributors
 * SPDX-License-Identifier: AGPL-3.0-or-later
 */
/*
* Ensure proper alignment of the vue material icons
*/
.material-design-icon[data-v-e8d5a9e1] {
  display: flex;
  align-self: center;
  justify-self: center;
  align-items: center;
  justify-content: center;
}
.app-navigation[data-v-e8d5a9e1] {
  --color-text-maxcontrast: var(--color-text-maxcontrast-background-blur, var(--color-text-maxcontrast-default));
  transition: transform var(--animation-quick), margin var(--animation-quick);
  width: 300px;
  --app-navigation-max-width: calc(100vw - (var(--app-navigation-padding) + var(--default-clickable-area) + var(--default-grid-baseline)));
  max-width: var(--app-navigation-max-width);
  position: relative;
  top: 0;
  inset-inline-start: 0;
  padding: 0px;
  z-index: 1800;
  height: 100%;
  box-sizing: border-box;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  flex-grow: 0;
  flex-shrink: 0;
  background-color: var(--color-main-background-blur, var(--color-main-background));
  -webkit-backdrop-filter: var(--filter-background-blur, none);
  backdrop-filter: var(--filter-background-blur, none);
}
.app-navigation--close[data-v-e8d5a9e1] {
  margin-inline-start: calc(-1 * min(300px, var(--app-navigation-max-width)));
}
.app-navigation__search[data-v-e8d5a9e1] {
  width: 100%;
}
.app-navigation__body[data-v-e8d5a9e1] {
  overflow-y: scroll;
}
.app-navigation__content > ul[data-v-e8d5a9e1] {
  position: relative;
  width: 100%;
  overflow-x: hidden;
  overflow-y: auto;
  box-sizing: border-box;
  display: flex;
  flex-direction: column;
  gap: var(--default-grid-baseline, 4px);
  padding: var(--app-navigation-padding);
}
.app-navigation .app-navigation__list[data-v-e8d5a9e1] {
  height: 100%;
}
.app-navigation__body--no-list[data-v-e8d5a9e1] {
  flex: 1 1 auto;
  overflow: auto;
  height: 100%;
}
.app-navigation__content[data-v-e8d5a9e1] {
  height: 100%;
  display: flex;
  flex-direction: column;
}
[data-themes*=highcontrast] .app-navigation[data-v-e8d5a9e1] {
  border-inline-end: 1px solid var(--color-border);
}
@media only screen and (max-width: 1024px) {
.app-navigation[data-v-e8d5a9e1] {
    position: absolute;
    border-inline-end: 1px solid var(--color-border);
}
}
@media only screen and (max-width: 512px) {
.app-navigation[data-v-e8d5a9e1] {
    z-index: 1400;
}
}/**
 * SPDX-FileCopyrightText: 2019 Nextcloud GmbH and Nextcloud contributors
 * SPDX-License-Identifier: AGPL-3.0-or-later
 */
/**
 * SPDX-FileCopyrightText: 2021 Nextcloud GmbH and Nextcloud contributors
 * SPDX-License-Identifier: AGPL-3.0-or-later
 */
/*
* Ensure proper alignment of the vue material icons
*/
.material-design-icon[data-v-058e6060] {
  display: flex;
  align-self: center;
  justify-self: center;
  align-items: center;
  justify-content: center;
}
.app-navigation-list[data-v-058e6060] {
  position: relative;
  width: 100%;
  overflow-x: hidden;
  overflow-y: auto;
  box-sizing: border-box;
  display: flex;
  flex-direction: column;
  gap: var(--default-grid-baseline, 4px);
  padding: var(--app-navigation-padding);
}/**
 * SPDX-FileCopyrightText: 2019 Nextcloud GmbH and Nextcloud contributors
 * SPDX-License-Identifier: AGPL-3.0-or-later
 */
/**
 * SPDX-FileCopyrightText: 2021 Nextcloud GmbH and Nextcloud contributors
 * SPDX-License-Identifier: AGPL-3.0-or-later
 */
/*
* Ensure proper alignment of the vue material icons
*/
.material-design-icon[data-v-f7da2749] {
  display: flex;
  align-self: center;
  justify-self: center;
  align-items: center;
  justify-content: center;
}
.app-navigation-toggle-wrapper[data-v-f7da2749] {
  position: absolute;
  top: var(--app-navigation-padding);
  inset-inline-end: calc(0px - var(--app-navigation-padding));
  margin-inline-end: calc(-1 * var(--default-clickable-area));
}
button.app-navigation-toggle[data-v-f7da2749] {
  background-color: var(--color-main-background);
}/**
 * SPDX-FileCopyrightText: 2019 Nextcloud GmbH and Nextcloud contributors
 * SPDX-License-Identifier: AGPL-3.0-or-later
 */
/**
 * SPDX-FileCopyrightText: 2021 Nextcloud GmbH and Nextcloud contributors
 * SPDX-License-Identifier: AGPL-3.0-or-later
 */
/*
* Ensure proper alignment of the vue material icons
*/
.material-design-icon[data-v-1133b4da] {
  display: flex;
  align-self: center;
  justify-self: center;
  align-items: center;
  justify-content: center;
}
.app-navigation-caption[data-v-1133b4da] {
  display: flex;
  justify-content: space-between;
}
.app-navigation-caption--heading[data-v-1133b4da] {
  padding: var(--app-navigation-padding);
}
.app-navigation-caption--heading[data-v-1133b4da]:not(:first-child):not(:last-child) {
  padding: 0 var(--app-navigation-padding);
}
.app-navigation-caption__name[data-v-1133b4da] {
  font-weight: bold;
  color: var(--color-main-text);
  font-size: var(--default-font-size);
  line-height: var(--default-clickable-area);
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  box-shadow: none !important;
  flex-shrink: 1;
  padding-block: 0;
  padding-inline: calc(var(--default-grid-baseline, 4px) * 2) 0;
  margin-top: 0px;
  margin-bottom: var(--default-grid-baseline);
}
.app-navigation-caption__actions[data-v-1133b4da] {
  flex: 0 0 var(--default-clickable-area);
}
.app-navigation-caption[data-v-1133b4da]:not(:first-child) {
  margin-top: calc(var(--default-clickable-area) / 2);
}/**
 * SPDX-FileCopyrightText: 2019 Nextcloud GmbH and Nextcloud contributors
 * SPDX-License-Identifier: AGPL-3.0-or-later
 */
/**
 * SPDX-FileCopyrightText: 2021 Nextcloud GmbH and Nextcloud contributors
 * SPDX-License-Identifier: AGPL-3.0-or-later
 */
/*
* Ensure proper alignment of the vue material icons
*/
.material-design-icon[data-v-938dadb1] {
  display: flex;
  align-self: center;
  justify-self: center;
  align-items: center;
  justify-content: center;
}
.app-navigation-entry__icon-bullet[data-v-938dadb1] {
  display: block;
  padding: calc((var(--default-clickable-area) - 16px) / 2 + 1px);
}
.app-navigation-entry__icon-bullet div[data-v-938dadb1] {
  width: 14px;
  height: 14px;
  cursor: pointer;
  transition: background 100ms ease-in-out;
  border: none;
  border-radius: 50%;
}/**
 * SPDX-FileCopyrightText: 2019 Nextcloud GmbH and Nextcloud contributors
 * SPDX-License-Identifier: AGPL-3.0-or-later
 */
/**
 * SPDX-FileCopyrightText: 2021 Nextcloud GmbH and Nextcloud contributors
 * SPDX-License-Identifier: AGPL-3.0-or-later
 */
/*
* Ensure proper alignment of the vue material icons
*/
.material-design-icon[data-v-607590bd] {
  display: flex;
  align-self: center;
  justify-self: center;
  align-items: center;
  justify-content: center;
}
.button-vue.icon-collapse[data-v-607590bd] {
  position: relative;
  z-index: 105;
  color: var(--color-main-text);
  inset-inline-end: 0;
}
.button-vue.icon-collapse--open[data-v-607590bd] {
  color: var(--color-main-text);
}
.button-vue.icon-collapse--open[data-v-607590bd]:hover {
  color: var(--color-primary-element);
}/**
 * SPDX-FileCopyrightText: 2019 Nextcloud GmbH and Nextcloud contributors
 * SPDX-License-Identifier: AGPL-3.0-or-later
 */
/**
 * SPDX-FileCopyrightText: 2021 Nextcloud GmbH and Nextcloud contributors
 * SPDX-License-Identifier: AGPL-3.0-or-later
 */
/*
* Ensure proper alignment of the vue material icons
*/
.material-design-icon[data-v-54906a49] {
  display: flex;
  align-self: center;
  justify-self: center;
  align-items: center;
  justify-content: center;
}

/**
 * SPDX-FileCopyrightText: 2023 Nextcloud GmbH and Nextcloud contributors
 * SPDX-License-Identifier: AGPL-3.0-or-later
 */
.app-navigation-entry[data-v-54906a49] {
  position: relative;
  display: flex;
  flex-shrink: 0;
  flex-wrap: wrap;
  box-sizing: border-box;
  width: 100%;
  min-height: var(--default-clickable-area);
  transition: background-color var(--animation-quick) ease-in-out;
  transition: background-color 200ms ease-in-out;
  border-radius: var(--border-radius-element, var(--border-radius-pill));
  /* hide deletion/collapse of subitems */
}
.app-navigation-entry-wrapper[data-v-54906a49] {
  position: relative;
  display: flex;
  flex-shrink: 0;
  flex-wrap: wrap;
  box-sizing: border-box;
  width: 100%;
}
.app-navigation-entry-wrapper.app-navigation-entry--collapsible:not(.app-navigation-entry--opened) > ul[data-v-54906a49] {
  display: none;
}
.app-navigation-entry.active[data-v-54906a49] {
  background-color: var(--color-primary-element) !important;
}
.app-navigation-entry.active[data-v-54906a49]:hover {
  background-color: var(--color-primary-element-hover) !important;
}
.app-navigation-entry.active .app-navigation-entry-link[data-v-54906a49], .app-navigation-entry.active .app-navigation-entry-button[data-v-54906a49] {
  color: var(--color-primary-element-text) !important;
}
.app-navigation-entry[data-v-54906a49]:focus-within, .app-navigation-entry[data-v-54906a49]:hover {
  background-color: var(--color-background-hover);
}
.app-navigation-entry.active .app-navigation-entry__children[data-v-54906a49], .app-navigation-entry:focus-within .app-navigation-entry__children[data-v-54906a49], .app-navigation-entry:hover .app-navigation-entry__children[data-v-54906a49] {
  background-color: var(--color-main-background);
}
.app-navigation-entry.active .app-navigation-entry__utils .app-navigation-entry__actions[data-v-54906a49], .app-navigation-entry.app-navigation-entry--deleted .app-navigation-entry__utils .app-navigation-entry__actions[data-v-54906a49], .app-navigation-entry:focus .app-navigation-entry__utils .app-navigation-entry__actions[data-v-54906a49], .app-navigation-entry:focus-within .app-navigation-entry__utils .app-navigation-entry__actions[data-v-54906a49], .app-navigation-entry:hover .app-navigation-entry__utils .app-navigation-entry__actions[data-v-54906a49] {
  display: inline-block;
}
.app-navigation-entry.app-navigation-entry--deleted > ul[data-v-54906a49] {
  display: none;
}
.app-navigation-entry:not(.app-navigation-entry--editing) .app-navigation-entry-link[data-v-54906a49], .app-navigation-entry:not(.app-navigation-entry--editing) .app-navigation-entry-button[data-v-54906a49] {
  padding-inline-end: calc((var(--default-clickable-area) - 16px) / 2);
}
.app-navigation-entry .app-navigation-entry-link[data-v-54906a49], .app-navigation-entry .app-navigation-entry-button[data-v-54906a49] {
  z-index: 100; /* above the bullet to allow click*/
  display: flex;
  overflow: hidden;
  flex: 1 1 0;
  box-sizing: border-box;
  min-height: var(--default-clickable-area);
  padding: 0;
  white-space: nowrap;
  color: var(--color-main-text);
  background-repeat: no-repeat;
  background-position: calc((var(--default-clickable-area) - 16px) / 2) center;
  background-size: 16px 16px;
  line-height: var(--default-clickable-area);
}
.app-navigation-entry .app-navigation-entry-link .app-navigation-entry-icon[data-v-54906a49], .app-navigation-entry .app-navigation-entry-button .app-navigation-entry-icon[data-v-54906a49] {
  display: flex;
  align-items: center;
  flex: 0 0 var(--default-clickable-area);
  justify-content: center;
  width: var(--default-clickable-area);
  height: var(--default-clickable-area);
  background-size: 16px 16px;
  background-repeat: no-repeat;
  background-position: calc((var(--default-clickable-area) - 16px) / 2) center;
}
.app-navigation-entry .app-navigation-entry-link .app-navigation-entry__name[data-v-54906a49], .app-navigation-entry .app-navigation-entry-button .app-navigation-entry__name[data-v-54906a49] {
  overflow: hidden;
  max-width: 100%;
  white-space: nowrap;
  text-overflow: ellipsis;
}
.app-navigation-entry .app-navigation-entry-link .editingContainer[data-v-54906a49], .app-navigation-entry .app-navigation-entry-button .editingContainer[data-v-54906a49] {
  width: calc(100% - var(--default-clickable-area));
  margin: auto;
}
.app-navigation-entry .app-navigation-entry-link[data-v-54906a49]:focus-visible, .app-navigation-entry .app-navigation-entry-button[data-v-54906a49]:focus-visible {
  box-shadow: 0 0 0 4px var(--color-main-background);
  outline: 2px solid var(--color-main-text);
  border-radius: var(--border-radius-element, var(--border-radius-pill));
}

/* Second level nesting for lists */
.app-navigation-entry__children[data-v-54906a49] {
  position: relative;
  display: flex;
  flex: 0 1 auto;
  flex-direction: column;
  width: 100%;
  gap: var(--default-grid-baseline, 4px);
}
.app-navigation-entry__children .app-navigation-entry[data-v-54906a49] {
  display: inline-flex;
  flex-wrap: wrap;
  padding-inline-start: 16px;
}

/* Deleted entries */
.app-navigation-entry__deleted[data-v-54906a49] {
  display: inline-flex;
  flex: 1 1 0;
  padding-inline-start: calc(var(--default-clickable-area) - (var(--default-clickable-area) - 16px) / 2) !important;
}
.app-navigation-entry__deleted .app-navigation-entry__deleted-description[data-v-54906a49] {
  position: relative;
  overflow: hidden;
  flex: 1 1 0;
  white-space: nowrap;
  text-overflow: ellipsis;
  line-height: var(--default-clickable-area);
}

/* counter and actions */
.app-navigation-entry__utils[data-v-54906a49] {
  display: flex;
  min-width: var(--default-clickable-area);
  align-items: center;
  flex: 0 1 auto;
  justify-content: flex-end;
  /* counter */
  /* actions */
}
.app-navigation-entry__utils.app-navigation-entry__utils--display-actions .action-item.app-navigation-entry__actions[data-v-54906a49] {
  display: inline-block;
}
.app-navigation-entry__utils .app-navigation-entry__counter-wrapper[data-v-54906a49] {
  margin-inline-end: calc(var(--default-grid-baseline) * 2);
  display: flex;
  align-items: center;
  flex: 0 1 auto;
}
.app-navigation-entry__utils .action-item.app-navigation-entry__actions[data-v-54906a49] {
  display: none;
}

/* editing state */
.app-navigation-entry--editing .app-navigation-entry-edit[data-v-54906a49] {
  z-index: 250;
  opacity: 1;
}

/* deleted state */
.app-navigation-entry--deleted .app-navigation-entry-deleted[data-v-54906a49] {
  z-index: 250;
  transform: translateX(0);
}

/* pinned state */
.app-navigation-entry--pinned[data-v-54906a49] {
  order: 2;
  margin-top: auto;
}
.app-navigation-entry--pinned ~ .app-navigation-entry--pinned[data-v-54906a49] {
  margin-top: 0;
}
[data-themes*=highcontrast] .app-navigation-entry[data-v-54906a49]:active {
  background-color: var(--color-primary-element-light-hover) !important;
}/**
 * SPDX-FileCopyrightText: 2019 Nextcloud GmbH and Nextcloud contributors
 * SPDX-License-Identifier: AGPL-3.0-or-later
 */
/**
 * SPDX-FileCopyrightText: 2021 Nextcloud GmbH and Nextcloud contributors
 * SPDX-License-Identifier: AGPL-3.0-or-later
 */
/*
* Ensure proper alignment of the vue material icons
*/
.material-design-icon[data-v-ac67c789] {
  display: flex;
  align-self: center;
  justify-self: center;
  align-items: center;
  justify-content: center;
}
.app-navigation-input-confirm[data-v-ac67c789] {
  flex: 1 0 100%;
  width: 100%;
}
.app-navigation-input-confirm form[data-v-ac67c789] {
  display: flex;
}
.app-navigation-input-confirm__input[data-v-ac67c789] {
  height: 34px;
  flex: 1 1 100%;
  font-size: 100% !important;
  margin: 5px !important;
  margin-left: -8px !important;
  padding: 7px !important;
}
.app-navigation-input-confirm__input[data-v-ac67c789]:active, .app-navigation-input-confirm__input[data-v-ac67c789]:focus, .app-navigation-input-confirm__input[data-v-ac67c789]:hover {
  outline: none;
  background-color: var(--color-main-background);
  color: var(--color-main-text);
  border-color: var(--color-primary-element);
}/**
 * SPDX-FileCopyrightText: 2019 Nextcloud GmbH and Nextcloud contributors
 * SPDX-License-Identifier: AGPL-3.0-or-later
 */
/**
 * SPDX-FileCopyrightText: 2021 Nextcloud GmbH and Nextcloud contributors
 * SPDX-License-Identifier: AGPL-3.0-or-later
 */
/*
* Ensure proper alignment of the vue material icons
*/
.material-design-icon[data-v-0b3c495c] {
  display: flex;
  align-self: center;
  justify-self: center;
  align-items: center;
  justify-content: center;
}

/* 'New' button */
.app-navigation-new[data-v-0b3c495c] {
  display: block;
  padding: calc(var(--default-grid-baseline, 4px) * 2);
}
.app-navigation-new button[data-v-0b3c495c] {
  width: 100%;
}/**
 * SPDX-FileCopyrightText: 2019 Nextcloud GmbH and Nextcloud contributors
 * SPDX-License-Identifier: AGPL-3.0-or-later
 */
/**
 * SPDX-FileCopyrightText: 2021 Nextcloud GmbH and Nextcloud contributors
 * SPDX-License-Identifier: AGPL-3.0-or-later
 */
/*
* Ensure proper alignment of the vue material icons
*/
.material-design-icon[data-v-46fee9ac] {
  display: flex;
  align-self: center;
  justify-self: center;
  align-items: center;
  justify-content: center;
}

/**
 * SPDX-FileCopyrightText: 2023 Nextcloud GmbH and Nextcloud contributors
 * SPDX-License-Identifier: AGPL-3.0-or-later
 */
.app-navigation-entry[data-v-46fee9ac] {
  position: relative;
  display: flex;
  flex-shrink: 0;
  flex-wrap: wrap;
  box-sizing: border-box;
  width: 100%;
  min-height: var(--default-clickable-area);
  transition: background-color var(--animation-quick) ease-in-out;
  transition: background-color 200ms ease-in-out;
  border-radius: var(--border-radius-element, var(--border-radius-pill));
  /* hide deletion/collapse of subitems */
}
.app-navigation-entry-wrapper[data-v-46fee9ac] {
  position: relative;
  display: flex;
  flex-shrink: 0;
  flex-wrap: wrap;
  box-sizing: border-box;
  width: 100%;
}
.app-navigation-entry-wrapper.app-navigation-entry--collapsible:not(.app-navigation-entry--opened) > ul[data-v-46fee9ac] {
  display: none;
}
.app-navigation-entry.active[data-v-46fee9ac] {
  background-color: var(--color-primary-element) !important;
}
.app-navigation-entry.active[data-v-46fee9ac]:hover {
  background-color: var(--color-primary-element-hover) !important;
}
.app-navigation-entry.active .app-navigation-entry-link[data-v-46fee9ac], .app-navigation-entry.active .app-navigation-entry-button[data-v-46fee9ac] {
  color: var(--color-primary-element-text) !important;
}
.app-navigation-entry[data-v-46fee9ac]:focus-within, .app-navigation-entry[data-v-46fee9ac]:hover {
  background-color: var(--color-background-hover);
}
.app-navigation-entry.active .app-navigation-entry__children[data-v-46fee9ac], .app-navigation-entry:focus-within .app-navigation-entry__children[data-v-46fee9ac], .app-navigation-entry:hover .app-navigation-entry__children[data-v-46fee9ac] {
  background-color: var(--color-main-background);
}
.app-navigation-entry.active .app-navigation-entry__utils .app-navigation-entry__actions[data-v-46fee9ac], .app-navigation-entry.app-navigation-entry--deleted .app-navigation-entry__utils .app-navigation-entry__actions[data-v-46fee9ac], .app-navigation-entry:focus .app-navigation-entry__utils .app-navigation-entry__actions[data-v-46fee9ac], .app-navigation-entry:focus-within .app-navigation-entry__utils .app-navigation-entry__actions[data-v-46fee9ac], .app-navigation-entry:hover .app-navigation-entry__utils .app-navigation-entry__actions[data-v-46fee9ac] {
  display: inline-block;
}
.app-navigation-entry.app-navigation-entry--deleted > ul[data-v-46fee9ac] {
  display: none;
}
.app-navigation-entry:not(.app-navigation-entry--editing) .app-navigation-entry-link[data-v-46fee9ac], .app-navigation-entry:not(.app-navigation-entry--editing) .app-navigation-entry-button[data-v-46fee9ac] {
  padding-inline-end: calc((var(--default-clickable-area) - 16px) / 2);
}
.app-navigation-entry .app-navigation-entry-link[data-v-46fee9ac], .app-navigation-entry .app-navigation-entry-button[data-v-46fee9ac] {
  z-index: 100; /* above the bullet to allow click*/
  display: flex;
  overflow: hidden;
  flex: 1 1 0;
  box-sizing: border-box;
  min-height: var(--default-clickable-area);
  padding: 0;
  white-space: nowrap;
  color: var(--color-main-text);
  background-repeat: no-repeat;
  background-position: calc((var(--default-clickable-area) - 16px) / 2) center;
  background-size: 16px 16px;
  line-height: var(--default-clickable-area);
}
.app-navigation-entry .app-navigation-entry-link .app-navigation-entry-icon[data-v-46fee9ac], .app-navigation-entry .app-navigation-entry-button .app-navigation-entry-icon[data-v-46fee9ac] {
  display: flex;
  align-items: center;
  flex: 0 0 var(--default-clickable-area);
  justify-content: center;
  width: var(--default-clickable-area);
  height: var(--default-clickable-area);
  background-size: 16px 16px;
  background-repeat: no-repeat;
  background-position: calc((var(--default-clickable-area) - 16px) / 2) center;
}
.app-navigation-entry .app-navigation-entry-link .app-navigation-entry__name[data-v-46fee9ac], .app-navigation-entry .app-navigation-entry-button .app-navigation-entry__name[data-v-46fee9ac] {
  overflow: hidden;
  max-width: 100%;
  white-space: nowrap;
  text-overflow: ellipsis;
}
.app-navigation-entry .app-navigation-entry-link .editingContainer[data-v-46fee9ac], .app-navigation-entry .app-navigation-entry-button .editingContainer[data-v-46fee9ac] {
  width: calc(100% - var(--default-clickable-area));
  margin: auto;
}
.app-navigation-entry .app-navigation-entry-link[data-v-46fee9ac]:focus-visible, .app-navigation-entry .app-navigation-entry-button[data-v-46fee9ac]:focus-visible {
  box-shadow: 0 0 0 4px var(--color-main-background);
  outline: 2px solid var(--color-main-text);
  border-radius: var(--border-radius-element, var(--border-radius-pill));
}

/* Second level nesting for lists */
.app-navigation-entry__children[data-v-46fee9ac] {
  position: relative;
  display: flex;
  flex: 0 1 auto;
  flex-direction: column;
  width: 100%;
  gap: var(--default-grid-baseline, 4px);
}
.app-navigation-entry__children .app-navigation-entry[data-v-46fee9ac] {
  display: inline-flex;
  flex-wrap: wrap;
  padding-inline-start: 16px;
}

/* Deleted entries */
.app-navigation-entry__deleted[data-v-46fee9ac] {
  display: inline-flex;
  flex: 1 1 0;
  padding-inline-start: calc(var(--default-clickable-area) - (var(--default-clickable-area) - 16px) / 2) !important;
}
.app-navigation-entry__deleted .app-navigation-entry__deleted-description[data-v-46fee9ac] {
  position: relative;
  overflow: hidden;
  flex: 1 1 0;
  white-space: nowrap;
  text-overflow: ellipsis;
  line-height: var(--default-clickable-area);
}

/* counter and actions */
.app-navigation-entry__utils[data-v-46fee9ac] {
  display: flex;
  min-width: var(--default-clickable-area);
  align-items: center;
  flex: 0 1 auto;
  justify-content: flex-end;
  /* counter */
  /* actions */
}
.app-navigation-entry__utils.app-navigation-entry__utils--display-actions .action-item.app-navigation-entry__actions[data-v-46fee9ac] {
  display: inline-block;
}
.app-navigation-entry__utils .app-navigation-entry__counter-wrapper[data-v-46fee9ac] {
  margin-inline-end: calc(var(--default-grid-baseline) * 2);
  display: flex;
  align-items: center;
  flex: 0 1 auto;
}
.app-navigation-entry__utils .action-item.app-navigation-entry__actions[data-v-46fee9ac] {
  display: none;
}

/* editing state */
.app-navigation-entry--editing .app-navigation-entry-edit[data-v-46fee9ac] {
  z-index: 250;
  opacity: 1;
}

/* deleted state */
.app-navigation-entry--deleted .app-navigation-entry-deleted[data-v-46fee9ac] {
  z-index: 250;
  transform: translateX(0);
}

/* pinned state */
.app-navigation-entry--pinned[data-v-46fee9ac] {
  order: 2;
  margin-top: auto;
}
.app-navigation-entry--pinned ~ .app-navigation-entry--pinned[data-v-46fee9ac] {
  margin-top: 0;
}
[data-themes*=highcontrast] .app-navigation-entry[data-v-46fee9ac]:active {
  background-color: var(--color-primary-element-light-hover) !important;
}
.app-navigation-new-item__name[data-v-46fee9ac] {
  overflow: hidden;
  max-width: 100%;
  white-space: nowrap;
  text-overflow: ellipsis;
  padding-inline-start: 7px;
  font-size: 14px;
}
.newItemContainer[data-v-46fee9ac] {
  width: calc(100% - var(--default-clickable-area));
  margin: auto;
}/**
 * SPDX-FileCopyrightText: 2019 Nextcloud GmbH and Nextcloud contributors
 * SPDX-License-Identifier: AGPL-3.0-or-later
 */
/**
 * SPDX-FileCopyrightText: 2021 Nextcloud GmbH and Nextcloud contributors
 * SPDX-License-Identifier: AGPL-3.0-or-later
 */
/*
* Ensure proper alignment of the vue material icons
*/
.material-design-icon[data-v-6fcd64e7] {
  display: flex;
  align-self: center;
  justify-self: center;
  align-items: center;
  justify-content: center;
}
.app-navigation-search[data-v-6fcd64e7] {
  display: flex;
  gap: var(--app-navigation-padding);
  padding: var(--app-navigation-padding);
}
.app-navigation-search--has-actions .app-navigation-search__input[data-v-6fcd64e7] {
  flex-grow: 1;
  z-index: 3;
}
.app-navigation-search__actions[data-v-6fcd64e7] {
  display: flex;
  gap: var(--default-grid-baseline);
  margin-inline-start: 0;
  max-width: calc(2 * var(--default-clickable-area) + var(--default-grid-baseline));
  max-height: var(--default-clickable-area);
  transition: margin-inline-start var(--animation-quick);
}
.app-navigation-search__actions--hidden[data-v-6fcd64e7] {
  margin-inline-start: calc(-1 * var(--default-clickable-area));
}
.app-navigation-search__input[data-v-6fcd64e7] {
  --input-border-radius: var(--border-radius-element, var(--border-radius-pill)) !important;
}/**
 * SPDX-FileCopyrightText: 2019 Nextcloud GmbH and Nextcloud contributors
 * SPDX-License-Identifier: AGPL-3.0-or-later
 */
/**
 * SPDX-FileCopyrightText: 2021 Nextcloud GmbH and Nextcloud contributors
 * SPDX-License-Identifier: AGPL-3.0-or-later
 */
/*
* Ensure proper alignment of the vue material icons
*/
.material-design-icon[data-v-d278a327] {
  display: flex;
  align-self: center;
  justify-self: center;
  align-items: center;
  justify-content: center;
}
#app-settings[data-v-d278a327] {
  margin-top: auto;
  padding: 3px;
}
#app-settings__header[data-v-d278a327] {
  box-sizing: border-box;
  margin: 0 3px 3px 3px;
}
#app-settings__header .settings-button[data-v-d278a327] {
  display: flex;
  flex: 1 1 0;
  height: var(--default-clickable-area);
  width: 100%;
  padding: 0;
  margin: 0;
  background-color: transparent;
  box-shadow: none;
  border: 0;
  border-radius: var(--body-container-radius);
  text-align: start;
  font-weight: normal;
  font-size: 100%;
  color: var(--color-main-text);
  padding-inline-end: 14px;
  line-height: var(--default-clickable-area);
}
#app-settings__header .settings-button[data-v-d278a327]:hover, #app-settings__header .settings-button[data-v-d278a327]:focus {
  background-color: var(--color-background-hover);
}
#app-settings__header .settings-button__icon[data-v-d278a327] {
  width: var(--default-clickable-area);
  height: var(--default-clickable-area);
  min-width: var(--default-clickable-area);
}
#app-settings__header .settings-button__label[data-v-d278a327] {
  overflow: hidden;
  max-width: 100%;
  white-space: nowrap;
  text-overflow: ellipsis;
}
#app-settings__content[data-v-d278a327] {
  display: block;
  padding: 10px;
  /* prevent scrolled contents from stopping too early */
  margin-bottom: -3px;
  /* restrict height of settings and make scrollable */
  max-height: 300px;
  overflow-y: auto;
  box-sizing: border-box;
}
.slide-up-leave-active[data-v-d278a327],
.slide-up-enter-active[data-v-d278a327] {
  transition-duration: var(--animation-slow);
  transition-property: max-height, padding;
  overflow-y: hidden !important;
}
.slide-up-enter[data-v-d278a327],
.slide-up-leave-to[data-v-d278a327] {
  max-height: 0 !important;
  padding: 0 10px !important;
}
.app-navigation-spacer[data-v-b699c557] {
	flex-shrink: 0;
	height: 22px;
}

/**
 * SPDX-FileCopyrightText: 2019 Nextcloud GmbH and Nextcloud contributors
 * SPDX-License-Identifier: AGPL-3.0-or-later
 */
/**
 * SPDX-FileCopyrightText: 2021 Nextcloud GmbH and Nextcloud contributors
 * SPDX-License-Identifier: AGPL-3.0-or-later
 */
/*
* Ensure proper alignment of the vue material icons
*/
.material-design-icon[data-v-0674bd2e] {
  display: flex;
  align-self: center;
  justify-self: center;
  align-items: center;
  justify-content: center;
}
[data-v-0674bd2e] .app-settings__navigation {
  min-width: 200px;
  margin-right: calc(4 * var(--default-grid-baseline));
  overflow-x: hidden;
  overflow-y: auto;
  position: relative;
}
[data-v-0674bd2e] .app-settings__content {
  box-sizing: border-box;
  padding-inline: calc(4 * var(--default-grid-baseline));
}
.navigation-list[data-v-0674bd2e] {
  height: 100%;
  box-sizing: border-box;
  overflow-y: auto;
  padding: calc(3 * var(--default-grid-baseline));
}
.navigation-list__link[data-v-0674bd2e] {
  display: flex;
  align-content: center;
  font-size: 16px;
  height: var(--default-clickable-area);
  margin: 4px 0;
  line-height: var(--default-clickable-area);
  border-radius: var(--border-radius-element, var(--border-radius-pill));
  font-weight: bold;
  padding: 0 calc(4 * var(--default-grid-baseline));
  cursor: pointer;
  white-space: nowrap;
  text-overflow: ellipsis;
  overflow: hidden;
  background-color: transparent;
  border: none;
}
.navigation-list__link[data-v-0674bd2e]:hover, .navigation-list__link[data-v-0674bd2e]:focus {
  background-color: var(--color-background-hover);
}
.navigation-list__link--active[data-v-0674bd2e] {
  background-color: var(--color-primary-element-light) !important;
}
.navigation-list__link--icon[data-v-0674bd2e] {
  padding-inline-start: calc(2 * var(--default-grid-baseline));
  gap: var(--default-grid-baseline);
}
.navigation-list__link-icon[data-v-0674bd2e] {
  display: flex;
  justify-content: center;
  align-content: center;
  width: calc(var(--default-clickable-area) - 2 * var(--default-grid-baseline));
  max-width: calc(var(--default-clickable-area) - 2 * var(--default-grid-baseline));
}
@media only screen and (max-width: 512px) {
.app-settings[data-v-0674bd2e] .dialog__name {
    padding-inline-start: 16px;
}
}/**
 * SPDX-FileCopyrightText: 2019 Nextcloud GmbH and Nextcloud contributors
 * SPDX-License-Identifier: AGPL-3.0-or-later
 */
/**
 * SPDX-FileCopyrightText: 2021 Nextcloud GmbH and Nextcloud contributors
 * SPDX-License-Identifier: AGPL-3.0-or-later
 */
/*
* Ensure proper alignment of the vue material icons
*/
.material-design-icon[data-v-e970c9f7] {
  display: flex;
  align-self: center;
  justify-self: center;
  align-items: center;
  justify-content: center;
}
.app-settings-section[data-v-e970c9f7] {
  margin-bottom: 80px;
}
.app-settings-section__name[data-v-e970c9f7] {
  font-size: 1.6em;
  margin: 0;
  padding: 20px 0;
  font-weight: bold;
  overflow: hidden;
  white-space: nowrap;
  text-overflow: ellipsis;
}/**
 * SPDX-FileCopyrightText: 2019 Nextcloud GmbH and Nextcloud contributors
 * SPDX-License-Identifier: AGPL-3.0-or-later
 */
/**
 * SPDX-FileCopyrightText: 2021 Nextcloud GmbH and Nextcloud contributors
 * SPDX-License-Identifier: AGPL-3.0-or-later
 */
/*
* Ensure proper alignment of the vue material icons
*/
.material-design-icon[data-v-d9f30f05] {
  display: flex;
  align-self: center;
  justify-self: center;
  align-items: center;
  justify-content: center;
}
.app-sidebar-tabs[data-v-d9f30f05] {
  display: flex;
  flex-direction: column;
  min-height: 0;
  flex: 1 1 100%;
}
.app-sidebar-tabs__nav[data-v-d9f30f05] {
  display: flex;
  justify-content: stretch;
  margin: 10px 8px 0 8px;
  border-bottom: 1px solid var(--color-border);
}
.app-sidebar-tabs__nav[data-v-d9f30f05] .checkbox-radio-switch--button-variant {
  border: unset !important;
  border-radius: 0 !important;
}
.app-sidebar-tabs__nav[data-v-d9f30f05] .checkbox-radio-switch--button-variant .checkbox-content {
  padding: var(--default-grid-baseline);
  border-radius: var(--default-grid-baseline) var(--default-grid-baseline) 0 0 !important;
  margin: 0 !important;
  border-bottom: var(--default-grid-baseline) solid transparent !important;
}
.app-sidebar-tabs__nav[data-v-d9f30f05] .checkbox-radio-switch--button-variant .checkbox-content .checkbox-content__icon > * {
  color: var(--color-main-text) !important;
}
.app-sidebar-tabs__nav[data-v-d9f30f05] .checkbox-radio-switch--button-variant.checkbox-radio-switch--checked .checkbox-radio-switch__content {
  background: transparent !important;
  color: var(--color-main-text) !important;
  border-bottom: var(--default-grid-baseline) solid var(--color-primary-element) !important;
}
.app-sidebar-tabs__tab[data-v-d9f30f05] {
  flex: 1 1;
}
.app-sidebar-tabs__tab.active[data-v-d9f30f05] {
  color: var(--color-primary-element);
}
.app-sidebar-tabs__tab-caption[data-v-d9f30f05] {
  flex: 0 1 100%;
  width: 100%;
  overflow: hidden;
  white-space: nowrap;
  text-overflow: ellipsis;
  text-align: center;
}
.app-sidebar-tabs__tab-icon[data-v-d9f30f05] {
  display: flex;
  align-items: center;
  justify-content: center;
  background-size: 20px;
}
.app-sidebar-tabs__tab[data-v-d9f30f05] .checkbox-radio-switch__content {
  max-width: unset;
}
.app-sidebar-tabs__content[data-v-d9f30f05] {
  position: relative;
  min-height: 256px;
  height: 100%;
}
.app-sidebar-tabs__content--multiple[data-v-d9f30f05] > :not(section) {
  display: none;
}/**
 * SPDX-FileCopyrightText: 2019 Nextcloud GmbH and Nextcloud contributors
 * SPDX-License-Identifier: AGPL-3.0-or-later
 */
/**
 * SPDX-FileCopyrightText: 2021 Nextcloud GmbH and Nextcloud contributors
 * SPDX-License-Identifier: AGPL-3.0-or-later
 */
/*
* Ensure proper alignment of the vue material icons
*/
.material-design-icon {
  display: flex;
  align-self: center;
  justify-self: center;
  align-items: center;
  justify-content: center;
}
@property --app-sidebar-offset {
  syntax: "<length>";
  initial-value: 0;
  inherits: true;
}
.content {
  --app-sidebar-padding: calc(var(--default-grid-baseline, 4px) * 2);
  --app-sidebar-offset: 0;
  transition: --app-sidebar-offset 0ms !important;
}
.content:has(.app-sidebar.slide-right-enter-active),
.content:has(.app-sidebar.slide-right-leave-active) {
  transition: --app-sidebar-offset var(--animation-quick);
}
.content:has(.app-sidebar__toggle) {
  --app-sidebar-offset: calc(var(--app-sidebar-padding) + var(--default-clickable-area));
}/**
 * SPDX-FileCopyrightText: 2019 Nextcloud GmbH and Nextcloud contributors
 * SPDX-License-Identifier: AGPL-3.0-or-later
 */
/**
 * SPDX-FileCopyrightText: 2021 Nextcloud GmbH and Nextcloud contributors
 * SPDX-License-Identifier: AGPL-3.0-or-later
 */
/*
* Ensure proper alignment of the vue material icons
*/
.material-design-icon[data-v-d114a7f1] {
  display: flex;
  align-self: center;
  justify-self: center;
  align-items: center;
  justify-content: center;
}

/*
	Sidebar: to be used within #content
	app-content will be shrinked properly
*/
.app-sidebar[data-v-d114a7f1] {
  --app-sidebar-width: clamp(300px, 27vw, 500px);
  width: var(--app-sidebar-width);
  z-index: 1500;
  top: 0;
  inset-inline-end: 0;
  display: flex;
  overflow-x: hidden;
  overflow-y: auto;
  flex-direction: column;
  flex-shrink: 0;
  height: 100%;
  border-inline-start: 1px solid var(--color-border);
  background: var(--color-main-background);
  position: relative;
}
.app-sidebar__toggle[data-v-d114a7f1] {
  position: absolute !important;
  inset-block-start: var(--app-sidebar-padding);
  inset-inline-end: var(--app-sidebar-padding);
  z-index: 1001;
}
.app-sidebar .app-sidebar-header[data-v-d114a7f1] {
  --app-sidebar-close-button-offset: calc(var(--default-clickable-area) + calc(var(--default-grid-baseline, 4px) * 2));
}
.app-sidebar .app-sidebar-header > .app-sidebar__close[data-v-d114a7f1] {
  position: absolute;
  z-index: 100;
  top: calc(var(--default-grid-baseline, 4px) * 2);
  inset-inline-end: calc(var(--default-grid-baseline, 4px) * 2);
  width: var(--default-clickable-area);
  height: var(--default-clickable-area);
  opacity: 0.7;
  border-radius: calc(var(--default-clickable-area) / 2);
}
.app-sidebar .app-sidebar-header > .app-sidebar__close[data-v-d114a7f1]:hover, .app-sidebar .app-sidebar-header > .app-sidebar__close[data-v-d114a7f1]:active, .app-sidebar .app-sidebar-header > .app-sidebar__close[data-v-d114a7f1]:focus {
  opacity: 1;
  background-color: rgba(127, 127, 127, 0.25);
}
.app-sidebar .app-sidebar-header--compact.app-sidebar-header--with-figure .app-sidebar-header__info[data-v-d114a7f1] {
  flex-direction: row;
}
.app-sidebar .app-sidebar-header--compact.app-sidebar-header--with-figure .app-sidebar-header__info .app-sidebar-header__figure[data-v-d114a7f1] {
  --figure-size: calc($desc-height + var(--app-sidebar-padding));
  z-index: 2;
  width: var(--figure-size);
  height: var(--figure-size);
  margin: calc(var(--app-sidebar-padding) / 2);
  border-radius: 3px;
  flex: 0 0 auto;
}
.app-sidebar .app-sidebar-header--compact.app-sidebar-header--with-figure .app-sidebar-header__info .app-sidebar-header__desc[data-v-d114a7f1] {
  padding-inline-start: 0;
  flex: 1 1 auto;
  min-width: 0;
  padding-inline-end: calc(var(--default-clickable-area) + var(--app-sidebar-close-button-offset));
  padding-top: var(--app-sidebar-padding);
}
.app-sidebar .app-sidebar-header--compact.app-sidebar-header--with-figure .app-sidebar-header__info .app-sidebar-header__desc.app-sidebar-header__desc--without-actions[data-v-d114a7f1] {
  padding-inline-end: var(--app-sidebar-close-button-offset);
}
.app-sidebar .app-sidebar-header--compact.app-sidebar-header--with-figure .app-sidebar-header__info .app-sidebar-header__desc .app-sidebar-header__tertiary-actions[data-v-d114a7f1] {
  z-index: 3;
  position: absolute;
  top: calc(var(--app-sidebar-padding) / 2);
  inset-inline-start: calc(-1 * var(--default-clickable-area));
  gap: 0;
}
.app-sidebar .app-sidebar-header--compact.app-sidebar-header--with-figure .app-sidebar-header__info .app-sidebar-header__desc .app-sidebar-header__menu[data-v-d114a7f1] {
  top: calc(var(--default-grid-baseline, 4px) * 2);
  inset-inline-end: var(--app-sidebar-close-button-offset);
  position: absolute;
}
.app-sidebar .app-sidebar-header:not(.app-sidebar-header--with-figure) .app-sidebar-header__menu[data-v-d114a7f1] {
  position: absolute;
  top: calc(var(--default-grid-baseline, 4px) * 2);
  inset-inline-end: var(--app-sidebar-close-button-offset);
}
.app-sidebar .app-sidebar-header:not(.app-sidebar-header--with-figure) .app-sidebar-header__desc[data-v-d114a7f1] {
  padding-inline-end: calc(var(--default-clickable-area) + var(--app-sidebar-close-button-offset));
}
.app-sidebar .app-sidebar-header:not(.app-sidebar-header--with-figure) .app-sidebar-header__desc.app-sidebar-header__desc--without-actions[data-v-d114a7f1] {
  padding-inline-end: var(--app-sidebar-close-button-offset);
}
.app-sidebar .app-sidebar-header .app-sidebar-header__info[data-v-d114a7f1] {
  display: flex;
  flex-direction: column;
}
.app-sidebar .app-sidebar-header__figure[data-v-d114a7f1] {
  width: 100%;
  height: 250px;
  max-height: 250px;
  background-repeat: no-repeat;
  background-position: center;
  background-size: contain;
}
.app-sidebar .app-sidebar-header__figure--with-action[data-v-d114a7f1] {
  cursor: pointer;
}
.app-sidebar .app-sidebar-header__desc[data-v-d114a7f1] {
  position: relative;
  display: flex;
  flex-direction: row;
  justify-content: center;
  align-items: center;
  padding-inline: var(--app-sidebar-padding);
  padding-block: calc(var(--default-grid-baseline, 4px) * 2) calc(var(--app-sidebar-padding) / 2);
  gap: 0 4px;
}
.app-sidebar .app-sidebar-header__desc--with-tertiary-action[data-v-d114a7f1] {
  padding-inline-start: 6px;
}
.app-sidebar .app-sidebar-header__desc--editable .app-sidebar-header__mainname-form[data-v-d114a7f1], .app-sidebar .app-sidebar-header__desc--with-subname--editable .app-sidebar-header__mainname-form[data-v-d114a7f1] {
  margin-top: -2px;
  margin-bottom: -2px;
}
.app-sidebar .app-sidebar-header__desc--with-subname--editable .app-sidebar-header__subname[data-v-d114a7f1] {
  margin-top: -2px;
}
.app-sidebar .app-sidebar-header__desc .app-sidebar-header__tertiary-actions[data-v-d114a7f1] {
  display: flex;
  height: var(--default-clickable-area);
  width: var(--default-clickable-area);
  justify-content: center;
  flex: 0 0 auto;
}
.app-sidebar .app-sidebar-header__desc .app-sidebar-header__tertiary-actions .app-sidebar-header__star[data-v-d114a7f1] {
  box-shadow: none;
}
.app-sidebar .app-sidebar-header__desc .app-sidebar-header__tertiary-actions .app-sidebar-header__star[data-v-d114a7f1]:not([aria-pressed=true]):hover {
  box-shadow: none;
  background-color: var(--color-background-hover);
}
.app-sidebar .app-sidebar-header__desc .app-sidebar-header__name-container[data-v-d114a7f1] {
  flex: 1 1 auto;
  display: flex;
  flex-direction: column;
  justify-content: center;
  min-width: 0;
}
.app-sidebar .app-sidebar-header__desc .app-sidebar-header__name-container .app-sidebar-header__mainname-container[data-v-d114a7f1] {
  display: flex;
  align-items: center;
  min-height: var(--default-clickable-area);
}
.app-sidebar .app-sidebar-header__desc .app-sidebar-header__name-container .app-sidebar-header__mainname-container .app-sidebar-header__mainname[data-v-d114a7f1] {
  padding: 0;
  min-height: 30px;
  font-size: 20px;
  line-height: 30px;
}
.app-sidebar .app-sidebar-header__desc .app-sidebar-header__name-container .app-sidebar-header__mainname-container .app-sidebar-header__mainname[data-v-d114a7f1] .linkified {
  cursor: pointer;
  text-decoration: underline;
  margin: 0;
}
.app-sidebar .app-sidebar-header__desc .app-sidebar-header__name-container .app-sidebar-header__mainname-container .app-sidebar-header__mainname-form[data-v-d114a7f1] {
  display: flex;
  flex: 1 1 auto;
  align-items: center;
}
.app-sidebar .app-sidebar-header__desc .app-sidebar-header__name-container .app-sidebar-header__mainname-container .app-sidebar-header__mainname-form input.app-sidebar-header__mainname-input[data-v-d114a7f1] {
  flex: 1 1 auto;
  margin: 0;
  padding: 7px;
  font-size: 20px;
  font-weight: bold;
}
.app-sidebar .app-sidebar-header__desc .app-sidebar-header__name-container .app-sidebar-header__mainname-container .app-sidebar-header__menu[data-v-d114a7f1] {
  margin-inline-start: 5px;
}
.app-sidebar .app-sidebar-header__desc .app-sidebar-header__name-container .app-sidebar-header__mainname[data-v-d114a7f1],
.app-sidebar .app-sidebar-header__desc .app-sidebar-header__name-container .app-sidebar-header__subname[data-v-d114a7f1] {
  overflow: hidden;
  width: 100%;
  margin: 0;
  white-space: nowrap;
  text-overflow: ellipsis;
}
.app-sidebar .app-sidebar-header__desc .app-sidebar-header__name-container .app-sidebar-header__subname[data-v-d114a7f1] {
  color: var(--color-text-maxcontrast);
  font-size: var(--default-font-size);
  padding: 0;
}
.app-sidebar .app-sidebar-header__desc .app-sidebar-header__name-container .app-sidebar-header__subname *[data-v-d114a7f1] {
  vertical-align: text-bottom;
}
.app-sidebar .app-sidebar-header .app-sidebar-header__mainname--hidden[data-v-d114a7f1] {
  position: absolute;
  top: 0;
  inset-inline-start: 0;
  margin: 0;
  width: 1px;
  height: 1px;
  overflow: hidden;
}
.app-sidebar .app-sidebar-header__description[data-v-d114a7f1] {
  display: flex;
  align-items: center;
  margin: 0 10px;
}
@media only screen and (max-width: 512px) {
.app-sidebar[data-v-d114a7f1] {
    position: absolute;
    --app-sidebar-width: 100vw;
}
}
.slide-right-leave-active[data-v-d114a7f1],
.slide-right-enter-active[data-v-d114a7f1] {
  transition-duration: var(--animation-quick);
  transition-property: margin-inline-end;
}
.slide-right-enter-to[data-v-d114a7f1],
.slide-right-leave[data-v-d114a7f1] {
  margin-inline-end: 0;
}
.slide-right-enter[data-v-d114a7f1],
.slide-right-leave-to[data-v-d114a7f1] {
  margin-inline-end: calc(-1 * var(--app-sidebar-width));
}/**
 * SPDX-FileCopyrightText: 2019 Nextcloud GmbH and Nextcloud contributors
 * SPDX-License-Identifier: AGPL-3.0-or-later
 */
/**
 * SPDX-FileCopyrightText: 2021 Nextcloud GmbH and Nextcloud contributors
 * SPDX-License-Identifier: AGPL-3.0-or-later
 */
/*
* Ensure proper alignment of the vue material icons
*/
.material-design-icon {
  display: flex;
  align-self: center;
  justify-self: center;
  align-items: center;
  justify-content: center;
}
.app-sidebar-header__description button, .app-sidebar-header__description .button,
.app-sidebar-header__description input[type=button],
.app-sidebar-header__description input[type=submit],
.app-sidebar-header__description input[type=reset] {
  padding: 6px 22px;
}/**
 * SPDX-FileCopyrightText: 2019 Nextcloud GmbH and Nextcloud contributors
 * SPDX-License-Identifier: AGPL-3.0-or-later
 */
/**
 * SPDX-FileCopyrightText: 2021 Nextcloud GmbH and Nextcloud contributors
 * SPDX-License-Identifier: AGPL-3.0-or-later
 */
/*
* Ensure proper alignment of the vue material icons
*/
.material-design-icon[data-v-18de8bed] {
  display: flex;
  align-self: center;
  justify-self: center;
  align-items: center;
  justify-content: center;
}
.checkbox-content[data-v-18de8bed] {
  display: flex;
  align-items: center;
  flex-direction: row;
  gap: var(--default-grid-baseline);
  user-select: none;
  min-height: var(--default-clickable-area);
  border-radius: var(--checkbox-radio-switch--border-radius);
  padding: var(--default-grid-baseline) calc((var(--default-clickable-area) - var(--icon-height)) / 2);
  width: 100%;
  max-width: fit-content;
}
.checkbox-content__text[data-v-18de8bed] {
  flex: 1 0;
}
.checkbox-content__text[data-v-18de8bed]:empty {
  display: none;
}
.checkbox-content__icon > *[data-v-18de8bed] {
  width: var(--icon-size);
  height: var(--icon-size);
  color: var(--color-primary-element);
}
.checkbox-content--button-variant .checkbox-content__icon:not(.checkbox-content__icon--checked) > *[data-v-18de8bed] {
  color: var(--color-primary-element);
}
.checkbox-content--button-variant .checkbox-content__icon--checked > *[data-v-18de8bed] {
  color: var(--color-primary-element-text);
}
.checkbox-content--has-text[data-v-18de8bed] {
  padding-right: calc((var(--default-clickable-area) - 16px) / 2);
}
.checkbox-content[data-v-18de8bed], .checkbox-content *[data-v-18de8bed] {
  cursor: pointer;
  flex-shrink: 0;
}/**
 * SPDX-FileCopyrightText: 2019 Nextcloud GmbH and Nextcloud contributors
 * SPDX-License-Identifier: AGPL-3.0-or-later
 */
/**
 * SPDX-FileCopyrightText: 2021 Nextcloud GmbH and Nextcloud contributors
 * SPDX-License-Identifier: AGPL-3.0-or-later
 */
/*
* Ensure proper alignment of the vue material icons
*/
.material-design-icon[data-v-22cdd229] {
  display: flex;
  align-self: center;
  justify-self: center;
  align-items: center;
  justify-content: center;
}
.checkbox-radio-switch[data-v-22cdd229] {
  display: flex;
  align-items: center;
  color: var(--color-main-text);
  background-color: transparent;
  font-size: var(--default-font-size);
  line-height: var(--default-line-height);
  padding: 0;
  position: relative;
  --checkbox-radio-switch--border-radius: var(--border-radius-element, calc(var(--default-clickable-area) / 2));
  --checkbox-radio-switch--border-radius-outer: calc(var(--checkbox-radio-switch--border-radius) + 2px);
  /* Special rules for vertical button groups */
  /* Special rules for horizontal button groups */
}
.checkbox-radio-switch__input[data-v-22cdd229] {
  position: absolute;
  z-index: -1;
  opacity: 0 !important;
  width: var(--icon-size);
  height: var(--icon-size);
  margin: 4px calc((var(--default-clickable-area) - 16px) / 2);
}
.checkbox-radio-switch__input:focus-visible + .checkbox-radio-switch__content[data-v-22cdd229], .checkbox-radio-switch__input[data-v-22cdd229]:focus-visible {
  outline: 2px solid var(--color-main-text);
  border-color: var(--color-main-background);
  outline-offset: -2px;
}
.checkbox-radio-switch--disabled .checkbox-radio-switch__content[data-v-22cdd229] {
  opacity: 0.5;
}
.checkbox-radio-switch--disabled .checkbox-radio-switch__content[data-v-22cdd229] .checkbox-radio-switch__icon > * {
  color: var(--color-main-text);
}
.checkbox-radio-switch--disabled .checkbox-radio-switch__content.checkbox-content[data-v-22cdd229], .checkbox-radio-switch--disabled .checkbox-radio-switch__content.checkbox-content[data-v-22cdd229] *:not(a) {
  cursor: default !important;
}
.checkbox-radio-switch:not(.checkbox-radio-switch--disabled, .checkbox-radio-switch--checked):focus-within .checkbox-radio-switch__content[data-v-22cdd229], .checkbox-radio-switch:not(.checkbox-radio-switch--disabled, .checkbox-radio-switch--checked) .checkbox-radio-switch__content[data-v-22cdd229]:hover {
  background-color: var(--color-background-hover);
}
.checkbox-radio-switch--checked:not(.checkbox-radio-switch--disabled):focus-within .checkbox-radio-switch__content[data-v-22cdd229], .checkbox-radio-switch--checked:not(.checkbox-radio-switch--disabled) .checkbox-radio-switch__content[data-v-22cdd229]:hover {
  background-color: var(--color-primary-element-hover);
}
.checkbox-radio-switch--checked:not(.checkbox-radio-switch--button-variant):not(.checkbox-radio-switch--disabled):focus-within .checkbox-radio-switch__content[data-v-22cdd229], .checkbox-radio-switch--checked:not(.checkbox-radio-switch--button-variant):not(.checkbox-radio-switch--disabled) .checkbox-radio-switch__content[data-v-22cdd229]:hover {
  background-color: var(--color-primary-element-light-hover);
}
.checkbox-radio-switch-switch[data-v-22cdd229]:not(.checkbox-radio-switch--checked) .checkbox-radio-switch__icon > * {
  color: var(--color-text-maxcontrast);
}
.checkbox-radio-switch-switch.checkbox-radio-switch--disabled.checkbox-radio-switch--checked[data-v-22cdd229] .checkbox-radio-switch__icon > * {
  color: var(--color-primary-element-light);
}
.checkbox-radio-switch--button-variant.checkbox-radio-switch[data-v-22cdd229] {
  background-color: var(--color-main-background);
  border: 2px solid var(--color-border-maxcontrast);
  overflow: hidden;
}
.checkbox-radio-switch--button-variant.checkbox-radio-switch--checked[data-v-22cdd229] {
  font-weight: bold;
}
.checkbox-radio-switch--button-variant.checkbox-radio-switch--checked .checkbox-radio-switch__content[data-v-22cdd229] {
  background-color: var(--color-primary-element);
  color: var(--color-primary-element-text);
}
.checkbox-radio-switch--button-variant[data-v-22cdd229] .checkbox-radio-switch__text {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  width: 100%;
}
.checkbox-radio-switch--button-variant[data-v-22cdd229]:not(.checkbox-radio-switch--checked) .checkbox-radio-switch__icon > * {
  color: var(--color-main-text);
}
.checkbox-radio-switch--button-variant[data-v-22cdd229] .checkbox-radio-switch__icon:empty {
  display: none;
}
.checkbox-radio-switch--button-variant[data-v-22cdd229]:not(.checkbox-radio-switch--button-variant-v-grouped):not(.checkbox-radio-switch--button-variant-h-grouped), .checkbox-radio-switch--button-variant .checkbox-radio-switch__content[data-v-22cdd229] {
  border-radius: var(--checkbox-radio-switch--border-radius);
}
.checkbox-radio-switch--button-variant-v-grouped .checkbox-radio-switch__content[data-v-22cdd229] {
  flex-basis: 100%;
  max-width: unset;
}
.checkbox-radio-switch--button-variant-v-grouped[data-v-22cdd229]:first-of-type {
  border-start-start-radius: var(--checkbox-radio-switch--border-radius-outer);
  border-start-end-radius: var(--checkbox-radio-switch--border-radius-outer);
}
.checkbox-radio-switch--button-variant-v-grouped[data-v-22cdd229]:last-of-type {
  border-end-start-radius: var(--checkbox-radio-switch--border-radius-outer);
  border-end-end-radius: var(--checkbox-radio-switch--border-radius-outer);
}
.checkbox-radio-switch--button-variant-v-grouped[data-v-22cdd229]:not(:last-of-type) {
  border-bottom: 0 !important;
}
.checkbox-radio-switch--button-variant-v-grouped:not(:last-of-type) .checkbox-radio-switch__content[data-v-22cdd229] {
  margin-bottom: 2px;
}
.checkbox-radio-switch--button-variant-v-grouped[data-v-22cdd229]:not(:first-of-type) {
  border-top: 0 !important;
}
.checkbox-radio-switch--button-variant-h-grouped[data-v-22cdd229]:first-of-type {
  border-start-start-radius: var(--checkbox-radio-switch--border-radius-outer);
  border-end-start-radius: var(--checkbox-radio-switch--border-radius-outer);
}
.checkbox-radio-switch--button-variant-h-grouped[data-v-22cdd229]:last-of-type {
  border-start-end-radius: var(--checkbox-radio-switch--border-radius-outer);
  border-end-end-radius: var(--checkbox-radio-switch--border-radius-outer);
}
.checkbox-radio-switch--button-variant-h-grouped[data-v-22cdd229]:not(:last-of-type) {
  border-inline-end: 0 !important;
}
.checkbox-radio-switch--button-variant-h-grouped:not(:last-of-type) .checkbox-radio-switch__content[data-v-22cdd229] {
  margin-inline-end: 2px;
}
.checkbox-radio-switch--button-variant-h-grouped[data-v-22cdd229]:not(:first-of-type) {
  border-inline-start: 0 !important;
}
.checkbox-radio-switch--button-variant-h-grouped[data-v-22cdd229] .checkbox-radio-switch__text {
  text-align: center;
  display: flex;
  align-items: center;
}
.checkbox-radio-switch--button-variant-h-grouped .checkbox-radio-switch__content[data-v-22cdd229] {
  flex-direction: column;
  justify-content: center;
  width: 100%;
  margin: 0;
  gap: 0;
}/**
 * SPDX-FileCopyrightText: 2019 Nextcloud GmbH and Nextcloud contributors
 * SPDX-License-Identifier: AGPL-3.0-or-later
 */
/**
 * SPDX-FileCopyrightText: 2021 Nextcloud GmbH and Nextcloud contributors
 * SPDX-License-Identifier: AGPL-3.0-or-later
 */
/*
* Ensure proper alignment of the vue material icons
*/
.material-design-icon[data-v-12126d08] {
  display: flex;
  align-self: center;
  justify-self: center;
  align-items: center;
  justify-content: center;
}
.empty-content[data-v-12126d08] {
  display: flex;
  align-items: center;
  flex-direction: column;
  justify-content: center;
  /* In case of using in a flex container - flex in advance */
  flex-grow: 1;
}
.modal-wrapper .empty-content[data-v-12126d08] {
  margin-top: 5vh;
  margin-bottom: 5vh;
}
.empty-content__icon[data-v-12126d08] {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 64px;
  height: 64px;
  margin: 0 auto 15px;
  opacity: 0.4;
  background-repeat: no-repeat;
  background-position: center;
  background-size: 64px;
}
.empty-content__icon[data-v-12126d08] svg {
  width: 64px !important;
  height: 64px !important;
  max-width: 64px !important;
  max-height: 64px !important;
}
.empty-content__name[data-v-12126d08] {
  margin-bottom: 10px;
  text-align: center;
  font-weight: bold;
  font-size: 20px;
  line-height: 30px;
}
.empty-content__description[data-v-12126d08] {
  color: var(--color-text-maxcontrast);
}
.empty-content__action[data-v-12126d08] {
  margin-top: 8px;
}
.modal-wrapper .empty-content__action[data-v-12126d08] {
  margin-top: 20px;
  display: flex;
}/**
 * SPDX-FileCopyrightText: 2019 Nextcloud GmbH and Nextcloud contributors
 * SPDX-License-Identifier: AGPL-3.0-or-later
 */
/**
 * SPDX-FileCopyrightText: 2021 Nextcloud GmbH and Nextcloud contributors
 * SPDX-License-Identifier: AGPL-3.0-or-later
 */
/*
* Ensure proper alignment of the vue material icons
*/
.material-design-icon[data-v-095ea4ce] {
  display: flex;
  align-self: center;
  justify-self: center;
  align-items: center;
  justify-content: center;
}
.app-sidebar__tab[data-v-095ea4ce] {
  display: none;
  padding: 10px;
  min-height: 100%;
  max-height: 100%;
  height: 100%;
  overflow: auto;
}
.app-sidebar__tab[data-v-095ea4ce]:focus {
  border-color: var(--color-primary-element);
  box-shadow: 0 0 0.2em var(--color-primary-element);
  outline: 0;
}
.app-sidebar__tab--active[data-v-095ea4ce] {
  display: block;
}
._fadeTransition_13rtj_2 {
	transition: all var(--animation-quick) ease;
}
._fadeTransitionActive_13rtj_6 {
	opacity: 0;
	position: absolute;
}
/**
 * SPDX-FileCopyrightText: 2019 Nextcloud GmbH and Nextcloud contributors
 * SPDX-License-Identifier: AGPL-3.0-or-later
 */
/**
 * SPDX-FileCopyrightText: 2021 Nextcloud GmbH and Nextcloud contributors
 * SPDX-License-Identifier: AGPL-3.0-or-later
 */
/*
* Ensure proper alignment of the vue material icons
*/
.material-design-icon[data-v-c55f5445] {
  display: flex;
  align-self: center;
  justify-self: center;
  align-items: center;
  justify-content: center;
}
.vue-crumb[data-v-c55f5445] {
  background-image: none;
  display: inline-flex;
  height: var(--default-clickable-area);
  padding: 0;
}
.vue-crumb[data-v-c55f5445]:last-child {
  min-width: 0;
}
.vue-crumb:last-child .vue-crumb__separator[data-v-c55f5445] {
  display: none;
}
.vue-crumb--hidden[data-v-c55f5445] {
  display: none;
}
.vue-crumb__separator[data-v-c55f5445] {
  padding: 0;
  color: var(--color-text-maxcontrast);
}
.vue-crumb.vue-crumb--hovered[data-v-c55f5445] .button-vue {
  background-color: var(--color-background-dark);
  color: var(--color-main-text);
}
.vue-crumb[data-v-c55f5445]:not(:last-child)  .button-vue {
  color: var(--color-text-maxcontrast);
}
.vue-crumb[data-v-c55f5445]:not(:last-child)  .button-vue:hover, .vue-crumb[data-v-c55f5445]:not(:last-child)  .button-vue:focus {
  background-color: var(--color-background-dark);
  color: var(--color-main-text);
}
.vue-crumb[data-v-c55f5445]:not(:last-child)  .button-vue__text {
  font-weight: normal;
}
.vue-crumb[data-v-c55f5445] .button-vue__text {
  margin: 0;
}
.vue-crumb[data-v-c55f5445]:not(.dropdown) .action-item {
  max-width: 100%;
}
.vue-crumb[data-v-c55f5445]:not(.dropdown) .action-item .button-vue {
  padding: 0 4px 0 16px;
  max-width: 100%;
}
.vue-crumb[data-v-c55f5445]:not(.dropdown) .action-item .button-vue__wrapper {
  flex-direction: row-reverse;
}
.vue-crumb[data-v-c55f5445]:not(.dropdown) .action-item.action-item--open .action-item__menutoggle {
  background-color: var(--color-background-dark);
  color: var(--color-main-text);
}/**
 * SPDX-FileCopyrightText: 2019 Nextcloud GmbH and Nextcloud contributors
 * SPDX-License-Identifier: AGPL-3.0-or-later
 */
/**
 * SPDX-FileCopyrightText: 2021 Nextcloud GmbH and Nextcloud contributors
 * SPDX-License-Identifier: AGPL-3.0-or-later
 */
/*
* Ensure proper alignment of the vue material icons
*/
.material-design-icon[data-v-629bf30f] {
  display: flex;
  align-self: center;
  justify-self: center;
  align-items: center;
  justify-content: center;
}
.breadcrumb[data-v-629bf30f] {
  width: 100%;
  flex-grow: 1;
  display: inline-flex;
  align-items: center;
}
.breadcrumb--collapsed[data-v-629bf30f] .vue-crumb:last-child {
  min-width: 100px;
}
.breadcrumb nav[data-v-629bf30f] {
  flex-shrink: 1;
  min-width: 0;
}
.breadcrumb .breadcrumb__crumbs[data-v-629bf30f] {
  max-width: 100%;
}
.breadcrumb .breadcrumb__crumbs[data-v-629bf30f], .breadcrumb .breadcrumb__actions[data-v-629bf30f] {
  display: inline-flex;
}/**
 * SPDX-FileCopyrightText: 2019 Nextcloud GmbH and Nextcloud contributors
 * SPDX-License-Identifier: AGPL-3.0-or-later
 */
/**
 * SPDX-FileCopyrightText: 2021 Nextcloud GmbH and Nextcloud contributors
 * SPDX-License-Identifier: AGPL-3.0-or-later
 */
/*
* Ensure proper alignment of the vue material icons
*/
.material-design-icon[data-v-878b819f] {
  display: flex;
  align-self: center;
  justify-self: center;
  align-items: center;
  justify-content: center;
}
.fade-enter-active[data-v-878b819f], .fade-leave-active[data-v-878b819f] {
  transition: opacity 0.3s ease;
}
.fade-enter[data-v-878b819f], .fade-leave-to[data-v-878b819f] {
  opacity: 0;
}
.linked-icons[data-v-878b819f] {
  display: flex;
}
.linked-icons img[data-v-878b819f] {
  padding: 12px;
  height: 44px;
  display: block;
  background-repeat: no-repeat;
  background-position: center;
  opacity: 0.7;
}
.linked-icons img[data-v-878b819f]:hover {
  opacity: 1;
}
.popovermenu[data-v-878b819f] {
  display: none;
}
.popovermenu.open[data-v-878b819f] {
  display: block;
}
li.collection-list-item[data-v-878b819f] {
  flex-wrap: wrap;
  height: auto;
  cursor: pointer;
  margin-bottom: 0 !important;
}
li.collection-list-item .collection-avatar[data-v-878b819f] {
  margin-top: 0;
}
li.collection-list-item form[data-v-878b819f], li.collection-list-item .collection-item-name[data-v-878b819f] {
  flex-basis: 10%;
  flex-grow: 1;
  display: flex;
}
li.collection-list-item .collection-item-name[data-v-878b819f] {
  padding: 12px 9px;
}
li.collection-list-item input[data-v-878b819f] {
  margin-top: 4px;
  border-color: var(--color-border-maxcontrast);
}
li.collection-list-item input[type=text][data-v-878b819f] {
  flex-grow: 1;
}
li.collection-list-item .error[data-v-878b819f] {
  flex-basis: 100%;
  width: 100%;
}
li.collection-list-item .resource-list-details[data-v-878b819f] {
  flex-basis: 100%;
  width: 100%;
}
li.collection-list-item .resource-list-details li[data-v-878b819f] {
  display: flex;
  margin-left: 44px;
  border-radius: 3px;
  cursor: pointer;
}
li.collection-list-item .resource-list-details li[data-v-878b819f]:hover {
  background-color: var(--color-background-dark);
}
li.collection-list-item .resource-list-details li a[data-v-878b819f] {
  flex-grow: 1;
  padding: 3px;
  max-width: calc(100% - 30px);
  display: flex;
}
li.collection-list-item .resource-list-details span[data-v-878b819f] {
  display: inline-block;
  vertical-align: top;
  margin-right: 10px;
}
li.collection-list-item .resource-list-details span.resource-name[data-v-878b819f] {
  text-overflow: ellipsis;
  overflow: hidden;
  position: relative;
  vertical-align: top;
  white-space: nowrap;
  flex-grow: 1;
  padding: 4px;
}
li.collection-list-item .resource-list-details img[data-v-878b819f] {
  width: 24px;
  height: 24px;
}
li.collection-list-item .resource-list-details .icon-close[data-v-878b819f] {
  opacity: 0.7;
}
li.collection-list-item .resource-list-details .icon-close[data-v-878b819f]:hover, li.collection-list-item .resource-list-details .icon-close[data-v-878b819f]:focus {
  opacity: 1;
}
.should-shake[data-v-878b819f] {
  animation: shake-878b819f 0.6s 1 linear;
}
@keyframes shake-878b819f {
0% {
    transform: translate(15px);
}
20% {
    transform: translate(-15px);
}
40% {
    transform: translate(7px);
}
60% {
    transform: translate(-7px);
}
80% {
    transform: translate(3px);
}
100% {
    transform: translate(0px);
}
}/**
 * SPDX-FileCopyrightText: 2019 Nextcloud GmbH and Nextcloud contributors
 * SPDX-License-Identifier: AGPL-3.0-or-later
 */
/**
 * SPDX-FileCopyrightText: 2021 Nextcloud GmbH and Nextcloud contributors
 * SPDX-License-Identifier: AGPL-3.0-or-later
 */
/*
* Ensure proper alignment of the vue material icons
*/
.material-design-icon[data-v-efe8beb8] {
  display: flex;
  align-self: center;
  justify-self: center;
  align-items: center;
  justify-content: center;
}
.collection-list *[data-v-efe8beb8] {
  box-sizing: border-box;
}
.collection-list > li[data-v-efe8beb8] {
  display: flex;
  align-items: center;
  gap: 12px;
}
.collection-list > li > .avatar[data-v-efe8beb8] {
  margin-top: 0;
}
#collection-select-container[data-v-efe8beb8] {
  display: flex;
  flex-direction: column;
}
.v-select span.avatar[data-v-efe8beb8] {
  display: block;
  padding: 16px;
  opacity: 0.7;
  background-repeat: no-repeat;
  background-position: center;
}
.v-select span.avatar[data-v-efe8beb8]:hover {
  opacity: 1;
}
p.hint[data-v-efe8beb8] {
  z-index: 1;
  margin-top: -16px;
  padding: 8px 8px;
  color: var(--color-text-maxcontrast);
  line-height: normal;
}
div.avatar[data-v-efe8beb8] {
  width: 32px;
  height: 32px;
  margin: 0;
  padding: 8px;
  background-color: var(--color-background-dark);
  margin-top: 30px;
}

/** TODO provide white icon in core */
.icon-projects[data-v-efe8beb8] {
  display: block;
  padding: 8px;
  background-repeat: no-repeat;
  background-position: center;
}
.option__wrapper[data-v-efe8beb8] {
  display: flex;
}
.option__wrapper .avatar[data-v-efe8beb8] {
  display: block;
  width: 32px;
  height: 32px;
  background-color: var(--color-background-darker) !important;
}
.option__wrapper .option__title[data-v-efe8beb8] {
  padding: 4px;
}
.fade-enter-active[data-v-efe8beb8], .fade-leave-active[data-v-efe8beb8] {
  transition: opacity 0.5s;
}
.fade-enter[data-v-efe8beb8], .fade-leave-to[data-v-efe8beb8] {
  opacity: 0;
}/**
 * SPDX-FileCopyrightText: 2019 Nextcloud GmbH and Nextcloud contributors
 * SPDX-License-Identifier: AGPL-3.0-or-later
 */
/**
 * SPDX-FileCopyrightText: 2021 Nextcloud GmbH and Nextcloud contributors
 * SPDX-License-Identifier: AGPL-3.0-or-later
 */
/*
* Ensure proper alignment of the vue material icons
*/
.material-design-icon[data-v-bd25ade3] {
  display: flex;
  align-self: center;
  justify-self: center;
  align-items: center;
  justify-content: center;
}
.color-picker[data-v-bd25ade3] {
  display: flex;
  overflow: hidden;
  align-content: flex-end;
  flex-direction: column;
  justify-content: space-between;
  box-sizing: content-box !important;
  width: 176px;
  padding: 8px;
  border-radius: 3px;
}
.color-picker--advanced-fields[data-v-bd25ade3] {
  width: 264px;
}
.color-picker__simple[data-v-bd25ade3] {
  display: grid;
  grid-template-columns: repeat(auto-fit, var(--default-clickable-area));
  grid-auto-rows: var(--default-clickable-area);
}
.color-picker__simple-color-circle[data-v-bd25ade3] {
  display: flex;
  align-items: center;
  justify-content: center;
  width: calc(var(--default-clickable-area) - 10px);
  height: calc(var(--default-clickable-area) - 10px);
  min-height: calc(var(--default-clickable-area) - 10px);
  margin: auto;
  padding: 0;
  color: white;
  border: 1px solid rgba(0, 0, 0, 0.25);
  border-radius: 50%;
  font-size: 16px;
}
.color-picker__simple-color-circle[data-v-bd25ade3]:focus-within {
  outline: 2px solid var(--color-main-text);
}
.color-picker__simple-color-circle[data-v-bd25ade3]:hover {
  opacity: 0.6;
}
.color-picker__simple-color-circle--active[data-v-bd25ade3] {
  width: calc(var(--default-clickable-area) - 6px);
  height: calc(var(--default-clickable-area) - 6px);
  min-height: calc(var(--default-clickable-area) - 6px);
  transition: all 100ms ease-in-out;
  opacity: 1 !important;
}
.color-picker__advanced[data-v-bd25ade3] {
  box-shadow: none !important;
}
.color-picker__navigation[data-v-bd25ade3] {
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  margin-top: 10px;
}
[data-v-bd25ade3]  .vc-chrome {
  width: unset;
  background-color: var(--color-main-background);
}
[data-v-bd25ade3]  .vc-chrome-color-wrap {
  width: 30px;
  height: 30px;
}
[data-v-bd25ade3]  .vc-chrome-active-color {
  border-radius: 17px;
}
[data-v-bd25ade3]  .vc-chrome-body {
  padding: 14px 0 0 0;
  background-color: var(--color-main-background);
}
[data-v-bd25ade3]  .vc-chrome-body .vc-input__input {
  --input-border-radius: var(--border-radius-element, var(--border-radius-large));
  --input-border-width-offset: calc(var(--border-width-input-focused, 2px) - var(--border-width-input, 2px));
  width: 100%;
  height: var(--default-clickable-area);
  margin: 0;
  padding-inline: calc(var(--border-radius-large) + var(--input-border-width-offset));
  padding-block: var(--input-border-width-offset);
  border: var(--border-width-input, 2px) solid var(--color-border-maxcontrast);
  border-radius: var(--input-border-radius);
  font-size: var(--default-font-size);
  color: var(--color-main-text);
  box-shadow: none;
}
[data-v-bd25ade3]  .vc-chrome-body .vc-input__input:active:not([disabled]),[data-v-bd25ade3]  .vc-chrome-body .vc-input__input:hover:not([disabled]),[data-v-bd25ade3]  .vc-chrome-body .vc-input__input:focus:not([disabled]) {
  --input-border-width-offset: 0px;
  border-color: var(--color-main-text);
  border-width: var(--border-width-input-focused, 2px);
  box-shadow: 0 0 0 2px var(--color-main-background) !important;
}
[data-v-bd25ade3]  .vc-chrome-body .vc-input__input:active:not([disabled]) + .vc-input__label,[data-v-bd25ade3]  .vc-chrome-body .vc-input__input:hover:not([disabled]) + .vc-input__label,[data-v-bd25ade3]  .vc-chrome-body .vc-input__input:focus:not([disabled]) + .vc-input__label {
  color: var(--color-main-text);
}
[data-v-bd25ade3]  .vc-chrome-body .vc-input__label {
  position: absolute;
  inset-inline: var(--border-width-input-focused, 2px);
  inset-block-start: calc(-1.5 * var(--font-size-small, 13px) / 2);
  max-width: fit-content;
  margin-inline: calc(var(--border-radius-large) - var(--default-grid-baseline));
  margin-block: 0;
  padding-inline: var(--default-grid-baseline);
  font-family: var(--font-face);
  font-size: var(--font-size-small, 13px);
  line-height: 1.5;
  font-weight: 500;
  color: var(--color-text-maxcontrast);
  background-color: var(--color-main-background);
  pointer-events: none;
}
[data-v-bd25ade3]  .vc-chrome-toggle-btn {
  display: flex;
  justify-content: center;
  align-items: center;
  width: var(--default-clickable-area);
  height: var(--default-clickable-area);
  margin-left: 6px;
  filter: var(--background-invert-if-dark);
}
[data-v-bd25ade3]  .vc-chrome-toggle-icon {
  width: 24px;
  height: 24px;
  margin: 0;
}
[data-v-bd25ade3]  .vc-chrome-toggle-icon-highlight {
  width: var(--default-clickable-area);
  height: var(--default-clickable-area);
  inset: 0;
}
[data-v-bd25ade3]  .vc-chrome-saturation-wrap {
  border-radius: 3px;
}
[data-v-bd25ade3]  .vc-chrome-saturation-circle {
  width: 20px;
  height: 20px;
}
.slide-enter[data-v-bd25ade3] {
  transform: translateX(-50%);
  opacity: 0;
}
.slide-enter-to[data-v-bd25ade3] {
  transform: translateX(0);
  opacity: 1;
}
.slide-leave[data-v-bd25ade3] {
  transform: translateX(0);
  opacity: 1;
}
.slide-leave-to[data-v-bd25ade3] {
  transform: translateX(-50%);
  opacity: 0;
}
.slide-enter-active[data-v-bd25ade3], .slide-leave-active[data-v-bd25ade3] {
  transition: all 50ms ease-in-out;
}/**
 * SPDX-FileCopyrightText: 2019 Nextcloud GmbH and Nextcloud contributors
 * SPDX-License-Identifier: AGPL-3.0-or-later
 */
/**
 * SPDX-FileCopyrightText: 2021 Nextcloud GmbH and Nextcloud contributors
 * SPDX-License-Identifier: AGPL-3.0-or-later
 */
/*
* Ensure proper alignment of the vue material icons
*/
.material-design-icon {
  display: flex;
  align-self: center;
  justify-self: center;
  align-items: center;
  justify-content: center;
}
#skip-actions.vue-skip-actions:focus-within {
  top: 0 !important;
  left: 0 !important;
  width: 100vw;
  height: 100vh;
  padding: var(--body-container-margin) !important;
  backdrop-filter: brightness(50%);
}/**
 * SPDX-FileCopyrightText: 2019 Nextcloud GmbH and Nextcloud contributors
 * SPDX-License-Identifier: AGPL-3.0-or-later
 */
/**
 * SPDX-FileCopyrightText: 2021 Nextcloud GmbH and Nextcloud contributors
 * SPDX-License-Identifier: AGPL-3.0-or-later
 */
/*
* Ensure proper alignment of the vue material icons
*/
.material-design-icon[data-v-bac4a5f1] {
  display: flex;
  align-self: center;
  justify-self: center;
  align-items: center;
  justify-content: center;
}
.vue-skip-actions__container[data-v-bac4a5f1] {
  background-color: var(--color-main-background);
  border-radius: var(--border-radius-large);
  padding: 22px;
}
.vue-skip-actions__headline[data-v-bac4a5f1] {
  font-weight: bold;
  font-size: 20px;
  line-height: 30px;
  margin-bottom: 12px;
}
.vue-skip-actions__buttons[data-v-bac4a5f1] {
  display: flex;
  flex-wrap: wrap;
  gap: 12px;
}
.vue-skip-actions__buttons > *[data-v-bac4a5f1] {
  flex: 1 0 fit-content;
}
.vue-skip-actions__image[data-v-bac4a5f1] {
  margin-top: 12px;
}
.content[data-v-bac4a5f1] {
  box-sizing: border-box;
  margin: var(--body-container-margin);
  margin-top: var(--header-height);
  display: flex;
  width: calc(100% - var(--body-container-margin) * 2);
  border-radius: var(--body-container-radius);
  height: var(--body-height);
  overflow: hidden;
  padding: 0;
}
.content[data-v-bac4a5f1]:not(.with-sidebar--full) {
  position: fixed;
}
.content[data-v-bac4a5f1] * {
  box-sizing: border-box;
}/**
 * SPDX-FileCopyrightText: 2019 Nextcloud GmbH and Nextcloud contributors
 * SPDX-License-Identifier: AGPL-3.0-or-later
 */
/**
 * SPDX-FileCopyrightText: 2021 Nextcloud GmbH and Nextcloud contributors
 * SPDX-License-Identifier: AGPL-3.0-or-later
 */
/*
* Ensure proper alignment of the vue material icons
*/
.material-design-icon[data-v-f1abaa29] {
  display: flex;
  align-self: center;
  justify-self: center;
  align-items: center;
  justify-content: center;
}
.counter-bubble__counter[data-v-f1abaa29] {
  --counter-bubble-height: 22px;
  font-size: var(--font-size-small, 13px);
  overflow: hidden;
  width: fit-content;
  min-width: var(--counter-bubble-height);
  text-align: center;
  line-height: var(--counter-bubble-height);
  padding: 0 calc(1.5 * var(--default-grid-baseline));
  border-radius: var(--border-radius-pill);
  background-color: var(--color-primary-element-light);
  font-weight: bold;
  color: var(--color-primary-element-light-text);
}
.counter-bubble__counter .active[data-v-f1abaa29] {
  color: var(--color-main-background);
  background-color: var(--color-primary-element-light);
}
.counter-bubble__counter--highlighted[data-v-f1abaa29] {
  color: var(--color-primary-element-text);
  background-color: var(--color-primary-element);
}
.counter-bubble__counter--highlighted.active[data-v-f1abaa29] {
  color: var(--color-primary-element);
  background-color: var(--color-main-background);
}
.counter-bubble__counter--outlined[data-v-f1abaa29] {
  color: var(--color-primary-element);
  background: transparent;
  box-shadow: inset 0 0 0 2px;
}
.counter-bubble__counter--outlined.active[data-v-f1abaa29] {
  color: var(--color-main-background);
  box-shadow: inset 0 0 0 2px;
}/**
 * SPDX-FileCopyrightText: 2019 Nextcloud GmbH and Nextcloud contributors
 * SPDX-License-Identifier: AGPL-3.0-or-later
 */
/**
 * SPDX-FileCopyrightText: 2021 Nextcloud GmbH and Nextcloud contributors
 * SPDX-License-Identifier: AGPL-3.0-or-later
 */
/*
* Ensure proper alignment of the vue material icons
*/
.material-design-icon[data-v-53796b97] {
  display: flex;
  align-self: center;
  justify-self: center;
  align-items: center;
  justify-content: center;
}
.dashboard-widget[data-v-53796b97] .empty-content {
  text-align: center;
  padding-top: 5vh;
}
.dashboard-widget[data-v-53796b97] .empty-content.half-screen {
  padding-top: 0;
  margin-bottom: 1vh;
}
.more[data-v-53796b97] {
  display: block;
  text-align: center;
  color: var(--color-text-maxcontrast);
  line-height: 60px;
  cursor: pointer;
}
.more[data-v-53796b97]:hover, .more[data-v-53796b97]:focus {
  background-color: var(--color-background-hover);
  border-radius: var(--border-radius-large);
  color: var(--color-main-text);
}

/* skeleton */
.item-list__entry[data-v-53796b97] {
  display: flex;
  align-items: flex-start;
  padding: 8px;
}
.item-list__entry .item-avatar[data-v-53796b97] {
  position: relative;
  margin-top: auto;
  margin-bottom: auto;
  background-color: var(--color-background-dark) !important;
}
.item-list__entry .item__details[data-v-53796b97] {
  padding-left: 8px;
  max-height: var(--default-clickable-area);
  flex-grow: 1;
  overflow: hidden;
  display: flex;
  flex-direction: column;
}
.item-list__entry .item__details h3[data-v-53796b97],
.item-list__entry .item__details .message[data-v-53796b97] {
  white-space: nowrap;
  background-color: var(--color-background-dark);
}
.item-list__entry .item__details h3[data-v-53796b97] {
  font-size: 100%;
  margin: 0;
}
.item-list__entry .item__details .message[data-v-53796b97] {
  width: 80%;
  height: 15px;
  margin-top: 5px;
}/**
 * SPDX-FileCopyrightText: 2019 Nextcloud GmbH and Nextcloud contributors
 * SPDX-License-Identifier: AGPL-3.0-or-later
 */
/**
 * SPDX-FileCopyrightText: 2021 Nextcloud GmbH and Nextcloud contributors
 * SPDX-License-Identifier: AGPL-3.0-or-later
 */
/*
* Ensure proper alignment of the vue material icons
*/
.material-design-icon[data-v-db766935] {
  display: flex;
  align-self: center;
  justify-self: center;
  align-items: center;
  justify-content: center;
}
.item-list__entry[data-v-db766935] {
  display: flex;
  align-items: center;
  position: relative;
  padding: 8px;
}
.item-list__entry[data-v-db766935]:hover, .item-list__entry[data-v-db766935]:focus {
  background-color: var(--color-background-hover);
  border-radius: var(--border-radius-large);
}
.item-list__entry .item-avatar[data-v-db766935] {
  position: relative;
  margin-top: auto;
  margin-bottom: auto;
}
.item-list__entry .item__details[data-v-db766935] {
  padding-inline-start: 8px;
  max-height: fit-content;
  flex-grow: 1;
  overflow: hidden;
  display: flex;
  flex-direction: column;
  justify-content: center;
  min-height: var(--default-clickable-area);
}
.item-list__entry .item__details h3[data-v-db766935],
.item-list__entry .item__details .message[data-v-db766935] {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}
.item-list__entry .item__details .message span[data-v-db766935] {
  width: 10px;
  display: inline-block;
  margin-bottom: -3px;
}
.item-list__entry .item__details h3[data-v-db766935] {
  font-size: 100%;
  margin: 0;
}
.item-list__entry .item__details .message[data-v-db766935] {
  width: 100%;
  color: var(--color-text-maxcontrast);
}
.item-list__entry .item-icon[data-v-db766935] {
  position: relative;
  width: 14px;
  height: 14px;
  margin-top: 25px;
  margin-inline: -10px -2px;
}
.item-list__entry button.primary[data-v-db766935] {
  padding: 21px;
  margin: 0;
}

/*
.content-popover {
	height: 0px;
	width: 0px;
	margin-inline: auto;
}
.popover-container {
	width: 100%;
	height: 0px;
}
*/.emoji-mart,
.emoji-mart * {
  box-sizing: border-box;
  line-height: 1.15;
}
.emoji-mart {
  font-family: -apple-system, BlinkMacSystemFont, 'Helvetica Neue', sans-serif;
  font-size: 16px;
  /* display: inline-block; */
  display: flex;
  flex-direction: column;
  height: 420px;
  color: #222427;
  border: 1px solid #d9d9d9;
  border-radius: 5px;
  background: #fff;
}
.emoji-mart-emoji {
  padding: 6px;
  position: relative;
  display: inline-block;
  font-size: 0;
  border: none;
  background: none;
  box-shadow: none;
}
.emoji-mart-emoji span {
  display: inline-block;
}
.emoji-mart-preview-emoji .emoji-mart-emoji span {
  width: 38px;
  height: 38px;
  font-size: 32px;
}
.emoji-type-native {
  font-family: 'Segoe UI Emoji', 'Segoe UI Symbol', 'Segoe UI',
    'Apple Color Emoji', 'Twemoji Mozilla', 'Noto Color Emoji', 'EmojiOne Color',
    'Android Emoji';
  word-break: keep-all;
}
.emoji-type-image {
  /* Emoji sheet has 56 columns, see also utils/emoji-data.js, SHEET_COLUMNS variable */
  /* Here we use (56+1) * 100% to avoid visible edges of nearby icons when scaling for different
   * screen sizes */
  background-size: 6100%;
}
.emoji-type-image.emoji-set-apple {
  background-image: url('https://unpkg.com/emoji-datasource-apple@15.0.1/img/apple/sheets-256/64.png');
}
.emoji-type-image.emoji-set-facebook {
  background-image: url('https://unpkg.com/emoji-datasource-facebook@15.0.1/img/facebook/sheets-256/64.png');
}
.emoji-type-image.emoji-set-google {
  background-image: url('https://unpkg.com/emoji-datasource-google@15.0.1/img/google/sheets-256/64.png');
}
.emoji-type-image.emoji-set-twitter {
  background-image: url('https://unpkg.com/emoji-datasource-twitter@15.0.1/img/twitter/sheets-256/64.png');
}
.emoji-mart-bar {
  border: 0 solid #d9d9d9;
}
.emoji-mart-bar:first-child {
  border-bottom-width: 1px;
  border-top-left-radius: 5px;
  border-top-right-radius: 5px;
}
.emoji-mart-bar:last-child {
  border-top-width: 1px;
  border-bottom-left-radius: 5px;
  border-bottom-right-radius: 5px;
}
.emoji-mart-scroll {
  position: relative;
  overflow-y: scroll;
  flex: 1;
  padding: 0 6px 6px 6px;
  z-index: 0; /* Fix for rendering sticky positioned category labels on Chrome */
  will-change: transform; /* avoids "repaints on scroll" in mobile Chrome */
  -webkit-overflow-scrolling: touch;
}
.emoji-mart-anchors {
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  padding: 0 6px;
  color: #858585;
  line-height: 0;
}
.emoji-mart-anchor {
  position: relative;
  display: block;
  flex: 1 1 auto;
  text-align: center;
  padding: 12px 4px;
  overflow: hidden;
  transition: color 0.1s ease-out;
  border: none;
  background: none;
  box-shadow: none;
}
.emoji-mart-anchor:hover,
.emoji-mart-anchor-selected {
  color: #464646;
}
.emoji-mart-anchor-selected .emoji-mart-anchor-bar {
  bottom: 0;
}
.emoji-mart-anchor-bar {
  position: absolute;
  bottom: -3px;
  left: 0;
  width: 100%;
  height: 3px;
  background-color: #464646;
}
.emoji-mart-anchors i {
  display: inline-block;
  width: 100%;
  max-width: 22px;
}
.emoji-mart-anchors svg {
  fill: currentColor;
  max-height: 18px;
}
.emoji-mart .scroller {
  height: 250px;
  position: relative;
  flex: 1;
  padding: 0 6px 6px 6px;
  z-index: 0; /* Fix for rendering sticky positioned category labels on Chrome */
  will-change: transform; /* avoids "repaints on scroll" in mobile Chrome */
  -webkit-overflow-scrolling: touch;
}
.emoji-mart-search {
  margin-top: 6px;
  padding: 0 6px;
}
.emoji-mart-search input {
  font-size: 16px;
  display: block;
  width: 100%;
  padding: 0.2em 0.6em;
  border-radius: 25px;
  border: 1px solid #d9d9d9;
  outline: 0;
}
.emoji-mart-search-results {
  height: 250px;
  overflow-y: scroll;
}
.emoji-mart-category {
  position: relative;
}
.emoji-mart-category .emoji-mart-emoji span {
  z-index: 1;
  position: relative;
  text-align: center;
  cursor: default;
}
.emoji-mart-category .emoji-mart-emoji:hover:before,
.emoji-mart-emoji-selected:before {
  z-index: 0;
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: #f4f4f4;
  border-radius: 100%;
  opacity: 0;
}
.emoji-mart-category .emoji-mart-emoji:hover:before,
.emoji-mart-emoji-selected:before {
  opacity: 1;
}
.emoji-mart-category-label {
  position: sticky;
  top: 0;
}
.emoji-mart-static .emoji-mart-category-label {
  z-index: 2;
  position: relative;
  /* position: sticky; */
  /* position: -webkit-sticky; */
}
.emoji-mart-category-label h3 {
  display: block;
  font-size: 16px;
  width: 100%;
  font-weight: 500;
  padding: 5px 6px;
  background-color: #fff;
  background-color: rgba(255, 255, 255, 0.95);
}
.emoji-mart-emoji {
  position: relative;
  display: inline-block;
  font-size: 0;
}
.emoji-mart-no-results {
  font-size: 14px;
  text-align: center;
  padding-top: 70px;
  color: #858585;
}
.emoji-mart-no-results .emoji-mart-category-label {
  display: none;
}
.emoji-mart-no-results .emoji-mart-no-results-label {
  margin-top: 0.2em;
}
.emoji-mart-no-results .emoji-mart-emoji:hover:before {
  content: none;
}
.emoji-mart-preview {
  position: relative;
  height: 70px;
}
.emoji-mart-preview-emoji,
.emoji-mart-preview-data,
.emoji-mart-preview-skins {
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
}
.emoji-mart-preview-emoji {
  left: 12px;
}
.emoji-mart-preview-data {
  left: 68px;
  right: 12px;
  word-break: break-all;
}
.emoji-mart-preview-skins {
  right: 30px;
  text-align: right;
}
.emoji-mart-preview-name {
  font-size: 14px;
}
.emoji-mart-preview-shortname {
  font-size: 12px;
  color: #888;
}
.emoji-mart-preview-shortname + .emoji-mart-preview-shortname,
.emoji-mart-preview-shortname + .emoji-mart-preview-emoticon,
.emoji-mart-preview-emoticon + .emoji-mart-preview-emoticon {
  margin-left: 0.5em;
}
.emoji-mart-preview-emoticon {
  font-size: 11px;
  color: #bbb;
}
.emoji-mart-title span {
  display: inline-block;
  vertical-align: middle;
}
.emoji-mart-title .emoji-mart-emoji {
  padding: 0;
}
.emoji-mart-title-label {
  color: #999a9c;
  font-size: 21px;
  font-weight: 300;
}
.emoji-mart-skin-swatches {
  font-size: 0;
  padding: 2px 0;
  border: 1px solid #d9d9d9;
  border-radius: 12px;
  background-color: #fff;
}
.emoji-mart-skin-swatches-opened .emoji-mart-skin-swatch {
  width: 16px;
  padding: 0 2px;
}
.emoji-mart-skin-swatches-opened .emoji-mart-skin-swatch-selected:after {
  opacity: 0.75;
}
.emoji-mart-skin-swatch {
  display: inline-block;
  width: 0;
  vertical-align: middle;
  transition-property: width, padding;
  transition-duration: 0.125s;
  transition-timing-function: ease-out;
}
.emoji-mart-skin-swatch:nth-child(1) {
  transition-delay: 0s;
}
.emoji-mart-skin-swatch:nth-child(2) {
  transition-delay: 0.03s;
}
.emoji-mart-skin-swatch:nth-child(3) {
  transition-delay: 0.06s;
}
.emoji-mart-skin-swatch:nth-child(4) {
  transition-delay: 0.09s;
}
.emoji-mart-skin-swatch:nth-child(5) {
  transition-delay: 0.12s;
}
.emoji-mart-skin-swatch:nth-child(6) {
  transition-delay: 0.15s;
}
.emoji-mart-skin-swatch-selected {
  position: relative;
  width: 16px;
  padding: 0 2px;
}
.emoji-mart-skin-swatch-selected:after {
  content: '';
  position: absolute;
  top: 50%;
  left: 50%;
  width: 4px;
  height: 4px;
  margin: -2px 0 0 -2px;
  background-color: #fff;
  border-radius: 100%;
  pointer-events: none;
  opacity: 0;
  transition: opacity 0.2s ease-out;
}
.emoji-mart-skin {
  display: inline-block;
  width: 100%;
  padding-top: 100%;
  max-width: 12px;
  border-radius: 100%;
}
.emoji-mart-skin-tone-1 {
  background-color: #ffc93a;
}
.emoji-mart-skin-tone-2 {
  background-color: #fadcbc;
}
.emoji-mart-skin-tone-3 {
  background-color: #e0bb95;
}
.emoji-mart-skin-tone-4 {
  background-color: #bf8f68;
}
.emoji-mart-skin-tone-5 {
  background-color: #9b643d;
}
.emoji-mart-skin-tone-6 {
  background-color: #594539;
}

/* vue-virtual-scroller/dist/vue-virtual-scroller.css */
.emoji-mart .vue-recycle-scroller {
  position: relative;
}
.emoji-mart .vue-recycle-scroller.direction-vertical:not(.page-mode) {
  overflow-y: auto;
}
.emoji-mart .vue-recycle-scroller.direction-horizontal:not(.page-mode) {
  overflow-x: auto;
}
.emoji-mart .vue-recycle-scroller.direction-horizontal {
  display: flex;
}
.emoji-mart .vue-recycle-scroller__slot {
  flex: auto 0 0;
}
.emoji-mart .vue-recycle-scroller__item-wrapper {
  flex: 1;
  box-sizing: border-box;
  overflow: hidden;
  position: relative;
}
.emoji-mart .vue-recycle-scroller.ready .vue-recycle-scroller__item-view {
  position: absolute;
  top: 0;
  left: 0;
  will-change: transform;
}
.emoji-mart
  .vue-recycle-scroller.direction-vertical
  .vue-recycle-scroller__item-wrapper {
  width: 100%;
}
.emoji-mart
  .vue-recycle-scroller.direction-horizontal
  .vue-recycle-scroller__item-wrapper {
  height: 100%;
}
.emoji-mart
  .vue-recycle-scroller.ready.direction-vertical
  .vue-recycle-scroller__item-view {
  width: 100%;
}
.emoji-mart
  .vue-recycle-scroller.ready.direction-horizontal
  .vue-recycle-scroller__item-view {
  height: 100%;
}
.emoji-mart .resize-observer[data-v-b329ee4c] {
  position: absolute;
  top: 0;
  left: 0;
  z-index: -1;
  width: 100%;
  height: 100%;
  border: none;
  background-color: transparent;
  pointer-events: none;
  display: block;
  overflow: hidden;
  opacity: 0;
}
.emoji-mart .resize-observer[data-v-b329ee4c] object {
  display: block;
  position: absolute;
  top: 0;
  left: 0;
  height: 100%;
  width: 100%;
  overflow: hidden;
  pointer-events: none;
  z-index: -1;
}
.emoji-mart-search .hidden {
  display: none;
  visibility: hidden;
}

/**
 * SPDX-FileCopyrightText: 2019 Nextcloud GmbH and Nextcloud contributors
 * SPDX-License-Identifier: AGPL-3.0-or-later
 */

/**
 * SPDX-FileCopyrightText: 2021 Nextcloud GmbH and Nextcloud contributors
 * SPDX-License-Identifier: AGPL-3.0-or-later
 */

/*
* Ensure proper alignment of the vue material icons
*/
.material-design-icon {
  display: flex;
  align-self: center;
  justify-self: center;
  align-items: center;
  justify-content: center;
}
.nc-emoji-picker.emoji-mart {
  background-color: var(--color-main-background) !important;
  border: 0;
  color: var(--color-main-text) !important;
  /* Label element in the section grid */
  /* An actual heading inside the element */
}
.nc-emoji-picker.emoji-mart button {
  border: none;
  background: transparent;
  font-size: inherit;
}
.nc-emoji-picker.emoji-mart .emoji-mart-bar,
.nc-emoji-picker.emoji-mart .emoji-mart-anchors,
.nc-emoji-picker.emoji-mart .emoji-mart-search,
.nc-emoji-picker.emoji-mart .emoji-mart-search input,
.nc-emoji-picker.emoji-mart .emoji-mart-category,
.nc-emoji-picker.emoji-mart .emoji-mart-category-label,
.nc-emoji-picker.emoji-mart .emoji-mart-category-label span,
.nc-emoji-picker.emoji-mart .emoji-mart-skin-swatches {
  background-color: transparent !important;
  border-color: var(--color-border) !important;
  color: inherit !important;
}
.nc-emoji-picker.emoji-mart .emoji-mart-anchors {
  padding-block: 0;
  padding-inline: calc(2 * var(--default-grid-baseline));
}
.nc-emoji-picker.emoji-mart .emoji-mart-anchor {
  border-radius: 0;
  margin: 0 !important;
  padding: 0 !important;
  height: var(--clickable-area-small);
  min-width: var(--clickable-area-small);
}
.nc-emoji-picker.emoji-mart .emoji-mart-anchor:hover {
  background-color: var(--color-background-hover);
}
.nc-emoji-picker.emoji-mart .emoji-mart-anchor:focus-visible {
  outline: 2px solid var(--color-primary-element) !important;
  outline-offset: -2px;
}
.nc-emoji-picker.emoji-mart .emoji-mart-anchor div {
  display: grid;
  place-content: center;
}
.nc-emoji-picker.emoji-mart .emoji-mart-scroll {
  padding-inline: calc(2 * var(--default-grid-baseline));
  padding-block: 0 calc(2 * var(--default-grid-baseline));
}
.nc-emoji-picker.emoji-mart .emoji-mart-category {
  display: grid;
  grid-template-columns: repeat(8, 1fr);
  justify-items: stretch;
}
.nc-emoji-picker.emoji-mart .emoji-mart-category.emoji-mart-no-results {
  grid-template-columns: 1fr;
  font-size: inherit;
  color: var(--color-text-maxcontrast) !important;
}
.nc-emoji-picker.emoji-mart div.emoji-mart-category-label {
  grid-column: span 8;
  justify-self: stretch;
}
.nc-emoji-picker.emoji-mart h3.emoji-mart-category-label {
  display: flex;
  align-items: center;
  height: var(--default-clickable-area);
  margin: 0;
  padding-inline: calc(2 * var(--default-grid-baseline));
  padding-block: 0;
  user-select: none;
}
.nc-emoji-picker.emoji-mart .emoji-mart-emoji {
  aspect-ratio: 1/1;
  text-align: center;
  margin: 0 !important;
  padding: 0 !important;
}
.nc-emoji-picker.emoji-mart .emoji-mart-emoji:hover, .nc-emoji-picker.emoji-mart .emoji-mart-emoji:focus-visible, .nc-emoji-picker.emoji-mart .emoji-mart-emoji.emoji-mart-emoji-selected {
  background-color: var(--color-background-hover) !important;
  border: none;
  border-radius: var(--border-radius-element, var(--border-radius-pill));
  box-shadow: none !important;
  outline: 2px solid var(--color-primary-element) !important;
  outline-offset: -2px;
}
.nc-emoji-picker.emoji-mart .emoji-mart-emoji::before {
  display: none;
}
.nc-emoji-picker.emoji-mart .emoji-mart-emoji span {
  cursor: pointer;
}/**
 * SPDX-FileCopyrightText: 2019 Nextcloud GmbH and Nextcloud contributors
 * SPDX-License-Identifier: AGPL-3.0-or-later
 */
/**
 * SPDX-FileCopyrightText: 2021 Nextcloud GmbH and Nextcloud contributors
 * SPDX-License-Identifier: AGPL-3.0-or-later
 */
/*
* Ensure proper alignment of the vue material icons
*/
.material-design-icon[data-v-d1a625fa] {
  display: flex;
  align-self: center;
  justify-self: center;
  align-items: center;
  justify-content: center;
}
.search__wrapper[data-v-d1a625fa] {
  display: flex;
  flex-direction: row;
  gap: var(--default-grid-baseline);
  align-items: end;
  padding-block: var(--default-grid-baseline);
  padding-inline: calc(2 * var(--default-grid-baseline));
}
.row-selected button[data-v-d1a625fa], .row-selected span[data-v-d1a625fa] {
  vertical-align: middle;
}
.emoji-delete[data-v-d1a625fa] {
  vertical-align: top;
  margin-left: -21px;
  margin-top: -3px;
}/**
 * SPDX-FileCopyrightText: 2019 Nextcloud GmbH and Nextcloud contributors
 * SPDX-License-Identifier: AGPL-3.0-or-later
 */
/**
 * SPDX-FileCopyrightText: 2021 Nextcloud GmbH and Nextcloud contributors
 * SPDX-License-Identifier: AGPL-3.0-or-later
 */
/*
* Ensure proper alignment of the vue material icons
*/
.material-design-icon[data-v-cbad78fb] {
  display: flex;
  align-self: center;
  justify-self: center;
  align-items: center;
  justify-content: center;
}
#guest-content-vue[data-v-cbad78fb] {
  color: var(--color-main-text);
  background-color: var(--color-main-background);
  min-width: 0;
  border-radius: var(--border-radius-large);
  box-shadow: 0 0 10px var(--color-box-shadow);
  height: fit-content;
  padding: 15px;
  margin: 20px auto;
}/**
 * SPDX-FileCopyrightText: 2019 Nextcloud GmbH and Nextcloud contributors
 * SPDX-License-Identifier: AGPL-3.0-or-later
 */
/**
 * SPDX-FileCopyrightText: 2021 Nextcloud GmbH and Nextcloud contributors
 * SPDX-License-Identifier: AGPL-3.0-or-later
 */
/*
* Ensure proper alignment of the vue material icons
*/
.material-design-icon {
  display: flex;
  align-self: center;
  justify-self: center;
  align-items: center;
  justify-content: center;
}
#content.nc-guest-content {
  overflow: auto;
  margin-bottom: 0;
  height: calc(var(--body-height) + var(--body-container-margin));
}/**
 * SPDX-FileCopyrightText: 2019 Nextcloud GmbH and Nextcloud contributors
 * SPDX-License-Identifier: AGPL-3.0-or-later
 */
/**
 * SPDX-FileCopyrightText: 2021 Nextcloud GmbH and Nextcloud contributors
 * SPDX-License-Identifier: AGPL-3.0-or-later
 */
/*
* Ensure proper alignment of the vue material icons
*/
.material-design-icon[data-v-20fd51f9] {
  display: flex;
  align-self: center;
  justify-self: center;
  align-items: center;
  justify-content: center;
}

/*!
 * SPDX-FileCopyrightText: 2024 Nextcloud GmbH and Nextcloud contributors
 * SPDX-License-Identifier: AGPL-3.0-or-later
 */
.header-menu[data-v-20fd51f9] {
  position: relative;
  width: var(--header-height);
  height: var(--header-height);
}
.header-menu .header-menu__trigger[data-v-20fd51f9] {
  --button-size: var(--header-height) !important;
  height: var(--header-height);
  opacity: 0.85;
  filter: none !important;
  color: var(--color-background-plain-text, var(--color-primary-text)) !important;
}
.header-menu .header-menu__trigger[data-v-20fd51f9]:focus-visible {
  outline: none !important;
  box-shadow: none !important;
}
.header-menu--opened .header-menu__trigger[data-v-20fd51f9], .header-menu__trigger[data-v-20fd51f9]:hover, .header-menu__trigger[data-v-20fd51f9]:focus, .header-menu__trigger[data-v-20fd51f9]:active {
  opacity: 1;
}
@media only screen and (max-width: 512px) {
.header-menu[data-v-20fd51f9] {
    width: var(--default-clickable-area);
}
.header-menu .header-menu__trigger[data-v-20fd51f9] {
    --button-size: var(--default-clickable-area) !important;
}
}/**
 * SPDX-FileCopyrightText: 2019 Nextcloud GmbH and Nextcloud contributors
 * SPDX-License-Identifier: AGPL-3.0-or-later
 */
/**
 * SPDX-FileCopyrightText: 2021 Nextcloud GmbH and Nextcloud contributors
 * SPDX-License-Identifier: AGPL-3.0-or-later
 */
/*
* Ensure proper alignment of the vue material icons
*/
.material-design-icon[data-v-3bb5f81f] {
  display: flex;
  align-self: center;
  justify-self: center;
  align-items: center;
  justify-content: center;
}

/*!
 * SPDX-FileCopyrightText: 2024 Nextcloud GmbH and Nextcloud contributors
 * SPDX-License-Identifier: AGPL-3.0-or-later
 */
.header-menu[data-v-3bb5f81f] {
  position: relative;
  width: var(--header-height);
  height: var(--header-height);
}
.header-menu .header-menu__trigger[data-v-3bb5f81f] {
  --button-size: var(--header-height) !important;
  height: var(--header-height);
  opacity: 0.85;
  filter: none !important;
  color: var(--color-background-plain-text, var(--color-primary-text)) !important;
}
.header-menu .header-menu__trigger[data-v-3bb5f81f]:focus-visible {
  outline: none !important;
  box-shadow: none !important;
}
.header-menu--opened .header-menu__trigger[data-v-3bb5f81f], .header-menu__trigger[data-v-3bb5f81f]:hover, .header-menu__trigger[data-v-3bb5f81f]:focus, .header-menu__trigger[data-v-3bb5f81f]:active {
  opacity: 1;
}
@media only screen and (max-width: 512px) {
.header-menu[data-v-3bb5f81f] {
    width: var(--default-clickable-area);
}
.header-menu .header-menu__trigger[data-v-3bb5f81f] {
    --button-size: var(--default-clickable-area) !important;
}
}
.header-menu__wrapper[data-v-3bb5f81f] {
  position: fixed;
  z-index: 2000;
  top: var(--header-height);
  inset-inline-end: 0;
  box-sizing: border-box;
  margin: 0 8px;
  border-radius: 0 0 var(--border-radius) var(--border-radius);
  border-radius: var(--border-radius-large);
  background-color: var(--color-main-background);
  filter: drop-shadow(0 1px 5px var(--color-box-shadow));
}
.header-menu__carret[data-v-3bb5f81f] {
  position: absolute;
  z-index: 2001;
  bottom: 0;
  inset-inline-start: calc(50% - 10px);
  width: 0;
  height: 0;
  content: " ";
  pointer-events: none;
  border: 10px solid transparent;
  border-bottom-color: var(--color-main-background);
}
.header-menu__content[data-v-3bb5f81f] {
  overflow: auto;
  width: 350px;
  max-width: calc(100vw - 16px);
  min-height: calc(var(--default-clickable-area) * 1.5);
  max-height: calc(100vh - var(--header-height) * 2);
}
.header-menu__content[data-v-3bb5f81f] .empty-content {
  margin: 12vh 10px;
}/**
 * SPDX-FileCopyrightText: 2019 Nextcloud GmbH and Nextcloud contributors
 * SPDX-License-Identifier: AGPL-3.0-or-later
 */
/**
 * SPDX-FileCopyrightText: 2021 Nextcloud GmbH and Nextcloud contributors
 * SPDX-License-Identifier: AGPL-3.0-or-later
 */
/*
* Ensure proper alignment of the vue material icons
*/
.material-design-icon[data-v-40599719] {
  display: flex;
  align-self: center;
  justify-self: center;
  align-items: center;
  justify-content: center;
}
.list-item__wrapper[data-v-40599719] {
  display: flex;
  position: relative;
  width: 100%;
  padding: 2px 4px;
}
.list-item__wrapper[data-v-40599719]:first-of-type {
  padding-block-start: 4px;
}
.list-item__wrapper[data-v-40599719]:last-of-type {
  padding-block-end: 4px;
}
.list-item__wrapper--active .list-item[data-v-40599719], .list-item__wrapper.active .list-item[data-v-40599719] {
  background-color: var(--color-primary-element);
  color: var(--color-primary-element-text) !important;
}
.list-item__wrapper--active .list-item[data-v-40599719]:hover, .list-item__wrapper--active .list-item[data-v-40599719]:focus-within, .list-item__wrapper--active .list-item[data-v-40599719]:has(:focus-visible), .list-item__wrapper--active .list-item[data-v-40599719]:has(:active), .list-item__wrapper.active .list-item[data-v-40599719]:hover, .list-item__wrapper.active .list-item[data-v-40599719]:focus-within, .list-item__wrapper.active .list-item[data-v-40599719]:has(:focus-visible), .list-item__wrapper.active .list-item[data-v-40599719]:has(:active) {
  background-color: var(--color-primary-element-hover);
}
.list-item__wrapper--active .list-item-content__name[data-v-40599719],
.list-item__wrapper--active .list-item-content__subname[data-v-40599719],
.list-item__wrapper--active .list-item-content__details[data-v-40599719],
.list-item__wrapper--active .list-item-details__details[data-v-40599719], .list-item__wrapper.active .list-item-content__name[data-v-40599719],
.list-item__wrapper.active .list-item-content__subname[data-v-40599719],
.list-item__wrapper.active .list-item-content__details[data-v-40599719],
.list-item__wrapper.active .list-item-details__details[data-v-40599719] {
  color: var(--color-primary-element-text) !important;
}
.list-item__wrapper .list-item-content__name[data-v-40599719],
.list-item__wrapper .list-item-content__subname[data-v-40599719],
.list-item__wrapper .list-item-content__details[data-v-40599719],
.list-item__wrapper .list-item-details__details[data-v-40599719] {
  white-space: nowrap;
  margin-block: 0;
  margin-inline: 0 auto;
  overflow: hidden;
  text-overflow: ellipsis;
}
.list-item-content__name[data-v-40599719] {
  min-width: 100px;
  flex: 1 1 10%;
  font-weight: 500;
}
.list-item-content__subname[data-v-40599719] {
  flex: 1 0;
  min-width: 0;
  color: var(--color-text-maxcontrast);
}
.list-item-content__subname--bold[data-v-40599719] {
  font-weight: 500;
}
.list-item[data-v-40599719] {
  --list-item-padding: var(--default-grid-baseline);
  --list-item-height: 2lh;
  --list-item-border-radius: var(--border-radius-element, 32px);
  box-sizing: border-box;
  display: flex;
  position: relative;
  flex: 0 0 auto;
  justify-content: flex-start;
  padding: var(--list-item-padding);
  width: 100%;
  border-radius: var(--border-radius-element, 32px);
  cursor: pointer;
  transition: background-color var(--animation-quick) ease-in-out;
  list-style: none;
}
.list-item[data-v-40599719]:hover, .list-item[data-v-40599719]:focus-within, .list-item[data-v-40599719]:has(:active), .list-item[data-v-40599719]:has(:focus-visible) {
  background-color: var(--color-background-hover);
}
.list-item[data-v-40599719]:has(.list-item__anchor:focus-visible) {
  outline: 2px solid var(--color-main-text);
  box-shadow: 0 0 0 4px var(--color-main-background);
}
.list-item--compact[data-v-40599719] {
  --list-item-padding: calc(0.5 * var(--default-grid-baseline)) var(--default-grid-baseline);
}
.list-item--compact[data-v-40599719]:not(:has(.list-item-content__subname)) {
  --list-item-height: var(--default-clickable-area);
}
.list-item--legacy[data-v-40599719] {
  --list-item-padding: calc(2 * var(--default-grid-baseline));
}
.list-item--legacy.list-item--compact[data-v-40599719] {
  --list-item-padding: var(--default-grid-baseline) calc(2 * var(--default-grid-baseline));
}
.list-item--one-line[data-v-40599719] {
  --list-item-height: var(--default-clickable-area);
  --list-item-border-radius: var(--border-radius-element, calc(var(--default-clickable-area) / 2));
  --list-item-padding: var(--default-grid-baseline);
}
.list-item--one-line.list-item--one-line--legacy[data-v-40599719] {
  --list-item-padding: 2px calc((var(--list-item-height) - var(--list-item-border-radius)) / 2);
}
.list-item--one-line .list-item-content__main[data-v-40599719] {
  display: flex;
  justify-content: start;
  gap: 12px;
  min-width: 0;
}
.list-item--one-line .list-item-content__details[data-v-40599719] {
  flex-direction: row;
  align-items: center;
  justify-content: end;
}
.list-item--one-line .list-item-content__name[data-v-40599719] {
  align-self: center;
  max-width: 300px;
}
.list-item__anchor[data-v-40599719] {
  color: inherit;
  display: flex;
  flex: 1 0 auto;
  align-items: center;
  height: var(--list-item-height);
  min-width: 0;
}
.list-item__anchor[data-v-40599719]:focus-visible {
  outline: none;
}
.list-item-content[data-v-40599719] {
  display: flex;
  flex: 1 0;
  justify-content: space-between;
  padding-inline-start: calc(2 * var(--default-grid-baseline));
  min-width: 0;
}
.list-item-content__main[data-v-40599719] {
  flex: 1 0;
  width: 0;
  margin: auto 0;
}
.list-item-content__main--oneline[data-v-40599719] {
  display: flex;
}
.list-item-content__details[data-v-40599719] {
  display: flex;
  flex-direction: column;
  justify-content: end;
  align-items: end;
}
.list-item-content__actions[data-v-40599719], .list-item-content__extra-actions[data-v-40599719] {
  flex: 0 0 auto;
  align-self: center;
  justify-content: center;
  margin-inline-start: var(--default-grid-baseline);
}
.list-item-content__extra-actions[data-v-40599719] {
  display: flex;
  align-items: center;
  gap: var(--default-grid-baseline);
}
.list-item-details__details[data-v-40599719] {
  color: var(--color-text-maxcontrast);
  margin: 0 9px !important;
  font-weight: normal;
}
.list-item-details__extra[data-v-40599719] {
  margin: 2px 4px 0 4px;
  display: flex;
  align-items: center;
}
.list-item-details__indicator[data-v-40599719] {
  margin: 0 5px;
}
.list-item__extra[data-v-40599719] {
  margin-top: var(--default-grid-baseline);
}/**
 * SPDX-FileCopyrightText: 2019 Nextcloud GmbH and Nextcloud contributors
 * SPDX-License-Identifier: AGPL-3.0-or-later
 */
/**
 * SPDX-FileCopyrightText: 2021 Nextcloud GmbH and Nextcloud contributors
 * SPDX-License-Identifier: AGPL-3.0-or-later
 */
/*
* Ensure proper alignment of the vue material icons
*/
.material-design-icon[data-v-5e97fe1f] {
  display: flex;
  align-self: center;
  justify-self: center;
  align-items: center;
  justify-content: center;
}
.progress-bar[data-v-5e97fe1f] {
  display: block;
  height: var(--progress-bar-height);
  --progress-bar-color: var(--497e8a2b);
}
.progress-bar--linear[data-v-5e97fe1f] {
  width: 100%;
  overflow: hidden;
  border: 0;
  padding: 0;
  background: var(--color-background-dark);
  border-radius: calc(var(--progress-bar-height) / 2);
}
.progress-bar--linear[data-v-5e97fe1f]::-webkit-progress-bar {
  height: var(--progress-bar-height);
  background-color: transparent;
}
.progress-bar--linear[data-v-5e97fe1f]::-webkit-progress-value {
  background: var(--progress-bar-color, var(--gradient-primary-background));
  border-radius: calc(var(--progress-bar-height) / 2);
}
.progress-bar--linear[data-v-5e97fe1f]::-moz-progress-bar {
  background: var(--progress-bar-color, var(--gradient-primary-background));
  border-radius: calc(var(--progress-bar-height) / 2);
}
.progress-bar--circular[data-v-5e97fe1f] {
  width: var(--progress-bar-height);
  color: var(--progress-bar-color, var(--color-primary-element));
}
.progress-bar--error[data-v-5e97fe1f] {
  color: var(--color-error) !important;
}
.progress-bar--error[data-v-5e97fe1f]::-moz-progress-bar {
  background: var(--color-error) !important;
}
.progress-bar--error[data-v-5e97fe1f]::-webkit-progress-value {
  background: var(--color-error) !important;
}/**
 * SPDX-FileCopyrightText: 2019 Nextcloud GmbH and Nextcloud contributors
 * SPDX-License-Identifier: AGPL-3.0-or-later
 */
/**
 * SPDX-FileCopyrightText: 2021 Nextcloud GmbH and Nextcloud contributors
 * SPDX-License-Identifier: AGPL-3.0-or-later
 */
/*
* Ensure proper alignment of the vue material icons
*/
.material-design-icon[data-v-9e46b7b2] {
  display: flex;
  align-self: center;
  justify-self: center;
  align-items: center;
  justify-content: center;
}
.team-resources__header[data-v-9e46b7b2] {
  font-weight: bold;
  margin-bottom: 6px;
}
.related-team[data-v-9e46b7b2] {
  border-radius: var(--border-radius-rounded);
  border: 2px solid var(--color-border-dark);
  margin-bottom: 6px;
}
.related-team__open[data-v-9e46b7b2] {
  border-color: var(--color-primary-element);
}
.related-team__header[data-v-9e46b7b2] {
  padding: 6px;
  padding-right: 24px;
  display: flex;
  gap: 12px;
}
.related-team__name[data-v-9e46b7b2] {
  display: flex;
  flex-grow: 1;
  align-items: center;
  gap: 12px;
  padding: 6px 12px;
  font-weight: bold;
  margin: 0;
}
.related-team .related-team-provider[data-v-9e46b7b2] {
  padding: 6px 12px;
}
.related-team .related-team-provider__name[data-v-9e46b7b2] {
  font-weight: bold;
  margin-bottom: 3px;
}
.related-team .related-team-provider__link[data-v-9e46b7b2] {
  display: flex;
  gap: 12px;
  padding: 6px 12px;
  font-weight: bold;
}
.related-team .related-team-resource__link[data-v-9e46b7b2] {
  display: flex;
  gap: 12px;
  height: var(--default-clickable-area);
  align-items: center;
  border-radius: var(--border-radius-large);
}
.related-team .related-team-resource__link[data-v-9e46b7b2]:hover {
  background-color: var(--color-background-hover);
}
.related-team .related-team-resource__link[data-v-9e46b7b2]:focus {
  background-color: var(--color-background-hover);
  outline: 2px solid var(--color-primary-element);
}
.related-team .related-team-resource .resource__icon[data-v-9e46b7b2] {
  width: var(--default-clickable-area);
  height: var(--default-clickable-area);
  display: flex;
  align-items: center;
  justify-content: center;
  text-align: center;
}
.related-team .related-team-resource .resource__icon > img[data-v-9e46b7b2] {
  border-radius: var(--border-radius-pill);
  overflow: hidden;
  width: 32px;
  height: 32px;
}/**
 * SPDX-FileCopyrightText: 2019 Nextcloud GmbH and Nextcloud contributors
 * SPDX-License-Identifier: AGPL-3.0-or-later
 */
/**
 * SPDX-FileCopyrightText: 2021 Nextcloud GmbH and Nextcloud contributors
 * SPDX-License-Identifier: AGPL-3.0-or-later
 */
/*
* Ensure proper alignment of the vue material icons
*/
.material-design-icon[data-v-77c38062] {
  display: flex;
  align-self: center;
  justify-self: center;
  align-items: center;
  justify-content: center;
}
.resource[data-v-77c38062] {
  display: flex;
  align-items: center;
  height: var(--default-clickable-area);
}
.resource__button[data-v-77c38062] {
  width: 100% !important;
  justify-content: flex-start !important;
  padding: 0 !important;
}
.resource__button[data-v-77c38062] .button-vue__wrapper {
  justify-content: flex-start !important;
}
.resource__button[data-v-77c38062] .button-vue__wrapper .button-vue__text {
  font-weight: normal !important;
  margin-left: 2px !important;
}
.resource__icon[data-v-77c38062] {
  width: 32px;
  height: 32px;
  background-color: var(--color-text-maxcontrast);
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
}
.resource__icon img[data-v-77c38062] {
  width: 16px;
  height: 16px;
  filter: var(--background-invert-if-dark);
}/**
 * SPDX-FileCopyrightText: 2019 Nextcloud GmbH and Nextcloud contributors
 * SPDX-License-Identifier: AGPL-3.0-or-later
 */
/**
 * SPDX-FileCopyrightText: 2021 Nextcloud GmbH and Nextcloud contributors
 * SPDX-License-Identifier: AGPL-3.0-or-later
 */
/*
* Ensure proper alignment of the vue material icons
*/
.material-design-icon[data-v-badd46a9] {
  display: flex;
  align-self: center;
  justify-self: center;
  align-items: center;
  justify-content: center;
}
.related-resources__header h5[data-v-badd46a9] {
  font-weight: bold;
  margin-bottom: 6px;
}
.related-resources__header p[data-v-badd46a9] {
  color: var(--color-text-maxcontrast);
}/**
 * SPDX-FileCopyrightText: 2019 Nextcloud GmbH and Nextcloud contributors
 * SPDX-License-Identifier: AGPL-3.0-or-later
 */
/**
 * SPDX-FileCopyrightText: 2021 Nextcloud GmbH and Nextcloud contributors
 * SPDX-License-Identifier: AGPL-3.0-or-later
 */
/*
* Ensure proper alignment of the vue material icons
*/
.material-design-icon[data-v-c723f255] {
  display: flex;
  align-self: center;
  justify-self: center;
  align-items: center;
  justify-content: center;
}
.autocomplete-result[data-v-c723f255] {
  display: flex;
  align-items: center;
  gap: var(--default-grid-baseline);
  line-height: 1.2;
  --auto-complete-result-avatar-size: var(--default-clickable-area);
}
.autocomplete-result__icon[data-v-c723f255] {
  position: relative;
  flex: 0 0 var(--default-clickable-area);
  width: var(--default-clickable-area);
  min-width: var(--default-clickable-area);
  height: var(--default-clickable-area);
  border-radius: var(--default-clickable-area);
  background-color: var(--color-background-darker);
  background-repeat: no-repeat;
  background-position: center;
  background-size: contain;
}
.autocomplete-result__icon--with-avatar[data-v-c723f255] {
  color: inherit;
  background-size: cover;
}
.autocomplete-result__status[data-v-c723f255] {
  --auto-complete-result-status-icon-size: clamp(14px, var(--auto-complete-result-avatar-size) * 0.4, 18px);
  --auto-complete-result-status-icon-position: calc(var(--auto-complete-result-avatar-size) / 2 * (1 - 1 / sqrt(2)) - var(--auto-complete-result-status-icon-size) / 2);
  box-sizing: border-box;
  position: absolute;
  inset-inline-end: var(--auto-complete-result-status-icon-position);
  bottom: var(--auto-complete-result-status-icon-position);
  height: var(--auto-complete-result-status-icon-size);
  width: var(--auto-complete-result-status-icon-size);
  border: 2px solid var(--color-main-background);
  border-radius: 50%;
  background-color: var(--color-main-background);
  font-size: calc(var(--auto-complete-result-status-icon-size) / 1.2);
  line-height: 1.2;
  background-repeat: no-repeat;
  background-size: var(--auto-complete-result-status-icon-size);
  background-position: center;
}
.autocomplete-result__status--icon[data-v-c723f255] {
  border: none;
  background-color: transparent;
}
.autocomplete-result__content[data-v-c723f255] {
  display: flex;
  flex: 1 1 100%;
  flex-direction: column;
  justify-content: center;
  min-width: 0;
}
.autocomplete-result__title[data-v-c723f255], .autocomplete-result__subline[data-v-c723f255] {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}
.autocomplete-result__subline[data-v-c723f255] {
  color: var(--color-text-maxcontrast);
}/**
 * SPDX-FileCopyrightText: 2019 Nextcloud GmbH and Nextcloud contributors
 * SPDX-License-Identifier: AGPL-3.0-or-later
 */
/**
 * SPDX-FileCopyrightText: 2021 Nextcloud GmbH and Nextcloud contributors
 * SPDX-License-Identifier: AGPL-3.0-or-later
 */
/*
* Ensure proper alignment of the vue material icons
*/
.material-design-icon[data-v-a47e9298] {
  display: flex;
  align-self: center;
  justify-self: center;
  align-items: center;
  justify-content: center;
}
.rich-contenteditable[data-v-a47e9298] {
  --contenteditable-block-offset: calc(2 * var(--default-grid-baseline));
  --contenteditable-inline-start-offset: calc(2 * var(--default-grid-baseline));
  --contenteditable-inline-end-offset: calc(2 * var(--default-grid-baseline));
  position: relative;
  width: auto;
}
.rich-contenteditable__label[data-v-a47e9298] {
  position: absolute;
  margin-inline: 14px;
  max-width: fit-content;
  inset-block-start: 11px;
  inset-inline: 0;
  color: var(--color-text-maxcontrast);
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  pointer-events: none;
  transition: height var(--animation-quick), inset-block-start var(--animation-quick), font-size var(--animation-quick), color var(--animation-quick), background-color var(--animation-quick) var(--animation-slow);
}
.rich-contenteditable__input:focus + .rich-contenteditable__label[data-v-a47e9298], .rich-contenteditable__input:not(.rich-contenteditable__input--empty) + .rich-contenteditable__label[data-v-a47e9298] {
  inset-block-start: -10px;
  line-height: 1.5;
  font-size: 13px;
  font-weight: 500;
  border-radius: var(--default-grid-baseline) var(--default-grid-baseline) 0 0;
  background-color: var(--color-main-background);
  padding-inline: 5px;
  margin-inline: 9px;
  transition: height var(--animation-quick), inset-block-start var(--animation-quick), font-size var(--animation-quick), color var(--animation-quick);
}
.rich-contenteditable__input[data-v-a47e9298] {
  overflow-y: auto;
  width: auto;
  margin: 0;
  padding-block: var(--contenteditable-block-offset);
  padding-inline: var(--contenteditable-inline-start-offset) var(--contenteditable-inline-end-offset);
  cursor: text;
  white-space: pre-wrap;
  word-break: break-word;
  color: var(--color-main-text);
  border: 2px solid var(--color-border-maxcontrast);
  border-radius: var(--border-radius-large);
  outline: none;
  background-color: var(--color-main-background);
  font-family: var(--font-face);
  font-size: inherit;
  tab-size: 4;
  min-height: var(--default-clickable-area);
  max-height: calc(var(--default-clickable-area) * 5.5);
}
.rich-contenteditable__input--has-label[data-v-a47e9298] {
  margin-top: 10px;
}
.rich-contenteditable__input--empty[data-v-a47e9298]:focus:before, .rich-contenteditable__input--empty[data-v-a47e9298]:not(.rich-contenteditable__input--has-label):before {
  content: attr(aria-placeholder);
  color: var(--color-text-maxcontrast);
  position: absolute;
  width: calc(100% - var(--contenteditable-inline-start-offset) - var(--contenteditable-inline-end-offset));
  height: calc(100% - 2 * var(--contenteditable-block-offset));
  overflow: hidden;
  white-space: nowrap;
  text-overflow: ellipsis;
}
.rich-contenteditable__input[contenteditable=false][data-v-a47e9298]:not(.rich-contenteditable__input--disabled) {
  cursor: default;
  background-color: transparent;
  color: var(--color-main-text);
  border-color: transparent;
  opacity: 1;
  border-radius: 0;
}
.rich-contenteditable__input--multiline[data-v-a47e9298] {
  min-height: calc(var(--default-clickable-area) * 3);
  max-height: none;
}
.rich-contenteditable__input--disabled[data-v-a47e9298] {
  opacity: 0.5;
  color: var(--color-text-maxcontrast);
  border: 2px solid var(--color-background-darker);
  border-radius: var(--border-radius);
  background-color: var(--color-background-dark);
}
.rich-contenteditable__input--overflow[data-v-a47e9298], .rich-contenteditable__input--overflow[data-v-a47e9298]:hover {
  border-color: var(--color-error) !important;
}/**
 * SPDX-FileCopyrightText: 2019 Nextcloud GmbH and Nextcloud contributors
 * SPDX-License-Identifier: AGPL-3.0-or-later
 */
/**
 * SPDX-FileCopyrightText: 2021 Nextcloud GmbH and Nextcloud contributors
 * SPDX-License-Identifier: AGPL-3.0-or-later
 */
/*
* Ensure proper alignment of the vue material icons
*/
._material-design-icon_1sdgd_12 {
  display: flex;
  align-self: center;
  justify-self: center;
  align-items: center;
  justify-content: center;
}
._tribute-container_1sdgd_20 {
  z-index: 9000;
  overflow: auto;
  position: absolute;
  /* stylelint-disable-next-line csstools/use-logical */ /* upstream logic */
  left: -100vw;
  margin: var(--default-grid-baseline) 0;
  padding: var(--default-grid-baseline);
  color: var(--color-text-maxcontrast);
  border-radius: var(--border-radius-element, var(--border-radius));
  background: var(--color-main-background);
  box-shadow: 0 1px 5px var(--color-box-shadow);
}
._tribute-container_1sdgd_20, ._tribute-container_1sdgd_20 * {
  box-sizing: border-box;
}
._tribute-container_1sdgd_20 ul {
  display: flex;
  flex-direction: column;
  gap: var(--default-grid-baseline);
}
._tribute-container_1sdgd_20 ._tribute-container__item_1sdgd_41 {
  color: var(--color-text-maxcontrast);
  border-radius: var(--border-radius-small, var(--border-radius));
  padding: var(--default-grid-baseline);
  cursor: pointer;
  min-height: var(--clickable-area-small, auto);
}
._tribute-container_1sdgd_20 ._tribute-container__item_1sdgd_41.highlight {
  color: var(--color-main-text);
  background: var(--color-background-hover);
}
._tribute-container_1sdgd_20 ._tribute-container__item_1sdgd_41.highlight, ._tribute-container_1sdgd_20 ._tribute-container__item_1sdgd_41.highlight * {
  cursor: pointer;
}
._tribute-container_1sdgd_20._tribute-container--focus-visible_1sdgd_55 .highlight._tribute-container__item_1sdgd_41 {
  outline: 2px solid var(--color-main-text) !important;
}
._tribute-container-autocomplete_1sdgd_59 {
  min-width: 250px;
  max-width: 300px;
  max-height: calc((var(--default-clickable-area) + 3 * var(--default-grid-baseline)) * 4.5 - 1.5 * var(--default-grid-baseline));
}
._tribute-container-emoji_1sdgd_65,
._tribute-container-link_1sdgd_66 {
  min-width: 200px;
  max-width: 200px;
  max-height: calc((24px + 3 * var(--default-grid-baseline)) * 5.5 - 1.5 * var(--default-grid-baseline));
}
._tribute-container-emoji_1sdgd_65 ._tribute-item_1sdgd_71,
._tribute-container-link_1sdgd_66 ._tribute-item_1sdgd_71 {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}
._tribute-container-link_1sdgd_66 {
  min-width: 200px;
  max-width: 300px;
}
._tribute-container-link_1sdgd_66 ._tribute-item_1sdgd_71 {
  display: flex;
  align-items: center;
}
._tribute-container-link_1sdgd_66 ._tribute-item__title_1sdgd_86 {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}
._tribute-container-link_1sdgd_66 ._tribute-item__icon_1sdgd_91 {
  margin: auto 0;
  width: 20px;
  height: 20px;
  object-fit: contain;
  padding-inline-end: var(--default-grid-baseline);
  filter: var(--background-invert-if-dark);
}/**
 * SPDX-FileCopyrightText: 2019 Nextcloud GmbH and Nextcloud contributors
 * SPDX-License-Identifier: AGPL-3.0-or-later
 */
/**
 * SPDX-FileCopyrightText: 2021 Nextcloud GmbH and Nextcloud contributors
 * SPDX-License-Identifier: AGPL-3.0-or-later
 */
/*
* Ensure proper alignment of the vue material icons
*/
.material-design-icon[data-v-ffdba753] {
  display: flex;
  align-self: center;
  justify-self: center;
  align-items: center;
  justify-content: center;
}
.widgets--list[data-v-ffdba753] {
  width: 100%;
  min-height: var(--default-clickable-area);
}
/**
 * SPDX-FileCopyrightText: 2019 Nextcloud GmbH and Nextcloud contributors
 * SPDX-License-Identifier: AGPL-3.0-or-later
 */
/**
 * SPDX-FileCopyrightText: 2021 Nextcloud GmbH and Nextcloud contributors
 * SPDX-License-Identifier: AGPL-3.0-or-later
 */
/*
* Ensure proper alignment of the vue material icons
*/
.material-design-icon[data-v-d7087beb] {
  display: flex;
  align-self: center;
  justify-self: center;
  align-items: center;
  justify-content: center;
}

/* stylelint-disable-next-line scss/at-import-partial-extension */
/**
 * SPDX-FileCopyrightText: 2024 Nextcloud GmbH and Nextcloud contributors
 * SPDX-License-Identifier: AGPL-3.0-or-later
 */
/**
* Colors and class selectors are extracted from source code of:
* - library: highlight.js (v11.10.0)
* - light theme: highlight.js/styles/github.css
* - dark theme: highlight.js/styles/github-dark.css
* and reworked to use with Nextcloud dark and light theme
*/
/* Plain text styles */
.rich-text--wrapper[data-v-d7087beb] {
  word-break: break-word;
  line-height: 1.5;
}
.rich-text--wrapper .rich-text--fallback[data-v-d7087beb], .rich-text--wrapper .rich-text-component[data-v-d7087beb] {
  display: inline;
}
.rich-text--wrapper .rich-text--external-link[data-v-d7087beb] {
  text-decoration: underline;
}
.rich-text--wrapper .rich-text--external-link[data-v-d7087beb]:after {
  content: " ↗";
}

/* Markdown styles */
.rich-text--wrapper-markdown[data-v-d7087beb] {
  tab-size: 4;
  /* Flavored Markdown styles */
}
.rich-text--wrapper-markdown div > *[data-v-d7087beb]:first-child,
.rich-text--wrapper-markdown blockquote > *[data-v-d7087beb]:first-child {
  margin-top: 0 !important;
}
.rich-text--wrapper-markdown div > *[data-v-d7087beb]:last-child,
.rich-text--wrapper-markdown blockquote > *[data-v-d7087beb]:last-child {
  margin-block-end: 0 !important;
}
.rich-text--wrapper-markdown blockquote[data-v-d7087beb] {
  padding-inline-start: 13px;
  border-inline-start: 2px solid var(--color-border-dark);
  color: var(--color-text-lighter);
}
.rich-text--wrapper-markdown h1[data-v-d7087beb], .rich-text--wrapper-markdown h2[data-v-d7087beb], .rich-text--wrapper-markdown h3[data-v-d7087beb], .rich-text--wrapper-markdown h4[data-v-d7087beb], .rich-text--wrapper-markdown h5[data-v-d7087beb], .rich-text--wrapper-markdown h6[data-v-d7087beb], .rich-text--wrapper-markdown p[data-v-d7087beb], .rich-text--wrapper-markdown ul[data-v-d7087beb], .rich-text--wrapper-markdown ol[data-v-d7087beb], .rich-text--wrapper-markdown blockquote[data-v-d7087beb], .rich-text--wrapper-markdown pre[data-v-d7087beb] {
  margin-top: 0;
  margin-block-end: 1em;
}
.rich-text--wrapper-markdown h1[data-v-d7087beb], .rich-text--wrapper-markdown h2[data-v-d7087beb], .rich-text--wrapper-markdown h3[data-v-d7087beb], .rich-text--wrapper-markdown h4[data-v-d7087beb], .rich-text--wrapper-markdown h5[data-v-d7087beb], .rich-text--wrapper-markdown h6[data-v-d7087beb] {
  font-weight: bold;
}
.rich-text--wrapper-markdown h1[data-v-d7087beb] {
  font-size: 30px;
}
.rich-text--wrapper-markdown ul[data-v-d7087beb], .rich-text--wrapper-markdown ol[data-v-d7087beb] {
  padding-inline-start: 4ch;
}
.rich-text--wrapper-markdown ul[data-v-d7087beb] {
  list-style-type: disc;
}
.rich-text--wrapper-markdown ul.contains-task-list[data-v-d7087beb] {
  list-style-type: none;
  padding: 0;
}
.rich-text--wrapper-markdown li.task-list-item > ul[data-v-d7087beb],
.rich-text--wrapper-markdown li.task-list-item > ol[data-v-d7087beb],
.rich-text--wrapper-markdown li.task-list-item > li[data-v-d7087beb],
.rich-text--wrapper-markdown li.task-list-item > blockquote[data-v-d7087beb],
.rich-text--wrapper-markdown li.task-list-item > pre[data-v-d7087beb] {
  margin-inline-start: 15px;
  margin-block-end: 0;
}
.rich-text--wrapper-markdown table[data-v-d7087beb] {
  border-collapse: collapse;
  border: 2px solid var(--color-border-maxcontrast);
}
.rich-text--wrapper-markdown table th[data-v-d7087beb],
.rich-text--wrapper-markdown table td[data-v-d7087beb] {
  padding: var(--default-grid-baseline);
  border: 1px solid var(--color-border-maxcontrast);
}
.rich-text--wrapper-markdown table th[data-v-d7087beb]:first-child,
.rich-text--wrapper-markdown table td[data-v-d7087beb]:first-child {
  border-inline-start: 0;
}
.rich-text--wrapper-markdown table th[data-v-d7087beb]:last-child,
.rich-text--wrapper-markdown table td[data-v-d7087beb]:last-child {
  border-inline-end: 0;
}
.rich-text--wrapper-markdown table tr:first-child th[data-v-d7087beb] {
  border-top: 0;
}
.rich-text--wrapper-markdown table tr:last-child td[data-v-d7087beb] {
  border-block-end: 0;
}

/* Highlight code syntax in code blocks */
/* stylelint-disable-next-line no-duplicate-selectors */
.rich-text--wrapper-markdown pre[data-v-d7087beb]:has(.hljs) {
  color: var(--hljs-color);
  background: var(--hljs-background-color);
}
.rich-text--wrapper-markdown .hljs-doctag[data-v-d7087beb],
.rich-text--wrapper-markdown .hljs-keyword[data-v-d7087beb],
.rich-text--wrapper-markdown .hljs-meta .hljs-keyword[data-v-d7087beb],
.rich-text--wrapper-markdown .hljs-template-tag[data-v-d7087beb],
.rich-text--wrapper-markdown .hljs-template-variable[data-v-d7087beb],
.rich-text--wrapper-markdown .hljs-type[data-v-d7087beb],
.rich-text--wrapper-markdown .hljs-variable.language_[data-v-d7087beb] {
  /* prettylights-syntax-keyword */
  color: var(--hljs-syntax-keyword-color);
}
.rich-text--wrapper-markdown .hljs-title[data-v-d7087beb],
.rich-text--wrapper-markdown .hljs-title.class_[data-v-d7087beb],
.rich-text--wrapper-markdown .hljs-title.class_.inherited__[data-v-d7087beb],
.rich-text--wrapper-markdown .hljs-title.function_[data-v-d7087beb] {
  /* prettylights-syntax-entity */
  color: var(--hljs-syntax-entity-color);
}
.rich-text--wrapper-markdown .hljs-attr[data-v-d7087beb],
.rich-text--wrapper-markdown .hljs-attribute[data-v-d7087beb],
.rich-text--wrapper-markdown .hljs-literal[data-v-d7087beb],
.rich-text--wrapper-markdown .hljs-meta[data-v-d7087beb],
.rich-text--wrapper-markdown .hljs-number[data-v-d7087beb],
.rich-text--wrapper-markdown .hljs-operator[data-v-d7087beb],
.rich-text--wrapper-markdown .hljs-variable[data-v-d7087beb],
.rich-text--wrapper-markdown .hljs-selector-attr[data-v-d7087beb],
.rich-text--wrapper-markdown .hljs-selector-class[data-v-d7087beb],
.rich-text--wrapper-markdown .hljs-selector-id[data-v-d7087beb] {
  /* prettylights-syntax-constant */
  color: var(--hljs-syntax-constant-color);
}
.rich-text--wrapper-markdown .hljs-regexp[data-v-d7087beb],
.rich-text--wrapper-markdown .hljs-string[data-v-d7087beb],
.rich-text--wrapper-markdown .hljs-meta .hljs-string[data-v-d7087beb] {
  /* prettylights-syntax-string */
  color: var(--hljs-syntax-string-color);
}
.rich-text--wrapper-markdown .hljs-built_in[data-v-d7087beb],
.rich-text--wrapper-markdown .hljs-symbol[data-v-d7087beb] {
  /* prettylights-syntax-variable */
  color: var(--hljs-syntax-variable-color);
}
.rich-text--wrapper-markdown .hljs-comment[data-v-d7087beb],
.rich-text--wrapper-markdown .hljs-code[data-v-d7087beb],
.rich-text--wrapper-markdown .hljs-formula[data-v-d7087beb] {
  /* prettylights-syntax-comment */
  color: var(--hljs-syntax-comment-color);
}
.rich-text--wrapper-markdown .hljs-name[data-v-d7087beb],
.rich-text--wrapper-markdown .hljs-quote[data-v-d7087beb],
.rich-text--wrapper-markdown .hljs-selector-tag[data-v-d7087beb],
.rich-text--wrapper-markdown .hljs-selector-pseudo[data-v-d7087beb] {
  /* prettylights-syntax-entity-tag */
  color: var(--hljs-syntax-entity-tag-color);
}
.rich-text--wrapper-markdown .hljs-subst[data-v-d7087beb] {
  /* prettylights-syntax-storage-modifier-import */
  color: var(--hljs-syntax-storage-modifier-import-color);
}
.rich-text--wrapper-markdown .hljs-section[data-v-d7087beb] {
  /* prettylights-syntax-markup-heading */
  color: var(--hljs-syntax-markup-heading-color);
  font-weight: bold;
}
.rich-text--wrapper-markdown .hljs-bullet[data-v-d7087beb] {
  /* prettylights-syntax-markup-list */
  color: var(--hljs-syntax-markup-list-color);
}
.rich-text--wrapper-markdown .hljs-emphasis[data-v-d7087beb] {
  /* prettylights-syntax-markup-italic */
  color: var(--hljs-syntax-markup-italic-color);
  font-style: italic;
}
.rich-text--wrapper-markdown .hljs-strong[data-v-d7087beb] {
  /* prettylights-syntax-markup-bold */
  color: var(--hljs-syntax-markup-bold-color);
  font-weight: bold;
}
.rich-text--wrapper-markdown .hljs-addition[data-v-d7087beb] {
  /* prettylights-syntax-markup-inserted */
  color: var(--hljs-syntax-markup-inserted-color);
  background-color: var(--hljs-syntax-markup-inserted-background-color);
}
.rich-text--wrapper-markdown .hljs-deletion[data-v-d7087beb] {
  /* prettylights-syntax-markup-deleted */
  color: var(--hljs-syntax-markup-deleted-color);
  background-color: var(--hljs-syntax-markup-deleted-background-color);
}
.rich-text--wrapper-markdown .hljs-char.escape_[data-v-d7087beb],
.rich-text--wrapper-markdown .hljs-link[data-v-d7087beb],
.rich-text--wrapper-markdown .hljs-params[data-v-d7087beb],
.rich-text--wrapper-markdown .hljs-property[data-v-d7087beb],
.rich-text--wrapper-markdown .hljs-punctuation[data-v-d7087beb],
.rich-text--wrapper-markdown .hljs-tag[data-v-d7087beb] {
  /* purposely ignored */
}
@media (prefers-color-scheme: light) {
.rich-text--wrapper-markdown[data-v-d7087beb] {
    --hljs-color: var(--color-main-text, #24292e);
    --hljs-background-color: var(--color-background-dark, #ffffff);
    --hljs-syntax-keyword-color: #d73a49;
    --hljs-syntax-entity-color: #6f42c1;
    --hljs-syntax-constant-color: #005cc5;
    --hljs-syntax-string-color: #032f62;
    --hljs-syntax-variable-color: #e36209;
    --hljs-syntax-comment-color: #6a737d;
    --hljs-syntax-entity-tag-color: #22863a;
    --hljs-syntax-storage-modifier-import-color: #24292e;
    --hljs-syntax-markup-heading-color: #005cc5;
    --hljs-syntax-markup-list-color: #735c0f;
    --hljs-syntax-markup-italic-color: #24292e;
    --hljs-syntax-markup-bold-color: #24292e;
    --hljs-syntax-markup-inserted-color: #22863a;
    --hljs-syntax-markup-inserted-background-color: #f0fff4;
    --hljs-syntax-markup-deleted-color: #b31d28;
    --hljs-syntax-markup-deleted-background-color: #ffeef0;
}
[data-theme-dark] .rich-text--wrapper-markdown[data-v-d7087beb] {
    --hljs-color: var(--color-main-text, #c9d1d9);
    --hljs-background-color: var(--color-background-dark, #0d1117);
    --hljs-syntax-keyword-color: #ff7b72;
    --hljs-syntax-entity-color: #d2a8ff;
    --hljs-syntax-constant-color: #79c0ff;
    --hljs-syntax-string-color: #a5d6ff;
    --hljs-syntax-variable-color: #ffa657;
    --hljs-syntax-comment-color: #8b949e;
    --hljs-syntax-entity-tag-color: #7ee787;
    --hljs-syntax-storage-modifier-import-color: #c9d1d9;
    --hljs-syntax-markup-heading-color: #1f6feb;
    --hljs-syntax-markup-list-color: #f2cc60;
    --hljs-syntax-markup-italic-color: #c9d1d9;
    --hljs-syntax-markup-bold-color: #c9d1d9;
    --hljs-syntax-markup-inserted-color: #aff5b4;
    --hljs-syntax-markup-inserted-background-color: #033a16;
    --hljs-syntax-markup-deleted-color: #ffdcd7;
    --hljs-syntax-markup-deleted-background-color: #67060c;
}
}
@media (prefers-color-scheme: dark) {
.rich-text--wrapper-markdown[data-v-d7087beb] {
    --hljs-color: var(--color-main-text, #c9d1d9);
    --hljs-background-color: var(--color-background-dark, #0d1117);
    --hljs-syntax-keyword-color: #ff7b72;
    --hljs-syntax-entity-color: #d2a8ff;
    --hljs-syntax-constant-color: #79c0ff;
    --hljs-syntax-string-color: #a5d6ff;
    --hljs-syntax-variable-color: #ffa657;
    --hljs-syntax-comment-color: #8b949e;
    --hljs-syntax-entity-tag-color: #7ee787;
    --hljs-syntax-storage-modifier-import-color: #c9d1d9;
    --hljs-syntax-markup-heading-color: #1f6feb;
    --hljs-syntax-markup-list-color: #f2cc60;
    --hljs-syntax-markup-italic-color: #c9d1d9;
    --hljs-syntax-markup-bold-color: #c9d1d9;
    --hljs-syntax-markup-inserted-color: #aff5b4;
    --hljs-syntax-markup-inserted-background-color: #033a16;
    --hljs-syntax-markup-deleted-color: #ffdcd7;
    --hljs-syntax-markup-deleted-background-color: #67060c;
}
[data-theme-light] .rich-text--wrapper-markdown[data-v-d7087beb] {
    --hljs-color: var(--color-main-text, #24292e);
    --hljs-background-color: var(--color-background-dark, #ffffff);
    --hljs-syntax-keyword-color: #d73a49;
    --hljs-syntax-entity-color: #6f42c1;
    --hljs-syntax-constant-color: #005cc5;
    --hljs-syntax-string-color: #032f62;
    --hljs-syntax-variable-color: #e36209;
    --hljs-syntax-comment-color: #6a737d;
    --hljs-syntax-entity-tag-color: #22863a;
    --hljs-syntax-storage-modifier-import-color: #24292e;
    --hljs-syntax-markup-heading-color: #005cc5;
    --hljs-syntax-markup-list-color: #735c0f;
    --hljs-syntax-markup-italic-color: #24292e;
    --hljs-syntax-markup-bold-color: #24292e;
    --hljs-syntax-markup-inserted-color: #22863a;
    --hljs-syntax-markup-inserted-background-color: #f0fff4;
    --hljs-syntax-markup-deleted-color: #b31d28;
    --hljs-syntax-markup-deleted-background-color: #ffeef0;
}
}
a[data-v-d7087beb]:not(.rich-text--component) {
  text-decoration: underline;
}/**
 * SPDX-FileCopyrightText: 2019 Nextcloud GmbH and Nextcloud contributors
 * SPDX-License-Identifier: AGPL-3.0-or-later
 */
/**
 * SPDX-FileCopyrightText: 2021 Nextcloud GmbH and Nextcloud contributors
 * SPDX-License-Identifier: AGPL-3.0-or-later
 */
/*
* Ensure proper alignment of the vue material icons
*/
.material-design-icon[data-v-734d6ae9] {
  display: flex;
  align-self: center;
  justify-self: center;
  align-items: center;
  justify-content: center;
}
.widget-custom[data-v-734d6ae9] {
  width: 100%;
  margin: auto;
  margin-bottom: calc(var(--default-grid-baseline, 4px) * 3);
  margin-top: calc(var(--default-grid-baseline, 4px) * 3);
  overflow: hidden;
  border: 2px solid var(--color-border);
  border-radius: var(--border-radius-container);
  background-color: transparent;
  display: flex;
}
.widget-custom.full-width[data-v-734d6ae9] {
  width: var(--widget-full-width, 100%) !important;
  inset-inline-start: calc((var(--widget-full-width, 100%) - 100%) / 2 * -1);
  position: relative;
}
.widget-access[data-v-734d6ae9] {
  width: 100%;
  margin: auto;
  margin-bottom: calc(var(--default-grid-baseline, 4px) * 3);
  margin-top: calc(var(--default-grid-baseline, 4px) * 3);
  overflow: hidden;
  border: 2px solid var(--color-border);
  border-radius: var(--border-radius-container);
  background-color: transparent;
  display: flex;
  padding: calc(var(--default-grid-baseline, 4px) * 3);
}
.widget-default[data-v-734d6ae9] {
  width: 100%;
  margin: auto;
  margin-bottom: calc(var(--default-grid-baseline, 4px) * 3);
  margin-top: calc(var(--default-grid-baseline, 4px) * 3);
  overflow: hidden;
  border: 2px solid var(--color-border);
  border-radius: var(--border-radius-container);
  background-color: transparent;
  display: flex;
}
.widget-default--compact[data-v-734d6ae9] {
  flex-direction: column;
}
.widget-default--compact .widget-default--image[data-v-734d6ae9] {
  width: 100%;
  height: 150px;
}
.widget-default--compact .widget-default--details[data-v-734d6ae9] {
  width: 100%;
  padding-top: calc(var(--default-grid-baseline, 4px) * 2);
  padding-bottom: calc(var(--default-grid-baseline, 4px) * 2);
}
.widget-default--compact .widget-default--description[data-v-734d6ae9] {
  display: none;
}
.widget-default--image[data-v-734d6ae9] {
  width: 40%;
  background-position: center;
  background-size: cover;
  background-repeat: no-repeat;
}
.widget-default--name[data-v-734d6ae9] {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  font-weight: bold;
}
.widget-default--details[data-v-734d6ae9] {
  padding: calc(var(--default-grid-baseline, 4px) * 3);
  width: 60%;
}
.widget-default--details p[data-v-734d6ae9] {
  margin: 0;
  padding: 0;
}
.widget-default--description[data-v-734d6ae9] {
  overflow: hidden;
  text-overflow: ellipsis;
  display: -webkit-box;
  -webkit-line-clamp: 3;
  line-clamp: 3;
  -webkit-box-orient: vertical;
}
.widget-default--link[data-v-734d6ae9] {
  color: var(--color-text-maxcontrast);
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}
.toggle-interactive[data-v-734d6ae9] {
  position: relative;
}
.toggle-interactive .toggle-interactive--button[data-v-734d6ae9] {
  position: absolute;
  bottom: var(--default-grid-baseline);
  inset-inline-end: var(--default-grid-baseline);
  z-index: 10000;
}/**
 * SPDX-FileCopyrightText: 2019 Nextcloud GmbH and Nextcloud contributors
 * SPDX-License-Identifier: AGPL-3.0-or-later
 */
/**
 * SPDX-FileCopyrightText: 2021 Nextcloud GmbH and Nextcloud contributors
 * SPDX-License-Identifier: AGPL-3.0-or-later
 */
/*
* Ensure proper alignment of the vue material icons
*/
.material-design-icon[data-v-de9850e4] {
  display: flex;
  align-self: center;
  justify-self: center;
  align-items: center;
  justify-content: center;
}/**
 * SPDX-FileCopyrightText: 2019 Nextcloud GmbH and Nextcloud contributors
 * SPDX-License-Identifier: AGPL-3.0-or-later
 */
/**
 * SPDX-FileCopyrightText: 2021 Nextcloud GmbH and Nextcloud contributors
 * SPDX-License-Identifier: AGPL-3.0-or-later
 */
/*
* Ensure proper alignment of the vue material icons
*/
.material-design-icon[data-v-f03ee0c9] {
  display: flex;
  align-self: center;
  justify-self: center;
  align-items: center;
  justify-content: center;
}
.provider-list[data-v-f03ee0c9] {
  width: 100%;
  min-height: 400px;
  padding: 0 16px 16px 16px;
  display: flex;
  flex-direction: column;
}
.provider-list--select[data-v-f03ee0c9] {
  width: 100%;
}
.provider-list--select .provider[data-v-f03ee0c9] {
  display: flex;
  align-items: center;
  height: 28px;
  overflow: hidden;
}
.provider-list--select .provider .link-icon[data-v-f03ee0c9] {
  margin-inline-end: 8px;
}
.provider-list--select .provider .provider-icon[data-v-f03ee0c9] {
  width: 20px;
  height: 20px;
  object-fit: contain;
  margin-inline-end: 8px;
  filter: var(--background-invert-if-dark);
}
.provider-list--select .provider .option-text[data-v-f03ee0c9] {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}/**
 * SPDX-FileCopyrightText: 2019 Nextcloud GmbH and Nextcloud contributors
 * SPDX-License-Identifier: AGPL-3.0-or-later
 */
/**
 * SPDX-FileCopyrightText: 2021 Nextcloud GmbH and Nextcloud contributors
 * SPDX-License-Identifier: AGPL-3.0-or-later
 */
/*
* Ensure proper alignment of the vue material icons
*/
.material-design-icon[data-v-3c1803b5] {
  display: flex;
  align-self: center;
  justify-self: center;
  align-items: center;
  justify-content: center;
}
.raw-link[data-v-3c1803b5] {
  width: 100%;
  min-height: 350px;
  display: flex;
  flex-direction: column;
  overflow-y: auto;
  padding: 0 16px 16px 16px;
}
.raw-link .input-wrapper[data-v-3c1803b5] {
  width: 100%;
}
.raw-link .reference-widget[data-v-3c1803b5] {
  display: flex;
}
.raw-link--empty-content .provider-icon[data-v-3c1803b5] {
  width: 150px;
  height: 150px;
  object-fit: contain;
  filter: var(--background-invert-if-dark);
}
.raw-link--input[data-v-3c1803b5] {
  width: 99%;
}/**
 * SPDX-FileCopyrightText: 2019 Nextcloud GmbH and Nextcloud contributors
 * SPDX-License-Identifier: AGPL-3.0-or-later
 */
/**
 * SPDX-FileCopyrightText: 2021 Nextcloud GmbH and Nextcloud contributors
 * SPDX-License-Identifier: AGPL-3.0-or-later
 */
/*
* Ensure proper alignment of the vue material icons
*/
.material-design-icon[data-v-ff4bcbf3] {
  display: flex;
  align-self: center;
  justify-self: center;
  align-items: center;
  justify-content: center;
}
.result[data-v-ff4bcbf3] {
  display: flex;
  align-items: center;
  height: var(--default-clickable-area);
  overflow: hidden;
}
.result--icon-class[data-v-ff4bcbf3], .result--image[data-v-ff4bcbf3] {
  width: 40px;
  min-width: 40px;
  height: 40px;
  object-fit: contain;
}
.result--icon-class.rounded[data-v-ff4bcbf3], .result--image.rounded[data-v-ff4bcbf3] {
  border-radius: 50%;
}
.result--content[data-v-ff4bcbf3] {
  display: flex;
  flex-direction: column;
  padding-inline-start: 10px;
  overflow: hidden;
}
.result--content--name[data-v-ff4bcbf3], .result--content--subline[data-v-ff4bcbf3] {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}/**
 * SPDX-FileCopyrightText: 2019 Nextcloud GmbH and Nextcloud contributors
 * SPDX-License-Identifier: AGPL-3.0-or-later
 */
/**
 * SPDX-FileCopyrightText: 2021 Nextcloud GmbH and Nextcloud contributors
 * SPDX-License-Identifier: AGPL-3.0-or-later
 */
/*
* Ensure proper alignment of the vue material icons
*/
.material-design-icon[data-v-05fef988] {
  display: flex;
  align-self: center;
  justify-self: center;
  align-items: center;
  justify-content: center;
}
.smart-picker-search[data-v-05fef988] {
  width: 100%;
  display: flex;
  flex-direction: column;
  padding: 0 16px 16px 16px;
}
.smart-picker-search.with-empty-content[data-v-05fef988] {
  min-height: 400px;
}
.smart-picker-search .provider-icon[data-v-05fef988] {
  width: 150px;
  height: 150px;
  object-fit: contain;
  filter: var(--background-invert-if-dark);
}
.smart-picker-search--select[data-v-05fef988] {
  width: 100%;
}
.smart-picker-search--select .search-result[data-v-05fef988] {
  width: 100%;
}
.smart-picker-search--select .group-name-icon[data-v-05fef988],
.smart-picker-search--select .option-simple-icon[data-v-05fef988] {
  width: 20px;
  height: 20px;
  margin: 0 20px 0 10px;
}
.smart-picker-search--select .custom-option[data-v-05fef988] {
  height: var(--default-clickable-area);
  display: flex;
  align-items: center;
  overflow: hidden;
}
.smart-picker-search--select .option-text[data-v-05fef988] {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}/**
 * SPDX-FileCopyrightText: 2019 Nextcloud GmbH and Nextcloud contributors
 * SPDX-License-Identifier: AGPL-3.0-or-later
 */
/**
 * SPDX-FileCopyrightText: 2021 Nextcloud GmbH and Nextcloud contributors
 * SPDX-License-Identifier: AGPL-3.0-or-later
 */
/*
* Ensure proper alignment of the vue material icons
*/
.material-design-icon[data-v-cd33df8e] {
  display: flex;
  align-self: center;
  justify-self: center;
  align-items: center;
  justify-content: center;
}
.reference-picker[data-v-cd33df8e] {
  display: flex;
  overflow-y: auto;
  width: 100%;
}
.reference-picker .custom-element-wrapper[data-v-cd33df8e] {
  display: flex;
  overflow-y: auto;
  width: 100%;
}
.reference-picker .custom-element-wrapper .custom-element[data-v-cd33df8e] {
  display: flex;
  overflow-y: auto;
  width: 100%;
}/**
 * SPDX-FileCopyrightText: 2019 Nextcloud GmbH and Nextcloud contributors
 * SPDX-License-Identifier: AGPL-3.0-or-later
 */
/**
 * SPDX-FileCopyrightText: 2021 Nextcloud GmbH and Nextcloud contributors
 * SPDX-License-Identifier: AGPL-3.0-or-later
 */
/*
* Ensure proper alignment of the vue material icons
*/
.material-design-icon {
  display: flex;
  align-self: center;
  justify-self: center;
  align-items: center;
  justify-content: center;
}
.reference-picker-modal .modal-container {
  display: flex !important;
}/**
 * SPDX-FileCopyrightText: 2019 Nextcloud GmbH and Nextcloud contributors
 * SPDX-License-Identifier: AGPL-3.0-or-later
 */
/**
 * SPDX-FileCopyrightText: 2021 Nextcloud GmbH and Nextcloud contributors
 * SPDX-License-Identifier: AGPL-3.0-or-later
 */
/*
* Ensure proper alignment of the vue material icons
*/
.material-design-icon[data-v-c66449c1] {
  display: flex;
  align-self: center;
  justify-self: center;
  align-items: center;
  justify-content: center;
}
.reference-picker-modal--content[data-v-c66449c1] {
  width: 100%;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  overflow-y: auto;
}
.reference-picker-modal--content .close-button[data-v-c66449c1],
.reference-picker-modal--content .back-button[data-v-c66449c1] {
  position: absolute;
  top: 4px;
}
.reference-picker-modal--content .back-button[data-v-c66449c1] {
  inset-inline-start: 4px;
}
.reference-picker-modal--content .close-button[data-v-c66449c1] {
  inset-inline-end: 4px;
}
.reference-picker-modal--content > h2[data-v-c66449c1] {
  display: flex;
  margin: 12px 0 20px 0;
}
.reference-picker-modal--content > h2 .icon[data-v-c66449c1] {
  margin-inline-end: 8px;
}
.nc-select-users[data-v-ecb8da4e] .vs__selected {
	padding-inline: 0 5px !important;
}
/**
 * SPDX-FileCopyrightText: 2019 Nextcloud GmbH and Nextcloud contributors
 * SPDX-License-Identifier: AGPL-3.0-or-later
 */
/**
 * SPDX-FileCopyrightText: 2021 Nextcloud GmbH and Nextcloud contributors
 * SPDX-License-Identifier: AGPL-3.0-or-later
 */
/*
* Ensure proper alignment of the vue material icons
*/
.material-design-icon[data-v-0907eb0a] {
  display: flex;
  align-self: center;
  justify-self: center;
  align-items: center;
  justify-content: center;
}
.input-wrapper[data-v-0907eb0a] {
  display: flex;
  align-items: center;
  flex-wrap: wrap;
  width: 100%;
  max-width: 400px;
}
.input-wrapper .action-input__label[data-v-0907eb0a] {
  margin-right: 12px;
}
.input-wrapper[data-v-0907eb0a]:disabled {
  cursor: default;
}
.input-wrapper .hint[data-v-0907eb0a] {
  color: var(--color-text-maxcontrast);
  margin-left: 8px;
}/**
 * SPDX-FileCopyrightText: 2019 Nextcloud GmbH and Nextcloud contributors
 * SPDX-License-Identifier: AGPL-3.0-or-later
 */
/**
 * SPDX-FileCopyrightText: 2021 Nextcloud GmbH and Nextcloud contributors
 * SPDX-License-Identifier: AGPL-3.0-or-later
 */
/*
* Ensure proper alignment of the vue material icons
*/
.material-design-icon[data-v-6f6953b5] {
  display: flex;
  align-self: center;
  justify-self: center;
  align-items: center;
  justify-content: center;
}
.settings-section[data-v-6f6953b5] {
  display: block;
  margin-bottom: auto;
  padding: 30px;
}
.settings-section[data-v-6f6953b5]:not(:last-child) {
  border-bottom: 1px solid var(--color-border);
}
.settings-section--limit-width > *[data-v-6f6953b5] {
  max-width: 900px;
}
.settings-section__name[data-v-6f6953b5] {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  font-size: 20px;
  font-weight: bold;
  max-width: 900px;
  margin-top: 0;
}
.settings-section__info[data-v-6f6953b5] {
  display: flex;
  align-items: center;
  justify-content: center;
  width: var(--default-clickable-area);
  height: var(--default-clickable-area);
  margin: calc((var(--default-clickable-area) - 16px) / 2 * -1);
  margin-inline-start: 0;
  color: var(--color-text-maxcontrast);
}
.settings-section__info[data-v-6f6953b5]:hover, .settings-section__info[data-v-6f6953b5]:focus, .settings-section__info[data-v-6f6953b5]:active {
  color: var(--color-main-text);
}
.settings-section__desc[data-v-6f6953b5] {
  margin-top: -0.2em;
  margin-bottom: 1em;
  color: var(--color-text-maxcontrast);
  max-width: 900px;
}/**
 * SPDX-FileCopyrightText: 2019 Nextcloud GmbH and Nextcloud contributors
 * SPDX-License-Identifier: AGPL-3.0-or-later
 */
/**
 * SPDX-FileCopyrightText: 2021 Nextcloud GmbH and Nextcloud contributors
 * SPDX-License-Identifier: AGPL-3.0-or-later
 */
/*
* Ensure proper alignment of the vue material icons
*/
.material-design-icon[data-v-a53a2bb4] {
  display: flex;
  align-self: center;
  justify-self: center;
  align-items: center;
  justify-content: center;
}
.select-group-error[data-v-a53a2bb4] {
  color: var(--color-error);
  font-size: 13px;
  padding-inline-start: var(--border-radius-large);
}/**
 * SPDX-FileCopyrightText: 2019 Nextcloud GmbH and Nextcloud contributors
 * SPDX-License-Identifier: AGPL-3.0-or-later
 */
/**
 * SPDX-FileCopyrightText: 2021 Nextcloud GmbH and Nextcloud contributors
 * SPDX-License-Identifier: AGPL-3.0-or-later
 */
/*
* Ensure proper alignment of the vue material icons
*/
.material-design-icon[data-v-c89174d0] {
  display: flex;
  align-self: center;
  justify-self: center;
  align-items: center;
  justify-content: center;
}
.textarea[data-v-c89174d0] {
  position: relative;
  width: 100%;
  border-radius: var(--border-radius-large);
  margin-block-start: 6px;
  resize: vertical;
}
.textarea__main-wrapper[data-v-c89174d0] {
  position: relative;
}
.textarea--disabled[data-v-c89174d0] {
  opacity: 0.7;
  filter: saturate(0.7);
}
.textarea__input[data-v-c89174d0] {
  margin: 0;
  padding-inline: 10px 6px;
  width: 100%;
  height: calc(var(--default-clickable-area) * 2);
  font-size: var(--default-font-size);
  text-overflow: ellipsis;
  background-color: var(--color-main-background);
  color: var(--color-main-text);
  border: var(--border-width-input, 2px) solid var(--color-border-maxcontrast);
  border-radius: var(--border-radius-large);
  cursor: pointer;
}
.textarea__input[data-v-c89174d0]:active:not([disabled]), .textarea__input[data-v-c89174d0]:hover:not([disabled]), .textarea__input[data-v-c89174d0]:focus:not([disabled]) {
  border-width: var(--border-width-input-focused, 2px);
  border-color: var(--color-main-text);
  box-shadow: 0 0 0 2px var(--color-main-background) !important;
}
.textarea__input[data-v-c89174d0]:not(:focus, .textarea__input--label-outside)::placeholder {
  opacity: 0;
}
.textarea__input[data-v-c89174d0]:focus {
  cursor: text;
}
.textarea__input[data-v-c89174d0]:disabled {
  cursor: default;
}
.textarea__input[data-v-c89174d0]:focus-visible {
  box-shadow: unset !important;
}
.textarea__input--success[data-v-c89174d0] {
  border-color: var(--color-success) !important;
}
.textarea__input--success[data-v-c89174d0]:focus-visible {
  box-shadow: rgb(248, 250, 252) 0px 0px 0px 2px, var(--color-primary-element) 0px 0px 0px 4px, rgba(0, 0, 0, 0.05) 0px 1px 2px 0px;
}
.textarea__input--error[data-v-c89174d0] {
  border-color: var(--color-error) !important;
}
.textarea__input--error[data-v-c89174d0]:focus-visible {
  box-shadow: rgb(248, 250, 252) 0px 0px 0px 2px, var(--color-primary-element) 0px 0px 0px 4px, rgba(0, 0, 0, 0.05) 0px 1px 2px 0px;
}
.textarea__label[data-v-c89174d0] {
  position: absolute;
  margin-inline: 12px 0;
  max-width: fit-content;
  inset-block-start: 11px;
  inset-inline: 0;
  color: var(--color-text-maxcontrast);
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  pointer-events: none;
  transition: height var(--animation-quick), inset-block-start var(--animation-quick), font-size var(--animation-quick), color var(--animation-quick), background-color var(--animation-quick) var(--animation-slow);
}
.textarea__input:focus + .textarea__label[data-v-c89174d0], .textarea__input:not(:placeholder-shown) + .textarea__label[data-v-c89174d0] {
  inset-block-start: -10px;
  line-height: 1.5;
  font-size: 13px;
  font-weight: 500;
  color: var(--color-main-text);
  background-color: var(--color-main-background);
  padding-inline: 4px;
  margin-inline-start: 8px;
  transition: height var(--animation-quick), inset-block-start var(--animation-quick), font-size var(--animation-quick), color var(--animation-quick);
}
.textarea__helper-text-message[data-v-c89174d0] {
  padding-block: 4px;
  display: flex;
  align-items: center;
}
.textarea__helper-text-message__icon[data-v-c89174d0] {
  margin-inline-end: 8px;
}
.textarea__helper-text-message--error[data-v-c89174d0] {
  color: var(--color-error-text);
}
.textarea__helper-text-message--success[data-v-c89174d0] {
  color: var(--color-success-text);
}/**
 * SPDX-FileCopyrightText: 2019 Nextcloud GmbH and Nextcloud contributors
 * SPDX-License-Identifier: AGPL-3.0-or-later
 */
/**
 * SPDX-FileCopyrightText: 2021 Nextcloud GmbH and Nextcloud contributors
 * SPDX-License-Identifier: AGPL-3.0-or-later
 */
/*
* Ensure proper alignment of the vue material icons
*/
.material-design-icon[data-v-a62a9496] {
  display: flex;
  align-self: center;
  justify-self: center;
  align-items: center;
  justify-content: center;
}
.user-bubble__wrapper[data-v-a62a9496] {
  display: inline-block;
  vertical-align: middle;
  min-width: 0;
  max-width: 100%;
}
.user-bubble__content[data-v-a62a9496] {
  display: inline-flex;
  max-width: 100%;
  background-color: var(--color-background-dark);
}
.user-bubble__content--primary[data-v-a62a9496] {
  color: var(--color-primary-element-text);
  background-color: var(--color-primary-element);
}
.user-bubble__content[data-v-a62a9496] > :last-child {
  padding-inline-end: 8px;
}
.user-bubble__avatar[data-v-a62a9496] {
  align-self: center;
}
.user-bubble__name[data-v-a62a9496] {
  overflow: hidden;
  white-space: nowrap;
  text-overflow: ellipsis;
}
.user-bubble__name[data-v-a62a9496], .user-bubble__secondary[data-v-a62a9496] {
  padding-block: 0;
  padding-inline: 4px 0;
}/**
 * SPDX-FileCopyrightText: 2019 Nextcloud GmbH and Nextcloud contributors
 * SPDX-License-Identifier: AGPL-3.0-or-later
 */
/**
 * SPDX-FileCopyrightText: 2021 Nextcloud GmbH and Nextcloud contributors
 * SPDX-License-Identifier: AGPL-3.0-or-later
 */
/*
* Ensure proper alignment of the vue material icons
*/
.material-design-icon {
  display: flex;
  align-self: center;
  justify-self: center;
  align-items: center;
  justify-content: center;
}

/**
* SPDX-FileCopyrightText: 2011-2015 Twitter, Inc.
* SPDX-FileCopyrightText: 2015-2016 Owncloud, Inc.
* SPDX-FileCopyrightText: 2016-2024 Nextcloud GmbH and Nextcloud contributors
* SPDX-License-Identifier: MIT
*/
.v-popper--theme-tooltip.v-popper__popper {
  position: absolute;
  z-index: 100000;
  top: 0;
  inset-inline: auto;
  display: block;
  margin: 0;
  padding: 0;
  text-align: start;
  opacity: 0;
  line-height: 1.6;
  line-break: auto;
  filter: drop-shadow(0 1px 10px var(--color-box-shadow));
}
.v-popper--theme-tooltip.v-popper__popper[data-popper-placement^=top] .v-popper__arrow-container {
  bottom: -10px;
  border-bottom-width: 0;
  border-top-color: var(--color-main-background);
}
.v-popper--theme-tooltip.v-popper__popper[data-popper-placement^=bottom] .v-popper__arrow-container {
  top: -10px;
  border-top-width: 0;
  border-bottom-color: var(--color-main-background);
}
.v-popper--theme-tooltip.v-popper__popper[data-popper-placement^=right] .v-popper__arrow-container {
  inset-inline-end: 100%;
  border-inline-start-width: 0;
  border-inline-end-color: var(--color-main-background);
}
.v-popper--theme-tooltip.v-popper__popper[data-popper-placement^=left] .v-popper__arrow-container {
  inset-inline-start: 100%;
  border-inline-end-width: 0;
  border-inline-start-color: var(--color-main-background);
}
.v-popper--theme-tooltip.v-popper__popper[aria-hidden=true] {
  visibility: hidden;
  transition: opacity 0.15s, visibility 0.15s;
  opacity: 0;
}
.v-popper--theme-tooltip.v-popper__popper[aria-hidden=false] {
  visibility: visible;
  transition: opacity 0.15s;
  opacity: 1;
}
.v-popper--theme-tooltip .v-popper__inner {
  max-width: 350px;
  padding: 5px 8px;
  text-align: center;
  color: var(--color-main-text);
  border-radius: var(--border-radius);
  background-color: var(--color-main-background);
}
.v-popper--theme-tooltip .v-popper__arrow-container {
  position: absolute;
  z-index: 1;
  width: 0;
  height: 0;
  margin: 0;
  border-style: solid;
  border-color: transparent;
  border-width: 10px;
}.form-error[data-v-e8c7e823] {
  color: #c40c0c;
  display: block;
}
.status-icon[data-v-e8c7e823] {
  margin-left: 6px;
}
[data-v-e8c7e823] input#permalink-api-endpoint,[data-v-e8c7e823] input#jwt-secret-key {
  width: 300px !important;
}
.input-with-icon[data-v-e8c7e823] {
  display: flex;
  align-items: center;
}
.input-with-icon .status-icon[data-v-e8c7e823] {
  margin-bottom: 10px;
  display: flex;
  align-items: center;
}`));
      document.head.appendChild(elementStyle);
    }
  } catch (e) {
    console.error("vite-plugin-css-injected-by-js", e);
  }
})();
/*! third party licenses: js/vendor.LICENSE.txt */
const appName = "permalink";
const appVersion = "1.0.0";
import { g as getCanonicalLocale, n as normalizeComponent$1, r as register, a as getCurrentInstance, V as Vue, c as computed, b as commonjsGlobal, A as ActionTextMixin, t as t10, d as t50, e as t, f as cancelableClient, v, h as t3, i as getDefaultExportFromCjs, _, j as getCurrentUser, w, k as f, l as ref$1, m as readonly, o as directiveHooks, p as noop$1, q as isIOS, s as isClient, u as watch, x as toValue, y as isObject$1, z as toRef, B as tryOnScopeDispose, C as t9, D as getBuilder_1, N as NcIconSvgWrapper, E as NcButton, F as NcActions, G as DotsHorizontal, H as unsubscribe, I as subscribe, J as NcActionButton, K as t35, L as t15, M as GenRandomId, O as Close, P as t24, Q as t41, R as t37, S as ScopeComponent, T as NcPopover, U as Check, W as t27, X as t49, Y as t16, Z as t47, $ as t25, a0 as t18, a1 as t12, a2 as t19, a3 as t20, a4 as t42, a5 as t14, a6 as useSlots, a7 as useFocusWithin, a8 as nextTick, a9 as t45, aa as t46, ab as t13, ac as t6, ad as t26, ae as t1, af as t28, ag as t32, ah as t2, ai as t40, aj as t34, ak as t5, al as useCssVars, am as t39, an as t36, ao as t8, ap as t21, aq as t7, ar as h, as as t44, at as t38, au as t22, av as t29, aw as t17, ax as t11, ay as t31, az as t0, aA as t43, aB as t23, aC as t48, aD as options, aE as normalizeComponent$2, aF as translate, aG as VTooltip, aH as CheckIcon, aI as showError } from "./style-CcVbWovW.chunk.mjs";
/*!
 * SPDX-FileCopyrightText: 2022 Nextcloud GmbH and Nextcloud contributors
 * SPDX-License-Identifier: GPL-3.0-or-later
 */
function getFirstDay() {
  if (typeof window.firstDay !== "undefined") {
    return window.firstDay;
  }
  const intl = new Intl.Locale(getCanonicalLocale());
  const weekInfo = intl.getWeekInfo?.() ?? intl.weekInfo;
  if (weekInfo) {
    return weekInfo.firstDay % 7;
  }
  return 1;
}
function getDayNames() {
  if (typeof window.dayNames !== "undefined") {
    return window.dayNames;
  }
  const locale3 = getCanonicalLocale();
  return [
    (/* @__PURE__ */ new Date("1970-01-04T00:00:00.000Z")).toLocaleDateString(locale3, { weekday: "long" }),
    (/* @__PURE__ */ new Date("1970-01-05T00:00:00.000Z")).toLocaleDateString(locale3, { weekday: "long" }),
    (/* @__PURE__ */ new Date("1970-01-06T00:00:00.000Z")).toLocaleDateString(locale3, { weekday: "long" }),
    (/* @__PURE__ */ new Date("1970-01-07T00:00:00.000Z")).toLocaleDateString(locale3, { weekday: "long" }),
    (/* @__PURE__ */ new Date("1970-01-08T00:00:00.000Z")).toLocaleDateString(locale3, { weekday: "long" }),
    (/* @__PURE__ */ new Date("1970-01-09T00:00:00.000Z")).toLocaleDateString(locale3, { weekday: "long" }),
    (/* @__PURE__ */ new Date("1970-01-10T00:00:00.000Z")).toLocaleDateString(locale3, { weekday: "long" })
  ];
}
function getDayNamesShort() {
  if (typeof window.dayNamesShort !== "undefined") {
    return window.dayNamesShort;
  }
  const locale3 = getCanonicalLocale();
  return [
    (/* @__PURE__ */ new Date("1970-01-04T00:00:00.000Z")).toLocaleDateString(locale3, { weekday: "short" }),
    (/* @__PURE__ */ new Date("1970-01-05T00:00:00.000Z")).toLocaleDateString(locale3, { weekday: "short" }),
    (/* @__PURE__ */ new Date("1970-01-06T00:00:00.000Z")).toLocaleDateString(locale3, { weekday: "short" }),
    (/* @__PURE__ */ new Date("1970-01-07T00:00:00.000Z")).toLocaleDateString(locale3, { weekday: "short" }),
    (/* @__PURE__ */ new Date("1970-01-08T00:00:00.000Z")).toLocaleDateString(locale3, { weekday: "short" }),
    (/* @__PURE__ */ new Date("1970-01-09T00:00:00.000Z")).toLocaleDateString(locale3, { weekday: "short" }),
    (/* @__PURE__ */ new Date("1970-01-10T00:00:00.000Z")).toLocaleDateString(locale3, { weekday: "short" })
  ];
}
function getDayNamesMin() {
  if (typeof window.dayNamesMin !== "undefined") {
    return window.dayNamesMin;
  }
  const locale3 = getCanonicalLocale();
  return [
    (/* @__PURE__ */ new Date("1970-01-04T00:00:00.000Z")).toLocaleDateString(locale3, { weekday: "narrow" }),
    (/* @__PURE__ */ new Date("1970-01-05T00:00:00.000Z")).toLocaleDateString(locale3, { weekday: "narrow" }),
    (/* @__PURE__ */ new Date("1970-01-06T00:00:00.000Z")).toLocaleDateString(locale3, { weekday: "narrow" }),
    (/* @__PURE__ */ new Date("1970-01-07T00:00:00.000Z")).toLocaleDateString(locale3, { weekday: "narrow" }),
    (/* @__PURE__ */ new Date("1970-01-08T00:00:00.000Z")).toLocaleDateString(locale3, { weekday: "narrow" }),
    (/* @__PURE__ */ new Date("1970-01-09T00:00:00.000Z")).toLocaleDateString(locale3, { weekday: "narrow" }),
    (/* @__PURE__ */ new Date("1970-01-10T00:00:00.000Z")).toLocaleDateString(locale3, { weekday: "narrow" })
  ];
}
function getMonthNames() {
  if (typeof window.monthNames !== "undefined") {
    return window.monthNames;
  }
  const locale3 = getCanonicalLocale();
  return [
    (/* @__PURE__ */ new Date("1970-01-01T00:00:00.000Z")).toLocaleDateString(locale3, { month: "long" }),
    (/* @__PURE__ */ new Date("1970-02-01T00:00:00.000Z")).toLocaleDateString(locale3, { month: "long" }),
    (/* @__PURE__ */ new Date("1970-03-01T00:00:00.000Z")).toLocaleDateString(locale3, { month: "long" }),
    (/* @__PURE__ */ new Date("1970-04-01T00:00:00.000Z")).toLocaleDateString(locale3, { month: "long" }),
    (/* @__PURE__ */ new Date("1970-05-01T00:00:00.000Z")).toLocaleDateString(locale3, { month: "long" }),
    (/* @__PURE__ */ new Date("1970-06-01T00:00:00.000Z")).toLocaleDateString(locale3, { month: "long" }),
    (/* @__PURE__ */ new Date("1970-07-01T00:00:00.000Z")).toLocaleDateString(locale3, { month: "long" }),
    (/* @__PURE__ */ new Date("1970-08-01T00:00:00.000Z")).toLocaleDateString(locale3, { month: "long" }),
    (/* @__PURE__ */ new Date("1970-09-01T00:00:00.000Z")).toLocaleDateString(locale3, { month: "long" }),
    (/* @__PURE__ */ new Date("1970-10-01T00:00:00.000Z")).toLocaleDateString(locale3, { month: "long" }),
    (/* @__PURE__ */ new Date("1970-11-01T00:00:00.000Z")).toLocaleDateString(locale3, { month: "long" }),
    (/* @__PURE__ */ new Date("1970-12-01T00:00:00.000Z")).toLocaleDateString(locale3, { month: "long" })
  ];
}
function getMonthNamesShort() {
  if (typeof window.monthNamesShort !== "undefined") {
    return window.monthNamesShort;
  }
  const locale3 = getCanonicalLocale();
  return [
    (/* @__PURE__ */ new Date("1970-01-01T00:00:00.000Z")).toLocaleDateString(locale3, { month: "short" }),
    (/* @__PURE__ */ new Date("1970-02-01T00:00:00.000Z")).toLocaleDateString(locale3, { month: "short" }),
    (/* @__PURE__ */ new Date("1970-03-01T00:00:00.000Z")).toLocaleDateString(locale3, { month: "short" }),
    (/* @__PURE__ */ new Date("1970-04-01T00:00:00.000Z")).toLocaleDateString(locale3, { month: "short" }),
    (/* @__PURE__ */ new Date("1970-05-01T00:00:00.000Z")).toLocaleDateString(locale3, { month: "short" }),
    (/* @__PURE__ */ new Date("1970-06-01T00:00:00.000Z")).toLocaleDateString(locale3, { month: "short" }),
    (/* @__PURE__ */ new Date("1970-07-01T00:00:00.000Z")).toLocaleDateString(locale3, { month: "short" }),
    (/* @__PURE__ */ new Date("1970-08-01T00:00:00.000Z")).toLocaleDateString(locale3, { month: "short" }),
    (/* @__PURE__ */ new Date("1970-09-01T00:00:00.000Z")).toLocaleDateString(locale3, { month: "short" }),
    (/* @__PURE__ */ new Date("1970-10-01T00:00:00.000Z")).toLocaleDateString(locale3, { month: "short" }),
    (/* @__PURE__ */ new Date("1970-11-01T00:00:00.000Z")).toLocaleDateString(locale3, { month: "short" }),
    (/* @__PURE__ */ new Date("1970-12-01T00:00:00.000Z")).toLocaleDateString(locale3, { month: "short" })
  ];
}
const _sfc_main$j = {
  name: "NcLoadingIcon",
  props: {
    /**
     * Specify the size of the loading icon.
     */
    size: {
      type: Number,
      default: 20
    },
    /**
     * The appearance of the loading icon.
     * 'auto' adjusts to the Nextcloud color scheme,
     * 'light' and 'dark' are static.
     */
    appearance: {
      type: String,
      validator(value3) {
        return ["auto", "light", "dark"].includes(value3);
      },
      default: "auto"
    },
    /**
     * Specify what is loading.
     */
    name: {
      type: String,
      default: ""
    }
  },
  computed: {
    colors() {
      const colors = ["#777", "#CCC"];
      if (this.appearance === "light") {
        return colors;
      } else if (this.appearance === "dark") {
        return colors.reverse();
      }
      return ["var(--color-loading-light)", "var(--color-loading-dark)"];
    }
  }
};
var _sfc_render$j = function render() {
  var _vm = this, _c = _vm._self._c;
  return _c("span", { staticClass: "material-design-icon loading-icon", attrs: { "aria-label": _vm.name, "role": "img" } }, [_c("svg", { attrs: { "width": _vm.size, "height": _vm.size, "viewBox": "0 0 24 24" } }, [_c("path", { attrs: { "fill": _vm.colors[0], "d": "M12,4V2A10,10 0 1,0 22,12H20A8,8 0 1,1 12,4Z" } }), _c("path", { attrs: { "fill": _vm.colors[1], "d": "M12,4V2A10,10 0 0,1 22,12H20A8,8 0 0,0 12,4Z" } }, [_vm.name ? _c("title", [_vm._v(_vm._s(_vm.name))]) : _vm._e()])])]);
};
var _sfc_staticRenderFns$j = [];
var __component__$j = /* @__PURE__ */ normalizeComponent$1(
  _sfc_main$j,
  _sfc_render$j,
  _sfc_staticRenderFns$j,
  false,
  null,
  "551209a3"
);
const NcLoadingIcon = __component__$j.exports;
register();
function useModelMigration(oldModelName, oldModelEvent, required = false) {
  const vm = getCurrentInstance().proxy;
  if (required && vm.$props[oldModelName] === void 0 && vm.$props.modelValue === void 0) {
    Vue.util.warn(`Missing required prop: "modelValue" or old "${oldModelName}"`);
  }
  const model = computed({
    get() {
      if (vm.$props[oldModelName] !== void 0) {
        return vm.$props[oldModelName];
      }
      return vm.$props.modelValue;
    },
    set(value3) {
      vm.$emit("update:modelValue", value3);
      vm.$emit("update:model-value", value3);
      vm.$emit(oldModelEvent, value3);
    }
  });
  return model;
}
class Binary {
  /**
   * Creates a binary value from the given string.
   *
   * @param {String} aString        The binary value string
   * @return {Binary}               The binary value instance
   */
  static fromString(aString) {
    return new Binary(aString);
  }
  /**
   * Creates a new ICAL.Binary instance
   *
   * @param {String} aValue     The binary data for this value
   */
  constructor(aValue) {
    this.value = aValue;
  }
  /**
   * The type name, to be used in the jCal object.
   * @default "binary"
   * @constant
   */
  icaltype = "binary";
  /**
   * Base64 decode the current value
   *
   * @return {String}         The base64-decoded value
   */
  decodeValue() {
    return this._b64_decode(this.value);
  }
  /**
   * Encodes the passed parameter with base64 and sets the internal
   * value to the result.
   *
   * @param {String} aValue      The raw binary value to encode
   */
  setEncodedValue(aValue) {
    this.value = this._b64_encode(aValue);
  }
  _b64_encode(data11) {
    let b64 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";
    let o1, o2, o3, h1, h22, h3, h4, bits, i = 0, ac = 0, enc = "", tmp_arr = [];
    if (!data11) {
      return data11;
    }
    do {
      o1 = data11.charCodeAt(i++);
      o2 = data11.charCodeAt(i++);
      o3 = data11.charCodeAt(i++);
      bits = o1 << 16 | o2 << 8 | o3;
      h1 = bits >> 18 & 63;
      h22 = bits >> 12 & 63;
      h3 = bits >> 6 & 63;
      h4 = bits & 63;
      tmp_arr[ac++] = b64.charAt(h1) + b64.charAt(h22) + b64.charAt(h3) + b64.charAt(h4);
    } while (i < data11.length);
    enc = tmp_arr.join("");
    let r = data11.length % 3;
    return (r ? enc.slice(0, r - 3) : enc) + "===".slice(r || 3);
  }
  _b64_decode(data11) {
    let b64 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";
    let o1, o2, o3, h1, h22, h3, h4, bits, i = 0, ac = 0, dec = "", tmp_arr = [];
    if (!data11) {
      return data11;
    }
    data11 += "";
    do {
      h1 = b64.indexOf(data11.charAt(i++));
      h22 = b64.indexOf(data11.charAt(i++));
      h3 = b64.indexOf(data11.charAt(i++));
      h4 = b64.indexOf(data11.charAt(i++));
      bits = h1 << 18 | h22 << 12 | h3 << 6 | h4;
      o1 = bits >> 16 & 255;
      o2 = bits >> 8 & 255;
      o3 = bits & 255;
      if (h3 == 64) {
        tmp_arr[ac++] = String.fromCharCode(o1);
      } else if (h4 == 64) {
        tmp_arr[ac++] = String.fromCharCode(o1, o2);
      } else {
        tmp_arr[ac++] = String.fromCharCode(o1, o2, o3);
      }
    } while (i < data11.length);
    dec = tmp_arr.join("");
    return dec;
  }
  /**
   * The string representation of this value
   * @return {String}
   */
  toString() {
    return this.value;
  }
}
const DURATION_LETTERS = /([PDWHMTS]{1,1})/;
const DATA_PROPS_TO_COPY = ["weeks", "days", "hours", "minutes", "seconds", "isNegative"];
class Duration {
  /**
   * Returns a new ICAL.Duration instance from the passed seconds value.
   *
   * @param {Number} aSeconds       The seconds to create the instance from
   * @return {Duration}             The newly created duration instance
   */
  static fromSeconds(aSeconds) {
    return new Duration().fromSeconds(aSeconds);
  }
  /**
   * Checks if the given string is an iCalendar duration value.
   *
   * @param {String} value      The raw ical value
   * @return {Boolean}          True, if the given value is of the
   *                              duration ical type
   */
  static isValueString(string) {
    return string[0] === "P" || string[1] === "P";
  }
  /**
   * Creates a new {@link ICAL.Duration} instance from the passed string.
   *
   * @param {String} aStr       The string to parse
   * @return {Duration}         The created duration instance
   */
  static fromString(aStr) {
    let pos = 0;
    let dict = /* @__PURE__ */ Object.create(null);
    let chunks = 0;
    while ((pos = aStr.search(DURATION_LETTERS)) !== -1) {
      let type = aStr[pos];
      let numeric2 = aStr.slice(0, Math.max(0, pos));
      aStr = aStr.slice(pos + 1);
      chunks += parseDurationChunk(type, numeric2, dict);
    }
    if (chunks < 2) {
      throw new Error(
        'invalid duration value: Not enough duration components in "' + aStr + '"'
      );
    }
    return new Duration(dict);
  }
  /**
   * Creates a new ICAL.Duration instance from the given data object.
   *
   * @param {Object} aData                An object with members of the duration
   * @param {Number=} aData.weeks         Duration in weeks
   * @param {Number=} aData.days          Duration in days
   * @param {Number=} aData.hours         Duration in hours
   * @param {Number=} aData.minutes       Duration in minutes
   * @param {Number=} aData.seconds       Duration in seconds
   * @param {Boolean=} aData.isNegative   If true, the duration is negative
   * @return {Duration}                   The createad duration instance
   */
  static fromData(aData) {
    return new Duration(aData);
  }
  /**
   * Creates a new ICAL.Duration instance.
   *
   * @param {Object} data                 An object with members of the duration
   * @param {Number=} data.weeks          Duration in weeks
   * @param {Number=} data.days           Duration in days
   * @param {Number=} data.hours          Duration in hours
   * @param {Number=} data.minutes        Duration in minutes
   * @param {Number=} data.seconds        Duration in seconds
   * @param {Boolean=} data.isNegative    If true, the duration is negative
   */
  constructor(data11) {
    this.wrappedJSObject = this;
    this.fromData(data11);
  }
  /**
   * The weeks in this duration
   * @type {Number}
   * @default 0
   */
  weeks = 0;
  /**
   * The days in this duration
   * @type {Number}
   * @default 0
   */
  days = 0;
  /**
   * The days in this duration
   * @type {Number}
   * @default 0
   */
  hours = 0;
  /**
   * The minutes in this duration
   * @type {Number}
   * @default 0
   */
  minutes = 0;
  /**
   * The seconds in this duration
   * @type {Number}
   * @default 0
   */
  seconds = 0;
  /**
   * The seconds in this duration
   * @type {Boolean}
   * @default false
   */
  isNegative = false;
  /**
   * The class identifier.
   * @constant
   * @type {String}
   * @default "icalduration"
   */
  icalclass = "icalduration";
  /**
   * The type name, to be used in the jCal object.
   * @constant
   * @type {String}
   * @default "duration"
   */
  icaltype = "duration";
  /**
   * Returns a clone of the duration object.
   *
   * @return {Duration}      The cloned object
   */
  clone() {
    return Duration.fromData(this);
  }
  /**
   * The duration value expressed as a number of seconds.
   *
   * @return {Number}             The duration value in seconds
   */
  toSeconds() {
    let seconds = this.seconds + 60 * this.minutes + 3600 * this.hours + 86400 * this.days + 7 * 86400 * this.weeks;
    return this.isNegative ? -seconds : seconds;
  }
  /**
   * Reads the passed seconds value into this duration object. Afterwards,
   * members like {@link ICAL.Duration#days days} and {@link ICAL.Duration#weeks weeks} will be set up
   * accordingly.
   *
   * @param {Number} aSeconds     The duration value in seconds
   * @return {Duration}           Returns this instance
   */
  fromSeconds(aSeconds) {
    let secs = Math.abs(aSeconds);
    this.isNegative = aSeconds < 0;
    this.days = trunc(secs / 86400);
    if (this.days % 7 == 0) {
      this.weeks = this.days / 7;
      this.days = 0;
    } else {
      this.weeks = 0;
    }
    secs -= (this.days + 7 * this.weeks) * 86400;
    this.hours = trunc(secs / 3600);
    secs -= this.hours * 3600;
    this.minutes = trunc(secs / 60);
    secs -= this.minutes * 60;
    this.seconds = secs;
    return this;
  }
  /**
   * Sets up the current instance using members from the passed data object.
   *
   * @param {Object} aData                An object with members of the duration
   * @param {Number=} aData.weeks         Duration in weeks
   * @param {Number=} aData.days          Duration in days
   * @param {Number=} aData.hours         Duration in hours
   * @param {Number=} aData.minutes       Duration in minutes
   * @param {Number=} aData.seconds       Duration in seconds
   * @param {Boolean=} aData.isNegative   If true, the duration is negative
   */
  fromData(aData) {
    for (let prop of DATA_PROPS_TO_COPY) {
      if (aData && prop in aData) {
        this[prop] = aData[prop];
      } else {
        this[prop] = 0;
      }
    }
  }
  /**
   * Resets the duration instance to the default values, i.e. PT0S
   */
  reset() {
    this.isNegative = false;
    this.weeks = 0;
    this.days = 0;
    this.hours = 0;
    this.minutes = 0;
    this.seconds = 0;
  }
  /**
   * Compares the duration instance with another one.
   *
   * @param {Duration} aOther             The instance to compare with
   * @return {Number}                     -1, 0 or 1 for less/equal/greater
   */
  compare(aOther) {
    let thisSeconds = this.toSeconds();
    let otherSeconds = aOther.toSeconds();
    return (thisSeconds > otherSeconds) - (thisSeconds < otherSeconds);
  }
  /**
   * Normalizes the duration instance. For example, a duration with a value
   * of 61 seconds will be normalized to 1 minute and 1 second.
   */
  normalize() {
    this.fromSeconds(this.toSeconds());
  }
  /**
   * The string representation of this duration.
   * @return {String}
   */
  toString() {
    if (this.toSeconds() == 0) {
      return "PT0S";
    } else {
      let str = "";
      if (this.isNegative) str += "-";
      str += "P";
      if (this.weeks) str += this.weeks + "W";
      if (this.days) str += this.days + "D";
      if (this.hours || this.minutes || this.seconds) {
        str += "T";
        if (this.hours) str += this.hours + "H";
        if (this.minutes) str += this.minutes + "M";
        if (this.seconds) str += this.seconds + "S";
      }
      return str;
    }
  }
  /**
   * The iCalendar string representation of this duration.
   * @return {String}
   */
  toICALString() {
    return this.toString();
  }
}
function parseDurationChunk(letter, number, object) {
  let type;
  switch (letter) {
    case "P":
      if (number && number === "-") {
        object.isNegative = true;
      } else {
        object.isNegative = false;
      }
      break;
    case "D":
      type = "days";
      break;
    case "W":
      type = "weeks";
      break;
    case "H":
      type = "hours";
      break;
    case "M":
      type = "minutes";
      break;
    case "S":
      type = "seconds";
      break;
    default:
      return 0;
  }
  if (type) {
    if (!number && number !== 0) {
      throw new Error(
        'invalid duration value: Missing number before "' + letter + '"'
      );
    }
    let num = parseInt(number, 10);
    if (isStrictlyNaN(num)) {
      throw new Error(
        'invalid duration value: Invalid number "' + number + '" before "' + letter + '"'
      );
    }
    object[type] = num;
  }
  return 1;
}
class Time {
  static _dowCache = {};
  static _wnCache = {};
  /**
   * Returns the days in the given month
   *
   * @param {Number} month      The month to check
   * @param {Number} year       The year to check
   * @return {Number}           The number of days in the month
   */
  static daysInMonth(month, year) {
    let _daysInMonth = [0, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];
    let days2 = 30;
    if (month < 1 || month > 12) return days2;
    days2 = _daysInMonth[month];
    if (month == 2) {
      days2 += Time.isLeapYear(year);
    }
    return days2;
  }
  /**
   * Checks if the year is a leap year
   *
   * @param {Number} year       The year to check
   * @return {Boolean}          True, if the year is a leap year
   */
  static isLeapYear(year) {
    if (year <= 1752) {
      return year % 4 == 0;
    } else {
      return year % 4 == 0 && year % 100 != 0 || year % 400 == 0;
    }
  }
  /**
   * Create a new ICAL.Time from the day of year and year. The date is returned
   * in floating timezone.
   *
   * @param {Number} aDayOfYear     The day of year
   * @param {Number} aYear          The year to create the instance in
   * @return {Time}                 The created instance with the calculated date
   */
  static fromDayOfYear(aDayOfYear, aYear) {
    let year = aYear;
    let doy = aDayOfYear;
    let tt2 = new Time();
    tt2.auto_normalize = false;
    let is_leap = Time.isLeapYear(year) ? 1 : 0;
    if (doy < 1) {
      year--;
      is_leap = Time.isLeapYear(year) ? 1 : 0;
      doy += Time.daysInYearPassedMonth[is_leap][12];
      return Time.fromDayOfYear(doy, year);
    } else if (doy > Time.daysInYearPassedMonth[is_leap][12]) {
      is_leap = Time.isLeapYear(year) ? 1 : 0;
      doy -= Time.daysInYearPassedMonth[is_leap][12];
      year++;
      return Time.fromDayOfYear(doy, year);
    }
    tt2.year = year;
    tt2.isDate = true;
    for (let month = 11; month >= 0; month--) {
      if (doy > Time.daysInYearPassedMonth[is_leap][month]) {
        tt2.month = month + 1;
        tt2.day = doy - Time.daysInYearPassedMonth[is_leap][month];
        break;
      }
    }
    tt2.auto_normalize = true;
    return tt2;
  }
  /**
   * Returns a new ICAL.Time instance from a date string, e.g 2015-01-02.
   *
   * @deprecated                Use {@link ICAL.Time.fromDateString} instead
   * @param {String} str        The string to create from
   * @return {Time}             The date/time instance
   */
  static fromStringv2(str) {
    return new Time({
      year: parseInt(str.slice(0, 4), 10),
      month: parseInt(str.slice(5, 7), 10),
      day: parseInt(str.slice(8, 10), 10),
      isDate: true
    });
  }
  /**
   * Returns a new ICAL.Time instance from a date string, e.g 2015-01-02.
   *
   * @param {String} aValue     The string to create from
   * @return {Time}             The date/time instance
   */
  static fromDateString(aValue) {
    return new Time({
      year: strictParseInt(aValue.slice(0, 4)),
      month: strictParseInt(aValue.slice(5, 7)),
      day: strictParseInt(aValue.slice(8, 10)),
      isDate: true
    });
  }
  /**
   * Returns a new ICAL.Time instance from a date-time string, e.g
   * 2015-01-02T03:04:05. If a property is specified, the timezone is set up
   * from the property's TZID parameter.
   *
   * @param {String} aValue         The string to create from
   * @param {Property=} prop        The property the date belongs to
   * @return {Time}                 The date/time instance
   */
  static fromDateTimeString(aValue, prop) {
    if (aValue.length < 19) {
      throw new Error(
        'invalid date-time value: "' + aValue + '"'
      );
    }
    let zone;
    let zoneId;
    if (aValue[19] && aValue[19] === "Z") {
      zone = Timezone$1.utcTimezone;
    } else if (prop) {
      zoneId = prop.getParameter("tzid");
      if (prop.parent) {
        if (prop.parent.name === "standard" || prop.parent.name === "daylight") {
          zone = Timezone$1.localTimezone;
        } else if (zoneId) {
          zone = prop.parent.getTimeZoneByID(zoneId);
        }
      }
    }
    const timeData = {
      year: strictParseInt(aValue.slice(0, 4)),
      month: strictParseInt(aValue.slice(5, 7)),
      day: strictParseInt(aValue.slice(8, 10)),
      hour: strictParseInt(aValue.slice(11, 13)),
      minute: strictParseInt(aValue.slice(14, 16)),
      second: strictParseInt(aValue.slice(17, 19))
    };
    if (zoneId && !zone) {
      timeData.timezone = zoneId;
    }
    return new Time(timeData, zone);
  }
  /**
   * Returns a new ICAL.Time instance from a date or date-time string,
   *
   * @param {String} aValue         The string to create from
   * @param {Property=} prop        The property the date belongs to
   * @return {Time}                 The date/time instance
   */
  static fromString(aValue, aProperty) {
    if (aValue.length > 10) {
      return Time.fromDateTimeString(aValue, aProperty);
    } else {
      return Time.fromDateString(aValue);
    }
  }
  /**
   * Creates a new ICAL.Time instance from the given Javascript Date.
   *
   * @param {?Date} aDate             The Javascript Date to read, or null to reset
   * @param {Boolean} [useUTC=false]  If true, the UTC values of the date will be used
   */
  static fromJSDate(aDate, useUTC) {
    let tt2 = new Time();
    return tt2.fromJSDate(aDate, useUTC);
  }
  /**
   * Creates a new ICAL.Time instance from the the passed data object.
   *
   * @param {Object} aData            Time initialization
   * @param {Number=} aData.year      The year for this date
   * @param {Number=} aData.month     The month for this date
   * @param {Number=} aData.day       The day for this date
   * @param {Number=} aData.hour      The hour for this date
   * @param {Number=} aData.minute    The minute for this date
   * @param {Number=} aData.second    The second for this date
   * @param {Boolean=} aData.isDate   If true, the instance represents a date
   *                                    (as opposed to a date-time)
   * @param {Timezone=} aZone         Timezone this position occurs in
   */
  static fromData = function fromData(aData, aZone) {
    let t4 = new Time();
    return t4.fromData(aData, aZone);
  };
  /**
   * Creates a new ICAL.Time instance from the current moment.
   * The instance is “floating” - has no timezone relation.
   * To create an instance considering the time zone, call
   * ICAL.Time.fromJSDate(new Date(), true)
   * @return {Time}
   */
  static now() {
    return Time.fromJSDate(/* @__PURE__ */ new Date(), false);
  }
  /**
   * Returns the date on which ISO week number 1 starts.
   *
   * @see Time#weekNumber
   * @param {Number} aYear                  The year to search in
   * @param {weekDay=} aWeekStart           The week start weekday, used for calculation.
   * @return {Time}                         The date on which week number 1 starts
   */
  static weekOneStarts(aYear, aWeekStart) {
    let t4 = Time.fromData({
      year: aYear,
      month: 1,
      day: 1,
      isDate: true
    });
    let dow = t4.dayOfWeek();
    let wkst = aWeekStart || Time.DEFAULT_WEEK_START;
    if (dow > Time.THURSDAY) {
      t4.day += 7;
    }
    if (wkst > Time.THURSDAY) {
      t4.day -= 7;
    }
    t4.day -= dow - wkst;
    return t4;
  }
  /**
   * Get the dominical letter for the given year. Letters range from A - G for
   * common years, and AG to GF for leap years.
   *
   * @param {Number} yr           The year to retrieve the letter for
   * @return {String}             The dominical letter.
   */
  static getDominicalLetter(yr) {
    let LTRS = "GFEDCBA";
    let dom = (yr + (yr / 4 | 0) + (yr / 400 | 0) - (yr / 100 | 0) - 1) % 7;
    let isLeap = Time.isLeapYear(yr);
    if (isLeap) {
      return LTRS[(dom + 6) % 7] + LTRS[dom];
    } else {
      return LTRS[dom];
    }
  }
  static #epochTime = null;
  /**
   * January 1st, 1970 as an ICAL.Time.
   * @type {Time}
   * @constant
   * @instance
   */
  static get epochTime() {
    if (!this.#epochTime) {
      this.#epochTime = Time.fromData({
        year: 1970,
        month: 1,
        day: 1,
        hour: 0,
        minute: 0,
        second: 0,
        isDate: false,
        timezone: "Z"
      });
    }
    return this.#epochTime;
  }
  static _cmp_attr(a2, b, attr) {
    if (a2[attr] > b[attr]) return 1;
    if (a2[attr] < b[attr]) return -1;
    return 0;
  }
  /**
   * The days that have passed in the year after a given month. The array has
   * two members, one being an array of passed days for non-leap years, the
   * other analog for leap years.
   * @example
   * var isLeapYear = ICAL.Time.isLeapYear(year);
   * var passedDays = ICAL.Time.daysInYearPassedMonth[isLeapYear][month];
   * @type {Array.<Array.<Number>>}
   */
  static daysInYearPassedMonth = [
    [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334, 365],
    [0, 31, 60, 91, 121, 152, 182, 213, 244, 274, 305, 335, 366]
  ];
  static SUNDAY = 1;
  static MONDAY = 2;
  static TUESDAY = 3;
  static WEDNESDAY = 4;
  static THURSDAY = 5;
  static FRIDAY = 6;
  static SATURDAY = 7;
  /**
   * The default weekday for the WKST part.
   * @constant
   * @default ICAL.Time.MONDAY
   */
  static DEFAULT_WEEK_START = 2;
  // MONDAY
  /**
   * Creates a new ICAL.Time instance.
   *
   * @param {Object} data           Time initialization
   * @param {Number=} data.year     The year for this date
   * @param {Number=} data.month    The month for this date
   * @param {Number=} data.day      The day for this date
   * @param {Number=} data.hour     The hour for this date
   * @param {Number=} data.minute   The minute for this date
   * @param {Number=} data.second   The second for this date
   * @param {Boolean=} data.isDate  If true, the instance represents a date (as
   *                                  opposed to a date-time)
   * @param {Timezone} zone         timezone this position occurs in
   */
  constructor(data11, zone) {
    this.wrappedJSObject = this;
    let time = this._time = /* @__PURE__ */ Object.create(null);
    time.year = 0;
    time.month = 1;
    time.day = 1;
    time.hour = 0;
    time.minute = 0;
    time.second = 0;
    time.isDate = false;
    this.fromData(data11, zone);
  }
  /**
   * The class identifier.
   * @constant
   * @type {String}
   * @default "icaltime"
   */
  icalclass = "icaltime";
  _cachedUnixTime = null;
  /**
   * The type name, to be used in the jCal object. This value may change and
   * is strictly defined by the {@link ICAL.Time#isDate isDate} member.
   * @type {String}
   * @default "date-time"
   */
  get icaltype() {
    return this.isDate ? "date" : "date-time";
  }
  /**
   * The timezone for this time.
   * @type {Timezone}
   */
  zone = null;
  /**
   * Internal uses to indicate that a change has been made and the next read
   * operation must attempt to normalize the value (for example changing the
   * day to 33).
   *
   * @type {Boolean}
   * @private
   */
  _pendingNormalization = false;
  /**
   * Returns a clone of the time object.
   *
   * @return {Time}              The cloned object
   */
  clone() {
    return new Time(this._time, this.zone);
  }
  /**
   * Reset the time instance to epoch time
   */
  reset() {
    this.fromData(Time.epochTime);
    this.zone = Timezone$1.utcTimezone;
  }
  /**
   * Reset the time instance to the given date/time values.
   *
   * @param {Number} year             The year to set
   * @param {Number} month            The month to set
   * @param {Number} day              The day to set
   * @param {Number} hour             The hour to set
   * @param {Number} minute           The minute to set
   * @param {Number} second           The second to set
   * @param {Timezone} timezone       The timezone to set
   */
  resetTo(year, month, day, hour, minute, second, timezone) {
    this.fromData({
      year,
      month,
      day,
      hour,
      minute,
      second,
      zone: timezone
    });
  }
  /**
   * Set up the current instance from the Javascript date value.
   *
   * @param {?Date} aDate             The Javascript Date to read, or null to reset
   * @param {Boolean} [useUTC=false]  If true, the UTC values of the date will be used
   */
  fromJSDate(aDate, useUTC) {
    if (!aDate) {
      this.reset();
    } else {
      if (useUTC) {
        this.zone = Timezone$1.utcTimezone;
        this.year = aDate.getUTCFullYear();
        this.month = aDate.getUTCMonth() + 1;
        this.day = aDate.getUTCDate();
        this.hour = aDate.getUTCHours();
        this.minute = aDate.getUTCMinutes();
        this.second = aDate.getUTCSeconds();
      } else {
        this.zone = Timezone$1.localTimezone;
        this.year = aDate.getFullYear();
        this.month = aDate.getMonth() + 1;
        this.day = aDate.getDate();
        this.hour = aDate.getHours();
        this.minute = aDate.getMinutes();
        this.second = aDate.getSeconds();
      }
    }
    this._cachedUnixTime = null;
    return this;
  }
  /**
   * Sets up the current instance using members from the passed data object.
   *
   * @param {Object} aData            Time initialization
   * @param {Number=} aData.year      The year for this date
   * @param {Number=} aData.month     The month for this date
   * @param {Number=} aData.day       The day for this date
   * @param {Number=} aData.hour      The hour for this date
   * @param {Number=} aData.minute    The minute for this date
   * @param {Number=} aData.second    The second for this date
   * @param {Boolean=} aData.isDate   If true, the instance represents a date
   *                                    (as opposed to a date-time)
   * @param {Timezone=} aZone         Timezone this position occurs in
   */
  fromData(aData, aZone) {
    if (aData) {
      for (let [key, value3] of Object.entries(aData)) {
        if (key === "icaltype") continue;
        this[key] = value3;
      }
    }
    if (aZone) {
      this.zone = aZone;
    }
    if (aData && !("isDate" in aData)) {
      this.isDate = !("hour" in aData);
    } else if (aData && "isDate" in aData) {
      this.isDate = aData.isDate;
    }
    if (aData && "timezone" in aData) {
      let zone = TimezoneService.get(
        aData.timezone
      );
      this.zone = zone || Timezone$1.localTimezone;
    }
    if (aData && "zone" in aData) {
      this.zone = aData.zone;
    }
    if (!this.zone) {
      this.zone = Timezone$1.localTimezone;
    }
    this._cachedUnixTime = null;
    return this;
  }
  /**
   * Calculate the day of week.
   * @param {weekDay=} aWeekStart
   *        The week start weekday, defaults to SUNDAY
   * @return {weekDay}
   */
  dayOfWeek(aWeekStart) {
    let firstDow = aWeekStart || Time.SUNDAY;
    let dowCacheKey = (this.year << 12) + (this.month << 8) + (this.day << 3) + firstDow;
    if (dowCacheKey in Time._dowCache) {
      return Time._dowCache[dowCacheKey];
    }
    let q = this.day;
    let m2 = this.month + (this.month < 3 ? 12 : 0);
    let Y2 = this.year - (this.month < 3 ? 1 : 0);
    let h3 = q + Y2 + trunc((m2 + 1) * 26 / 10) + trunc(Y2 / 4);
    {
      h3 += trunc(Y2 / 100) * 6 + trunc(Y2 / 400);
    }
    h3 = (h3 + 7 - firstDow) % 7 + 1;
    Time._dowCache[dowCacheKey] = h3;
    return h3;
  }
  /**
   * Calculate the day of year.
   * @return {Number}
   */
  dayOfYear() {
    let is_leap = Time.isLeapYear(this.year) ? 1 : 0;
    let diypm = Time.daysInYearPassedMonth;
    return diypm[is_leap][this.month - 1] + this.day;
  }
  /**
   * Returns a copy of the current date/time, rewound to the start of the
   * week. The resulting ICAL.Time instance is of icaltype date, even if this
   * is a date-time.
   *
   * @param {weekDay=} aWeekStart
   *        The week start weekday, defaults to SUNDAY
   * @return {Time}      The start of the week (cloned)
   */
  startOfWeek(aWeekStart) {
    let firstDow = aWeekStart || Time.SUNDAY;
    let result = this.clone();
    result.day -= (this.dayOfWeek() + 7 - firstDow) % 7;
    result.isDate = true;
    result.hour = 0;
    result.minute = 0;
    result.second = 0;
    return result;
  }
  /**
   * Returns a copy of the current date/time, shifted to the end of the week.
   * The resulting ICAL.Time instance is of icaltype date, even if this is a
   * date-time.
   *
   * @param {weekDay=} aWeekStart
   *        The week start weekday, defaults to SUNDAY
   * @return {Time}      The end of the week (cloned)
   */
  endOfWeek(aWeekStart) {
    let firstDow = aWeekStart || Time.SUNDAY;
    let result = this.clone();
    result.day += (7 - this.dayOfWeek() + firstDow - Time.SUNDAY) % 7;
    result.isDate = true;
    result.hour = 0;
    result.minute = 0;
    result.second = 0;
    return result;
  }
  /**
   * Returns a copy of the current date/time, rewound to the start of the
   * month. The resulting ICAL.Time instance is of icaltype date, even if
   * this is a date-time.
   *
   * @return {Time}      The start of the month (cloned)
   */
  startOfMonth() {
    let result = this.clone();
    result.day = 1;
    result.isDate = true;
    result.hour = 0;
    result.minute = 0;
    result.second = 0;
    return result;
  }
  /**
   * Returns a copy of the current date/time, shifted to the end of the
   * month.  The resulting ICAL.Time instance is of icaltype date, even if
   * this is a date-time.
   *
   * @return {Time}      The end of the month (cloned)
   */
  endOfMonth() {
    let result = this.clone();
    result.day = Time.daysInMonth(result.month, result.year);
    result.isDate = true;
    result.hour = 0;
    result.minute = 0;
    result.second = 0;
    return result;
  }
  /**
   * Returns a copy of the current date/time, rewound to the start of the
   * year. The resulting ICAL.Time instance is of icaltype date, even if
   * this is a date-time.
   *
   * @return {Time}      The start of the year (cloned)
   */
  startOfYear() {
    let result = this.clone();
    result.day = 1;
    result.month = 1;
    result.isDate = true;
    result.hour = 0;
    result.minute = 0;
    result.second = 0;
    return result;
  }
  /**
   * Returns a copy of the current date/time, shifted to the end of the
   * year.  The resulting ICAL.Time instance is of icaltype date, even if
   * this is a date-time.
   *
   * @return {Time}      The end of the year (cloned)
   */
  endOfYear() {
    let result = this.clone();
    result.day = 31;
    result.month = 12;
    result.isDate = true;
    result.hour = 0;
    result.minute = 0;
    result.second = 0;
    return result;
  }
  /**
   * First calculates the start of the week, then returns the day of year for
   * this date. If the day falls into the previous year, the day is zero or negative.
   *
   * @param {weekDay=} aFirstDayOfWeek
   *        The week start weekday, defaults to SUNDAY
   * @return {Number}     The calculated day of year
   */
  startDoyWeek(aFirstDayOfWeek) {
    let firstDow = aFirstDayOfWeek || Time.SUNDAY;
    let delta = this.dayOfWeek() - firstDow;
    if (delta < 0) delta += 7;
    return this.dayOfYear() - delta;
  }
  /**
   * Get the dominical letter for the current year. Letters range from A - G
   * for common years, and AG to GF for leap years.
   *
   * @param {Number} yr           The year to retrieve the letter for
   * @return {String}             The dominical letter.
   */
  getDominicalLetter() {
    return Time.getDominicalLetter(this.year);
  }
  /**
   * Finds the nthWeekDay relative to the current month (not day).  The
   * returned value is a day relative the month that this month belongs to so
   * 1 would indicate the first of the month and 40 would indicate a day in
   * the following month.
   *
   * @param {Number} aDayOfWeek   Day of the week see the day name constants
   * @param {Number} aPos         Nth occurrence of a given week day values
   *        of 1 and 0 both indicate the first weekday of that type. aPos may
   *        be either positive or negative
   *
   * @return {Number} numeric value indicating a day relative
   *                   to the current month of this time object
   */
  nthWeekDay(aDayOfWeek, aPos) {
    let daysInMonth = Time.daysInMonth(this.month, this.year);
    let weekday;
    let pos = aPos;
    let start = 0;
    let otherDay = this.clone();
    if (pos >= 0) {
      otherDay.day = 1;
      if (pos != 0) {
        pos--;
      }
      start = otherDay.day;
      let startDow = otherDay.dayOfWeek();
      let offset2 = aDayOfWeek - startDow;
      if (offset2 < 0)
        offset2 += 7;
      start += offset2;
      start -= aDayOfWeek;
      weekday = aDayOfWeek;
    } else {
      otherDay.day = daysInMonth;
      let endDow = otherDay.dayOfWeek();
      pos++;
      weekday = endDow - aDayOfWeek;
      if (weekday < 0) {
        weekday += 7;
      }
      weekday = daysInMonth - weekday;
    }
    weekday += pos * 7;
    return start + weekday;
  }
  /**
   * Checks if current time is the nth weekday, relative to the current
   * month.  Will always return false when rule resolves outside of current
   * month.
   *
   * @param {weekDay} aDayOfWeek                 Day of week to check
   * @param {Number} aPos                        Relative position
   * @return {Boolean}                           True, if it is the nth weekday
   */
  isNthWeekDay(aDayOfWeek, aPos) {
    let dow = this.dayOfWeek();
    if (aPos === 0 && dow === aDayOfWeek) {
      return true;
    }
    let day = this.nthWeekDay(aDayOfWeek, aPos);
    if (day === this.day) {
      return true;
    }
    return false;
  }
  /**
   * Calculates the ISO 8601 week number. The first week of a year is the
   * week that contains the first Thursday. The year can have 53 weeks, if
   * January 1st is a Friday.
   *
   * Note there are regions where the first week of the year is the one that
   * starts on January 1st, which may offset the week number. Also, if a
   * different week start is specified, this will also affect the week
   * number.
   *
   * @see Time.weekOneStarts
   * @param {weekDay} aWeekStart                  The weekday the week starts with
   * @return {Number}                             The ISO week number
   */
  weekNumber(aWeekStart) {
    let wnCacheKey = (this.year << 12) + (this.month << 8) + (this.day << 3) + aWeekStart;
    if (wnCacheKey in Time._wnCache) {
      return Time._wnCache[wnCacheKey];
    }
    let week1;
    let dt = this.clone();
    dt.isDate = true;
    let isoyear = this.year;
    if (dt.month == 12 && dt.day > 25) {
      week1 = Time.weekOneStarts(isoyear + 1, aWeekStart);
      if (dt.compare(week1) < 0) {
        week1 = Time.weekOneStarts(isoyear, aWeekStart);
      } else {
        isoyear++;
      }
    } else {
      week1 = Time.weekOneStarts(isoyear, aWeekStart);
      if (dt.compare(week1) < 0) {
        week1 = Time.weekOneStarts(--isoyear, aWeekStart);
      }
    }
    let daysBetween = dt.subtractDate(week1).toSeconds() / 86400;
    let answer = trunc(daysBetween / 7) + 1;
    Time._wnCache[wnCacheKey] = answer;
    return answer;
  }
  /**
   * Adds the duration to the current time. The instance is modified in
   * place.
   *
   * @param {Duration} aDuration         The duration to add
   */
  addDuration(aDuration) {
    let mult = aDuration.isNegative ? -1 : 1;
    let second = this.second;
    let minute = this.minute;
    let hour = this.hour;
    let day = this.day;
    second += mult * aDuration.seconds;
    minute += mult * aDuration.minutes;
    hour += mult * aDuration.hours;
    day += mult * aDuration.days;
    day += mult * 7 * aDuration.weeks;
    this.second = second;
    this.minute = minute;
    this.hour = hour;
    this.day = day;
    this._cachedUnixTime = null;
  }
  /**
   * Subtract the date details (_excluding_ timezone).  Useful for finding
   * the relative difference between two time objects excluding their
   * timezone differences.
   *
   * @param {Time} aDate     The date to subtract
   * @return {Duration}      The difference as a duration
   */
  subtractDate(aDate) {
    let unixTime = this.toUnixTime() + this.utcOffset();
    let other = aDate.toUnixTime() + aDate.utcOffset();
    return Duration.fromSeconds(unixTime - other);
  }
  /**
   * Subtract the date details, taking timezones into account.
   *
   * @param {Time} aDate  The date to subtract
   * @return {Duration}   The difference in duration
   */
  subtractDateTz(aDate) {
    let unixTime = this.toUnixTime();
    let other = aDate.toUnixTime();
    return Duration.fromSeconds(unixTime - other);
  }
  /**
   * Compares the ICAL.Time instance with another one.
   *
   * @param {Duration} aOther        The instance to compare with
   * @return {Number}                     -1, 0 or 1 for less/equal/greater
   */
  compare(other) {
    let a2 = this.toUnixTime();
    let b = other.toUnixTime();
    if (a2 > b) return 1;
    if (b > a2) return -1;
    return 0;
  }
  /**
   * Compares only the date part of this instance with another one.
   *
   * @param {Duration} other              The instance to compare with
   * @param {Timezone} tz                 The timezone to compare in
   * @return {Number}                     -1, 0 or 1 for less/equal/greater
   */
  compareDateOnlyTz(other, tz) {
    let a2 = this.convertToZone(tz);
    let b = other.convertToZone(tz);
    let rc = 0;
    if ((rc = Time._cmp_attr(a2, b, "year")) != 0) return rc;
    if ((rc = Time._cmp_attr(a2, b, "month")) != 0) return rc;
    if ((rc = Time._cmp_attr(a2, b, "day")) != 0) return rc;
    return rc;
  }
  /**
   * Convert the instance into another timezone. The returned ICAL.Time
   * instance is always a copy.
   *
   * @param {Timezone} zone      The zone to convert to
   * @return {Time}              The copy, converted to the zone
   */
  convertToZone(zone) {
    let copy = this.clone();
    let zone_equals = this.zone.tzid == zone.tzid;
    if (!this.isDate && !zone_equals) {
      Timezone$1.convert_time(copy, this.zone, zone);
    }
    copy.zone = zone;
    return copy;
  }
  /**
   * Calculates the UTC offset of the current date/time in the timezone it is
   * in.
   *
   * @return {Number}     UTC offset in seconds
   */
  utcOffset() {
    if (this.zone == Timezone$1.localTimezone || this.zone == Timezone$1.utcTimezone) {
      return 0;
    } else {
      return this.zone.utcOffset(this);
    }
  }
  /**
   * Returns an RFC 5545 compliant ical representation of this object.
   *
   * @return {String} ical date/date-time
   */
  toICALString() {
    let string = this.toString();
    if (string.length > 10) {
      return design$1.icalendar.value["date-time"].toICAL(string);
    } else {
      return design$1.icalendar.value.date.toICAL(string);
    }
  }
  /**
   * The string representation of this date/time, in jCal form
   * (including : and - separators).
   * @return {String}
   */
  toString() {
    let result = this.year + "-" + pad2(this.month) + "-" + pad2(this.day);
    if (!this.isDate) {
      result += "T" + pad2(this.hour) + ":" + pad2(this.minute) + ":" + pad2(this.second);
      if (this.zone === Timezone$1.utcTimezone) {
        result += "Z";
      }
    }
    return result;
  }
  /**
   * Converts the current instance to a Javascript date
   * @return {Date}
   */
  toJSDate() {
    if (this.zone == Timezone$1.localTimezone) {
      if (this.isDate) {
        return new Date(this.year, this.month - 1, this.day);
      } else {
        return new Date(
          this.year,
          this.month - 1,
          this.day,
          this.hour,
          this.minute,
          this.second,
          0
        );
      }
    } else {
      return new Date(this.toUnixTime() * 1e3);
    }
  }
  _normalize() {
    if (this._time.isDate) {
      this._time.hour = 0;
      this._time.minute = 0;
      this._time.second = 0;
    }
    this.adjust(0, 0, 0, 0);
    return this;
  }
  /**
   * Adjust the date/time by the given offset
   *
   * @param {Number} aExtraDays       The extra amount of days
   * @param {Number} aExtraHours      The extra amount of hours
   * @param {Number} aExtraMinutes    The extra amount of minutes
   * @param {Number} aExtraSeconds    The extra amount of seconds
   * @param {Number=} aTime           The time to adjust, defaults to the
   *                                    current instance.
   */
  adjust(aExtraDays, aExtraHours, aExtraMinutes, aExtraSeconds, aTime) {
    let minutesOverflow, hoursOverflow, daysOverflow = 0, yearsOverflow = 0;
    let second, minute, hour, day;
    let daysInMonth;
    let time = aTime || this._time;
    if (!time.isDate) {
      second = time.second + aExtraSeconds;
      time.second = second % 60;
      minutesOverflow = trunc(second / 60);
      if (time.second < 0) {
        time.second += 60;
        minutesOverflow--;
      }
      minute = time.minute + aExtraMinutes + minutesOverflow;
      time.minute = minute % 60;
      hoursOverflow = trunc(minute / 60);
      if (time.minute < 0) {
        time.minute += 60;
        hoursOverflow--;
      }
      hour = time.hour + aExtraHours + hoursOverflow;
      time.hour = hour % 24;
      daysOverflow = trunc(hour / 24);
      if (time.hour < 0) {
        time.hour += 24;
        daysOverflow--;
      }
    }
    if (time.month > 12) {
      yearsOverflow = trunc((time.month - 1) / 12);
    } else if (time.month < 1) {
      yearsOverflow = trunc(time.month / 12) - 1;
    }
    time.year += yearsOverflow;
    time.month -= 12 * yearsOverflow;
    day = time.day + aExtraDays + daysOverflow;
    if (day > 0) {
      for (; ; ) {
        daysInMonth = Time.daysInMonth(time.month, time.year);
        if (day <= daysInMonth) {
          break;
        }
        time.month++;
        if (time.month > 12) {
          time.year++;
          time.month = 1;
        }
        day -= daysInMonth;
      }
    } else {
      while (day <= 0) {
        if (time.month == 1) {
          time.year--;
          time.month = 12;
        } else {
          time.month--;
        }
        day += Time.daysInMonth(time.month, time.year);
      }
    }
    time.day = day;
    this._cachedUnixTime = null;
    return this;
  }
  /**
   * Sets up the current instance from unix time, the number of seconds since
   * January 1st, 1970.
   *
   * @param {Number} seconds      The seconds to set up with
   */
  fromUnixTime(seconds) {
    this.zone = Timezone$1.utcTimezone;
    let date = new Date(seconds * 1e3);
    this.year = date.getUTCFullYear();
    this.month = date.getUTCMonth() + 1;
    this.day = date.getUTCDate();
    if (this._time.isDate) {
      this.hour = 0;
      this.minute = 0;
      this.second = 0;
    } else {
      this.hour = date.getUTCHours();
      this.minute = date.getUTCMinutes();
      this.second = date.getUTCSeconds();
    }
    this._cachedUnixTime = null;
  }
  /**
   * Converts the current instance to seconds since January 1st 1970.
   *
   * @return {Number}         Seconds since 1970
   */
  toUnixTime() {
    if (this._cachedUnixTime !== null) {
      return this._cachedUnixTime;
    }
    let offset2 = this.utcOffset();
    let ms = Date.UTC(
      this.year,
      this.month - 1,
      this.day,
      this.hour,
      this.minute,
      this.second - offset2
    );
    this._cachedUnixTime = ms / 1e3;
    return this._cachedUnixTime;
  }
  /**
   * Converts time to into Object which can be serialized then re-created
   * using the constructor.
   *
   * @example
   * // toJSON will automatically be called
   * var json = JSON.stringify(mytime);
   *
   * var deserialized = JSON.parse(json);
   *
   * var time = new ICAL.Time(deserialized);
   *
   * @return {Object}
   */
  toJSON() {
    let copy = [
      "year",
      "month",
      "day",
      "hour",
      "minute",
      "second",
      "isDate"
    ];
    let result = /* @__PURE__ */ Object.create(null);
    let i = 0;
    let len = copy.length;
    let prop;
    for (; i < len; i++) {
      prop = copy[i];
      result[prop] = this[prop];
    }
    if (this.zone) {
      result.timezone = this.zone.tzid;
    }
    return result;
  }
}
(function setupNormalizeAttributes() {
  function defineAttr(attr) {
    Object.defineProperty(Time.prototype, attr, {
      get: function getTimeAttr() {
        if (this._pendingNormalization) {
          this._normalize();
          this._pendingNormalization = false;
        }
        return this._time[attr];
      },
      set: function setTimeAttr(val) {
        if (attr === "isDate" && val && !this._time.isDate) {
          this.adjust(0, 0, 0, 0);
        }
        this._cachedUnixTime = null;
        this._pendingNormalization = true;
        this._time[attr] = val;
      }
    });
  }
  defineAttr("year");
  defineAttr("month");
  defineAttr("day");
  defineAttr("hour");
  defineAttr("minute");
  defineAttr("second");
  defineAttr("isDate");
})();
const CHAR = /[^ \t]/;
const VALUE_DELIMITER = ":";
const PARAM_DELIMITER = ";";
const PARAM_NAME_DELIMITER = "=";
const DEFAULT_VALUE_TYPE$1 = "unknown";
const DEFAULT_PARAM_TYPE = "text";
const RFC6868_REPLACE_MAP$1 = { "^'": '"', "^n": "\n", "^^": "^" };
function parse$1(input) {
  let state = {};
  let root = state.component = [];
  state.stack = [root];
  parse$1._eachLine(input, function(err, line) {
    parse$1._handleContentLine(line, state);
  });
  if (state.stack.length > 1) {
    throw new ParserError(
      "invalid ical body. component began but did not end"
    );
  }
  state = null;
  return root.length == 1 ? root[0] : root;
}
parse$1.property = function(str, designSet) {
  let state = {
    component: [[], []],
    designSet: designSet || design$1.defaultSet
  };
  parse$1._handleContentLine(str, state);
  return state.component[1][0];
};
parse$1.component = function(str) {
  return parse$1(str);
};
class ParserError extends Error {
  name = this.constructor.name;
}
parse$1.ParserError = ParserError;
parse$1._handleContentLine = function(line, state) {
  let valuePos = line.indexOf(VALUE_DELIMITER);
  let paramPos = line.indexOf(PARAM_DELIMITER);
  let lastParamIndex;
  let lastValuePos;
  let name;
  let value3;
  let params = {};
  if (paramPos !== -1 && valuePos !== -1) {
    if (paramPos > valuePos) {
      paramPos = -1;
    }
  }
  let parsedParams;
  if (paramPos !== -1) {
    name = line.slice(0, Math.max(0, paramPos)).toLowerCase();
    parsedParams = parse$1._parseParameters(line.slice(Math.max(0, paramPos)), 0, state.designSet);
    if (parsedParams[2] == -1) {
      throw new ParserError("Invalid parameters in '" + line + "'");
    }
    params = parsedParams[0];
    lastParamIndex = parsedParams[1].length + parsedParams[2] + paramPos;
    if ((lastValuePos = line.slice(Math.max(0, lastParamIndex)).indexOf(VALUE_DELIMITER)) !== -1) {
      value3 = line.slice(Math.max(0, lastParamIndex + lastValuePos + 1));
    } else {
      throw new ParserError("Missing parameter value in '" + line + "'");
    }
  } else if (valuePos !== -1) {
    name = line.slice(0, Math.max(0, valuePos)).toLowerCase();
    value3 = line.slice(Math.max(0, valuePos + 1));
    if (name === "begin") {
      let newComponent = [value3.toLowerCase(), [], []];
      if (state.stack.length === 1) {
        state.component.push(newComponent);
      } else {
        state.component[2].push(newComponent);
      }
      state.stack.push(state.component);
      state.component = newComponent;
      if (!state.designSet) {
        state.designSet = design$1.getDesignSet(state.component[0]);
      }
      return;
    } else if (name === "end") {
      state.component = state.stack.pop();
      return;
    }
  } else {
    throw new ParserError(
      'invalid line (no token ";" or ":") "' + line + '"'
    );
  }
  let valueType;
  let multiValue = false;
  let structuredValue = false;
  let propertyDetails;
  let splitName;
  let ungroupedName;
  if (state.designSet.propertyGroups && name.indexOf(".") !== -1) {
    splitName = name.split(".");
    params.group = splitName[0];
    ungroupedName = splitName[1];
  } else {
    ungroupedName = name;
  }
  if (ungroupedName in state.designSet.property) {
    propertyDetails = state.designSet.property[ungroupedName];
    if ("multiValue" in propertyDetails) {
      multiValue = propertyDetails.multiValue;
    }
    if ("structuredValue" in propertyDetails) {
      structuredValue = propertyDetails.structuredValue;
    }
    if (value3 && "detectType" in propertyDetails) {
      valueType = propertyDetails.detectType(value3);
    }
  }
  if (!valueType) {
    if (!("value" in params)) {
      if (propertyDetails) {
        valueType = propertyDetails.defaultType;
      } else {
        valueType = DEFAULT_VALUE_TYPE$1;
      }
    } else {
      valueType = params.value.toLowerCase();
    }
  }
  delete params.value;
  let result;
  if (multiValue && structuredValue) {
    value3 = parse$1._parseMultiValue(value3, structuredValue, valueType, [], multiValue, state.designSet, structuredValue);
    result = [ungroupedName, params, valueType, value3];
  } else if (multiValue) {
    result = [ungroupedName, params, valueType];
    parse$1._parseMultiValue(value3, multiValue, valueType, result, null, state.designSet, false);
  } else if (structuredValue) {
    value3 = parse$1._parseMultiValue(value3, structuredValue, valueType, [], null, state.designSet, structuredValue);
    result = [ungroupedName, params, valueType, value3];
  } else {
    value3 = parse$1._parseValue(value3, valueType, state.designSet, false);
    result = [ungroupedName, params, valueType, value3];
  }
  if (state.component[0] === "vcard" && state.component[1].length === 0 && !(name === "version" && value3 === "4.0")) {
    state.designSet = design$1.getDesignSet("vcard3");
  }
  state.component[1].push(result);
};
parse$1._parseValue = function(value3, type, designSet, structuredValue) {
  if (type in designSet.value && "fromICAL" in designSet.value[type]) {
    return designSet.value[type].fromICAL(value3, structuredValue);
  }
  return value3;
};
parse$1._parseParameters = function(line, start, designSet) {
  let lastParam = start;
  let pos = 0;
  let delim = PARAM_NAME_DELIMITER;
  let result = {};
  let name, lcname;
  let value3, valuePos = -1;
  let type, multiValue, mvdelim;
  while (pos !== false && (pos = line.indexOf(delim, pos + 1)) !== -1) {
    name = line.slice(lastParam + 1, pos);
    if (name.length == 0) {
      throw new ParserError("Empty parameter name in '" + line + "'");
    }
    lcname = name.toLowerCase();
    mvdelim = false;
    multiValue = false;
    if (lcname in designSet.param && designSet.param[lcname].valueType) {
      type = designSet.param[lcname].valueType;
    } else {
      type = DEFAULT_PARAM_TYPE;
    }
    if (lcname in designSet.param) {
      multiValue = designSet.param[lcname].multiValue;
      if (designSet.param[lcname].multiValueSeparateDQuote) {
        mvdelim = parse$1._rfc6868Escape('"' + multiValue + '"');
      }
    }
    let nextChar = line[pos + 1];
    if (nextChar === '"') {
      valuePos = pos + 2;
      pos = line.indexOf('"', valuePos);
      if (multiValue && pos != -1) {
        let extendedValue = true;
        while (extendedValue) {
          if (line[pos + 1] == multiValue && line[pos + 2] == '"') {
            pos = line.indexOf('"', pos + 3);
          } else {
            extendedValue = false;
          }
        }
      }
      if (pos === -1) {
        throw new ParserError(
          'invalid line (no matching double quote) "' + line + '"'
        );
      }
      value3 = line.slice(valuePos, pos);
      lastParam = line.indexOf(PARAM_DELIMITER, pos);
      let propValuePos = line.indexOf(VALUE_DELIMITER, pos);
      if (lastParam === -1 || propValuePos !== -1 && lastParam > propValuePos) {
        pos = false;
      }
    } else {
      valuePos = pos + 1;
      let nextPos = line.indexOf(PARAM_DELIMITER, valuePos);
      let propValuePos = line.indexOf(VALUE_DELIMITER, valuePos);
      if (propValuePos !== -1 && nextPos > propValuePos) {
        nextPos = propValuePos;
        pos = false;
      } else if (nextPos === -1) {
        if (propValuePos === -1) {
          nextPos = line.length;
        } else {
          nextPos = propValuePos;
        }
        pos = false;
      } else {
        lastParam = nextPos;
        pos = nextPos;
      }
      value3 = line.slice(valuePos, nextPos);
    }
    const length_before = value3.length;
    value3 = parse$1._rfc6868Escape(value3);
    valuePos += length_before - value3.length;
    if (multiValue) {
      let delimiter = mvdelim || multiValue;
      value3 = parse$1._parseMultiValue(value3, delimiter, type, [], null, designSet);
    } else {
      value3 = parse$1._parseValue(value3, type, designSet);
    }
    if (multiValue && lcname in result) {
      if (Array.isArray(result[lcname])) {
        result[lcname].push(value3);
      } else {
        result[lcname] = [
          result[lcname],
          value3
        ];
      }
    } else {
      result[lcname] = value3;
    }
  }
  return [result, value3, valuePos];
};
parse$1._rfc6868Escape = function(val) {
  return val.replace(/\^['n^]/g, function(x2) {
    return RFC6868_REPLACE_MAP$1[x2];
  });
};
parse$1._parseMultiValue = function(buffer, delim, type, result, innerMulti, designSet, structuredValue) {
  let pos = 0;
  let lastPos = 0;
  let value3;
  if (delim.length === 0) {
    return buffer;
  }
  while ((pos = unescapedIndexOf(buffer, delim, lastPos)) !== -1) {
    value3 = buffer.slice(lastPos, pos);
    if (innerMulti) {
      value3 = parse$1._parseMultiValue(value3, innerMulti, type, [], null, designSet, structuredValue);
    } else {
      value3 = parse$1._parseValue(value3, type, designSet, structuredValue);
    }
    result.push(value3);
    lastPos = pos + delim.length;
  }
  value3 = buffer.slice(lastPos);
  if (innerMulti) {
    value3 = parse$1._parseMultiValue(value3, innerMulti, type, [], null, designSet, structuredValue);
  } else {
    value3 = parse$1._parseValue(value3, type, designSet, structuredValue);
  }
  result.push(value3);
  return result.length == 1 ? result[0] : result;
};
parse$1._eachLine = function(buffer, callback) {
  let len = buffer.length;
  let lastPos = buffer.search(CHAR);
  let pos = lastPos;
  let line;
  let firstChar;
  let newlineOffset;
  do {
    pos = buffer.indexOf("\n", lastPos) + 1;
    if (pos > 1 && buffer[pos - 2] === "\r") {
      newlineOffset = 2;
    } else {
      newlineOffset = 1;
    }
    if (pos === 0) {
      pos = len;
      newlineOffset = 0;
    }
    firstChar = buffer[lastPos];
    if (firstChar === " " || firstChar === "	") {
      line += buffer.slice(lastPos + 1, pos - newlineOffset);
    } else {
      if (line)
        callback(null, line);
      line = buffer.slice(lastPos, pos - newlineOffset);
    }
    lastPos = pos;
  } while (pos !== len);
  line = line.trim();
  if (line.length)
    callback(null, line);
};
const OPTIONS = ["tzid", "location", "tznames", "latitude", "longitude"];
let Timezone$1 = class Timezone {
  static _compare_change_fn(a2, b) {
    if (a2.year < b.year) return -1;
    else if (a2.year > b.year) return 1;
    if (a2.month < b.month) return -1;
    else if (a2.month > b.month) return 1;
    if (a2.day < b.day) return -1;
    else if (a2.day > b.day) return 1;
    if (a2.hour < b.hour) return -1;
    else if (a2.hour > b.hour) return 1;
    if (a2.minute < b.minute) return -1;
    else if (a2.minute > b.minute) return 1;
    if (a2.second < b.second) return -1;
    else if (a2.second > b.second) return 1;
    return 0;
  }
  /**
   * Convert the date/time from one zone to the next.
   *
   * @param {Time} tt                  The time to convert
   * @param {Timezone} from_zone       The source zone to convert from
   * @param {Timezone} to_zone         The target zone to convert to
   * @return {Time}                    The converted date/time object
   */
  static convert_time(tt2, from_zone, to_zone) {
    if (tt2.isDate || from_zone.tzid == to_zone.tzid || from_zone == Timezone.localTimezone || to_zone == Timezone.localTimezone) {
      tt2.zone = to_zone;
      return tt2;
    }
    let utcOffset = from_zone.utcOffset(tt2);
    tt2.adjust(0, 0, 0, -utcOffset);
    utcOffset = to_zone.utcOffset(tt2);
    tt2.adjust(0, 0, 0, utcOffset);
    return null;
  }
  /**
   * Creates a new ICAL.Timezone instance from the passed data object.
   *
   * @param {Component|Object} aData options for class
   * @param {String|Component} aData.component
   *        If aData is a simple object, then this member can be set to either a
   *        string containing the component data, or an already parsed
   *        ICAL.Component
   * @param {String} aData.tzid      The timezone identifier
   * @param {String} aData.location  The timezone locationw
   * @param {String} aData.tznames   An alternative string representation of the
   *                                  timezone
   * @param {Number} aData.latitude  The latitude of the timezone
   * @param {Number} aData.longitude The longitude of the timezone
   */
  static fromData(aData) {
    let tt2 = new Timezone();
    return tt2.fromData(aData);
  }
  /**
   * The instance describing the UTC timezone
   * @type {Timezone}
   * @constant
   * @instance
   */
  static #utcTimezone = null;
  static get utcTimezone() {
    if (!this.#utcTimezone) {
      this.#utcTimezone = Timezone.fromData({
        tzid: "UTC"
      });
    }
    return this.#utcTimezone;
  }
  /**
   * The instance describing the local timezone
   * @type {Timezone}
   * @constant
   * @instance
   */
  static #localTimezone = null;
  static get localTimezone() {
    if (!this.#localTimezone) {
      this.#localTimezone = Timezone.fromData({
        tzid: "floating"
      });
    }
    return this.#localTimezone;
  }
  /**
   * Adjust a timezone change object.
   * @private
   * @param {Object} change     The timezone change object
   * @param {Number} days       The extra amount of days
   * @param {Number} hours      The extra amount of hours
   * @param {Number} minutes    The extra amount of minutes
   * @param {Number} seconds    The extra amount of seconds
   */
  static adjust_change(change, days2, hours, minutes, seconds) {
    return Time.prototype.adjust.call(
      change,
      days2,
      hours,
      minutes,
      seconds,
      change
    );
  }
  static _minimumExpansionYear = -1;
  static EXTRA_COVERAGE = 5;
  /**
   * Creates a new ICAL.Timezone instance, by passing in a tzid and component.
   *
   * @param {Component|Object} data options for class
   * @param {String|Component} data.component
   *        If data is a simple object, then this member can be set to either a
   *        string containing the component data, or an already parsed
   *        ICAL.Component
   * @param {String} data.tzid      The timezone identifier
   * @param {String} data.location  The timezone locationw
   * @param {String} data.tznames   An alternative string representation of the
   *                                  timezone
   * @param {Number} data.latitude  The latitude of the timezone
   * @param {Number} data.longitude The longitude of the timezone
   */
  constructor(data11) {
    this.wrappedJSObject = this;
    this.fromData(data11);
  }
  /**
   * Timezone identifier
   * @type {String}
   */
  tzid = "";
  /**
   * Timezone location
   * @type {String}
   */
  location = "";
  /**
   * Alternative timezone name, for the string representation
   * @type {String}
   */
  tznames = "";
  /**
   * The primary latitude for the timezone.
   * @type {Number}
   */
  latitude = 0;
  /**
   * The primary longitude for the timezone.
   * @type {Number}
   */
  longitude = 0;
  /**
   * The vtimezone component for this timezone.
   * @type {Component}
   */
  component = null;
  /**
   * The year this timezone has been expanded to. All timezone transition
   * dates until this year are known and can be used for calculation
   *
   * @private
   * @type {Number}
   */
  expandedUntilYear = 0;
  /**
   * The class identifier.
   * @constant
   * @type {String}
   * @default "icaltimezone"
   */
  icalclass = "icaltimezone";
  /**
   * Sets up the current instance using members from the passed data object.
   *
   * @param {Component|Object} aData options for class
   * @param {String|Component} aData.component
   *        If aData is a simple object, then this member can be set to either a
   *        string containing the component data, or an already parsed
   *        ICAL.Component
   * @param {String} aData.tzid      The timezone identifier
   * @param {String} aData.location  The timezone locationw
   * @param {String} aData.tznames   An alternative string representation of the
   *                                  timezone
   * @param {Number} aData.latitude  The latitude of the timezone
   * @param {Number} aData.longitude The longitude of the timezone
   */
  fromData(aData) {
    this.expandedUntilYear = 0;
    this.changes = [];
    if (aData instanceof Component) {
      this.component = aData;
    } else {
      if (aData && "component" in aData) {
        if (typeof aData.component == "string") {
          let jCal = parse$1(aData.component);
          this.component = new Component(jCal);
        } else if (aData.component instanceof Component) {
          this.component = aData.component;
        } else {
          this.component = null;
        }
      }
      for (let prop of OPTIONS) {
        if (aData && prop in aData) {
          this[prop] = aData[prop];
        }
      }
    }
    if (this.component instanceof Component && !this.tzid) {
      this.tzid = this.component.getFirstPropertyValue("tzid");
    }
    return this;
  }
  /**
   * Finds the utcOffset the given time would occur in this timezone.
   *
   * @param {Time} tt         The time to check for
   * @return {Number}         utc offset in seconds
   */
  utcOffset(tt2) {
    if (this == Timezone.utcTimezone || this == Timezone.localTimezone) {
      return 0;
    }
    this._ensureCoverage(tt2.year);
    if (!this.changes.length) {
      return 0;
    }
    let tt_change = {
      year: tt2.year,
      month: tt2.month,
      day: tt2.day,
      hour: tt2.hour,
      minute: tt2.minute,
      second: tt2.second
    };
    let change_num = this._findNearbyChange(tt_change);
    let change_num_to_use = -1;
    let step = 1;
    for (; ; ) {
      let change = clone(this.changes[change_num], true);
      if (change.utcOffset < change.prevUtcOffset) {
        Timezone.adjust_change(change, 0, 0, 0, change.utcOffset);
      } else {
        Timezone.adjust_change(
          change,
          0,
          0,
          0,
          change.prevUtcOffset
        );
      }
      let cmp = Timezone._compare_change_fn(tt_change, change);
      if (cmp >= 0) {
        change_num_to_use = change_num;
      } else {
        step = -1;
      }
      if (step == -1 && change_num_to_use != -1) {
        break;
      }
      change_num += step;
      if (change_num < 0) {
        return 0;
      }
      if (change_num >= this.changes.length) {
        break;
      }
    }
    let zone_change = this.changes[change_num_to_use];
    let utcOffset_change = zone_change.utcOffset - zone_change.prevUtcOffset;
    if (utcOffset_change < 0 && change_num_to_use > 0) {
      let tmp_change = clone(zone_change, true);
      Timezone.adjust_change(tmp_change, 0, 0, 0, tmp_change.prevUtcOffset);
      if (Timezone._compare_change_fn(tt_change, tmp_change) < 0) {
        let prev_zone_change = this.changes[change_num_to_use - 1];
        let want_daylight = false;
        if (zone_change.is_daylight != want_daylight && prev_zone_change.is_daylight == want_daylight) {
          zone_change = prev_zone_change;
        }
      }
    }
    return zone_change.utcOffset;
  }
  _findNearbyChange(change) {
    let idx = binsearchInsert(
      this.changes,
      change,
      Timezone._compare_change_fn
    );
    if (idx >= this.changes.length) {
      return this.changes.length - 1;
    }
    return idx;
  }
  _ensureCoverage(aYear) {
    if (Timezone._minimumExpansionYear == -1) {
      let today = Time.now();
      Timezone._minimumExpansionYear = today.year;
    }
    let changesEndYear = aYear;
    if (changesEndYear < Timezone._minimumExpansionYear) {
      changesEndYear = Timezone._minimumExpansionYear;
    }
    changesEndYear += Timezone.EXTRA_COVERAGE;
    if (!this.changes.length || this.expandedUntilYear < aYear) {
      let subcomps = this.component.getAllSubcomponents();
      let compLen = subcomps.length;
      let compIdx = 0;
      for (; compIdx < compLen; compIdx++) {
        this._expandComponent(
          subcomps[compIdx],
          changesEndYear,
          this.changes
        );
      }
      this.changes.sort(Timezone._compare_change_fn);
      this.expandedUntilYear = changesEndYear;
    }
  }
  _expandComponent(aComponent, aYear, changes) {
    if (!aComponent.hasProperty("dtstart") || !aComponent.hasProperty("tzoffsetto") || !aComponent.hasProperty("tzoffsetfrom")) {
      return null;
    }
    let dtstart = aComponent.getFirstProperty("dtstart").getFirstValue();
    let change;
    function convert_tzoffset(offset2) {
      return offset2.factor * (offset2.hours * 3600 + offset2.minutes * 60);
    }
    function init_changes() {
      let changebase = {};
      changebase.is_daylight = aComponent.name == "daylight";
      changebase.utcOffset = convert_tzoffset(
        aComponent.getFirstProperty("tzoffsetto").getFirstValue()
      );
      changebase.prevUtcOffset = convert_tzoffset(
        aComponent.getFirstProperty("tzoffsetfrom").getFirstValue()
      );
      return changebase;
    }
    if (!aComponent.hasProperty("rrule") && !aComponent.hasProperty("rdate")) {
      change = init_changes();
      change.year = dtstart.year;
      change.month = dtstart.month;
      change.day = dtstart.day;
      change.hour = dtstart.hour;
      change.minute = dtstart.minute;
      change.second = dtstart.second;
      Timezone.adjust_change(change, 0, 0, 0, -change.prevUtcOffset);
      changes.push(change);
    } else {
      let props = aComponent.getAllProperties("rdate");
      for (let rdate of props) {
        let time = rdate.getFirstValue();
        change = init_changes();
        change.year = time.year;
        change.month = time.month;
        change.day = time.day;
        if (time.isDate) {
          change.hour = dtstart.hour;
          change.minute = dtstart.minute;
          change.second = dtstart.second;
          if (dtstart.zone != Timezone.utcTimezone) {
            Timezone.adjust_change(change, 0, 0, 0, -change.prevUtcOffset);
          }
        } else {
          change.hour = time.hour;
          change.minute = time.minute;
          change.second = time.second;
          if (time.zone != Timezone.utcTimezone) {
            Timezone.adjust_change(change, 0, 0, 0, -change.prevUtcOffset);
          }
        }
        changes.push(change);
      }
      let rrule = aComponent.getFirstProperty("rrule");
      if (rrule) {
        rrule = rrule.getFirstValue();
        change = init_changes();
        if (rrule.until && rrule.until.zone == Timezone.utcTimezone) {
          rrule.until.adjust(0, 0, 0, change.prevUtcOffset);
          rrule.until.zone = Timezone.localTimezone;
        }
        let iterator = rrule.iterator(dtstart);
        let occ;
        while (occ = iterator.next()) {
          change = init_changes();
          if (occ.year > aYear || !occ) {
            break;
          }
          change.year = occ.year;
          change.month = occ.month;
          change.day = occ.day;
          change.hour = occ.hour;
          change.minute = occ.minute;
          change.second = occ.second;
          change.isDate = occ.isDate;
          Timezone.adjust_change(change, 0, 0, 0, -change.prevUtcOffset);
          changes.push(change);
        }
      }
    }
    return changes;
  }
  /**
   * The string representation of this timezone.
   * @return {String}
   */
  toString() {
    return this.tznames ? this.tznames : this.tzid;
  }
};
let zones$1 = null;
const TimezoneService = {
  get count() {
    if (zones$1 === null) {
      return 0;
    }
    return Object.keys(zones$1).length;
  },
  reset: function() {
    zones$1 = /* @__PURE__ */ Object.create(null);
    let utc = Timezone$1.utcTimezone;
    zones$1.Z = utc;
    zones$1.UTC = utc;
    zones$1.GMT = utc;
  },
  _hard_reset: function() {
    zones$1 = null;
  },
  /**
   * Checks if timezone id has been registered.
   *
   * @param {String} tzid     Timezone identifier (e.g. America/Los_Angeles)
   * @return {Boolean}        False, when not present
   */
  has: function(tzid) {
    if (zones$1 === null) {
      return false;
    }
    return !!zones$1[tzid];
  },
  /**
   * Returns a timezone by its tzid if present.
   *
   * @param {String} tzid               Timezone identifier (e.g. America/Los_Angeles)
   * @return {Timezone | undefined}     The timezone, or undefined if not found
   */
  get: function(tzid) {
    if (zones$1 === null) {
      this.reset();
    }
    return zones$1[tzid];
  },
  /**
   * Registers a timezone object or component.
   *
   * @param {Component|Timezone} timezone
   *        The initialized zone or vtimezone.
   *
   * @param {String=} name
   *        The name of the timezone. Defaults to the component's TZID if not
   *        passed.
   */
  register: function(timezone, name) {
    if (zones$1 === null) {
      this.reset();
    }
    if (typeof timezone === "string" && name instanceof Timezone$1) {
      [timezone, name] = [name, timezone];
    }
    if (!name) {
      if (timezone instanceof Timezone$1) {
        name = timezone.tzid;
      } else {
        if (timezone.name === "vtimezone") {
          timezone = new Timezone$1(timezone);
          name = timezone.tzid;
        }
      }
    }
    if (!name) {
      throw new TypeError("Neither a timezone nor a name was passed");
    }
    if (timezone instanceof Timezone$1) {
      zones$1[name] = timezone;
    } else {
      throw new TypeError("timezone must be ICAL.Timezone or ICAL.Component");
    }
  },
  /**
   * Removes a timezone by its tzid from the list.
   *
   * @param {String} tzid     Timezone identifier (e.g. America/Los_Angeles)
   * @return {?Timezone}      The removed timezone, or null if not registered
   */
  remove: function(tzid) {
    if (zones$1 === null) {
      return null;
    }
    return delete zones$1[tzid];
  }
};
function updateTimezones(vcal) {
  let allsubs, properties, vtimezones, reqTzid, i;
  if (!vcal || vcal.name !== "vcalendar") {
    return vcal;
  }
  allsubs = vcal.getAllSubcomponents();
  properties = [];
  vtimezones = {};
  for (i = 0; i < allsubs.length; i++) {
    if (allsubs[i].name === "vtimezone") {
      let tzid = allsubs[i].getFirstProperty("tzid").getFirstValue();
      vtimezones[tzid] = allsubs[i];
    } else {
      properties = properties.concat(allsubs[i].getAllProperties());
    }
  }
  reqTzid = {};
  for (i = 0; i < properties.length; i++) {
    let tzid = properties[i].getParameter("tzid");
    if (tzid) {
      reqTzid[tzid] = true;
    }
  }
  for (let [tzid, comp] of Object.entries(vtimezones)) {
    if (!reqTzid[tzid]) {
      vcal.removeSubcomponent(comp);
    }
  }
  for (let tzid of Object.keys(reqTzid)) {
    if (!vtimezones[tzid] && TimezoneService.has(tzid)) {
      vcal.addSubcomponent(TimezoneService.get(tzid).component);
    }
  }
  return vcal;
}
function isStrictlyNaN(number) {
  return typeof number === "number" && isNaN(number);
}
function strictParseInt(string) {
  let result = parseInt(string, 10);
  if (isStrictlyNaN(result)) {
    throw new Error(
      'Could not extract integer from "' + string + '"'
    );
  }
  return result;
}
function formatClassType(data11, type) {
  if (typeof data11 === "undefined") {
    return void 0;
  }
  if (data11 instanceof type) {
    return data11;
  }
  return new type(data11);
}
function unescapedIndexOf(buffer, search, pos) {
  while ((pos = buffer.indexOf(search, pos)) !== -1) {
    if (pos > 0 && buffer[pos - 1] === "\\") {
      pos += 1;
    } else {
      return pos;
    }
  }
  return -1;
}
function binsearchInsert(list2, seekVal, cmpfunc) {
  if (!list2.length)
    return 0;
  let low = 0, high = list2.length - 1, mid, cmpval;
  while (low <= high) {
    mid = low + Math.floor((high - low) / 2);
    cmpval = cmpfunc(seekVal, list2[mid]);
    if (cmpval < 0)
      high = mid - 1;
    else if (cmpval > 0)
      low = mid + 1;
    else
      break;
  }
  if (cmpval < 0)
    return mid;
  else if (cmpval > 0)
    return mid + 1;
  else
    return mid;
}
function clone(aSrc, aDeep) {
  if (!aSrc || typeof aSrc != "object") {
    return aSrc;
  } else if (aSrc instanceof Date) {
    return new Date(aSrc.getTime());
  } else if ("clone" in aSrc) {
    return aSrc.clone();
  } else if (Array.isArray(aSrc)) {
    let arr = [];
    for (let i = 0; i < aSrc.length; i++) {
      arr.push(aDeep ? clone(aSrc[i], true) : aSrc[i]);
    }
    return arr;
  } else {
    let obj = {};
    for (let [name, value3] of Object.entries(aSrc)) {
      if (aDeep) {
        obj[name] = clone(value3, true);
      } else {
        obj[name] = value3;
      }
    }
    return obj;
  }
}
function foldline(aLine) {
  let result = "";
  let line = aLine || "", pos = 0, line_length = 0;
  while (line.length) {
    let cp = line.codePointAt(pos);
    if (cp < 128) ++line_length;
    else if (cp < 2048) line_length += 2;
    else if (cp < 65536) line_length += 3;
    else line_length += 4;
    if (line_length < ICALmodule.foldLength + 1)
      pos += cp > 65535 ? 2 : 1;
    else {
      result += ICALmodule.newLineChar + " " + line.slice(0, Math.max(0, pos));
      line = line.slice(Math.max(0, pos));
      pos = line_length = 0;
    }
  }
  return result.slice(ICALmodule.newLineChar.length + 1);
}
function pad2(data11) {
  if (typeof data11 !== "string") {
    if (typeof data11 === "number") {
      data11 = parseInt(data11);
    }
    data11 = String(data11);
  }
  let len = data11.length;
  switch (len) {
    case 0:
      return "00";
    case 1:
      return "0" + data11;
    default:
      return data11;
  }
}
function trunc(number) {
  return number < 0 ? Math.ceil(number) : Math.floor(number);
}
function extend(source, target) {
  for (let key in source) {
    let descr = Object.getOwnPropertyDescriptor(source, key);
    if (descr && !Object.getOwnPropertyDescriptor(target, key)) {
      Object.defineProperty(target, key, descr);
    }
  }
  return target;
}
var helpers = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  updateTimezones,
  isStrictlyNaN,
  strictParseInt,
  formatClassType,
  unescapedIndexOf,
  binsearchInsert,
  clone,
  foldline,
  pad2,
  trunc,
  extend
});
class UtcOffset {
  /**
   * Creates a new {@link ICAL.UtcOffset} instance from the passed string.
   *
   * @param {String} aString    The string to parse
   * @return {Duration}         The created utc-offset instance
   */
  static fromString(aString) {
    let options2 = {};
    options2.factor = aString[0] === "+" ? 1 : -1;
    options2.hours = strictParseInt(aString.slice(1, 3));
    options2.minutes = strictParseInt(aString.slice(4, 6));
    return new UtcOffset(options2);
  }
  /**
   * Creates a new {@link ICAL.UtcOffset} instance from the passed seconds
   * value.
   *
   * @param {Number} aSeconds       The number of seconds to convert
   */
  static fromSeconds(aSeconds) {
    let instance = new UtcOffset();
    instance.fromSeconds(aSeconds);
    return instance;
  }
  /**
   * Creates a new ICAL.UtcOffset instance.
   *
   * @param {Object} aData          An object with members of the utc offset
   * @param {Number=} aData.hours   The hours for the utc offset
   * @param {Number=} aData.minutes The minutes in the utc offset
   * @param {Number=} aData.factor  The factor for the utc-offset, either -1 or 1
   */
  constructor(aData) {
    this.fromData(aData);
  }
  /**
   * The hours in the utc-offset
   * @type {Number}
   */
  hours = 0;
  /**
   * The minutes in the utc-offset
   * @type {Number}
   */
  minutes = 0;
  /**
   * The sign of the utc offset, 1 for positive offset, -1 for negative
   * offsets.
   * @type {Number}
   */
  factor = 1;
  /**
   * The type name, to be used in the jCal object.
   * @constant
   * @type {String}
   * @default "utc-offset"
   */
  icaltype = "utc-offset";
  /**
   * Returns a clone of the utc offset object.
   *
   * @return {UtcOffset}     The cloned object
   */
  clone() {
    return UtcOffset.fromSeconds(this.toSeconds());
  }
  /**
   * Sets up the current instance using members from the passed data object.
   *
   * @param {Object} aData          An object with members of the utc offset
   * @param {Number=} aData.hours   The hours for the utc offset
   * @param {Number=} aData.minutes The minutes in the utc offset
   * @param {Number=} aData.factor  The factor for the utc-offset, either -1 or 1
   */
  fromData(aData) {
    if (aData) {
      for (let [key, value3] of Object.entries(aData)) {
        this[key] = value3;
      }
    }
    this._normalize();
  }
  /**
   * Sets up the current instance from the given seconds value. The seconds
   * value is truncated to the minute. Offsets are wrapped when the world
   * ends, the hour after UTC+14:00 is UTC-12:00.
   *
   * @param {Number} aSeconds         The seconds to convert into an offset
   */
  fromSeconds(aSeconds) {
    let secs = Math.abs(aSeconds);
    this.factor = aSeconds < 0 ? -1 : 1;
    this.hours = trunc(secs / 3600);
    secs -= this.hours * 3600;
    this.minutes = trunc(secs / 60);
    return this;
  }
  /**
   * Convert the current offset to a value in seconds
   *
   * @return {Number}                 The offset in seconds
   */
  toSeconds() {
    return this.factor * (60 * this.minutes + 3600 * this.hours);
  }
  /**
   * Compare this utc offset with another one.
   *
   * @param {UtcOffset} other             The other offset to compare with
   * @return {Number}                     -1, 0 or 1 for less/equal/greater
   */
  compare(other) {
    let a2 = this.toSeconds();
    let b = other.toSeconds();
    return (a2 > b) - (b > a2);
  }
  _normalize() {
    let secs = this.toSeconds();
    let factor = this.factor;
    while (secs < -43200) {
      secs += 97200;
    }
    while (secs > 50400) {
      secs -= 97200;
    }
    this.fromSeconds(secs);
    if (secs == 0) {
      this.factor = factor;
    }
  }
  /**
   * The iCalendar string representation of this utc-offset.
   * @return {String}
   */
  toICALString() {
    return design$1.icalendar.value["utc-offset"].toICAL(this.toString());
  }
  /**
   * The string representation of this utc-offset.
   * @return {String}
   */
  toString() {
    return (this.factor == 1 ? "+" : "-") + pad2(this.hours) + ":" + pad2(this.minutes);
  }
}
class VCardTime extends Time {
  /**
   * Returns a new ICAL.VCardTime instance from a date and/or time string.
   *
   * @param {String} aValue     The string to create from
   * @param {String} aIcalType  The type for this instance, e.g. date-and-or-time
   * @return {VCardTime}        The date/time instance
   */
  static fromDateAndOrTimeString(aValue, aIcalType) {
    function part(v2, s2, e2) {
      return v2 ? strictParseInt(v2.slice(s2, s2 + e2)) : null;
    }
    let parts = aValue.split("T");
    let dt = parts[0], tmz = parts[1];
    let splitzone = tmz ? design$1.vcard.value.time._splitZone(tmz) : [];
    let zone = splitzone[0], tm = splitzone[1];
    let dtlen = dt ? dt.length : 0;
    let tmlen = tm ? tm.length : 0;
    let hasDashDate = dt && dt[0] == "-" && dt[1] == "-";
    let hasDashTime = tm && tm[0] == "-";
    let o = {
      year: hasDashDate ? null : part(dt, 0, 4),
      month: hasDashDate && (dtlen == 4 || dtlen == 7) ? part(dt, 2, 2) : dtlen == 7 ? part(dt, 5, 2) : dtlen == 10 ? part(dt, 5, 2) : null,
      day: dtlen == 5 ? part(dt, 3, 2) : dtlen == 7 && hasDashDate ? part(dt, 5, 2) : dtlen == 10 ? part(dt, 8, 2) : null,
      hour: hasDashTime ? null : part(tm, 0, 2),
      minute: hasDashTime && tmlen == 3 ? part(tm, 1, 2) : tmlen > 4 ? hasDashTime ? part(tm, 1, 2) : part(tm, 3, 2) : null,
      second: tmlen == 4 ? part(tm, 2, 2) : tmlen == 6 ? part(tm, 4, 2) : tmlen == 8 ? part(tm, 6, 2) : null
    };
    if (zone == "Z") {
      zone = Timezone$1.utcTimezone;
    } else if (zone && zone[3] == ":") {
      zone = UtcOffset.fromString(zone);
    } else {
      zone = null;
    }
    return new VCardTime(o, zone, aIcalType);
  }
  /**
   * Creates a new ICAL.VCardTime instance.
   *
   * @param {Object} data                           The data for the time instance
   * @param {Number=} data.year                     The year for this date
   * @param {Number=} data.month                    The month for this date
   * @param {Number=} data.day                      The day for this date
   * @param {Number=} data.hour                     The hour for this date
   * @param {Number=} data.minute                   The minute for this date
   * @param {Number=} data.second                   The second for this date
   * @param {Timezone|UtcOffset} zone               The timezone to use
   * @param {String} icaltype                       The type for this date/time object
   */
  constructor(data11, zone, icaltype) {
    super(data11, zone);
    this.icaltype = icaltype || "date-and-or-time";
  }
  /**
   * The class identifier.
   * @constant
   * @type {String}
   * @default "vcardtime"
   */
  icalclass = "vcardtime";
  /**
   * The type name, to be used in the jCal object.
   * @type {String}
   * @default "date-and-or-time"
   */
  icaltype = "date-and-or-time";
  /**
   * Returns a clone of the vcard date/time object.
   *
   * @return {VCardTime}     The cloned object
   */
  clone() {
    return new VCardTime(this._time, this.zone, this.icaltype);
  }
  _normalize() {
    return this;
  }
  /**
   * @inheritdoc
   */
  utcOffset() {
    if (this.zone instanceof UtcOffset) {
      return this.zone.toSeconds();
    } else {
      return Time.prototype.utcOffset.apply(this, arguments);
    }
  }
  /**
   * Returns an RFC 6350 compliant representation of this object.
   *
   * @return {String}         vcard date/time string
   */
  toICALString() {
    return design$1.vcard.value[this.icaltype].toICAL(this.toString());
  }
  /**
   * The string representation of this date/time, in jCard form
   * (including : and - separators).
   * @return {String}
   */
  toString() {
    let y = this.year, m2 = this.month, d2 = this.day;
    let h3 = this.hour, mm2 = this.minute, s2 = this.second;
    let hasYear = y !== null, hasMonth = m2 !== null, hasDay = d2 !== null;
    let hasHour = h3 !== null, hasMinute = mm2 !== null, hasSecond = s2 !== null;
    let datepart = (hasYear ? pad2(y) + (hasMonth || hasDay ? "-" : "") : hasMonth || hasDay ? "--" : "") + (hasMonth ? pad2(m2) : "") + (hasDay ? "-" + pad2(d2) : "");
    let timepart = (hasHour ? pad2(h3) : "-") + (hasHour && hasMinute ? ":" : "") + (hasMinute ? pad2(mm2) : "") + (!hasHour && !hasMinute ? "-" : "") + (hasMinute && hasSecond ? ":" : "") + (hasSecond ? pad2(s2) : "");
    let zone;
    if (this.zone === Timezone$1.utcTimezone) {
      zone = "Z";
    } else if (this.zone instanceof UtcOffset) {
      zone = this.zone.toString();
    } else if (this.zone === Timezone$1.localTimezone) {
      zone = "";
    } else if (this.zone instanceof Timezone$1) {
      let offset2 = UtcOffset.fromSeconds(this.zone.utcOffset(this));
      zone = offset2.toString();
    } else {
      zone = "";
    }
    switch (this.icaltype) {
      case "time":
        return timepart + zone;
      case "date-and-or-time":
      case "date-time":
        return datepart + (timepart == "--" ? "" : "T" + timepart + zone);
      case "date":
        return datepart;
    }
    return null;
  }
}
class RecurIterator {
  static _indexMap = {
    "BYSECOND": 0,
    "BYMINUTE": 1,
    "BYHOUR": 2,
    "BYDAY": 3,
    "BYMONTHDAY": 4,
    "BYYEARDAY": 5,
    "BYWEEKNO": 6,
    "BYMONTH": 7,
    "BYSETPOS": 8
  };
  static _expandMap = {
    "SECONDLY": [1, 1, 1, 1, 1, 1, 1, 1],
    "MINUTELY": [2, 1, 1, 1, 1, 1, 1, 1],
    "HOURLY": [2, 2, 1, 1, 1, 1, 1, 1],
    "DAILY": [2, 2, 2, 1, 1, 1, 1, 1],
    "WEEKLY": [2, 2, 2, 2, 3, 3, 1, 1],
    "MONTHLY": [2, 2, 2, 2, 2, 3, 3, 1],
    "YEARLY": [2, 2, 2, 2, 2, 2, 2, 2]
  };
  static UNKNOWN = 0;
  static CONTRACT = 1;
  static EXPAND = 2;
  static ILLEGAL = 3;
  /**
   * Creates a new ICAL.RecurIterator instance. The options object may contain additional members
   * when resuming iteration from a previous run.
   *
   * @param {Object} options                The iterator options
   * @param {Recur} options.rule            The rule to iterate.
   * @param {Time} options.dtstart          The start date of the event.
   * @param {Boolean=} options.initialized  When true, assume that options are
   *        from a previously constructed iterator. Initialization will not be
   *        repeated.
   */
  constructor(options2) {
    this.fromData(options2);
  }
  /**
   * True when iteration is finished.
   * @type {Boolean}
   */
  completed = false;
  /**
   * The rule that is being iterated
   * @type {Recur}
   */
  rule = null;
  /**
   * The start date of the event being iterated.
   * @type {Time}
   */
  dtstart = null;
  /**
   * The last occurrence that was returned from the
   * {@link RecurIterator#next} method.
   * @type {Time}
   */
  last = null;
  /**
   * The sequence number from the occurrence
   * @type {Number}
   */
  occurrence_number = 0;
  /**
   * The indices used for the {@link ICAL.RecurIterator#by_data} object.
   * @type {Object}
   * @private
   */
  by_indices = null;
  /**
   * If true, the iterator has already been initialized
   * @type {Boolean}
   * @private
   */
  initialized = false;
  /**
   * The initializd by-data.
   * @type {Object}
   * @private
   */
  by_data = null;
  /**
   * The expanded yeardays
   * @type {Array}
   * @private
   */
  days = null;
  /**
   * The index in the {@link ICAL.RecurIterator#days} array.
   * @type {Number}
   * @private
   */
  days_index = 0;
  /**
   * Initialize the recurrence iterator from the passed data object. This
   * method is usually not called directly, you can initialize the iterator
   * through the constructor.
   *
   * @param {Object} options                The iterator options
   * @param {Recur} options.rule            The rule to iterate.
   * @param {Time} options.dtstart          The start date of the event.
   * @param {Boolean=} options.initialized  When true, assume that options are
   *        from a previously constructed iterator. Initialization will not be
   *        repeated.
   */
  fromData(options2) {
    this.rule = formatClassType(options2.rule, Recur);
    if (!this.rule) {
      throw new Error("iterator requires a (ICAL.Recur) rule");
    }
    this.dtstart = formatClassType(options2.dtstart, Time);
    if (!this.dtstart) {
      throw new Error("iterator requires a (ICAL.Time) dtstart");
    }
    if (options2.by_data) {
      this.by_data = options2.by_data;
    } else {
      this.by_data = clone(this.rule.parts, true);
    }
    if (options2.occurrence_number)
      this.occurrence_number = options2.occurrence_number;
    this.days = options2.days || [];
    if (options2.last) {
      this.last = formatClassType(options2.last, Time);
    }
    this.by_indices = options2.by_indices;
    if (!this.by_indices) {
      this.by_indices = {
        "BYSECOND": 0,
        "BYMINUTE": 0,
        "BYHOUR": 0,
        "BYDAY": 0,
        "BYMONTH": 0,
        "BYWEEKNO": 0,
        "BYMONTHDAY": 0
      };
    }
    this.initialized = options2.initialized || false;
    if (!this.initialized) {
      try {
        this.init();
      } catch (e2) {
        if (e2 instanceof InvalidRecurrenceRuleError) {
          this.completed = true;
        } else {
          throw e2;
        }
      }
    }
  }
  /**
   * Initialize the iterator
   * @private
   */
  init() {
    this.initialized = true;
    this.last = this.dtstart.clone();
    let parts = this.by_data;
    if ("BYDAY" in parts) {
      this.sort_byday_rules(parts.BYDAY);
    }
    if ("BYYEARDAY" in parts) {
      if ("BYMONTH" in parts || "BYWEEKNO" in parts || "BYMONTHDAY" in parts || "BYDAY" in parts) {
        throw new Error("Invalid BYYEARDAY rule");
      }
    }
    if ("BYWEEKNO" in parts && "BYMONTHDAY" in parts) {
      throw new Error("BYWEEKNO does not fit to BYMONTHDAY");
    }
    if (this.rule.freq == "MONTHLY" && ("BYYEARDAY" in parts || "BYWEEKNO" in parts)) {
      throw new Error("For MONTHLY recurrences neither BYYEARDAY nor BYWEEKNO may appear");
    }
    if (this.rule.freq == "WEEKLY" && ("BYYEARDAY" in parts || "BYMONTHDAY" in parts)) {
      throw new Error("For WEEKLY recurrences neither BYMONTHDAY nor BYYEARDAY may appear");
    }
    if (this.rule.freq != "YEARLY" && "BYYEARDAY" in parts) {
      throw new Error("BYYEARDAY may only appear in YEARLY rules");
    }
    this.last.second = this.setup_defaults("BYSECOND", "SECONDLY", this.dtstart.second);
    this.last.minute = this.setup_defaults("BYMINUTE", "MINUTELY", this.dtstart.minute);
    this.last.hour = this.setup_defaults("BYHOUR", "HOURLY", this.dtstart.hour);
    this.last.day = this.setup_defaults("BYMONTHDAY", "DAILY", this.dtstart.day);
    this.last.month = this.setup_defaults("BYMONTH", "MONTHLY", this.dtstart.month);
    if (this.rule.freq == "WEEKLY") {
      if ("BYDAY" in parts) {
        let [, dow] = this.ruleDayOfWeek(parts.BYDAY[0], this.rule.wkst);
        let wkdy = dow - this.last.dayOfWeek(this.rule.wkst);
        if (this.last.dayOfWeek(this.rule.wkst) < dow && wkdy >= 0 || wkdy < 0) {
          this.last.day += wkdy;
        }
      } else {
        let dayName = Recur.numericDayToIcalDay(this.dtstart.dayOfWeek());
        parts.BYDAY = [dayName];
      }
    }
    if (this.rule.freq == "YEARLY") {
      const untilYear = this.rule.until ? this.rule.until.year : 2e4;
      while (this.last.year <= untilYear) {
        this.expand_year_days(this.last.year);
        if (this.days.length > 0) {
          break;
        }
        this.increment_year(this.rule.interval);
      }
      if (this.days.length == 0) {
        throw new InvalidRecurrenceRuleError();
      }
      this._nextByYearDay();
    }
    if (this.rule.freq == "MONTHLY") {
      if (this.has_by_data("BYDAY")) {
        let tempLast = null;
        let initLast = this.last.clone();
        let daysInMonth = Time.daysInMonth(this.last.month, this.last.year);
        for (let bydow of this.by_data.BYDAY) {
          this.last = initLast.clone();
          let [pos, dow] = this.ruleDayOfWeek(bydow);
          let dayOfMonth = this.last.nthWeekDay(dow, pos);
          if (pos >= 6 || pos <= -6) {
            throw new Error("Malformed values in BYDAY part");
          }
          if (dayOfMonth > daysInMonth || dayOfMonth <= 0) {
            if (tempLast && tempLast.month == initLast.month) {
              continue;
            }
            while (dayOfMonth > daysInMonth || dayOfMonth <= 0) {
              this.increment_month();
              daysInMonth = Time.daysInMonth(this.last.month, this.last.year);
              dayOfMonth = this.last.nthWeekDay(dow, pos);
            }
          }
          this.last.day = dayOfMonth;
          if (!tempLast || this.last.compare(tempLast) < 0) {
            tempLast = this.last.clone();
          }
        }
        this.last = tempLast.clone();
        if (this.has_by_data("BYMONTHDAY")) {
          this._byDayAndMonthDay(true);
        }
        if (this.last.day > daysInMonth || this.last.day == 0) {
          throw new Error("Malformed values in BYDAY part");
        }
      } else if (this.has_by_data("BYMONTHDAY")) {
        this.last.day = 1;
        let normalized = this.normalizeByMonthDayRules(
          this.last.year,
          this.last.month,
          this.rule.parts.BYMONTHDAY
        ).filter((d2) => d2 >= this.last.day);
        if (normalized.length) {
          this.last.day = normalized[0];
          this.by_data.BYMONTHDAY = normalized;
        } else {
          if (!this.next_month() && !this.next_month() && !this.next_month()) {
            throw new Error("No possible occurrences");
          }
        }
      }
    }
  }
  /**
   * Retrieve the next occurrence from the iterator.
   * @return {Time}
   */
  next(again = false) {
    let before = this.last ? this.last.clone() : null;
    if (this.rule.count && this.occurrence_number >= this.rule.count || this.rule.until && this.last.compare(this.rule.until) > 0) {
      this.completed = true;
    }
    if (this.completed) {
      return null;
    }
    if (this.occurrence_number == 0 && this.last.compare(this.dtstart) >= 0) {
      this.occurrence_number++;
      return this.last;
    }
    let valid;
    do {
      valid = 1;
      switch (this.rule.freq) {
        case "SECONDLY":
          this.next_second();
          break;
        case "MINUTELY":
          this.next_minute();
          break;
        case "HOURLY":
          this.next_hour();
          break;
        case "DAILY":
          this.next_day();
          break;
        case "WEEKLY":
          this.next_week();
          break;
        case "MONTHLY":
          valid = this.next_month();
          break;
        case "YEARLY":
          this.next_year();
          break;
        default:
          return null;
      }
    } while (!this.check_contracting_rules() || this.last.compare(this.dtstart) < 0 || !valid);
    if (this.last.compare(before) == 0) {
      if (again) {
        throw new Error("Same occurrence found twice, protecting you from death by recursion");
      }
      this.next(true);
    }
    if (this.rule.until && this.last.compare(this.rule.until) > 0) {
      this.completed = true;
      return null;
    } else {
      this.occurrence_number++;
      return this.last;
    }
  }
  next_second() {
    return this.next_generic("BYSECOND", "SECONDLY", "second", "minute");
  }
  increment_second(inc) {
    return this.increment_generic(inc, "second", 60, "minute");
  }
  next_minute() {
    return this.next_generic(
      "BYMINUTE",
      "MINUTELY",
      "minute",
      "hour",
      "next_second"
    );
  }
  increment_minute(inc) {
    return this.increment_generic(inc, "minute", 60, "hour");
  }
  next_hour() {
    return this.next_generic(
      "BYHOUR",
      "HOURLY",
      "hour",
      "monthday",
      "next_minute"
    );
  }
  increment_hour(inc) {
    this.increment_generic(inc, "hour", 24, "monthday");
  }
  next_day() {
    let this_freq = this.rule.freq == "DAILY";
    if (this.next_hour() == 0) {
      return 0;
    }
    if (this_freq) {
      this.increment_monthday(this.rule.interval);
    } else {
      this.increment_monthday(1);
    }
    return 0;
  }
  next_week() {
    let end_of_data = 0;
    if (this.next_weekday_by_week() == 0) {
      return end_of_data;
    }
    if (this.has_by_data("BYWEEKNO")) {
      this.by_indices.BYWEEKNO++;
      if (this.by_indices.BYWEEKNO == this.by_data.BYWEEKNO.length) {
        this.by_indices.BYWEEKNO = 0;
        end_of_data = 1;
      }
      this.last.month = 1;
      this.last.day = 1;
      let week_no = this.by_data.BYWEEKNO[this.by_indices.BYWEEKNO];
      this.last.day += 7 * week_no;
      if (end_of_data) {
        this.increment_year(1);
      }
    } else {
      this.increment_monthday(7 * this.rule.interval);
    }
    return end_of_data;
  }
  /**
   * Normalize each by day rule for a given year/month.
   * Takes into account ordering and negative rules
   *
   * @private
   * @param {Number} year         Current year.
   * @param {Number} month        Current month.
   * @param {Array}  rules        Array of rules.
   *
   * @return {Array} sorted and normalized rules.
   *                 Negative rules will be expanded to their
   *                 correct positive values for easier processing.
   */
  normalizeByMonthDayRules(year, month, rules) {
    let daysInMonth = Time.daysInMonth(month, year);
    let newRules = [];
    let ruleIdx = 0;
    let len = rules.length;
    let rule;
    for (; ruleIdx < len; ruleIdx++) {
      rule = parseInt(rules[ruleIdx], 10);
      if (isNaN(rule)) {
        throw new Error("Invalid BYMONTHDAY value");
      }
      if (Math.abs(rule) > daysInMonth) {
        continue;
      }
      if (rule < 0) {
        rule = daysInMonth + (rule + 1);
      } else if (rule === 0) {
        continue;
      }
      if (newRules.indexOf(rule) === -1) {
        newRules.push(rule);
      }
    }
    return newRules.sort(function(a2, b) {
      return a2 - b;
    });
  }
  /**
   * NOTES:
   * We are given a list of dates in the month (BYMONTHDAY) (23, etc..)
   * Also we are given a list of days (BYDAY) (MO, 2SU, etc..) when
   * both conditions match a given date (this.last.day) iteration stops.
   *
   * @private
   * @param {Boolean=} isInit     When given true will not increment the
   *                                current day (this.last).
   */
  _byDayAndMonthDay(isInit) {
    let byMonthDay;
    let byDay = this.by_data.BYDAY;
    let date;
    let dateIdx = 0;
    let dateLen;
    let dayLen = byDay.length;
    let dataIsValid = 0;
    let daysInMonth;
    let self2 = this;
    let lastDay = this.last.day;
    function initMonth() {
      daysInMonth = Time.daysInMonth(
        self2.last.month,
        self2.last.year
      );
      byMonthDay = self2.normalizeByMonthDayRules(
        self2.last.year,
        self2.last.month,
        self2.by_data.BYMONTHDAY
      );
      dateLen = byMonthDay.length;
      while (byMonthDay[dateIdx] <= lastDay && !(isInit && byMonthDay[dateIdx] == lastDay) && dateIdx < dateLen - 1) {
        dateIdx++;
      }
    }
    function nextMonth() {
      lastDay = 0;
      self2.increment_month();
      dateIdx = 0;
      initMonth();
    }
    initMonth();
    if (isInit) {
      lastDay -= 1;
    }
    let monthsCounter = 48;
    while (!dataIsValid && monthsCounter) {
      monthsCounter--;
      date = lastDay + 1;
      if (date > daysInMonth) {
        nextMonth();
        continue;
      }
      let next = byMonthDay[dateIdx++];
      if (next >= date) {
        lastDay = next;
      } else {
        nextMonth();
        continue;
      }
      for (let dayIdx = 0; dayIdx < dayLen; dayIdx++) {
        let parts = this.ruleDayOfWeek(byDay[dayIdx]);
        let pos = parts[0];
        let dow = parts[1];
        this.last.day = lastDay;
        if (this.last.isNthWeekDay(dow, pos)) {
          dataIsValid = 1;
          break;
        }
      }
      if (!dataIsValid && dateIdx === dateLen) {
        nextMonth();
        continue;
      }
    }
    if (monthsCounter <= 0) {
      throw new Error("Malformed values in BYDAY combined with BYMONTHDAY parts");
    }
    return dataIsValid;
  }
  next_month() {
    let data_valid = 1;
    if (this.next_hour() == 0) {
      return data_valid;
    }
    if (this.has_by_data("BYDAY") && this.has_by_data("BYMONTHDAY")) {
      data_valid = this._byDayAndMonthDay();
    } else if (this.has_by_data("BYDAY")) {
      let daysInMonth = Time.daysInMonth(this.last.month, this.last.year);
      let setpos = 0;
      let setpos_total = 0;
      if (this.has_by_data("BYSETPOS")) {
        let last_day = this.last.day;
        for (let day2 = 1; day2 <= daysInMonth; day2++) {
          this.last.day = day2;
          if (this.is_day_in_byday(this.last)) {
            setpos_total++;
            if (day2 <= last_day) {
              setpos++;
            }
          }
        }
        this.last.day = last_day;
      }
      data_valid = 0;
      let day;
      for (day = this.last.day + 1; day <= daysInMonth; day++) {
        this.last.day = day;
        if (this.is_day_in_byday(this.last)) {
          if (!this.has_by_data("BYSETPOS") || this.check_set_position(++setpos) || this.check_set_position(setpos - setpos_total - 1)) {
            data_valid = 1;
            break;
          }
        }
      }
      if (day > daysInMonth) {
        this.last.day = 1;
        this.increment_month();
        if (this.is_day_in_byday(this.last)) {
          if (!this.has_by_data("BYSETPOS") || this.check_set_position(1)) {
            data_valid = 1;
          }
        } else {
          data_valid = 0;
        }
      }
    } else if (this.has_by_data("BYMONTHDAY")) {
      this.by_indices.BYMONTHDAY++;
      if (this.by_indices.BYMONTHDAY >= this.by_data.BYMONTHDAY.length) {
        this.by_indices.BYMONTHDAY = 0;
        this.increment_month();
        if (this.by_indices.BYMONTHDAY >= this.by_data.BYMONTHDAY.length) {
          return 0;
        }
      }
      let daysInMonth = Time.daysInMonth(this.last.month, this.last.year);
      let day = this.by_data.BYMONTHDAY[this.by_indices.BYMONTHDAY];
      if (day < 0) {
        day = daysInMonth + day + 1;
      }
      if (day > daysInMonth) {
        this.last.day = 1;
        data_valid = this.is_day_in_byday(this.last);
      } else {
        this.last.day = day;
      }
    } else {
      this.increment_month();
      let daysInMonth = Time.daysInMonth(this.last.month, this.last.year);
      if (this.by_data.BYMONTHDAY[0] > daysInMonth) {
        data_valid = 0;
      } else {
        this.last.day = this.by_data.BYMONTHDAY[0];
      }
    }
    return data_valid;
  }
  next_weekday_by_week() {
    let end_of_data = 0;
    if (this.next_hour() == 0) {
      return end_of_data;
    }
    if (!this.has_by_data("BYDAY")) {
      return 1;
    }
    for (; ; ) {
      let tt2 = new Time();
      this.by_indices.BYDAY++;
      if (this.by_indices.BYDAY == Object.keys(this.by_data.BYDAY).length) {
        this.by_indices.BYDAY = 0;
        end_of_data = 1;
      }
      let coded_day = this.by_data.BYDAY[this.by_indices.BYDAY];
      let parts = this.ruleDayOfWeek(coded_day);
      let dow = parts[1];
      dow -= this.rule.wkst;
      if (dow < 0) {
        dow += 7;
      }
      tt2.year = this.last.year;
      tt2.month = this.last.month;
      tt2.day = this.last.day;
      let startOfWeek2 = tt2.startDoyWeek(this.rule.wkst);
      if (dow + startOfWeek2 < 1) {
        if (!end_of_data) {
          continue;
        }
      }
      let next = Time.fromDayOfYear(startOfWeek2 + dow, this.last.year);
      this.last.year = next.year;
      this.last.month = next.month;
      this.last.day = next.day;
      return end_of_data;
    }
  }
  next_year() {
    if (this.next_hour() == 0) {
      return 0;
    }
    if (++this.days_index == this.days.length) {
      this.days_index = 0;
      do {
        this.increment_year(this.rule.interval);
        if (this.has_by_data("BYMONTHDAY")) {
          this.by_data.BYMONTHDAY = this.normalizeByMonthDayRules(
            this.last.year,
            this.last.month,
            this.rule.parts.BYMONTHDAY
          );
        }
        this.expand_year_days(this.last.year);
      } while (this.days.length == 0);
    }
    this._nextByYearDay();
    return 1;
  }
  _nextByYearDay() {
    let doy = this.days[this.days_index];
    let year = this.last.year;
    if (doy < 1) {
      doy += 1;
      year += 1;
    }
    let next = Time.fromDayOfYear(doy, year);
    this.last.day = next.day;
    this.last.month = next.month;
  }
  /**
   * @param dow (eg: '1TU', '-1MO')
   * @param {weekDay=} aWeekStart The week start weekday
   * @return [pos, numericDow] (eg: [1, 3]) numericDow is relative to aWeekStart
   */
  ruleDayOfWeek(dow, aWeekStart) {
    let matches = dow.match(/([+-]?[0-9])?(MO|TU|WE|TH|FR|SA|SU)/);
    if (matches) {
      let pos = parseInt(matches[1] || 0, 10);
      dow = Recur.icalDayToNumericDay(matches[2], aWeekStart);
      return [pos, dow];
    } else {
      return [0, 0];
    }
  }
  next_generic(aRuleType, aInterval, aDateAttr, aFollowingAttr, aPreviousIncr) {
    let has_by_rule = aRuleType in this.by_data;
    let this_freq = this.rule.freq == aInterval;
    let end_of_data = 0;
    if (aPreviousIncr && this[aPreviousIncr]() == 0) {
      return end_of_data;
    }
    if (has_by_rule) {
      this.by_indices[aRuleType]++;
      let dta = this.by_data[aRuleType];
      if (this.by_indices[aRuleType] == dta.length) {
        this.by_indices[aRuleType] = 0;
        end_of_data = 1;
      }
      this.last[aDateAttr] = dta[this.by_indices[aRuleType]];
    } else if (this_freq) {
      this["increment_" + aDateAttr](this.rule.interval);
    }
    if (has_by_rule && end_of_data && this_freq) {
      this["increment_" + aFollowingAttr](1);
    }
    return end_of_data;
  }
  increment_monthday(inc) {
    for (let i = 0; i < inc; i++) {
      let daysInMonth = Time.daysInMonth(this.last.month, this.last.year);
      this.last.day++;
      if (this.last.day > daysInMonth) {
        this.last.day -= daysInMonth;
        this.increment_month();
      }
    }
  }
  increment_month() {
    this.last.day = 1;
    if (this.has_by_data("BYMONTH")) {
      this.by_indices.BYMONTH++;
      if (this.by_indices.BYMONTH == this.by_data.BYMONTH.length) {
        this.by_indices.BYMONTH = 0;
        this.increment_year(1);
      }
      this.last.month = this.by_data.BYMONTH[this.by_indices.BYMONTH];
    } else {
      if (this.rule.freq == "MONTHLY") {
        this.last.month += this.rule.interval;
      } else {
        this.last.month++;
      }
      this.last.month--;
      let years2 = trunc(this.last.month / 12);
      this.last.month %= 12;
      this.last.month++;
      if (years2 != 0) {
        this.increment_year(years2);
      }
    }
    if (this.has_by_data("BYMONTHDAY")) {
      this.by_data.BYMONTHDAY = this.normalizeByMonthDayRules(
        this.last.year,
        this.last.month,
        this.rule.parts.BYMONTHDAY
      );
    }
  }
  increment_year(inc) {
    this.last.day = 1;
    this.last.year += inc;
  }
  increment_generic(inc, aDateAttr, aFactor, aNextIncrement) {
    this.last[aDateAttr] += inc;
    let nextunit = trunc(this.last[aDateAttr] / aFactor);
    this.last[aDateAttr] %= aFactor;
    if (nextunit != 0) {
      this["increment_" + aNextIncrement](nextunit);
    }
  }
  has_by_data(aRuleType) {
    return aRuleType in this.rule.parts;
  }
  expand_year_days(aYear) {
    let t4 = new Time();
    this.days = [];
    let parts = {};
    let rules = ["BYDAY", "BYWEEKNO", "BYMONTHDAY", "BYMONTH", "BYYEARDAY"];
    for (let part of rules) {
      if (part in this.rule.parts) {
        parts[part] = this.rule.parts[part];
      }
    }
    if ("BYMONTH" in parts && "BYWEEKNO" in parts) {
      let valid = 1;
      let validWeeks = {};
      t4.year = aYear;
      t4.isDate = true;
      for (let monthIdx = 0; monthIdx < this.by_data.BYMONTH.length; monthIdx++) {
        let month = this.by_data.BYMONTH[monthIdx];
        t4.month = month;
        t4.day = 1;
        let first_week = t4.weekNumber(this.rule.wkst);
        t4.day = Time.daysInMonth(month, aYear);
        let last_week = t4.weekNumber(this.rule.wkst);
        for (monthIdx = first_week; monthIdx < last_week; monthIdx++) {
          validWeeks[monthIdx] = 1;
        }
      }
      for (let weekIdx = 0; weekIdx < this.by_data.BYWEEKNO.length && valid; weekIdx++) {
        let weekno = this.by_data.BYWEEKNO[weekIdx];
        if (weekno < 52) {
          valid &= validWeeks[weekIdx];
        } else {
          valid = 0;
        }
      }
      if (valid) {
        delete parts.BYMONTH;
      } else {
        delete parts.BYWEEKNO;
      }
    }
    let partCount = Object.keys(parts).length;
    if (partCount == 0) {
      let t110 = this.dtstart.clone();
      t110.year = this.last.year;
      this.days.push(t110.dayOfYear());
    } else if (partCount == 1 && "BYMONTH" in parts) {
      for (let month of this.by_data.BYMONTH) {
        let t210 = this.dtstart.clone();
        t210.year = aYear;
        t210.month = month;
        t210.isDate = true;
        this.days.push(t210.dayOfYear());
      }
    } else if (partCount == 1 && "BYMONTHDAY" in parts) {
      for (let monthday of this.by_data.BYMONTHDAY) {
        let t33 = this.dtstart.clone();
        if (monthday < 0) {
          let daysInMonth = Time.daysInMonth(t33.month, aYear);
          monthday = monthday + daysInMonth + 1;
        }
        t33.day = monthday;
        t33.year = aYear;
        t33.isDate = true;
        this.days.push(t33.dayOfYear());
      }
    } else if (partCount == 2 && "BYMONTHDAY" in parts && "BYMONTH" in parts) {
      for (let month of this.by_data.BYMONTH) {
        let daysInMonth = Time.daysInMonth(month, aYear);
        for (let monthday of this.by_data.BYMONTHDAY) {
          if (monthday < 0) {
            monthday = monthday + daysInMonth + 1;
          }
          t4.day = monthday;
          t4.month = month;
          t4.year = aYear;
          t4.isDate = true;
          this.days.push(t4.dayOfYear());
        }
      }
    } else if (partCount == 1 && "BYWEEKNO" in parts) ;
    else if (partCount == 2 && "BYWEEKNO" in parts && "BYMONTHDAY" in parts) ;
    else if (partCount == 1 && "BYDAY" in parts) {
      this.days = this.days.concat(this.expand_by_day(aYear));
    } else if (partCount == 2 && "BYDAY" in parts && "BYMONTH" in parts) {
      for (let month of this.by_data.BYMONTH) {
        let daysInMonth = Time.daysInMonth(month, aYear);
        t4.year = aYear;
        t4.month = month;
        t4.day = 1;
        t4.isDate = true;
        let first_dow = t4.dayOfWeek();
        let doy_offset = t4.dayOfYear() - 1;
        t4.day = daysInMonth;
        let last_dow = t4.dayOfWeek();
        if (this.has_by_data("BYSETPOS")) {
          let by_month_day = [];
          for (let day = 1; day <= daysInMonth; day++) {
            t4.day = day;
            if (this.is_day_in_byday(t4)) {
              by_month_day.push(day);
            }
          }
          for (let spIndex = 0; spIndex < by_month_day.length; spIndex++) {
            if (this.check_set_position(spIndex + 1) || this.check_set_position(spIndex - by_month_day.length)) {
              this.days.push(doy_offset + by_month_day[spIndex]);
            }
          }
        } else {
          for (let coded_day of this.by_data.BYDAY) {
            let bydayParts = this.ruleDayOfWeek(coded_day);
            let pos = bydayParts[0];
            let dow = bydayParts[1];
            let month_day;
            let first_matching_day = (dow + 7 - first_dow) % 7 + 1;
            let last_matching_day = daysInMonth - (last_dow + 7 - dow) % 7;
            if (pos == 0) {
              for (let day = first_matching_day; day <= daysInMonth; day += 7) {
                this.days.push(doy_offset + day);
              }
            } else if (pos > 0) {
              month_day = first_matching_day + (pos - 1) * 7;
              if (month_day <= daysInMonth) {
                this.days.push(doy_offset + month_day);
              }
            } else {
              month_day = last_matching_day + (pos + 1) * 7;
              if (month_day > 0) {
                this.days.push(doy_offset + month_day);
              }
            }
          }
        }
      }
      this.days.sort(function(a2, b) {
        return a2 - b;
      });
    } else if (partCount == 2 && "BYDAY" in parts && "BYMONTHDAY" in parts) {
      let expandedDays = this.expand_by_day(aYear);
      for (let day of expandedDays) {
        let tt2 = Time.fromDayOfYear(day, aYear);
        if (this.by_data.BYMONTHDAY.indexOf(tt2.day) >= 0) {
          this.days.push(day);
        }
      }
    } else if (partCount == 3 && "BYDAY" in parts && "BYMONTHDAY" in parts && "BYMONTH" in parts) {
      let expandedDays = this.expand_by_day(aYear);
      for (let day of expandedDays) {
        let tt2 = Time.fromDayOfYear(day, aYear);
        if (this.by_data.BYMONTH.indexOf(tt2.month) >= 0 && this.by_data.BYMONTHDAY.indexOf(tt2.day) >= 0) {
          this.days.push(day);
        }
      }
    } else if (partCount == 2 && "BYDAY" in parts && "BYWEEKNO" in parts) {
      let expandedDays = this.expand_by_day(aYear);
      for (let day of expandedDays) {
        let tt2 = Time.fromDayOfYear(day, aYear);
        let weekno = tt2.weekNumber(this.rule.wkst);
        if (this.by_data.BYWEEKNO.indexOf(weekno)) {
          this.days.push(day);
        }
      }
    } else if (partCount == 3 && "BYDAY" in parts && "BYWEEKNO" in parts && "BYMONTHDAY" in parts) ;
    else if (partCount == 1 && "BYYEARDAY" in parts) {
      this.days = this.days.concat(this.by_data.BYYEARDAY);
    } else {
      this.days = [];
    }
    let daysInYear = Time.isLeapYear(aYear) ? 366 : 365;
    this.days.sort((a2, b) => {
      if (a2 < 0) a2 += daysInYear + 1;
      if (b < 0) b += daysInYear + 1;
      return a2 - b;
    });
    return 0;
  }
  expand_by_day(aYear) {
    let days_list = [];
    let tmp = this.last.clone();
    tmp.year = aYear;
    tmp.month = 1;
    tmp.day = 1;
    tmp.isDate = true;
    let start_dow = tmp.dayOfWeek();
    tmp.month = 12;
    tmp.day = 31;
    tmp.isDate = true;
    let end_dow = tmp.dayOfWeek();
    let end_year_day = tmp.dayOfYear();
    for (let day of this.by_data.BYDAY) {
      let parts = this.ruleDayOfWeek(day);
      let pos = parts[0];
      let dow = parts[1];
      if (pos == 0) {
        let tmp_start_doy = (dow + 7 - start_dow) % 7 + 1;
        for (let doy = tmp_start_doy; doy <= end_year_day; doy += 7) {
          days_list.push(doy);
        }
      } else if (pos > 0) {
        let first;
        if (dow >= start_dow) {
          first = dow - start_dow + 1;
        } else {
          first = dow - start_dow + 8;
        }
        days_list.push(first + (pos - 1) * 7);
      } else {
        let last;
        pos = -pos;
        if (dow <= end_dow) {
          last = end_year_day - end_dow + dow;
        } else {
          last = end_year_day - end_dow + dow - 7;
        }
        days_list.push(last - (pos - 1) * 7);
      }
    }
    return days_list;
  }
  is_day_in_byday(tt2) {
    if (this.by_data.BYDAY) {
      for (let day of this.by_data.BYDAY) {
        let parts = this.ruleDayOfWeek(day);
        let pos = parts[0];
        let dow = parts[1];
        let this_dow = tt2.dayOfWeek();
        if (pos == 0 && dow == this_dow || tt2.nthWeekDay(dow, pos) == tt2.day) {
          return 1;
        }
      }
    }
    return 0;
  }
  /**
   * Checks if given value is in BYSETPOS.
   *
   * @private
   * @param {Numeric} aPos position to check for.
   * @return {Boolean} false unless BYSETPOS rules exist
   *                   and the given value is present in rules.
   */
  check_set_position(aPos) {
    if (this.has_by_data("BYSETPOS")) {
      let idx = this.by_data.BYSETPOS.indexOf(aPos);
      return idx !== -1;
    }
    return false;
  }
  sort_byday_rules(aRules) {
    for (let i = 0; i < aRules.length; i++) {
      for (let j = 0; j < i; j++) {
        let one = this.ruleDayOfWeek(aRules[j], this.rule.wkst)[1];
        let two = this.ruleDayOfWeek(aRules[i], this.rule.wkst)[1];
        if (one > two) {
          let tmp = aRules[i];
          aRules[i] = aRules[j];
          aRules[j] = tmp;
        }
      }
    }
  }
  check_contract_restriction(aRuleType, v2) {
    let indexMapValue = RecurIterator._indexMap[aRuleType];
    let ruleMapValue = RecurIterator._expandMap[this.rule.freq][indexMapValue];
    let pass = false;
    if (aRuleType in this.by_data && ruleMapValue == RecurIterator.CONTRACT) {
      let ruleType = this.by_data[aRuleType];
      for (let bydata of ruleType) {
        if (bydata == v2) {
          pass = true;
          break;
        }
      }
    } else {
      pass = true;
    }
    return pass;
  }
  check_contracting_rules() {
    let dow = this.last.dayOfWeek();
    let weekNo = this.last.weekNumber(this.rule.wkst);
    let doy = this.last.dayOfYear();
    return this.check_contract_restriction("BYSECOND", this.last.second) && this.check_contract_restriction("BYMINUTE", this.last.minute) && this.check_contract_restriction("BYHOUR", this.last.hour) && this.check_contract_restriction("BYDAY", Recur.numericDayToIcalDay(dow)) && this.check_contract_restriction("BYWEEKNO", weekNo) && this.check_contract_restriction("BYMONTHDAY", this.last.day) && this.check_contract_restriction("BYMONTH", this.last.month) && this.check_contract_restriction("BYYEARDAY", doy);
  }
  setup_defaults(aRuleType, req, deftime) {
    let indexMapValue = RecurIterator._indexMap[aRuleType];
    let ruleMapValue = RecurIterator._expandMap[this.rule.freq][indexMapValue];
    if (ruleMapValue != RecurIterator.CONTRACT) {
      if (!(aRuleType in this.by_data)) {
        this.by_data[aRuleType] = [deftime];
      }
      if (this.rule.freq != req) {
        return this.by_data[aRuleType][0];
      }
    }
    return deftime;
  }
  /**
   * Convert iterator into a serialize-able object.  Will preserve current
   * iteration sequence to ensure the seamless continuation of the recurrence
   * rule.
   * @return {Object}
   */
  toJSON() {
    let result = /* @__PURE__ */ Object.create(null);
    result.initialized = this.initialized;
    result.rule = this.rule.toJSON();
    result.dtstart = this.dtstart.toJSON();
    result.by_data = this.by_data;
    result.days = this.days;
    result.last = this.last.toJSON();
    result.by_indices = this.by_indices;
    result.occurrence_number = this.occurrence_number;
    return result;
  }
}
class InvalidRecurrenceRuleError extends Error {
  constructor() {
    super("Recurrence rule has no valid occurrences");
  }
}
const VALID_DAY_NAMES = /^(SU|MO|TU|WE|TH|FR|SA)$/;
const VALID_BYDAY_PART = /^([+-])?(5[0-3]|[1-4][0-9]|[1-9])?(SU|MO|TU|WE|TH|FR|SA)$/;
const DOW_MAP = {
  SU: Time.SUNDAY,
  MO: Time.MONDAY,
  TU: Time.TUESDAY,
  WE: Time.WEDNESDAY,
  TH: Time.THURSDAY,
  FR: Time.FRIDAY,
  SA: Time.SATURDAY
};
const REVERSE_DOW_MAP = Object.fromEntries(Object.entries(DOW_MAP).map((entry) => entry.reverse()));
const ALLOWED_FREQ = [
  "SECONDLY",
  "MINUTELY",
  "HOURLY",
  "DAILY",
  "WEEKLY",
  "MONTHLY",
  "YEARLY"
];
class Recur {
  /**
   * Creates a new {@link ICAL.Recur} instance from the passed string.
   *
   * @param {String} string         The string to parse
   * @return {Recur}                The created recurrence instance
   */
  static fromString(string) {
    let data11 = this._stringToData(string, false);
    return new Recur(data11);
  }
  /**
   * Creates a new {@link ICAL.Recur} instance using members from the passed
   * data object.
   *
   * @param {Object} aData                              An object with members of the recurrence
   * @param {frequencyValues=} aData.freq               The frequency value
   * @param {Number=} aData.interval                    The INTERVAL value
   * @param {weekDay=} aData.wkst                       The week start value
   * @param {Time=} aData.until                         The end of the recurrence set
   * @param {Number=} aData.count                       The number of occurrences
   * @param {Array.<Number>=} aData.bysecond            The seconds for the BYSECOND part
   * @param {Array.<Number>=} aData.byminute            The minutes for the BYMINUTE part
   * @param {Array.<Number>=} aData.byhour              The hours for the BYHOUR part
   * @param {Array.<String>=} aData.byday               The BYDAY values
   * @param {Array.<Number>=} aData.bymonthday          The days for the BYMONTHDAY part
   * @param {Array.<Number>=} aData.byyearday           The days for the BYYEARDAY part
   * @param {Array.<Number>=} aData.byweekno            The weeks for the BYWEEKNO part
   * @param {Array.<Number>=} aData.bymonth             The month for the BYMONTH part
   * @param {Array.<Number>=} aData.bysetpos            The positionals for the BYSETPOS part
   */
  static fromData(aData) {
    return new Recur(aData);
  }
  /**
   * Converts a recurrence string to a data object, suitable for the fromData
   * method.
   *
   * @private
   * @param {String} string     The string to parse
   * @param {Boolean} fmtIcal   If true, the string is considered to be an
   *                              iCalendar string
   * @return {Recur}            The recurrence instance
   */
  static _stringToData(string, fmtIcal) {
    let dict = /* @__PURE__ */ Object.create(null);
    let values = string.split(";");
    let len = values.length;
    for (let i = 0; i < len; i++) {
      let parts = values[i].split("=");
      let ucname = parts[0].toUpperCase();
      let lcname = parts[0].toLowerCase();
      let name = fmtIcal ? lcname : ucname;
      let value3 = parts[1];
      if (ucname in partDesign) {
        let partArr = value3.split(",");
        let partSet = /* @__PURE__ */ new Set();
        for (let part of partArr) {
          partSet.add(partDesign[ucname](part));
        }
        partArr = [...partSet];
        dict[name] = partArr.length == 1 ? partArr[0] : partArr;
      } else if (ucname in optionDesign) {
        optionDesign[ucname](value3, dict, fmtIcal);
      } else {
        dict[lcname] = value3;
      }
    }
    return dict;
  }
  /**
   * Convert an ical representation of a day (SU, MO, etc..)
   * into a numeric value of that day.
   *
   * @param {String} string     The iCalendar day name
   * @param {weekDay=} aWeekStart
   *        The week start weekday, defaults to SUNDAY
   * @return {Number}           Numeric value of given day
   */
  static icalDayToNumericDay(string, aWeekStart) {
    let firstDow = aWeekStart || Time.SUNDAY;
    return (DOW_MAP[string] - firstDow + 7) % 7 + 1;
  }
  /**
   * Convert a numeric day value into its ical representation (SU, MO, etc..)
   *
   * @param {Number} num        Numeric value of given day
   * @param {weekDay=} aWeekStart
   *        The week start weekday, defaults to SUNDAY
   * @return {String}           The ICAL day value, e.g SU,MO,...
   */
  static numericDayToIcalDay(num, aWeekStart) {
    let firstDow = aWeekStart || Time.SUNDAY;
    let dow = num + firstDow - Time.SUNDAY;
    if (dow > 7) {
      dow -= 7;
    }
    return REVERSE_DOW_MAP[dow];
  }
  /**
   * Create a new instance of the Recur class.
   *
   * @param {Object} data                               An object with members of the recurrence
   * @param {frequencyValues=} data.freq                The frequency value
   * @param {Number=} data.interval                     The INTERVAL value
   * @param {weekDay=} data.wkst                        The week start value
   * @param {Time=} data.until                          The end of the recurrence set
   * @param {Number=} data.count                        The number of occurrences
   * @param {Array.<Number>=} data.bysecond             The seconds for the BYSECOND part
   * @param {Array.<Number>=} data.byminute             The minutes for the BYMINUTE part
   * @param {Array.<Number>=} data.byhour               The hours for the BYHOUR part
   * @param {Array.<String>=} data.byday                The BYDAY values
   * @param {Array.<Number>=} data.bymonthday           The days for the BYMONTHDAY part
   * @param {Array.<Number>=} data.byyearday            The days for the BYYEARDAY part
   * @param {Array.<Number>=} data.byweekno             The weeks for the BYWEEKNO part
   * @param {Array.<Number>=} data.bymonth              The month for the BYMONTH part
   * @param {Array.<Number>=} data.bysetpos             The positionals for the BYSETPOS part
   */
  constructor(data11) {
    this.wrappedJSObject = this;
    this.parts = {};
    if (data11 && typeof data11 === "object") {
      this.fromData(data11);
    }
  }
  /**
   * An object holding the BY-parts of the recurrence rule
   * @memberof ICAL.Recur
   * @typedef {Object} byParts
   * @property {Array.<Number>=} BYSECOND            The seconds for the BYSECOND part
   * @property {Array.<Number>=} BYMINUTE            The minutes for the BYMINUTE part
   * @property {Array.<Number>=} BYHOUR              The hours for the BYHOUR part
   * @property {Array.<String>=} BYDAY               The BYDAY values
   * @property {Array.<Number>=} BYMONTHDAY          The days for the BYMONTHDAY part
   * @property {Array.<Number>=} BYYEARDAY           The days for the BYYEARDAY part
   * @property {Array.<Number>=} BYWEEKNO            The weeks for the BYWEEKNO part
   * @property {Array.<Number>=} BYMONTH             The month for the BYMONTH part
   * @property {Array.<Number>=} BYSETPOS            The positionals for the BYSETPOS part
   */
  /**
   * An object holding the BY-parts of the recurrence rule
   * @type {byParts}
   */
  parts = null;
  /**
   * The interval value for the recurrence rule.
   * @type {Number}
   */
  interval = 1;
  /**
   * The week start day
   *
   * @type {weekDay}
   * @default ICAL.Time.MONDAY
   */
  wkst = Time.MONDAY;
  /**
   * The end of the recurrence
   * @type {?Time}
   */
  until = null;
  /**
   * The maximum number of occurrences
   * @type {?Number}
   */
  count = null;
  /**
   * The frequency value.
   * @type {frequencyValues}
   */
  freq = null;
  /**
   * The class identifier.
   * @constant
   * @type {String}
   * @default "icalrecur"
   */
  icalclass = "icalrecur";
  /**
   * The type name, to be used in the jCal object.
   * @constant
   * @type {String}
   * @default "recur"
   */
  icaltype = "recur";
  /**
   * Create a new iterator for this recurrence rule. The passed start date
   * must be the start date of the event, not the start of the range to
   * search in.
   *
   * @example
   * let recur = comp.getFirstPropertyValue('rrule');
   * let dtstart = comp.getFirstPropertyValue('dtstart');
   * let iter = recur.iterator(dtstart);
   * for (let next = iter.next(); next; next = iter.next()) {
   *   if (next.compare(rangeStart) < 0) {
   *     continue;
   *   }
   *   console.log(next.toString());
   * }
   *
   * @param {Time} aStart        The item's start date
   * @return {RecurIterator}     The recurrence iterator
   */
  iterator(aStart) {
    return new RecurIterator({
      rule: this,
      dtstart: aStart
    });
  }
  /**
   * Returns a clone of the recurrence object.
   *
   * @return {Recur}      The cloned object
   */
  clone() {
    return new Recur(this.toJSON());
  }
  /**
   * Checks if the current rule is finite, i.e. has a count or until part.
   *
   * @return {Boolean}        True, if the rule is finite
   */
  isFinite() {
    return !!(this.count || this.until);
  }
  /**
   * Checks if the current rule has a count part, and not limited by an until
   * part.
   *
   * @return {Boolean}        True, if the rule is by count
   */
  isByCount() {
    return !!(this.count && !this.until);
  }
  /**
   * Adds a component (part) to the recurrence rule. This is not a component
   * in the sense of {@link ICAL.Component}, but a part of the recurrence
   * rule, i.e. BYMONTH.
   *
   * @param {String} aType            The name of the component part
   * @param {Array|String} aValue     The component value
   */
  addComponent(aType, aValue) {
    let ucname = aType.toUpperCase();
    if (ucname in this.parts) {
      this.parts[ucname].push(aValue);
    } else {
      this.parts[ucname] = [aValue];
    }
  }
  /**
   * Sets the component value for the given by-part.
   *
   * @param {String} aType        The component part name
   * @param {Array} aValues       The component values
   */
  setComponent(aType, aValues) {
    this.parts[aType.toUpperCase()] = aValues.slice();
  }
  /**
   * Gets (a copy) of the requested component value.
   *
   * @param {String} aType        The component part name
   * @return {Array}              The component part value
   */
  getComponent(aType) {
    let ucname = aType.toUpperCase();
    return ucname in this.parts ? this.parts[ucname].slice() : [];
  }
  /**
   * Retrieves the next occurrence after the given recurrence id. See the
   * guide on {@tutorial terminology} for more details.
   *
   * NOTE: Currently, this method iterates all occurrences from the start
   * date. It should not be called in a loop for performance reasons. If you
   * would like to get more than one occurrence, you can iterate the
   * occurrences manually, see the example on the
   * {@link ICAL.Recur#iterator iterator} method.
   *
   * @param {Time} aStartTime        The start of the event series
   * @param {Time} aRecurrenceId     The date of the last occurrence
   * @return {Time}                  The next occurrence after
   */
  getNextOccurrence(aStartTime, aRecurrenceId) {
    let iter = this.iterator(aStartTime);
    let next;
    do {
      next = iter.next();
    } while (next && next.compare(aRecurrenceId) <= 0);
    if (next && aRecurrenceId.zone) {
      next.zone = aRecurrenceId.zone;
    }
    return next;
  }
  /**
   * Sets up the current instance using members from the passed data object.
   *
   * @param {Object} data                               An object with members of the recurrence
   * @param {frequencyValues=} data.freq                The frequency value
   * @param {Number=} data.interval                     The INTERVAL value
   * @param {weekDay=} data.wkst                        The week start value
   * @param {Time=} data.until                          The end of the recurrence set
   * @param {Number=} data.count                        The number of occurrences
   * @param {Array.<Number>=} data.bysecond             The seconds for the BYSECOND part
   * @param {Array.<Number>=} data.byminute             The minutes for the BYMINUTE part
   * @param {Array.<Number>=} data.byhour               The hours for the BYHOUR part
   * @param {Array.<String>=} data.byday                The BYDAY values
   * @param {Array.<Number>=} data.bymonthday           The days for the BYMONTHDAY part
   * @param {Array.<Number>=} data.byyearday            The days for the BYYEARDAY part
   * @param {Array.<Number>=} data.byweekno             The weeks for the BYWEEKNO part
   * @param {Array.<Number>=} data.bymonth              The month for the BYMONTH part
   * @param {Array.<Number>=} data.bysetpos             The positionals for the BYSETPOS part
   */
  fromData(data11) {
    for (let key in data11) {
      let uckey = key.toUpperCase();
      if (uckey in partDesign) {
        if (Array.isArray(data11[key])) {
          this.parts[uckey] = data11[key];
        } else {
          this.parts[uckey] = [data11[key]];
        }
      } else {
        this[key] = data11[key];
      }
    }
    if (this.interval && typeof this.interval != "number") {
      optionDesign.INTERVAL(this.interval, this);
    }
    if (this.wkst && typeof this.wkst != "number") {
      this.wkst = Recur.icalDayToNumericDay(this.wkst);
    }
    if (this.until && !(this.until instanceof Time)) {
      this.until = Time.fromString(this.until);
    }
  }
  /**
   * The jCal representation of this recurrence type.
   * @return {Object}
   */
  toJSON() {
    let res = /* @__PURE__ */ Object.create(null);
    res.freq = this.freq;
    if (this.count) {
      res.count = this.count;
    }
    if (this.interval > 1) {
      res.interval = this.interval;
    }
    for (let [k, kparts] of Object.entries(this.parts)) {
      if (Array.isArray(kparts) && kparts.length == 1) {
        res[k.toLowerCase()] = kparts[0];
      } else {
        res[k.toLowerCase()] = clone(kparts);
      }
    }
    if (this.until) {
      res.until = this.until.toString();
    }
    if ("wkst" in this && this.wkst !== Time.DEFAULT_WEEK_START) {
      res.wkst = Recur.numericDayToIcalDay(this.wkst);
    }
    return res;
  }
  /**
   * The string representation of this recurrence rule.
   * @return {String}
   */
  toString() {
    let str = "FREQ=" + this.freq;
    if (this.count) {
      str += ";COUNT=" + this.count;
    }
    if (this.interval > 1) {
      str += ";INTERVAL=" + this.interval;
    }
    for (let [k, v2] of Object.entries(this.parts)) {
      str += ";" + k + "=" + v2;
    }
    if (this.until) {
      str += ";UNTIL=" + this.until.toICALString();
    }
    if ("wkst" in this && this.wkst !== Time.DEFAULT_WEEK_START) {
      str += ";WKST=" + Recur.numericDayToIcalDay(this.wkst);
    }
    return str;
  }
}
function parseNumericValue(type, min2, max2, value3) {
  let result = value3;
  if (value3[0] === "+") {
    result = value3.slice(1);
  }
  result = strictParseInt(result);
  if (min2 !== void 0 && value3 < min2) {
    throw new Error(
      type + ': invalid value "' + value3 + '" must be > ' + min2
    );
  }
  if (max2 !== void 0 && value3 > max2) {
    throw new Error(
      type + ': invalid value "' + value3 + '" must be < ' + min2
    );
  }
  return result;
}
const optionDesign = {
  FREQ: function(value3, dict, fmtIcal) {
    if (ALLOWED_FREQ.indexOf(value3) !== -1) {
      dict.freq = value3;
    } else {
      throw new Error(
        'invalid frequency "' + value3 + '" expected: "' + ALLOWED_FREQ.join(", ") + '"'
      );
    }
  },
  COUNT: function(value3, dict, fmtIcal) {
    dict.count = strictParseInt(value3);
  },
  INTERVAL: function(value3, dict, fmtIcal) {
    dict.interval = strictParseInt(value3);
    if (dict.interval < 1) {
      dict.interval = 1;
    }
  },
  UNTIL: function(value3, dict, fmtIcal) {
    if (value3.length > 10) {
      dict.until = design$1.icalendar.value["date-time"].fromICAL(value3);
    } else {
      dict.until = design$1.icalendar.value.date.fromICAL(value3);
    }
    if (!fmtIcal) {
      dict.until = Time.fromString(dict.until);
    }
  },
  WKST: function(value3, dict, fmtIcal) {
    if (VALID_DAY_NAMES.test(value3)) {
      dict.wkst = Recur.icalDayToNumericDay(value3);
    } else {
      throw new Error('invalid WKST value "' + value3 + '"');
    }
  }
};
const partDesign = {
  BYSECOND: parseNumericValue.bind(void 0, "BYSECOND", 0, 60),
  BYMINUTE: parseNumericValue.bind(void 0, "BYMINUTE", 0, 59),
  BYHOUR: parseNumericValue.bind(void 0, "BYHOUR", 0, 23),
  BYDAY: function(value3) {
    if (VALID_BYDAY_PART.test(value3)) {
      return value3;
    } else {
      throw new Error('invalid BYDAY value "' + value3 + '"');
    }
  },
  BYMONTHDAY: parseNumericValue.bind(void 0, "BYMONTHDAY", -31, 31),
  BYYEARDAY: parseNumericValue.bind(void 0, "BYYEARDAY", -366, 366),
  BYWEEKNO: parseNumericValue.bind(void 0, "BYWEEKNO", -53, 53),
  BYMONTH: parseNumericValue.bind(void 0, "BYMONTH", 1, 12),
  BYSETPOS: parseNumericValue.bind(void 0, "BYSETPOS", -366, 366)
};
class Period {
  /**
   * Creates a new {@link ICAL.Period} instance from the passed string.
   *
   * @param {String} str            The string to parse
   * @param {Property} prop         The property this period will be on
   * @return {Period}               The created period instance
   */
  static fromString(str, prop) {
    let parts = str.split("/");
    if (parts.length !== 2) {
      throw new Error(
        'Invalid string value: "' + str + '" must contain a "/" char.'
      );
    }
    let options2 = {
      start: Time.fromDateTimeString(parts[0], prop)
    };
    let end = parts[1];
    if (Duration.isValueString(end)) {
      options2.duration = Duration.fromString(end);
    } else {
      options2.end = Time.fromDateTimeString(end, prop);
    }
    return new Period(options2);
  }
  /**
   * Creates a new {@link ICAL.Period} instance from the given data object.
   * The passed data object cannot contain both and end date and a duration.
   *
   * @param {Object} aData                  An object with members of the period
   * @param {Time=} aData.start             The start of the period
   * @param {Time=} aData.end               The end of the period
   * @param {Duration=} aData.duration      The duration of the period
   * @return {Period}                       The period instance
   */
  static fromData(aData) {
    return new Period(aData);
  }
  /**
   * Returns a new period instance from the given jCal data array. The first
   * member is always the start date string, the second member is either a
   * duration or end date string.
   *
   * @param {jCalComponent} aData           The jCal data array
   * @param {Property} aProp                The property this jCal data is on
   * @param {Boolean} aLenient              If true, data value can be both date and date-time
   * @return {Period}                       The period instance
   */
  static fromJSON(aData, aProp, aLenient) {
    function fromDateOrDateTimeString(aValue, dateProp) {
      if (aLenient) {
        return Time.fromString(aValue, dateProp);
      } else {
        return Time.fromDateTimeString(aValue, dateProp);
      }
    }
    if (Duration.isValueString(aData[1])) {
      return Period.fromData({
        start: fromDateOrDateTimeString(aData[0], aProp),
        duration: Duration.fromString(aData[1])
      });
    } else {
      return Period.fromData({
        start: fromDateOrDateTimeString(aData[0], aProp),
        end: fromDateOrDateTimeString(aData[1], aProp)
      });
    }
  }
  /**
   * Creates a new ICAL.Period instance. The passed data object cannot contain both and end date and
   * a duration.
   *
   * @param {Object} aData                  An object with members of the period
   * @param {Time=} aData.start             The start of the period
   * @param {Time=} aData.end               The end of the period
   * @param {Duration=} aData.duration      The duration of the period
   */
  constructor(aData) {
    this.wrappedJSObject = this;
    if (aData && "start" in aData) {
      if (aData.start && !(aData.start instanceof Time)) {
        throw new TypeError(".start must be an instance of ICAL.Time");
      }
      this.start = aData.start;
    }
    if (aData && aData.end && aData.duration) {
      throw new Error("cannot accept both end and duration");
    }
    if (aData && "end" in aData) {
      if (aData.end && !(aData.end instanceof Time)) {
        throw new TypeError(".end must be an instance of ICAL.Time");
      }
      this.end = aData.end;
    }
    if (aData && "duration" in aData) {
      if (aData.duration && !(aData.duration instanceof Duration)) {
        throw new TypeError(".duration must be an instance of ICAL.Duration");
      }
      this.duration = aData.duration;
    }
  }
  /**
   * The start of the period
   * @type {Time}
   */
  start = null;
  /**
   * The end of the period
   * @type {Time}
   */
  end = null;
  /**
   * The duration of the period
   * @type {Duration}
   */
  duration = null;
  /**
   * The class identifier.
   * @constant
   * @type {String}
   * @default "icalperiod"
   */
  icalclass = "icalperiod";
  /**
   * The type name, to be used in the jCal object.
   * @constant
   * @type {String}
   * @default "period"
   */
  icaltype = "period";
  /**
   * Returns a clone of the duration object.
   *
   * @return {Period}      The cloned object
   */
  clone() {
    return Period.fromData({
      start: this.start ? this.start.clone() : null,
      end: this.end ? this.end.clone() : null,
      duration: this.duration ? this.duration.clone() : null
    });
  }
  /**
   * Calculates the duration of the period, either directly or by subtracting
   * start from end date.
   *
   * @return {Duration}      The calculated duration
   */
  getDuration() {
    if (this.duration) {
      return this.duration;
    } else {
      return this.end.subtractDate(this.start);
    }
  }
  /**
   * Calculates the end date of the period, either directly or by adding
   * duration to start date.
   *
   * @return {Time}          The calculated end date
   */
  getEnd() {
    if (this.end) {
      return this.end;
    } else {
      let end = this.start.clone();
      end.addDuration(this.duration);
      return end;
    }
  }
  /**
   * The string representation of this period.
   * @return {String}
   */
  toString() {
    return this.start + "/" + (this.end || this.duration);
  }
  /**
   * The jCal representation of this period type.
   * @return {Object}
   */
  toJSON() {
    return [this.start.toString(), (this.end || this.duration).toString()];
  }
  /**
   * The iCalendar string representation of this period.
   * @return {String}
   */
  toICALString() {
    return this.start.toICALString() + "/" + (this.end || this.duration).toICALString();
  }
}
const FROM_ICAL_NEWLINE = /\\\\|\\;|\\,|\\[Nn]/g;
const TO_ICAL_NEWLINE = /\\|;|,|\n/g;
const FROM_VCARD_NEWLINE = /\\\\|\\,|\\[Nn]/g;
const TO_VCARD_NEWLINE = /\\|,|\n/g;
function createTextType(fromNewline, toNewline) {
  let result = {
    matches: /.*/,
    fromICAL: function(aValue, structuredEscape) {
      return replaceNewline(aValue, fromNewline, structuredEscape);
    },
    toICAL: function(aValue, structuredEscape) {
      let regEx = toNewline;
      if (structuredEscape)
        regEx = new RegExp(regEx.source + "|" + structuredEscape, regEx.flags);
      return aValue.replace(regEx, function(str) {
        switch (str) {
          case "\\":
            return "\\\\";
          case ";":
            return "\\;";
          case ",":
            return "\\,";
          case "\n":
            return "\\n";
          default:
            return str;
        }
      });
    }
  };
  return result;
}
const DEFAULT_TYPE_TEXT = { defaultType: "text" };
const DEFAULT_TYPE_TEXT_MULTI = { defaultType: "text", multiValue: "," };
const DEFAULT_TYPE_TEXT_STRUCTURED = { defaultType: "text", structuredValue: ";" };
const DEFAULT_TYPE_INTEGER = { defaultType: "integer" };
const DEFAULT_TYPE_DATETIME_DATE = { defaultType: "date-time", allowedTypes: ["date-time", "date"] };
const DEFAULT_TYPE_DATETIME = { defaultType: "date-time" };
const DEFAULT_TYPE_URI = { defaultType: "uri" };
const DEFAULT_TYPE_UTCOFFSET = { defaultType: "utc-offset" };
const DEFAULT_TYPE_RECUR = { defaultType: "recur" };
const DEFAULT_TYPE_DATE_ANDOR_TIME = { defaultType: "date-and-or-time", allowedTypes: ["date-time", "date", "text"] };
function replaceNewlineReplace(string) {
  switch (string) {
    case "\\\\":
      return "\\";
    case "\\;":
      return ";";
    case "\\,":
      return ",";
    case "\\n":
    case "\\N":
      return "\n";
    default:
      return string;
  }
}
function replaceNewline(value3, newline, structuredEscape) {
  if (value3.indexOf("\\") === -1) {
    return value3;
  }
  if (structuredEscape)
    newline = new RegExp(newline.source + "|\\\\" + structuredEscape, newline.flags);
  return value3.replace(newline, replaceNewlineReplace);
}
let commonProperties = {
  "categories": DEFAULT_TYPE_TEXT_MULTI,
  "url": DEFAULT_TYPE_URI,
  "version": DEFAULT_TYPE_TEXT,
  "uid": DEFAULT_TYPE_TEXT
};
let commonValues = {
  "boolean": {
    values: ["TRUE", "FALSE"],
    fromICAL: function(aValue) {
      switch (aValue) {
        case "TRUE":
          return true;
        case "FALSE":
          return false;
        default:
          return false;
      }
    },
    toICAL: function(aValue) {
      if (aValue) {
        return "TRUE";
      }
      return "FALSE";
    }
  },
  float: {
    matches: /^[+-]?\d+\.\d+$/,
    fromICAL: function(aValue) {
      let parsed = parseFloat(aValue);
      if (isStrictlyNaN(parsed)) {
        return 0;
      }
      return parsed;
    },
    toICAL: function(aValue) {
      return String(aValue);
    }
  },
  integer: {
    fromICAL: function(aValue) {
      let parsed = parseInt(aValue);
      if (isStrictlyNaN(parsed)) {
        return 0;
      }
      return parsed;
    },
    toICAL: function(aValue) {
      return String(aValue);
    }
  },
  "utc-offset": {
    toICAL: function(aValue) {
      if (aValue.length < 7) {
        return aValue.slice(0, 3) + aValue.slice(4, 6);
      } else {
        return aValue.slice(0, 3) + aValue.slice(4, 6) + aValue.slice(7, 9);
      }
    },
    fromICAL: function(aValue) {
      if (aValue.length < 6) {
        return aValue.slice(0, 3) + ":" + aValue.slice(3, 5);
      } else {
        return aValue.slice(0, 3) + ":" + aValue.slice(3, 5) + ":" + aValue.slice(5, 7);
      }
    },
    decorate: function(aValue) {
      return UtcOffset.fromString(aValue);
    },
    undecorate: function(aValue) {
      return aValue.toString();
    }
  }
};
let icalParams = {
  // Although the syntax is DQUOTE uri DQUOTE, I don't think we should
  // enforce anything aside from it being a valid content line.
  //
  // At least some params require - if multi values are used - DQUOTEs
  // for each of its values - e.g. delegated-from="uri1","uri2"
  // To indicate this, I introduced the new k/v pair
  // multiValueSeparateDQuote: true
  //
  // "ALTREP": { ... },
  // CN just wants a param-value
  // "CN": { ... }
  "cutype": {
    values: ["INDIVIDUAL", "GROUP", "RESOURCE", "ROOM", "UNKNOWN"],
    allowXName: true,
    allowIanaToken: true
  },
  "delegated-from": {
    valueType: "cal-address",
    multiValue: ",",
    multiValueSeparateDQuote: true
  },
  "delegated-to": {
    valueType: "cal-address",
    multiValue: ",",
    multiValueSeparateDQuote: true
  },
  // "DIR": { ... }, // See ALTREP
  "encoding": {
    values: ["8BIT", "BASE64"]
  },
  // "FMTTYPE": { ... }, // See ALTREP
  "fbtype": {
    values: ["FREE", "BUSY", "BUSY-UNAVAILABLE", "BUSY-TENTATIVE"],
    allowXName: true,
    allowIanaToken: true
  },
  // "LANGUAGE": { ... }, // See ALTREP
  "member": {
    valueType: "cal-address",
    multiValue: ",",
    multiValueSeparateDQuote: true
  },
  "partstat": {
    // TODO These values are actually different per-component
    values: [
      "NEEDS-ACTION",
      "ACCEPTED",
      "DECLINED",
      "TENTATIVE",
      "DELEGATED",
      "COMPLETED",
      "IN-PROCESS"
    ],
    allowXName: true,
    allowIanaToken: true
  },
  "range": {
    values: ["THISANDFUTURE"]
  },
  "related": {
    values: ["START", "END"]
  },
  "reltype": {
    values: ["PARENT", "CHILD", "SIBLING"],
    allowXName: true,
    allowIanaToken: true
  },
  "role": {
    values: [
      "REQ-PARTICIPANT",
      "CHAIR",
      "OPT-PARTICIPANT",
      "NON-PARTICIPANT"
    ],
    allowXName: true,
    allowIanaToken: true
  },
  "rsvp": {
    values: ["TRUE", "FALSE"]
  },
  "sent-by": {
    valueType: "cal-address"
  },
  "tzid": {
    matches: /^\//
  },
  "value": {
    // since the value here is a 'type' lowercase is used.
    values: [
      "binary",
      "boolean",
      "cal-address",
      "date",
      "date-time",
      "duration",
      "float",
      "integer",
      "period",
      "recur",
      "text",
      "time",
      "uri",
      "utc-offset"
    ],
    allowXName: true,
    allowIanaToken: true
  }
};
const icalValues = extend(commonValues, {
  text: createTextType(FROM_ICAL_NEWLINE, TO_ICAL_NEWLINE),
  uri: {
    // TODO
    /* ... */
  },
  "binary": {
    decorate: function(aString) {
      return Binary.fromString(aString);
    },
    undecorate: function(aBinary) {
      return aBinary.toString();
    }
  },
  "cal-address": {
    // needs to be an uri
  },
  "date": {
    decorate: function(aValue, aProp) {
      {
        return Time.fromDateString(aValue, aProp);
      }
    },
    /**
     * undecorates a time object.
     */
    undecorate: function(aValue) {
      return aValue.toString();
    },
    fromICAL: function(aValue) {
      {
        return aValue.slice(0, 4) + "-" + aValue.slice(4, 6) + "-" + aValue.slice(6, 8);
      }
    },
    toICAL: function(aValue) {
      let len = aValue.length;
      if (len == 10) {
        return aValue.slice(0, 4) + aValue.slice(5, 7) + aValue.slice(8, 10);
      } else if (len >= 19) {
        return icalValues["date-time"].toICAL(aValue);
      } else {
        return aValue;
      }
    }
  },
  "date-time": {
    fromICAL: function(aValue) {
      {
        let result = aValue.slice(0, 4) + "-" + aValue.slice(4, 6) + "-" + aValue.slice(6, 8) + "T" + aValue.slice(9, 11) + ":" + aValue.slice(11, 13) + ":" + aValue.slice(13, 15);
        if (aValue[15] && aValue[15] === "Z") {
          result += "Z";
        }
        return result;
      }
    },
    toICAL: function(aValue) {
      let len = aValue.length;
      if (len >= 19) {
        let result = aValue.slice(0, 4) + aValue.slice(5, 7) + // grab the (DDTHH) segment
        aValue.slice(8, 13) + // MM
        aValue.slice(14, 16) + // SS
        aValue.slice(17, 19);
        if (aValue[19] && aValue[19] === "Z") {
          result += "Z";
        }
        return result;
      } else {
        return aValue;
      }
    },
    decorate: function(aValue, aProp) {
      {
        return Time.fromDateTimeString(aValue, aProp);
      }
    },
    undecorate: function(aValue) {
      return aValue.toString();
    }
  },
  duration: {
    decorate: function(aValue) {
      return Duration.fromString(aValue);
    },
    undecorate: function(aValue) {
      return aValue.toString();
    }
  },
  period: {
    fromICAL: function(string) {
      let parts = string.split("/");
      parts[0] = icalValues["date-time"].fromICAL(parts[0]);
      if (!Duration.isValueString(parts[1])) {
        parts[1] = icalValues["date-time"].fromICAL(parts[1]);
      }
      return parts;
    },
    toICAL: function(parts) {
      parts = parts.slice();
      {
        parts[0] = icalValues["date-time"].toICAL(parts[0]);
      }
      if (!Duration.isValueString(parts[1])) {
        {
          parts[1] = icalValues["date-time"].toICAL(parts[1]);
        }
      }
      return parts.join("/");
    },
    decorate: function(aValue, aProp) {
      return Period.fromJSON(aValue, aProp, false);
    },
    undecorate: function(aValue) {
      return aValue.toJSON();
    }
  },
  recur: {
    fromICAL: function(string) {
      return Recur._stringToData(string, true);
    },
    toICAL: function(data11) {
      let str = "";
      for (let [k, val] of Object.entries(data11)) {
        if (k == "until") {
          if (val.length > 10) {
            val = icalValues["date-time"].toICAL(val);
          } else {
            val = icalValues.date.toICAL(val);
          }
        } else if (k == "wkst") {
          if (typeof val === "number") {
            val = Recur.numericDayToIcalDay(val);
          }
        } else if (Array.isArray(val)) {
          val = val.join(",");
        }
        str += k.toUpperCase() + "=" + val + ";";
      }
      return str.slice(0, Math.max(0, str.length - 1));
    },
    decorate: function decorate(aValue) {
      return Recur.fromData(aValue);
    },
    undecorate: function(aRecur) {
      return aRecur.toJSON();
    }
  },
  time: {
    fromICAL: function(aValue) {
      if (aValue.length < 6) {
        return aValue;
      }
      let result = aValue.slice(0, 2) + ":" + aValue.slice(2, 4) + ":" + aValue.slice(4, 6);
      if (aValue[6] === "Z") {
        result += "Z";
      }
      return result;
    },
    toICAL: function(aValue) {
      if (aValue.length < 8) {
        return aValue;
      }
      let result = aValue.slice(0, 2) + aValue.slice(3, 5) + aValue.slice(6, 8);
      if (aValue[8] === "Z") {
        result += "Z";
      }
      return result;
    }
  }
});
let icalProperties = extend(commonProperties, {
  "action": DEFAULT_TYPE_TEXT,
  "attach": { defaultType: "uri" },
  "attendee": { defaultType: "cal-address" },
  "calscale": DEFAULT_TYPE_TEXT,
  "class": DEFAULT_TYPE_TEXT,
  "comment": DEFAULT_TYPE_TEXT,
  "completed": DEFAULT_TYPE_DATETIME,
  "contact": DEFAULT_TYPE_TEXT,
  "created": DEFAULT_TYPE_DATETIME,
  "description": DEFAULT_TYPE_TEXT,
  "dtend": DEFAULT_TYPE_DATETIME_DATE,
  "dtstamp": DEFAULT_TYPE_DATETIME,
  "dtstart": DEFAULT_TYPE_DATETIME_DATE,
  "due": DEFAULT_TYPE_DATETIME_DATE,
  "duration": { defaultType: "duration" },
  "exdate": {
    defaultType: "date-time",
    allowedTypes: ["date-time", "date"],
    multiValue: ","
  },
  "exrule": DEFAULT_TYPE_RECUR,
  "freebusy": { defaultType: "period", multiValue: "," },
  "geo": { defaultType: "float", structuredValue: ";" },
  "last-modified": DEFAULT_TYPE_DATETIME,
  "location": DEFAULT_TYPE_TEXT,
  "method": DEFAULT_TYPE_TEXT,
  "organizer": { defaultType: "cal-address" },
  "percent-complete": DEFAULT_TYPE_INTEGER,
  "priority": DEFAULT_TYPE_INTEGER,
  "prodid": DEFAULT_TYPE_TEXT,
  "related-to": DEFAULT_TYPE_TEXT,
  "repeat": DEFAULT_TYPE_INTEGER,
  "rdate": {
    defaultType: "date-time",
    allowedTypes: ["date-time", "date", "period"],
    multiValue: ",",
    detectType: function(string) {
      if (string.indexOf("/") !== -1) {
        return "period";
      }
      return string.indexOf("T") === -1 ? "date" : "date-time";
    }
  },
  "recurrence-id": DEFAULT_TYPE_DATETIME_DATE,
  "resources": DEFAULT_TYPE_TEXT_MULTI,
  "request-status": DEFAULT_TYPE_TEXT_STRUCTURED,
  "rrule": DEFAULT_TYPE_RECUR,
  "sequence": DEFAULT_TYPE_INTEGER,
  "status": DEFAULT_TYPE_TEXT,
  "summary": DEFAULT_TYPE_TEXT,
  "transp": DEFAULT_TYPE_TEXT,
  "trigger": { defaultType: "duration", allowedTypes: ["duration", "date-time"] },
  "tzoffsetfrom": DEFAULT_TYPE_UTCOFFSET,
  "tzoffsetto": DEFAULT_TYPE_UTCOFFSET,
  "tzurl": DEFAULT_TYPE_URI,
  "tzid": DEFAULT_TYPE_TEXT,
  "tzname": DEFAULT_TYPE_TEXT
});
const vcardValues = extend(commonValues, {
  text: createTextType(FROM_VCARD_NEWLINE, TO_VCARD_NEWLINE),
  uri: createTextType(FROM_VCARD_NEWLINE, TO_VCARD_NEWLINE),
  date: {
    decorate: function(aValue) {
      return VCardTime.fromDateAndOrTimeString(aValue, "date");
    },
    undecorate: function(aValue) {
      return aValue.toString();
    },
    fromICAL: function(aValue) {
      if (aValue.length == 8) {
        return icalValues.date.fromICAL(aValue);
      } else if (aValue[0] == "-" && aValue.length == 6) {
        return aValue.slice(0, 4) + "-" + aValue.slice(4);
      } else {
        return aValue;
      }
    },
    toICAL: function(aValue) {
      if (aValue.length == 10) {
        return icalValues.date.toICAL(aValue);
      } else if (aValue[0] == "-" && aValue.length == 7) {
        return aValue.slice(0, 4) + aValue.slice(5);
      } else {
        return aValue;
      }
    }
  },
  time: {
    decorate: function(aValue) {
      return VCardTime.fromDateAndOrTimeString("T" + aValue, "time");
    },
    undecorate: function(aValue) {
      return aValue.toString();
    },
    fromICAL: function(aValue) {
      let splitzone = vcardValues.time._splitZone(aValue, true);
      let zone = splitzone[0], value3 = splitzone[1];
      if (value3.length == 6) {
        value3 = value3.slice(0, 2) + ":" + value3.slice(2, 4) + ":" + value3.slice(4, 6);
      } else if (value3.length == 4 && value3[0] != "-") {
        value3 = value3.slice(0, 2) + ":" + value3.slice(2, 4);
      } else if (value3.length == 5) {
        value3 = value3.slice(0, 3) + ":" + value3.slice(3, 5);
      }
      if (zone.length == 5 && (zone[0] == "-" || zone[0] == "+")) {
        zone = zone.slice(0, 3) + ":" + zone.slice(3);
      }
      return value3 + zone;
    },
    toICAL: function(aValue) {
      let splitzone = vcardValues.time._splitZone(aValue);
      let zone = splitzone[0], value3 = splitzone[1];
      if (value3.length == 8) {
        value3 = value3.slice(0, 2) + value3.slice(3, 5) + value3.slice(6, 8);
      } else if (value3.length == 5 && value3[0] != "-") {
        value3 = value3.slice(0, 2) + value3.slice(3, 5);
      } else if (value3.length == 6) {
        value3 = value3.slice(0, 3) + value3.slice(4, 6);
      }
      if (zone.length == 6 && (zone[0] == "-" || zone[0] == "+")) {
        zone = zone.slice(0, 3) + zone.slice(4);
      }
      return value3 + zone;
    },
    _splitZone: function(aValue, isFromIcal) {
      let lastChar = aValue.length - 1;
      let signChar = aValue.length - (isFromIcal ? 5 : 6);
      let sign = aValue[signChar];
      let zone, value3;
      if (aValue[lastChar] == "Z") {
        zone = aValue[lastChar];
        value3 = aValue.slice(0, Math.max(0, lastChar));
      } else if (aValue.length > 6 && (sign == "-" || sign == "+")) {
        zone = aValue.slice(signChar);
        value3 = aValue.slice(0, Math.max(0, signChar));
      } else {
        zone = "";
        value3 = aValue;
      }
      return [zone, value3];
    }
  },
  "date-time": {
    decorate: function(aValue) {
      return VCardTime.fromDateAndOrTimeString(aValue, "date-time");
    },
    undecorate: function(aValue) {
      return aValue.toString();
    },
    fromICAL: function(aValue) {
      return vcardValues["date-and-or-time"].fromICAL(aValue);
    },
    toICAL: function(aValue) {
      return vcardValues["date-and-or-time"].toICAL(aValue);
    }
  },
  "date-and-or-time": {
    decorate: function(aValue) {
      return VCardTime.fromDateAndOrTimeString(aValue, "date-and-or-time");
    },
    undecorate: function(aValue) {
      return aValue.toString();
    },
    fromICAL: function(aValue) {
      let parts = aValue.split("T");
      return (parts[0] ? vcardValues.date.fromICAL(parts[0]) : "") + (parts[1] ? "T" + vcardValues.time.fromICAL(parts[1]) : "");
    },
    toICAL: function(aValue) {
      let parts = aValue.split("T");
      return vcardValues.date.toICAL(parts[0]) + (parts[1] ? "T" + vcardValues.time.toICAL(parts[1]) : "");
    }
  },
  timestamp: icalValues["date-time"],
  "language-tag": {
    matches: /^[a-zA-Z0-9-]+$/
    // Could go with a more strict regex here
  },
  "phone-number": {
    fromICAL: function(aValue) {
      return Array.from(aValue).filter(function(c) {
        return c === "\\" ? void 0 : c;
      }).join("");
    },
    toICAL: function(aValue) {
      return Array.from(aValue).map(function(c) {
        return c === "," || c === ";" ? "\\" + c : c;
      }).join("");
    }
  }
});
let vcardParams = {
  "type": {
    valueType: "text",
    multiValue: ","
  },
  "value": {
    // since the value here is a 'type' lowercase is used.
    values: [
      "text",
      "uri",
      "date",
      "time",
      "date-time",
      "date-and-or-time",
      "timestamp",
      "boolean",
      "integer",
      "float",
      "utc-offset",
      "language-tag"
    ],
    allowXName: true,
    allowIanaToken: true
  }
};
let vcardProperties = extend(commonProperties, {
  "adr": { defaultType: "text", structuredValue: ";", multiValue: "," },
  "anniversary": DEFAULT_TYPE_DATE_ANDOR_TIME,
  "bday": DEFAULT_TYPE_DATE_ANDOR_TIME,
  "caladruri": DEFAULT_TYPE_URI,
  "caluri": DEFAULT_TYPE_URI,
  "clientpidmap": DEFAULT_TYPE_TEXT_STRUCTURED,
  "email": DEFAULT_TYPE_TEXT,
  "fburl": DEFAULT_TYPE_URI,
  "fn": DEFAULT_TYPE_TEXT,
  "gender": DEFAULT_TYPE_TEXT_STRUCTURED,
  "geo": DEFAULT_TYPE_URI,
  "impp": DEFAULT_TYPE_URI,
  "key": DEFAULT_TYPE_URI,
  "kind": DEFAULT_TYPE_TEXT,
  "lang": { defaultType: "language-tag" },
  "logo": DEFAULT_TYPE_URI,
  "member": DEFAULT_TYPE_URI,
  "n": { defaultType: "text", structuredValue: ";", multiValue: "," },
  "nickname": DEFAULT_TYPE_TEXT_MULTI,
  "note": DEFAULT_TYPE_TEXT,
  "org": { defaultType: "text", structuredValue: ";" },
  "photo": DEFAULT_TYPE_URI,
  "related": DEFAULT_TYPE_URI,
  "rev": { defaultType: "timestamp" },
  "role": DEFAULT_TYPE_TEXT,
  "sound": DEFAULT_TYPE_URI,
  "source": DEFAULT_TYPE_URI,
  "tel": { defaultType: "uri", allowedTypes: ["uri", "text"] },
  "title": DEFAULT_TYPE_TEXT,
  "tz": { defaultType: "text", allowedTypes: ["text", "utc-offset", "uri"] },
  "xml": DEFAULT_TYPE_TEXT
});
let vcard3Values = extend(commonValues, {
  binary: icalValues.binary,
  date: vcardValues.date,
  "date-time": vcardValues["date-time"],
  "phone-number": vcardValues["phone-number"],
  uri: icalValues.uri,
  text: icalValues.text,
  time: icalValues.time,
  vcard: icalValues.text,
  "utc-offset": {
    toICAL: function(aValue) {
      return aValue.slice(0, 7);
    },
    fromICAL: function(aValue) {
      return aValue.slice(0, 7);
    },
    decorate: function(aValue) {
      return UtcOffset.fromString(aValue);
    },
    undecorate: function(aValue) {
      return aValue.toString();
    }
  }
});
let vcard3Params = {
  "type": {
    valueType: "text",
    multiValue: ","
  },
  "value": {
    // since the value here is a 'type' lowercase is used.
    values: [
      "text",
      "uri",
      "date",
      "date-time",
      "phone-number",
      "time",
      "boolean",
      "integer",
      "float",
      "utc-offset",
      "vcard",
      "binary"
    ],
    allowXName: true,
    allowIanaToken: true
  }
};
let vcard3Properties = extend(commonProperties, {
  fn: DEFAULT_TYPE_TEXT,
  n: { defaultType: "text", structuredValue: ";", multiValue: "," },
  nickname: DEFAULT_TYPE_TEXT_MULTI,
  photo: { defaultType: "binary", allowedTypes: ["binary", "uri"] },
  bday: {
    defaultType: "date-time",
    allowedTypes: ["date-time", "date"],
    detectType: function(string) {
      return string.indexOf("T") === -1 ? "date" : "date-time";
    }
  },
  adr: { defaultType: "text", structuredValue: ";", multiValue: "," },
  label: DEFAULT_TYPE_TEXT,
  tel: { defaultType: "phone-number" },
  email: DEFAULT_TYPE_TEXT,
  mailer: DEFAULT_TYPE_TEXT,
  tz: { defaultType: "utc-offset", allowedTypes: ["utc-offset", "text"] },
  geo: { defaultType: "float", structuredValue: ";" },
  title: DEFAULT_TYPE_TEXT,
  role: DEFAULT_TYPE_TEXT,
  logo: { defaultType: "binary", allowedTypes: ["binary", "uri"] },
  agent: { defaultType: "vcard", allowedTypes: ["vcard", "text", "uri"] },
  org: DEFAULT_TYPE_TEXT_STRUCTURED,
  note: DEFAULT_TYPE_TEXT_MULTI,
  prodid: DEFAULT_TYPE_TEXT,
  rev: {
    defaultType: "date-time",
    allowedTypes: ["date-time", "date"],
    detectType: function(string) {
      return string.indexOf("T") === -1 ? "date" : "date-time";
    }
  },
  "sort-string": DEFAULT_TYPE_TEXT,
  sound: { defaultType: "binary", allowedTypes: ["binary", "uri"] },
  class: DEFAULT_TYPE_TEXT,
  key: { defaultType: "binary", allowedTypes: ["binary", "text"] }
});
let icalSet = {
  value: icalValues,
  param: icalParams,
  property: icalProperties,
  propertyGroups: false
};
let vcardSet = {
  value: vcardValues,
  param: vcardParams,
  property: vcardProperties,
  propertyGroups: true
};
let vcard3Set = {
  value: vcard3Values,
  param: vcard3Params,
  property: vcard3Properties,
  propertyGroups: true
};
const design = {
  /**
   * Can be set to false to make the parser more lenient.
   */
  strict: true,
  /**
   * The default set for new properties and components if none is specified.
   * @type {designSet}
   */
  defaultSet: icalSet,
  /**
   * The default type for unknown properties
   * @type {String}
   */
  defaultType: "unknown",
  /**
   * Holds the design set for known top-level components
   *
   * @type {Object}
   * @property {designSet} vcard       vCard VCARD
   * @property {designSet} vevent      iCalendar VEVENT
   * @property {designSet} vtodo       iCalendar VTODO
   * @property {designSet} vjournal    iCalendar VJOURNAL
   * @property {designSet} valarm      iCalendar VALARM
   * @property {designSet} vtimezone   iCalendar VTIMEZONE
   * @property {designSet} daylight    iCalendar DAYLIGHT
   * @property {designSet} standard    iCalendar STANDARD
   *
   * @example
   * let propertyName = 'fn';
   * let componentDesign = ICAL.design.components.vcard;
   * let propertyDetails = componentDesign.property[propertyName];
   * if (propertyDetails.defaultType == 'text') {
   *   // Yep, sure is...
   * }
   */
  components: {
    vcard: vcardSet,
    vcard3: vcard3Set,
    vevent: icalSet,
    vtodo: icalSet,
    vjournal: icalSet,
    valarm: icalSet,
    vtimezone: icalSet,
    daylight: icalSet,
    standard: icalSet
  },
  /**
   * The design set for iCalendar (rfc5545/rfc7265) components.
   * @type {designSet}
   */
  icalendar: icalSet,
  /**
   * The design set for vCard (rfc6350/rfc7095) components.
   * @type {designSet}
   */
  vcard: vcardSet,
  /**
   * The design set for vCard (rfc2425/rfc2426/rfc7095) components.
   * @type {designSet}
   */
  vcard3: vcard3Set,
  /**
   * Gets the design set for the given component name.
   *
   * @param {String} componentName        The name of the component
   * @return {designSet}      The design set for the component
   */
  getDesignSet: function(componentName) {
    let isInDesign = componentName && componentName in design.components;
    return isInDesign ? design.components[componentName] : design.defaultSet;
  }
};
var design$1 = design;
const LINE_ENDING = "\r\n";
const DEFAULT_VALUE_TYPE = "unknown";
const RFC6868_REPLACE_MAP = { '"': "^'", "\n": "^n", "^": "^^" };
function stringify(jCal) {
  if (typeof jCal[0] == "string") {
    jCal = [jCal];
  }
  let i = 0;
  let len = jCal.length;
  let result = "";
  for (; i < len; i++) {
    result += stringify.component(jCal[i]) + LINE_ENDING;
  }
  return result;
}
stringify.component = function(component, designSet) {
  let name = component[0].toUpperCase();
  let result = "BEGIN:" + name + LINE_ENDING;
  let props = component[1];
  let propIdx = 0;
  let propLen = props.length;
  let designSetName = component[0];
  if (designSetName === "vcard" && component[1].length > 0 && !(component[1][0][0] === "version" && component[1][0][3] === "4.0")) {
    designSetName = "vcard3";
  }
  designSet = designSet || design$1.getDesignSet(designSetName);
  for (; propIdx < propLen; propIdx++) {
    result += stringify.property(props[propIdx], designSet) + LINE_ENDING;
  }
  let comps = component[2] || [];
  let compIdx = 0;
  let compLen = comps.length;
  for (; compIdx < compLen; compIdx++) {
    result += stringify.component(comps[compIdx], designSet) + LINE_ENDING;
  }
  result += "END:" + name;
  return result;
};
stringify.property = function(property, designSet, noFold) {
  let name = property[0].toUpperCase();
  let jsName = property[0];
  let params = property[1];
  if (!designSet) {
    designSet = design$1.defaultSet;
  }
  let groupName = params.group;
  let line;
  if (designSet.propertyGroups && groupName) {
    line = groupName.toUpperCase() + "." + name;
  } else {
    line = name;
  }
  for (let [paramName, value3] of Object.entries(params)) {
    if (designSet.propertyGroups && paramName == "group") {
      continue;
    }
    let paramDesign = designSet.param[paramName];
    let multiValue2 = paramDesign && paramDesign.multiValue;
    if (multiValue2 && Array.isArray(value3)) {
      value3 = value3.map(function(val) {
        val = stringify._rfc6868Unescape(val);
        val = stringify.paramPropertyValue(val, paramDesign.multiValueSeparateDQuote);
        return val;
      });
      value3 = stringify.multiValue(value3, multiValue2, "unknown", null, designSet);
    } else {
      value3 = stringify._rfc6868Unescape(value3);
      value3 = stringify.paramPropertyValue(value3);
    }
    line += ";" + paramName.toUpperCase() + "=" + value3;
  }
  if (property.length === 3) {
    return line + ":";
  }
  let valueType = property[2];
  let propDetails;
  let multiValue = false;
  let structuredValue = false;
  let isDefault = false;
  if (jsName in designSet.property) {
    propDetails = designSet.property[jsName];
    if ("multiValue" in propDetails) {
      multiValue = propDetails.multiValue;
    }
    if ("structuredValue" in propDetails && Array.isArray(property[3])) {
      structuredValue = propDetails.structuredValue;
    }
    if ("defaultType" in propDetails) {
      if (valueType === propDetails.defaultType) {
        isDefault = true;
      }
    } else {
      if (valueType === DEFAULT_VALUE_TYPE) {
        isDefault = true;
      }
    }
  } else {
    if (valueType === DEFAULT_VALUE_TYPE) {
      isDefault = true;
    }
  }
  if (!isDefault) {
    line += ";VALUE=" + valueType.toUpperCase();
  }
  line += ":";
  if (multiValue && structuredValue) {
    line += stringify.multiValue(
      property[3],
      structuredValue,
      valueType,
      multiValue,
      designSet,
      structuredValue
    );
  } else if (multiValue) {
    line += stringify.multiValue(
      property.slice(3),
      multiValue,
      valueType,
      null,
      designSet,
      false
    );
  } else if (structuredValue) {
    line += stringify.multiValue(
      property[3],
      structuredValue,
      valueType,
      null,
      designSet,
      structuredValue
    );
  } else {
    line += stringify.value(property[3], valueType, designSet, false);
  }
  return noFold ? line : foldline(line);
};
stringify.paramPropertyValue = function(value3, force) {
  if (!force && value3.indexOf(",") === -1 && value3.indexOf(":") === -1 && value3.indexOf(";") === -1) {
    return value3;
  }
  return '"' + value3 + '"';
};
stringify.multiValue = function(values, delim, type, innerMulti, designSet, structuredValue) {
  let result = "";
  let len = values.length;
  let i = 0;
  for (; i < len; i++) {
    if (innerMulti && Array.isArray(values[i])) {
      result += stringify.multiValue(values[i], innerMulti, type, null, designSet, structuredValue);
    } else {
      result += stringify.value(values[i], type, designSet, structuredValue);
    }
    if (i !== len - 1) {
      result += delim;
    }
  }
  return result;
};
stringify.value = function(value3, type, designSet, structuredValue) {
  if (type in designSet.value && "toICAL" in designSet.value[type]) {
    return designSet.value[type].toICAL(value3, structuredValue);
  }
  return value3;
};
stringify._rfc6868Unescape = function(val) {
  return val.replace(/[\n^"]/g, function(x2) {
    return RFC6868_REPLACE_MAP[x2];
  });
};
const NAME_INDEX$1 = 0;
const PROP_INDEX = 1;
const TYPE_INDEX = 2;
const VALUE_INDEX = 3;
class Property {
  /**
   * Create an {@link ICAL.Property} by parsing the passed iCalendar string.
   *
   * @param {String} str            The iCalendar string to parse
   * @param {designSet=} designSet  The design data to use for this property
   * @return {Property}             The created iCalendar property
   */
  static fromString(str, designSet) {
    return new Property(parse$1.property(str, designSet));
  }
  /**
   * Creates a new ICAL.Property instance.
   *
   * It is important to note that mutations done in the wrapper directly mutate the jCal object used
   * to initialize.
   *
   * Can also be used to create new properties by passing the name of the property (as a String).
   *
   * @param {Array|String} jCal         Raw jCal representation OR the new name of the property
   * @param {Component=} parent         Parent component
   */
  constructor(jCal, parent) {
    this._parent = parent || null;
    if (typeof jCal === "string") {
      this.jCal = [jCal, {}, design$1.defaultType];
      this.jCal[TYPE_INDEX] = this.getDefaultType();
    } else {
      this.jCal = jCal;
    }
    this._updateType();
  }
  /**
   * The value type for this property
   * @type {String}
   */
  get type() {
    return this.jCal[TYPE_INDEX];
  }
  /**
   * The name of this property, in lowercase.
   * @type {String}
   */
  get name() {
    return this.jCal[NAME_INDEX$1];
  }
  /**
   * The parent component for this property.
   * @type {Component}
   */
  get parent() {
    return this._parent;
  }
  set parent(p) {
    let designSetChanged = !this._parent || p && p._designSet != this._parent._designSet;
    this._parent = p;
    if (this.type == design$1.defaultType && designSetChanged) {
      this.jCal[TYPE_INDEX] = this.getDefaultType();
      this._updateType();
    }
  }
  /**
   * The design set for this property, e.g. icalendar vs vcard
   *
   * @type {designSet}
   * @private
   */
  get _designSet() {
    return this.parent ? this.parent._designSet : design$1.defaultSet;
  }
  /**
   * Updates the type metadata from the current jCal type and design set.
   *
   * @private
   */
  _updateType() {
    let designSet = this._designSet;
    if (this.type in designSet.value) {
      if ("decorate" in designSet.value[this.type]) {
        this.isDecorated = true;
      } else {
        this.isDecorated = false;
      }
      if (this.name in designSet.property) {
        this.isMultiValue = "multiValue" in designSet.property[this.name];
        this.isStructuredValue = "structuredValue" in designSet.property[this.name];
      }
    }
  }
  /**
   * Hydrate a single value. The act of hydrating means turning the raw jCal
   * value into a potentially wrapped object, for example {@link ICAL.Time}.
   *
   * @private
   * @param {Number} index        The index of the value to hydrate
   * @return {?Object}             The decorated value.
   */
  _hydrateValue(index) {
    if (this._values && this._values[index]) {
      return this._values[index];
    }
    if (this.jCal.length <= VALUE_INDEX + index) {
      return null;
    }
    if (this.isDecorated) {
      if (!this._values) {
        this._values = [];
      }
      return this._values[index] = this._decorate(
        this.jCal[VALUE_INDEX + index]
      );
    } else {
      return this.jCal[VALUE_INDEX + index];
    }
  }
  /**
   * Decorate a single value, returning its wrapped object. This is used by
   * the hydrate function to actually wrap the value.
   *
   * @private
   * @param {?} value         The value to decorate
   * @return {Object}         The decorated value
   */
  _decorate(value3) {
    return this._designSet.value[this.type].decorate(value3, this);
  }
  /**
   * Undecorate a single value, returning its raw jCal data.
   *
   * @private
   * @param {Object} value         The value to undecorate
   * @return {?}                   The undecorated value
   */
  _undecorate(value3) {
    return this._designSet.value[this.type].undecorate(value3, this);
  }
  /**
   * Sets the value at the given index while also hydrating it. The passed
   * value can either be a decorated or undecorated value.
   *
   * @private
   * @param {?} value             The value to set
   * @param {Number} index        The index to set it at
   */
  _setDecoratedValue(value3, index) {
    if (!this._values) {
      this._values = [];
    }
    if (typeof value3 === "object" && "icaltype" in value3) {
      this.jCal[VALUE_INDEX + index] = this._undecorate(value3);
      this._values[index] = value3;
    } else {
      this.jCal[VALUE_INDEX + index] = value3;
      this._values[index] = this._decorate(value3);
    }
  }
  /**
   * Gets a parameter on the property.
   *
   * @param {String}        name   Parameter name (lowercase)
   * @return {Array|String}        Parameter value
   */
  getParameter(name) {
    if (name in this.jCal[PROP_INDEX]) {
      return this.jCal[PROP_INDEX][name];
    } else {
      return void 0;
    }
  }
  /**
   * Gets first parameter on the property.
   *
   * @param {String}        name   Parameter name (lowercase)
   * @return {String}        Parameter value
   */
  getFirstParameter(name) {
    let parameters = this.getParameter(name);
    if (Array.isArray(parameters)) {
      return parameters[0];
    }
    return parameters;
  }
  /**
   * Sets a parameter on the property.
   *
   * @param {String}       name     The parameter name
   * @param {Array|String} value    The parameter value
   */
  setParameter(name, value3) {
    let lcname = name.toLowerCase();
    if (typeof value3 === "string" && lcname in this._designSet.param && "multiValue" in this._designSet.param[lcname]) {
      value3 = [value3];
    }
    this.jCal[PROP_INDEX][name] = value3;
  }
  /**
   * Removes a parameter
   *
   * @param {String} name     The parameter name
   */
  removeParameter(name) {
    delete this.jCal[PROP_INDEX][name];
  }
  /**
   * Get the default type based on this property's name.
   *
   * @return {String}     The default type for this property
   */
  getDefaultType() {
    let name = this.jCal[NAME_INDEX$1];
    let designSet = this._designSet;
    if (name in designSet.property) {
      let details = designSet.property[name];
      if ("defaultType" in details) {
        return details.defaultType;
      }
    }
    return design$1.defaultType;
  }
  /**
   * Sets type of property and clears out any existing values of the current
   * type.
   *
   * @param {String} type     New iCAL type (see design.*.values)
   */
  resetType(type) {
    this.removeAllValues();
    this.jCal[TYPE_INDEX] = type;
    this._updateType();
  }
  /**
   * Finds the first property value.
   *
   * @return {Binary | Duration | Period |
   * Recur | Time | UtcOffset | Geo | string | null}         First property value
   */
  getFirstValue() {
    return this._hydrateValue(0);
  }
  /**
   * Gets all values on the property.
   *
   * NOTE: this creates an array during each call.
   *
   * @return {Array}          List of values
   */
  getValues() {
    let len = this.jCal.length - VALUE_INDEX;
    if (len < 1) {
      return [];
    }
    let i = 0;
    let result = [];
    for (; i < len; i++) {
      result[i] = this._hydrateValue(i);
    }
    return result;
  }
  /**
   * Removes all values from this property
   */
  removeAllValues() {
    if (this._values) {
      this._values.length = 0;
    }
    this.jCal.length = 3;
  }
  /**
   * Sets the values of the property.  Will overwrite the existing values.
   * This can only be used for multi-value properties.
   *
   * @param {Array} values    An array of values
   */
  setValues(values) {
    if (!this.isMultiValue) {
      throw new Error(
        this.name + ": does not not support mulitValue.\noverride isMultiValue"
      );
    }
    let len = values.length;
    let i = 0;
    this.removeAllValues();
    if (len > 0 && typeof values[0] === "object" && "icaltype" in values[0]) {
      this.resetType(values[0].icaltype);
    }
    if (this.isDecorated) {
      for (; i < len; i++) {
        this._setDecoratedValue(values[i], i);
      }
    } else {
      for (; i < len; i++) {
        this.jCal[VALUE_INDEX + i] = values[i];
      }
    }
  }
  /**
   * Sets the current value of the property. If this is a multi-value
   * property, all other values will be removed.
   *
   * @param {String|Object} value     New property value.
   */
  setValue(value3) {
    this.removeAllValues();
    if (typeof value3 === "object" && "icaltype" in value3) {
      this.resetType(value3.icaltype);
    }
    if (this.isDecorated) {
      this._setDecoratedValue(value3, 0);
    } else {
      this.jCal[VALUE_INDEX] = value3;
    }
  }
  /**
   * Returns the Object representation of this component. The returned object
   * is a live jCal object and should be cloned if modified.
   * @return {Object}
   */
  toJSON() {
    return this.jCal;
  }
  /**
   * The string representation of this component.
   * @return {String}
   */
  toICALString() {
    return stringify.property(
      this.jCal,
      this._designSet,
      true
    );
  }
}
const NAME_INDEX = 0;
const PROPERTY_INDEX = 1;
const COMPONENT_INDEX = 2;
class Component {
  /**
   * Create an {@link ICAL.Component} by parsing the passed iCalendar string.
   *
   * @param {String} str        The iCalendar string to parse
   */
  static fromString(str) {
    return new Component(parse$1.component(str));
  }
  /**
   * Creates a new Component instance.
   *
   * @param {Array|String} jCal         Raw jCal component data OR name of new
   *                                      component
   * @param {Component=} parent     Parent component to associate
   */
  constructor(jCal, parent) {
    if (typeof jCal === "string") {
      jCal = [jCal, [], []];
    }
    this.jCal = jCal;
    this.parent = parent || null;
    if (!this.parent && this.name === "vcalendar") {
      this._timezoneCache = /* @__PURE__ */ new Map();
    }
  }
  /**
   * Hydrated properties are inserted into the _properties array at the same
   * position as in the jCal array, so it is possible that the array contains
   * undefined values for unhydrdated properties. To avoid iterating the
   * array when checking if all properties have been hydrated, we save the
   * count here.
   *
   * @type {Number}
   * @private
   */
  _hydratedPropertyCount = 0;
  /**
   * The same count as for _hydratedPropertyCount, but for subcomponents
   *
   * @type {Number}
   * @private
   */
  _hydratedComponentCount = 0;
  /**
   * A cache of hydrated time zone objects which may be used by consumers, keyed
   * by time zone ID.
   *
   * @type {Map}
   * @private
   */
  _timezoneCache = null;
  /**
   * @private
   */
  _components = null;
  /**
   * @private
   */
  _properties = null;
  /**
   * The name of this component
   *
   * @type {String}
   */
  get name() {
    return this.jCal[NAME_INDEX];
  }
  /**
   * The design set for this component, e.g. icalendar vs vcard
   *
   * @type {designSet}
   * @private
   */
  get _designSet() {
    let parentDesign = this.parent && this.parent._designSet;
    return parentDesign || design$1.getDesignSet(this.name);
  }
  /**
   * @private
   */
  _hydrateComponent(index) {
    if (!this._components) {
      this._components = [];
      this._hydratedComponentCount = 0;
    }
    if (this._components[index]) {
      return this._components[index];
    }
    let comp = new Component(
      this.jCal[COMPONENT_INDEX][index],
      this
    );
    this._hydratedComponentCount++;
    return this._components[index] = comp;
  }
  /**
   * @private
   */
  _hydrateProperty(index) {
    if (!this._properties) {
      this._properties = [];
      this._hydratedPropertyCount = 0;
    }
    if (this._properties[index]) {
      return this._properties[index];
    }
    let prop = new Property(
      this.jCal[PROPERTY_INDEX][index],
      this
    );
    this._hydratedPropertyCount++;
    return this._properties[index] = prop;
  }
  /**
   * Finds first sub component, optionally filtered by name.
   *
   * @param {String=} name        Optional name to filter by
   * @return {?Component}     The found subcomponent
   */
  getFirstSubcomponent(name) {
    if (name) {
      let i = 0;
      let comps = this.jCal[COMPONENT_INDEX];
      let len = comps.length;
      for (; i < len; i++) {
        if (comps[i][NAME_INDEX] === name) {
          let result = this._hydrateComponent(i);
          return result;
        }
      }
    } else {
      if (this.jCal[COMPONENT_INDEX].length) {
        return this._hydrateComponent(0);
      }
    }
    return null;
  }
  /**
   * Finds all sub components, optionally filtering by name.
   *
   * @param {String=} name            Optional name to filter by
   * @return {Component[]}       The found sub components
   */
  getAllSubcomponents(name) {
    let jCalLen = this.jCal[COMPONENT_INDEX].length;
    let i = 0;
    if (name) {
      let comps = this.jCal[COMPONENT_INDEX];
      let result = [];
      for (; i < jCalLen; i++) {
        if (name === comps[i][NAME_INDEX]) {
          result.push(
            this._hydrateComponent(i)
          );
        }
      }
      return result;
    } else {
      if (!this._components || this._hydratedComponentCount !== jCalLen) {
        for (; i < jCalLen; i++) {
          this._hydrateComponent(i);
        }
      }
      return this._components || [];
    }
  }
  /**
   * Returns true when a named property exists.
   *
   * @param {String} name     The property name
   * @return {Boolean}        True, when property is found
   */
  hasProperty(name) {
    let props = this.jCal[PROPERTY_INDEX];
    let len = props.length;
    let i = 0;
    for (; i < len; i++) {
      if (props[i][NAME_INDEX] === name) {
        return true;
      }
    }
    return false;
  }
  /**
   * Finds the first property, optionally with the given name.
   *
   * @param {String=} name        Lowercase property name
   * @return {?Property}     The found property
   */
  getFirstProperty(name) {
    if (name) {
      let i = 0;
      let props = this.jCal[PROPERTY_INDEX];
      let len = props.length;
      for (; i < len; i++) {
        if (props[i][NAME_INDEX] === name) {
          let result = this._hydrateProperty(i);
          return result;
        }
      }
    } else {
      if (this.jCal[PROPERTY_INDEX].length) {
        return this._hydrateProperty(0);
      }
    }
    return null;
  }
  /**
   * Returns first property's value, if available.
   *
   * @param {String=} name                    Lowercase property name
   * @return {Binary | Duration | Period |
   * Recur | Time | UtcOffset | Geo | string | null}         The found property value.
   */
  getFirstPropertyValue(name) {
    let prop = this.getFirstProperty(name);
    if (prop) {
      return prop.getFirstValue();
    }
    return null;
  }
  /**
   * Get all properties in the component, optionally filtered by name.
   *
   * @param {String=} name        Lowercase property name
   * @return {Property[]}    List of properties
   */
  getAllProperties(name) {
    let jCalLen = this.jCal[PROPERTY_INDEX].length;
    let i = 0;
    if (name) {
      let props = this.jCal[PROPERTY_INDEX];
      let result = [];
      for (; i < jCalLen; i++) {
        if (name === props[i][NAME_INDEX]) {
          result.push(
            this._hydrateProperty(i)
          );
        }
      }
      return result;
    } else {
      if (!this._properties || this._hydratedPropertyCount !== jCalLen) {
        for (; i < jCalLen; i++) {
          this._hydrateProperty(i);
        }
      }
      return this._properties || [];
    }
  }
  /**
   * @private
   */
  _removeObjectByIndex(jCalIndex, cache, index) {
    cache = cache || [];
    if (cache[index]) {
      let obj = cache[index];
      if ("parent" in obj) {
        obj.parent = null;
      }
    }
    cache.splice(index, 1);
    this.jCal[jCalIndex].splice(index, 1);
  }
  /**
   * @private
   */
  _removeObject(jCalIndex, cache, nameOrObject) {
    let i = 0;
    let objects = this.jCal[jCalIndex];
    let len = objects.length;
    let cached = this[cache];
    if (typeof nameOrObject === "string") {
      for (; i < len; i++) {
        if (objects[i][NAME_INDEX] === nameOrObject) {
          this._removeObjectByIndex(jCalIndex, cached, i);
          return true;
        }
      }
    } else if (cached) {
      for (; i < len; i++) {
        if (cached[i] && cached[i] === nameOrObject) {
          this._removeObjectByIndex(jCalIndex, cached, i);
          return true;
        }
      }
    }
    return false;
  }
  /**
   * @private
   */
  _removeAllObjects(jCalIndex, cache, name) {
    let cached = this[cache];
    let objects = this.jCal[jCalIndex];
    let i = objects.length - 1;
    for (; i >= 0; i--) {
      if (!name || objects[i][NAME_INDEX] === name) {
        this._removeObjectByIndex(jCalIndex, cached, i);
      }
    }
  }
  /**
   * Adds a single sub component.
   *
   * @param {Component} component        The component to add
   * @return {Component}                 The passed in component
   */
  addSubcomponent(component) {
    if (!this._components) {
      this._components = [];
      this._hydratedComponentCount = 0;
    }
    if (component.parent) {
      component.parent.removeSubcomponent(component);
    }
    let idx = this.jCal[COMPONENT_INDEX].push(component.jCal);
    this._components[idx - 1] = component;
    this._hydratedComponentCount++;
    component.parent = this;
    return component;
  }
  /**
   * Removes a single component by name or the instance of a specific
   * component.
   *
   * @param {Component|String} nameOrComp    Name of component, or component
   * @return {Boolean}                            True when comp is removed
   */
  removeSubcomponent(nameOrComp) {
    let removed = this._removeObject(COMPONENT_INDEX, "_components", nameOrComp);
    if (removed) {
      this._hydratedComponentCount--;
    }
    return removed;
  }
  /**
   * Removes all components or (if given) all components by a particular
   * name.
   *
   * @param {String=} name            Lowercase component name
   */
  removeAllSubcomponents(name) {
    let removed = this._removeAllObjects(COMPONENT_INDEX, "_components", name);
    this._hydratedComponentCount = 0;
    return removed;
  }
  /**
   * Adds an {@link ICAL.Property} to the component.
   *
   * @param {Property} property      The property to add
   * @return {Property}              The passed in property
   */
  addProperty(property) {
    if (!(property instanceof Property)) {
      throw new TypeError("must be instance of ICAL.Property");
    }
    if (!this._properties) {
      this._properties = [];
      this._hydratedPropertyCount = 0;
    }
    if (property.parent) {
      property.parent.removeProperty(property);
    }
    let idx = this.jCal[PROPERTY_INDEX].push(property.jCal);
    this._properties[idx - 1] = property;
    this._hydratedPropertyCount++;
    property.parent = this;
    return property;
  }
  /**
   * Helper method to add a property with a value to the component.
   *
   * @param {String}               name         Property name to add
   * @param {String|Number|Object} value        Property value
   * @return {Property}                    The created property
   */
  addPropertyWithValue(name, value3) {
    let prop = new Property(name);
    prop.setValue(value3);
    this.addProperty(prop);
    return prop;
  }
  /**
   * Helper method that will update or create a property of the given name
   * and sets its value. If multiple properties with the given name exist,
   * only the first is updated.
   *
   * @param {String}               name         Property name to update
   * @param {String|Number|Object} value        Property value
   * @return {Property}                    The created property
   */
  updatePropertyWithValue(name, value3) {
    let prop = this.getFirstProperty(name);
    if (prop) {
      prop.setValue(value3);
    } else {
      prop = this.addPropertyWithValue(name, value3);
    }
    return prop;
  }
  /**
   * Removes a single property by name or the instance of the specific
   * property.
   *
   * @param {String|Property} nameOrProp     Property name or instance to remove
   * @return {Boolean}                            True, when deleted
   */
  removeProperty(nameOrProp) {
    let removed = this._removeObject(PROPERTY_INDEX, "_properties", nameOrProp);
    if (removed) {
      this._hydratedPropertyCount--;
    }
    return removed;
  }
  /**
   * Removes all properties associated with this component, optionally
   * filtered by name.
   *
   * @param {String=} name        Lowercase property name
   * @return {Boolean}            True, when deleted
   */
  removeAllProperties(name) {
    let removed = this._removeAllObjects(PROPERTY_INDEX, "_properties", name);
    this._hydratedPropertyCount = 0;
    return removed;
  }
  /**
   * Returns the Object representation of this component. The returned object
   * is a live jCal object and should be cloned if modified.
   * @return {Object}
   */
  toJSON() {
    return this.jCal;
  }
  /**
   * The string representation of this component.
   * @return {String}
   */
  toString() {
    return stringify.component(
      this.jCal,
      this._designSet
    );
  }
  /**
   * Retrieve a time zone definition from the component tree, if any is present.
   * If the tree contains no time zone definitions or the TZID cannot be
   * matched, returns null.
   *
   * @param {String} tzid     The ID of the time zone to retrieve
   * @return {Timezone}  The time zone corresponding to the ID, or null
   */
  getTimeZoneByID(tzid) {
    if (this.parent) {
      return this.parent.getTimeZoneByID(tzid);
    }
    if (!this._timezoneCache) {
      return null;
    }
    if (this._timezoneCache.has(tzid)) {
      return this._timezoneCache.get(tzid);
    }
    const zones2 = this.getAllSubcomponents("vtimezone");
    for (const zone of zones2) {
      if (zone.getFirstProperty("tzid").getFirstValue() === tzid) {
        const hydratedZone = new Timezone$1({
          component: zone,
          tzid
        });
        this._timezoneCache.set(tzid, hydratedZone);
        return hydratedZone;
      }
    }
    return null;
  }
}
class RecurExpansion {
  /**
   * Creates a new ICAL.RecurExpansion instance.
   *
   * The options object can be filled with the specified initial values. It can also contain
   * additional members, as a result of serializing a previous expansion state, as shown in the
   * example.
   *
   * @param {Object} options
   *        Recurrence expansion options
   * @param {Time} options.dtstart
   *        Start time of the event
   * @param {Component=} options.component
   *        Component for expansion, required if not resuming.
   */
  constructor(options2) {
    this.ruleDates = [];
    this.exDates = [];
    this.fromData(options2);
  }
  /**
   * True when iteration is fully completed.
   * @type {Boolean}
   */
  complete = false;
  /**
   * Array of rrule iterators.
   *
   * @type {RecurIterator[]}
   * @private
   */
  ruleIterators = null;
  /**
   * Array of rdate instances.
   *
   * @type {Time[]}
   * @private
   */
  ruleDates = null;
  /**
   * Array of exdate instances.
   *
   * @type {Time[]}
   * @private
   */
  exDates = null;
  /**
   * Current position in ruleDates array.
   * @type {Number}
   * @private
   */
  ruleDateInc = 0;
  /**
   * Current position in exDates array
   * @type {Number}
   * @private
   */
  exDateInc = 0;
  /**
   * Current negative date.
   *
   * @type {Time}
   * @private
   */
  exDate = null;
  /**
   * Current additional date.
   *
   * @type {Time}
   * @private
   */
  ruleDate = null;
  /**
   * Start date of recurring rules.
   *
   * @type {Time}
   */
  dtstart = null;
  /**
   * Last expanded time
   *
   * @type {Time}
   */
  last = null;
  /**
   * Initialize the recurrence expansion from the data object. The options
   * object may also contain additional members, see the
   * {@link ICAL.RecurExpansion constructor} for more details.
   *
   * @param {Object} options
   *        Recurrence expansion options
   * @param {Time} options.dtstart
   *        Start time of the event
   * @param {Component=} options.component
   *        Component for expansion, required if not resuming.
   */
  fromData(options2) {
    let start = formatClassType(options2.dtstart, Time);
    if (!start) {
      throw new Error(".dtstart (ICAL.Time) must be given");
    } else {
      this.dtstart = start;
    }
    if (options2.component) {
      this._init(options2.component);
    } else {
      this.last = formatClassType(options2.last, Time) || start.clone();
      if (!options2.ruleIterators) {
        throw new Error(".ruleIterators or .component must be given");
      }
      this.ruleIterators = options2.ruleIterators.map(function(item) {
        return formatClassType(item, RecurIterator);
      });
      this.ruleDateInc = options2.ruleDateInc;
      this.exDateInc = options2.exDateInc;
      if (options2.ruleDates) {
        this.ruleDates = options2.ruleDates.map((item) => formatClassType(item, Time));
        this.ruleDate = this.ruleDates[this.ruleDateInc];
      }
      if (options2.exDates) {
        this.exDates = options2.exDates.map((item) => formatClassType(item, Time));
        this.exDate = this.exDates[this.exDateInc];
      }
      if (typeof options2.complete !== "undefined") {
        this.complete = options2.complete;
      }
    }
  }
  /**
   * Retrieve the next occurrence in the series.
   * @return {Time}
   */
  next() {
    let iter;
    let next;
    let compare;
    let maxTries = 500;
    let currentTry = 0;
    while (true) {
      if (currentTry++ > maxTries) {
        throw new Error(
          "max tries have occurred, rule may be impossible to fulfill."
        );
      }
      next = this.ruleDate;
      iter = this._nextRecurrenceIter(this.last);
      if (!next && !iter) {
        this.complete = true;
        break;
      }
      if (!next || iter && next.compare(iter.last) > 0) {
        next = iter.last.clone();
        iter.next();
      }
      if (this.ruleDate === next) {
        this._nextRuleDay();
      }
      this.last = next;
      if (this.exDate) {
        compare = this.exDate.compare(this.last);
        if (compare < 0) {
          this._nextExDay();
        }
        if (compare === 0) {
          this._nextExDay();
          continue;
        }
      }
      return this.last;
    }
  }
  /**
   * Converts object into a serialize-able format. This format can be passed
   * back into the expansion to resume iteration.
   * @return {Object}
   */
  toJSON() {
    function toJSON(item) {
      return item.toJSON();
    }
    let result = /* @__PURE__ */ Object.create(null);
    result.ruleIterators = this.ruleIterators.map(toJSON);
    if (this.ruleDates) {
      result.ruleDates = this.ruleDates.map(toJSON);
    }
    if (this.exDates) {
      result.exDates = this.exDates.map(toJSON);
    }
    result.ruleDateInc = this.ruleDateInc;
    result.exDateInc = this.exDateInc;
    result.last = this.last.toJSON();
    result.dtstart = this.dtstart.toJSON();
    result.complete = this.complete;
    return result;
  }
  /**
   * Extract all dates from the properties in the given component. The
   * properties will be filtered by the property name.
   *
   * @private
   * @param {Component} component             The component to search in
   * @param {String} propertyName             The property name to search for
   * @return {Time[]}                         The extracted dates.
   */
  _extractDates(component, propertyName) {
    let result = [];
    let props = component.getAllProperties(propertyName);
    for (let i = 0, len = props.length; i < len; i++) {
      for (let prop of props[i].getValues()) {
        let idx = binsearchInsert(
          result,
          prop,
          (a2, b) => a2.compare(b)
        );
        result.splice(idx, 0, prop);
      }
    }
    return result;
  }
  /**
   * Initialize the recurrence expansion.
   *
   * @private
   * @param {Component} component    The component to initialize from.
   */
  _init(component) {
    this.ruleIterators = [];
    this.last = this.dtstart.clone();
    if (!component.hasProperty("rdate") && !component.hasProperty("rrule") && !component.hasProperty("recurrence-id")) {
      this.ruleDate = this.last.clone();
      this.complete = true;
      return;
    }
    if (component.hasProperty("rdate")) {
      this.ruleDates = this._extractDates(component, "rdate");
      if (this.ruleDates[0] && this.ruleDates[0].compare(this.dtstart) < 0) {
        this.ruleDateInc = 0;
        this.last = this.ruleDates[0].clone();
      } else {
        this.ruleDateInc = binsearchInsert(
          this.ruleDates,
          this.last,
          (a2, b) => a2.compare(b)
        );
      }
      this.ruleDate = this.ruleDates[this.ruleDateInc];
    }
    if (component.hasProperty("rrule")) {
      let rules = component.getAllProperties("rrule");
      let i = 0;
      let len = rules.length;
      let rule;
      let iter;
      for (; i < len; i++) {
        rule = rules[i].getFirstValue();
        iter = rule.iterator(this.dtstart);
        this.ruleIterators.push(iter);
        iter.next();
      }
    }
    if (component.hasProperty("exdate")) {
      this.exDates = this._extractDates(component, "exdate");
      this.exDateInc = binsearchInsert(
        this.exDates,
        this.last,
        (a2, b) => a2.compare(b)
      );
      this.exDate = this.exDates[this.exDateInc];
    }
  }
  /**
   * Advance to the next exdate
   * @private
   */
  _nextExDay() {
    this.exDate = this.exDates[++this.exDateInc];
  }
  /**
   * Advance to the next rule date
   * @private
   */
  _nextRuleDay() {
    this.ruleDate = this.ruleDates[++this.ruleDateInc];
  }
  /**
   * Find and return the recurrence rule with the most recent event and
   * return it.
   *
   * @private
   * @return {?RecurIterator}    Found iterator.
   */
  _nextRecurrenceIter() {
    let iters = this.ruleIterators;
    if (iters.length === 0) {
      return null;
    }
    let len = iters.length;
    let iter;
    let iterTime;
    let iterIdx = 0;
    let chosenIter;
    for (; iterIdx < len; iterIdx++) {
      iter = iters[iterIdx];
      iterTime = iter.last;
      if (iter.completed) {
        len--;
        if (iterIdx !== 0) {
          iterIdx--;
        }
        iters.splice(iterIdx, 1);
        continue;
      }
      if (!chosenIter || chosenIter.last.compare(iterTime) > 0) {
        chosenIter = iter;
      }
    }
    return chosenIter;
  }
}
class Event {
  /**
   * Creates a new ICAL.Event instance.
   *
   * @param {Component=} component              The ICAL.Component to base this event on
   * @param {Object} [options]                  Options for this event
   * @param {Boolean=} options.strictExceptions  When true, will verify exceptions are related by
   *                                              their UUID
   * @param {Array<Component|Event>=} options.exceptions
   *          Exceptions to this event, either as components or events. If not
   *            specified exceptions will automatically be set in relation of
   *            component's parent
   */
  constructor(component, options2) {
    if (!(component instanceof Component)) {
      options2 = component;
      component = null;
    }
    if (component) {
      this.component = component;
    } else {
      this.component = new Component("vevent");
    }
    this._rangeExceptionCache = /* @__PURE__ */ Object.create(null);
    this.exceptions = /* @__PURE__ */ Object.create(null);
    this.rangeExceptions = [];
    if (options2 && options2.strictExceptions) {
      this.strictExceptions = options2.strictExceptions;
    }
    if (options2 && options2.exceptions) {
      options2.exceptions.forEach(this.relateException, this);
    } else if (this.component.parent && !this.isRecurrenceException()) {
      this.component.parent.getAllSubcomponents("vevent").forEach(function(event) {
        if (event.hasProperty("recurrence-id")) {
          this.relateException(event);
        }
      }, this);
    }
  }
  static THISANDFUTURE = "THISANDFUTURE";
  /**
   * List of related event exceptions.
   *
   * @type {Event[]}
   */
  exceptions = null;
  /**
   * When true, will verify exceptions are related by their UUID.
   *
   * @type {Boolean}
   */
  strictExceptions = false;
  /**
   * Relates a given event exception to this object.  If the given component
   * does not share the UID of this event it cannot be related and will throw
   * an exception.
   *
   * If this component is an exception it cannot have other exceptions
   * related to it.
   *
   * @param {Component|Event} obj       Component or event
   */
  relateException(obj) {
    if (this.isRecurrenceException()) {
      throw new Error("cannot relate exception to exceptions");
    }
    if (obj instanceof Component) {
      obj = new Event(obj);
    }
    if (this.strictExceptions && obj.uid !== this.uid) {
      throw new Error("attempted to relate unrelated exception");
    }
    let id = obj.recurrenceId.toString();
    this.exceptions[id] = obj;
    if (obj.modifiesFuture()) {
      let item = [
        obj.recurrenceId.toUnixTime(),
        id
      ];
      let idx = binsearchInsert(
        this.rangeExceptions,
        item,
        compareRangeException
      );
      this.rangeExceptions.splice(idx, 0, item);
    }
  }
  /**
   * Checks if this record is an exception and has the RANGE=THISANDFUTURE
   * value.
   *
   * @return {Boolean}        True, when exception is within range
   */
  modifiesFuture() {
    if (!this.component.hasProperty("recurrence-id")) {
      return false;
    }
    let range = this.component.getFirstProperty("recurrence-id").getParameter("range");
    return range === Event.THISANDFUTURE;
  }
  /**
   * Finds the range exception nearest to the given date.
   *
   * @param {Time} time   usually an occurrence time of an event
   * @return {?Event}     the related event/exception or null
   */
  findRangeException(time) {
    if (!this.rangeExceptions.length) {
      return null;
    }
    let utc = time.toUnixTime();
    let idx = binsearchInsert(
      this.rangeExceptions,
      [utc],
      compareRangeException
    );
    idx -= 1;
    if (idx < 0) {
      return null;
    }
    let rangeItem = this.rangeExceptions[idx];
    if (utc < rangeItem[0]) {
      return null;
    }
    return rangeItem[1];
  }
  /**
   * Returns the occurrence details based on its start time.  If the
   * occurrence has an exception will return the details for that exception.
   *
   * NOTE: this method is intend to be used in conjunction
   *       with the {@link ICAL.Event#iterator iterator} method.
   *
   * @param {Time} occurrence               time occurrence
   * @return {occurrenceDetails}            Information about the occurrence
   */
  getOccurrenceDetails(occurrence) {
    let id = occurrence.toString();
    let utcId = occurrence.convertToZone(Timezone$1.utcTimezone).toString();
    let item;
    let result = {
      //XXX: Clone?
      recurrenceId: occurrence
    };
    if (id in this.exceptions) {
      item = result.item = this.exceptions[id];
      result.startDate = item.startDate;
      result.endDate = item.endDate;
      result.item = item;
    } else if (utcId in this.exceptions) {
      item = this.exceptions[utcId];
      result.startDate = item.startDate;
      result.endDate = item.endDate;
      result.item = item;
    } else {
      let rangeExceptionId = this.findRangeException(
        occurrence
      );
      let end;
      if (rangeExceptionId) {
        let exception = this.exceptions[rangeExceptionId];
        result.item = exception;
        let startDiff = this._rangeExceptionCache[rangeExceptionId];
        if (!startDiff) {
          let original = exception.recurrenceId.clone();
          let newStart = exception.startDate.clone();
          original.zone = newStart.zone;
          startDiff = newStart.subtractDate(original);
          this._rangeExceptionCache[rangeExceptionId] = startDiff;
        }
        let start = occurrence.clone();
        start.zone = exception.startDate.zone;
        start.addDuration(startDiff);
        end = start.clone();
        end.addDuration(exception.duration);
        result.startDate = start;
        result.endDate = end;
      } else {
        end = occurrence.clone();
        end.addDuration(this.duration);
        result.endDate = end;
        result.startDate = occurrence;
        result.item = this;
      }
    }
    return result;
  }
  /**
   * Builds a recur expansion instance for a specific point in time (defaults
   * to startDate).
   *
   * @param {Time=} startTime     Starting point for expansion
   * @return {RecurExpansion}    Expansion object
   */
  iterator(startTime) {
    return new RecurExpansion({
      component: this.component,
      dtstart: startTime || this.startDate
    });
  }
  /**
   * Checks if the event is recurring
   *
   * @return {Boolean}        True, if event is recurring
   */
  isRecurring() {
    let comp = this.component;
    return comp.hasProperty("rrule") || comp.hasProperty("rdate");
  }
  /**
   * Checks if the event describes a recurrence exception. See
   * {@tutorial terminology} for details.
   *
   * @return {Boolean}    True, if the event describes a recurrence exception
   */
  isRecurrenceException() {
    return this.component.hasProperty("recurrence-id");
  }
  /**
   * Returns the types of recurrences this event may have.
   *
   * Returned as an object with the following possible keys:
   *
   *    - YEARLY
   *    - MONTHLY
   *    - WEEKLY
   *    - DAILY
   *    - MINUTELY
   *    - SECONDLY
   *
   * @return {Object.<frequencyValues, Boolean>}
   *          Object of recurrence flags
   */
  getRecurrenceTypes() {
    let rules = this.component.getAllProperties("rrule");
    let i = 0;
    let len = rules.length;
    let result = /* @__PURE__ */ Object.create(null);
    for (; i < len; i++) {
      let value3 = rules[i].getFirstValue();
      result[value3.freq] = true;
    }
    return result;
  }
  /**
   * The uid of this event
   * @type {String}
   */
  get uid() {
    return this._firstProp("uid");
  }
  set uid(value3) {
    this._setProp("uid", value3);
  }
  /**
   * The start date
   * @type {Time}
   */
  get startDate() {
    return this._firstProp("dtstart");
  }
  set startDate(value3) {
    this._setTime("dtstart", value3);
  }
  /**
   * The end date. This can be the result directly from the property, or the
   * end date calculated from start date and duration. Setting the property
   * will remove any duration properties.
   * @type {Time}
   */
  get endDate() {
    let endDate = this._firstProp("dtend");
    if (!endDate) {
      let duration = this._firstProp("duration");
      endDate = this.startDate.clone();
      if (duration) {
        endDate.addDuration(duration);
      } else if (endDate.isDate) {
        endDate.day += 1;
      }
    }
    return endDate;
  }
  set endDate(value3) {
    if (this.component.hasProperty("duration")) {
      this.component.removeProperty("duration");
    }
    this._setTime("dtend", value3);
  }
  /**
   * The duration. This can be the result directly from the property, or the
   * duration calculated from start date and end date. Setting the property
   * will remove any `dtend` properties.
   * @type {Duration}
   */
  get duration() {
    let duration = this._firstProp("duration");
    if (!duration) {
      return this.endDate.subtractDateTz(this.startDate);
    }
    return duration;
  }
  set duration(value3) {
    if (this.component.hasProperty("dtend")) {
      this.component.removeProperty("dtend");
    }
    this._setProp("duration", value3);
  }
  /**
   * The location of the event.
   * @type {String}
   */
  get location() {
    return this._firstProp("location");
  }
  set location(value3) {
    this._setProp("location", value3);
  }
  /**
   * The attendees in the event
   * @type {Property[]}
   */
  get attendees() {
    return this.component.getAllProperties("attendee");
  }
  /**
   * The event summary
   * @type {String}
   */
  get summary() {
    return this._firstProp("summary");
  }
  set summary(value3) {
    this._setProp("summary", value3);
  }
  /**
   * The event description.
   * @type {String}
   */
  get description() {
    return this._firstProp("description");
  }
  set description(value3) {
    this._setProp("description", value3);
  }
  /**
   * The event color from [rfc7986](https://datatracker.ietf.org/doc/html/rfc7986)
   * @type {String}
   */
  get color() {
    return this._firstProp("color");
  }
  set color(value3) {
    this._setProp("color", value3);
  }
  /**
   * The organizer value as an uri. In most cases this is a mailto: uri, but
   * it can also be something else, like urn:uuid:...
   * @type {String}
   */
  get organizer() {
    return this._firstProp("organizer");
  }
  set organizer(value3) {
    this._setProp("organizer", value3);
  }
  /**
   * The sequence value for this event. Used for scheduling
   * see {@tutorial terminology}.
   * @type {Number}
   */
  get sequence() {
    return this._firstProp("sequence");
  }
  set sequence(value3) {
    this._setProp("sequence", value3);
  }
  /**
   * The recurrence id for this event. See {@tutorial terminology} for details.
   * @type {Time}
   */
  get recurrenceId() {
    return this._firstProp("recurrence-id");
  }
  set recurrenceId(value3) {
    this._setTime("recurrence-id", value3);
  }
  /**
   * Set/update a time property's value.
   * This will also update the TZID of the property.
   *
   * TODO: this method handles the case where we are switching
   * from a known timezone to an implied timezone (one without TZID).
   * This does _not_ handle the case of moving between a known
   *  (by TimezoneService) timezone to an unknown timezone...
   *
   * We will not add/remove/update the VTIMEZONE subcomponents
   *  leading to invalid ICAL data...
   * @private
   * @param {String} propName     The property name
   * @param {Time} time           The time to set
   */
  _setTime(propName, time) {
    let prop = this.component.getFirstProperty(propName);
    if (!prop) {
      prop = new Property(propName);
      this.component.addProperty(prop);
    }
    if (time.zone === Timezone$1.localTimezone || time.zone === Timezone$1.utcTimezone) {
      prop.removeParameter("tzid");
    } else {
      prop.setParameter("tzid", time.zone.tzid);
    }
    prop.setValue(time);
  }
  _setProp(name, value3) {
    this.component.updatePropertyWithValue(name, value3);
  }
  _firstProp(name) {
    return this.component.getFirstPropertyValue(name);
  }
  /**
   * The string representation of this event.
   * @return {String}
   */
  toString() {
    return this.component.toString();
  }
}
function compareRangeException(a2, b) {
  if (a2[0] > b[0]) return 1;
  if (b[0] > a2[0]) return -1;
  return 0;
}
class ComponentParser {
  /**
   * Creates a new ICAL.ComponentParser instance.
   *
   * @param {Object=} options                   Component parser options
   * @param {Boolean} options.parseEvent        Whether events should be parsed
   * @param {Boolean} options.parseTimezeone    Whether timezones should be parsed
   */
  constructor(options2) {
    if (typeof options2 === "undefined") {
      options2 = {};
    }
    for (let [key, value3] of Object.entries(options2)) {
      this[key] = value3;
    }
  }
  /**
   * When true, parse events
   *
   * @type {Boolean}
   */
  parseEvent = true;
  /**
   * When true, parse timezones
   *
   * @type {Boolean}
   */
  parseTimezone = true;
  /* SAX like events here for reference */
  /**
   * Fired when parsing is complete
   * @callback
   */
  oncomplete = (
    /* c8 ignore next */
    function() {
    }
  );
  /**
   * Fired if an error occurs during parsing.
   *
   * @callback
   * @param {Error} err details of error
   */
  onerror = (
    /* c8 ignore next */
    function(err) {
    }
  );
  /**
   * Fired when a top level component (VTIMEZONE) is found
   *
   * @callback
   * @param {Timezone} component     Timezone object
   */
  ontimezone = (
    /* c8 ignore next */
    function(component) {
    }
  );
  /**
   * Fired when a top level component (VEVENT) is found.
   *
   * @callback
   * @param {Event} component    Top level component
   */
  onevent = (
    /* c8 ignore next */
    function(component) {
    }
  );
  /**
   * Process a string or parse ical object.  This function itself will return
   * nothing but will start the parsing process.
   *
   * Events must be registered prior to calling this method.
   *
   * @param {Component|String|Object} ical      The component to process,
   *        either in its final form, as a jCal Object, or string representation
   */
  process(ical) {
    if (typeof ical === "string") {
      ical = parse$1(ical);
    }
    if (!(ical instanceof Component)) {
      ical = new Component(ical);
    }
    let components = ical.getAllSubcomponents();
    let i = 0;
    let len = components.length;
    let component;
    for (; i < len; i++) {
      component = components[i];
      switch (component.name) {
        case "vtimezone":
          if (this.parseTimezone) {
            let tzid = component.getFirstPropertyValue("tzid");
            if (tzid) {
              this.ontimezone(new Timezone$1({
                tzid,
                component
              }));
            }
          }
          break;
        case "vevent":
          if (this.parseEvent) {
            this.onevent(new Event(component));
          }
          break;
        default:
          continue;
      }
    }
    this.oncomplete();
  }
}
var ICALmodule = {
  /**
   * The number of characters before iCalendar line folding should occur
   * @type {Number}
   * @default 75
   */
  foldLength: 75,
  debug: false,
  /**
   * The character(s) to be used for a newline. The default value is provided by
   * rfc5545.
   * @type {String}
   * @default "\r\n"
   */
  newLineChar: "\r\n",
  Binary,
  Component,
  ComponentParser,
  Duration,
  Event,
  Period,
  Property,
  Recur,
  RecurExpansion,
  RecurIterator,
  Time,
  Timezone: Timezone$1,
  TimezoneService,
  UtcOffset,
  VCardTime,
  parse: parse$1,
  stringify,
  design: design$1,
  helpers
};
class Timezone2 {
  /**
   * Constructor
   *
   * @param {string | ICAL.Timezone | ICAL.Component} timezoneId Id of the timezone
   * @param {string?} ics The iCalendar timezone definition
   */
  constructor(timezoneId, ics) {
    this._timezoneId = null;
    this._ics = null;
    this._innerValue = null;
    this._initialized = false;
    if (timezoneId instanceof ICALmodule.Timezone) {
      this._innerValue = timezoneId;
      this._initialized = true;
    } else if (timezoneId instanceof ICALmodule.Component) {
      this._innerValue = new ICALmodule.Timezone(timezoneId);
      this._initialized = true;
    } else {
      this._timezoneId = timezoneId;
      this._ics = ics;
    }
  }
  /**
   * Gets the timezone id
   *
   * @return {string}
   */
  get timezoneId() {
    if (this._initialized) {
      return this._innerValue.tzid;
    }
    return this._timezoneId;
  }
  /**
   * Gets the UTC Offset for a given date in this timezone
   *
   * @param {number} year Year of the date
   * @param {number} month Month of the date (1-based)
   * @param {number} day Day of the date
   * @param {number} hour Hour of the date
   * @param {number} minute Minute of the date
   * @param {number} second Second of the date
   * @return {number}
   */
  offsetForArray(year, month, day, hour, minute, second) {
    this._initialize();
    const time = new ICALmodule.Time({
      year,
      month,
      day,
      hour,
      minute,
      second,
      isDate: false
    });
    return this._innerValue.utcOffset(time);
  }
  /**
   * Converts a timestamp to an array of year, month, day, hour, minute, second.
   *
   * @param {number} ms Timestamp in milliseconds
   * @return {number[]}
   */
  timestampToArray(ms) {
    this._initialize();
    const time = ICALmodule.Time.fromData({
      year: 1970,
      month: 1,
      day: 1,
      hour: 0,
      minute: 0,
      second: 0
    });
    time.fromUnixTime(Math.floor(ms / 1e3));
    const local = time.convertToZone(this._innerValue);
    return [
      local.year,
      local.month,
      // THIS is 1-based !
      local.day,
      local.hour,
      local.minute,
      local.second
    ];
  }
  /**
   * Returns
   *
   * @return {ICAL.Timezone}
   */
  toICALTimezone() {
    this._initialize();
    return this._innerValue;
  }
  /**
   * Returns the corresponding ICAL.
   *
   * @return {ICAL.Component}
   */
  toICALJs() {
    this._initialize();
    return this._innerValue.component;
  }
  /**
   * Initialises the inner ICAL.Timezone component
   *
   * @private
   */
  _initialize() {
    if (!this._initialized) {
      const jCal = ICALmodule.parse(this._ics);
      const icalComp = new ICALmodule.Component(jCal);
      this._innerValue = new ICALmodule.Timezone(icalComp);
      this._initialized = true;
    }
  }
}
Timezone2.utc = new Timezone2(ICALmodule.Timezone.utcTimezone);
Timezone2.floating = new Timezone2(ICALmodule.Timezone.localTimezone);
const version = "2.2024a";
const aliases = {
  "AUS Central Standard Time": {
    aliasTo: "Australia/Darwin"
  },
  "AUS Eastern Standard Time": {
    aliasTo: "Australia/Sydney"
  },
  "Afghanistan Standard Time": {
    aliasTo: "Asia/Kabul"
  },
  "Africa/Asmera": {
    aliasTo: "Africa/Asmara"
  },
  "Africa/Timbuktu": {
    aliasTo: "Africa/Bamako"
  },
  "Alaskan Standard Time": {
    aliasTo: "America/Anchorage"
  },
  "America/Argentina/ComodRivadavia": {
    aliasTo: "America/Argentina/Catamarca"
  },
  "America/Buenos_Aires": {
    aliasTo: "America/Argentina/Buenos_Aires"
  },
  "America/Louisville": {
    aliasTo: "America/Kentucky/Louisville"
  },
  "America/Montreal": {
    aliasTo: "America/Toronto"
  },
  "America/Santa_Isabel": {
    aliasTo: "America/Tijuana"
  },
  "Arab Standard Time": {
    aliasTo: "Asia/Riyadh"
  },
  "Arabian Standard Time": {
    aliasTo: "Asia/Dubai"
  },
  "Arabic Standard Time": {
    aliasTo: "Asia/Baghdad"
  },
  "Argentina Standard Time": {
    aliasTo: "America/Argentina/Buenos_Aires"
  },
  "Asia/Calcutta": {
    aliasTo: "Asia/Kolkata"
  },
  "Asia/Katmandu": {
    aliasTo: "Asia/Kathmandu"
  },
  "Asia/Rangoon": {
    aliasTo: "Asia/Yangon"
  },
  "Asia/Saigon": {
    aliasTo: "Asia/Ho_Chi_Minh"
  },
  "Atlantic Standard Time": {
    aliasTo: "America/Halifax"
  },
  "Atlantic/Faeroe": {
    aliasTo: "Atlantic/Faroe"
  },
  "Atlantic/Jan_Mayen": {
    aliasTo: "Europe/Oslo"
  },
  "Azerbaijan Standard Time": {
    aliasTo: "Asia/Baku"
  },
  "Azores Standard Time": {
    aliasTo: "Atlantic/Azores"
  },
  "Bahia Standard Time": {
    aliasTo: "America/Bahia"
  },
  "Bangladesh Standard Time": {
    aliasTo: "Asia/Dhaka"
  },
  "Belarus Standard Time": {
    aliasTo: "Europe/Minsk"
  },
  "Canada Central Standard Time": {
    aliasTo: "America/Regina"
  },
  "Cape Verde Standard Time": {
    aliasTo: "Atlantic/Cape_Verde"
  },
  "Caucasus Standard Time": {
    aliasTo: "Asia/Yerevan"
  },
  "Cen. Australia Standard Time": {
    aliasTo: "Australia/Adelaide"
  },
  "Central America Standard Time": {
    aliasTo: "America/Guatemala"
  },
  "Central Asia Standard Time": {
    aliasTo: "Asia/Almaty"
  },
  "Central Brazilian Standard Time": {
    aliasTo: "America/Cuiaba"
  },
  "Central Europe Standard Time": {
    aliasTo: "Europe/Budapest"
  },
  "Central European Standard Time": {
    aliasTo: "Europe/Warsaw"
  },
  "Central Pacific Standard Time": {
    aliasTo: "Pacific/Guadalcanal"
  },
  "Central Standard Time": {
    aliasTo: "America/Chicago"
  },
  "Central Standard Time (Mexico)": {
    aliasTo: "America/Mexico_City"
  },
  "China Standard Time": {
    aliasTo: "Asia/Shanghai"
  },
  "E. Africa Standard Time": {
    aliasTo: "Africa/Nairobi"
  },
  "E. Australia Standard Time": {
    aliasTo: "Australia/Brisbane"
  },
  "E. South America Standard Time": {
    aliasTo: "America/Sao_Paulo"
  },
  "Eastern Standard Time": {
    aliasTo: "America/New_York"
  },
  "Egypt Standard Time": {
    aliasTo: "Africa/Cairo"
  },
  "Ekaterinburg Standard Time": {
    aliasTo: "Asia/Yekaterinburg"
  },
  "Etc/GMT": {
    aliasTo: "UTC"
  },
  "Etc/GMT+0": {
    aliasTo: "UTC"
  },
  "Etc/UCT": {
    aliasTo: "UTC"
  },
  "Etc/UTC": {
    aliasTo: "UTC"
  },
  "Etc/Unversal": {
    aliasTo: "UTC"
  },
  "Etc/Zulu": {
    aliasTo: "UTC"
  },
  "Europe/Belfast": {
    aliasTo: "Europe/London"
  },
  "FLE Standard Time": {
    aliasTo: "Europe/Kiev"
  },
  "Fiji Standard Time": {
    aliasTo: "Pacific/Fiji"
  },
  GMT: {
    aliasTo: "UTC"
  },
  "GMT Standard Time": {
    aliasTo: "Europe/London"
  },
  "GMT+0": {
    aliasTo: "UTC"
  },
  GMT0: {
    aliasTo: "UTC"
  },
  "GTB Standard Time": {
    aliasTo: "Europe/Bucharest"
  },
  "Georgian Standard Time": {
    aliasTo: "Asia/Tbilisi"
  },
  "Greenland Standard Time": {
    aliasTo: "America/Godthab"
  },
  Greenwich: {
    aliasTo: "UTC"
  },
  "Greenwich Standard Time": {
    aliasTo: "Atlantic/Reykjavik"
  },
  "Hawaiian Standard Time": {
    aliasTo: "Pacific/Honolulu"
  },
  "India Standard Time": {
    aliasTo: "Asia/Calcutta"
  },
  "Iran Standard Time": {
    aliasTo: "Asia/Tehran"
  },
  "Israel Standard Time": {
    aliasTo: "Asia/Jerusalem"
  },
  "Jordan Standard Time": {
    aliasTo: "Asia/Amman"
  },
  "Kaliningrad Standard Time": {
    aliasTo: "Europe/Kaliningrad"
  },
  "Korea Standard Time": {
    aliasTo: "Asia/Seoul"
  },
  "Libya Standard Time": {
    aliasTo: "Africa/Tripoli"
  },
  "Line Islands Standard Time": {
    aliasTo: "Pacific/Kiritimati"
  },
  "Magadan Standard Time": {
    aliasTo: "Asia/Magadan"
  },
  "Mauritius Standard Time": {
    aliasTo: "Indian/Mauritius"
  },
  "Middle East Standard Time": {
    aliasTo: "Asia/Beirut"
  },
  "Montevideo Standard Time": {
    aliasTo: "America/Montevideo"
  },
  "Morocco Standard Time": {
    aliasTo: "Africa/Casablanca"
  },
  "Mountain Standard Time": {
    aliasTo: "America/Denver"
  },
  "Mountain Standard Time (Mexico)": {
    aliasTo: "America/Chihuahua"
  },
  "Myanmar Standard Time": {
    aliasTo: "Asia/Rangoon"
  },
  "N. Central Asia Standard Time": {
    aliasTo: "Asia/Novosibirsk"
  },
  "Namibia Standard Time": {
    aliasTo: "Africa/Windhoek"
  },
  "Nepal Standard Time": {
    aliasTo: "Asia/Katmandu"
  },
  "New Zealand Standard Time": {
    aliasTo: "Pacific/Auckland"
  },
  "Newfoundland Standard Time": {
    aliasTo: "America/St_Johns"
  },
  "North Asia East Standard Time": {
    aliasTo: "Asia/Irkutsk"
  },
  "North Asia Standard Time": {
    aliasTo: "Asia/Krasnoyarsk"
  },
  "Pacific SA Standard Time": {
    aliasTo: "America/Santiago"
  },
  "Pacific Standard Time": {
    aliasTo: "America/Los_Angeles"
  },
  "Pacific Standard Time (Mexico)": {
    aliasTo: "America/Santa_Isabel"
  },
  "Pacific/Johnston": {
    aliasTo: "Pacific/Honolulu"
  },
  "Pakistan Standard Time": {
    aliasTo: "Asia/Karachi"
  },
  "Paraguay Standard Time": {
    aliasTo: "America/Asuncion"
  },
  "Romance Standard Time": {
    aliasTo: "Europe/Paris"
  },
  "Russia Time Zone 10": {
    aliasTo: "Asia/Srednekolymsk"
  },
  "Russia Time Zone 11": {
    aliasTo: "Asia/Kamchatka"
  },
  "Russia Time Zone 3": {
    aliasTo: "Europe/Samara"
  },
  "Russian Standard Time": {
    aliasTo: "Europe/Moscow"
  },
  "SA Eastern Standard Time": {
    aliasTo: "America/Cayenne"
  },
  "SA Pacific Standard Time": {
    aliasTo: "America/Bogota"
  },
  "SA Western Standard Time": {
    aliasTo: "America/La_Paz"
  },
  "SE Asia Standard Time": {
    aliasTo: "Asia/Bangkok"
  },
  "Samoa Standard Time": {
    aliasTo: "Pacific/Apia"
  },
  "Singapore Standard Time": {
    aliasTo: "Asia/Singapore"
  },
  "South Africa Standard Time": {
    aliasTo: "Africa/Johannesburg"
  },
  "Sri Lanka Standard Time": {
    aliasTo: "Asia/Colombo"
  },
  "Syria Standard Time": {
    aliasTo: "Asia/Damascus"
  },
  "Taipei Standard Time": {
    aliasTo: "Asia/Taipei"
  },
  "Tasmania Standard Time": {
    aliasTo: "Australia/Hobart"
  },
  "Tokyo Standard Time": {
    aliasTo: "Asia/Tokyo"
  },
  "Tonga Standard Time": {
    aliasTo: "Pacific/Tongatapu"
  },
  "Turkey Standard Time": {
    aliasTo: "Europe/Istanbul"
  },
  UCT: {
    aliasTo: "UTC"
  },
  "US Eastern Standard Time": {
    aliasTo: "America/Indiana/Indianapolis"
  },
  "US Mountain Standard Time": {
    aliasTo: "America/Phoenix"
  },
  "US/Central": {
    aliasTo: "America/Chicago"
  },
  "US/Eastern": {
    aliasTo: "America/New_York"
  },
  "US/Mountain": {
    aliasTo: "America/Denver"
  },
  "US/Pacific": {
    aliasTo: "America/Los_Angeles"
  },
  "US/Pacific-New": {
    aliasTo: "America/Los_Angeles"
  },
  "Ulaanbaatar Standard Time": {
    aliasTo: "Asia/Ulaanbaatar"
  },
  Universal: {
    aliasTo: "UTC"
  },
  "Venezuela Standard Time": {
    aliasTo: "America/Caracas"
  },
  "Vladivostok Standard Time": {
    aliasTo: "Asia/Vladivostok"
  },
  "W. Australia Standard Time": {
    aliasTo: "Australia/Perth"
  },
  "W. Central Africa Standard Time": {
    aliasTo: "Africa/Lagos"
  },
  "W. Europe Standard Time": {
    aliasTo: "Europe/Berlin"
  },
  "West Asia Standard Time": {
    aliasTo: "Asia/Tashkent"
  },
  "West Pacific Standard Time": {
    aliasTo: "Pacific/Port_Moresby"
  },
  "Yakutsk Standard Time": {
    aliasTo: "Asia/Yakutsk"
  },
  Z: {
    aliasTo: "UTC"
  },
  Zulu: {
    aliasTo: "UTC"
  },
  utc: {
    aliasTo: "UTC"
  }
};
const zones = {
  "Africa/Abidjan": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0000\r\nTZOFFSETTO:+0000\r\nTZNAME:GMT\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "+0051900",
    longitude: "-0040200"
  },
  "Africa/Accra": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0000\r\nTZOFFSETTO:+0000\r\nTZNAME:GMT\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ]
  },
  "Africa/Addis_Ababa": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0300\r\nTZOFFSETTO:+0300\r\nTZNAME:EAT\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ]
  },
  "Africa/Algiers": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0100\r\nTZOFFSETTO:+0100\r\nTZNAME:CET\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "+0364700",
    longitude: "+0030300"
  },
  "Africa/Asmara": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0300\r\nTZOFFSETTO:+0300\r\nTZNAME:EAT\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ]
  },
  "Africa/Asmera": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0300\r\nTZOFFSETTO:+0300\r\nTZNAME:EAT\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ]
  },
  "Africa/Bamako": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0000\r\nTZOFFSETTO:+0000\r\nTZNAME:GMT\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ]
  },
  "Africa/Bangui": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0100\r\nTZOFFSETTO:+0100\r\nTZNAME:WAT\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ]
  },
  "Africa/Banjul": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0000\r\nTZOFFSETTO:+0000\r\nTZNAME:GMT\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ]
  },
  "Africa/Bissau": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0000\r\nTZOFFSETTO:+0000\r\nTZNAME:GMT\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "+0115100",
    longitude: "-0153500"
  },
  "Africa/Blantyre": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0200\r\nTZOFFSETTO:+0200\r\nTZNAME:CAT\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ]
  },
  "Africa/Brazzaville": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0100\r\nTZOFFSETTO:+0100\r\nTZNAME:WAT\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ]
  },
  "Africa/Bujumbura": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0200\r\nTZOFFSETTO:+0200\r\nTZNAME:CAT\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ]
  },
  "Africa/Cairo": {
    ics: [
      "BEGIN:DAYLIGHT\r\nTZOFFSETFROM:+0200\r\nTZOFFSETTO:+0300\r\nTZNAME:EEST\r\nDTSTART:19700424T000000\r\nRRULE:FREQ=YEARLY;BYMONTH=4;BYDAY=-1FR\r\nEND:DAYLIGHT",
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0300\r\nTZOFFSETTO:+0200\r\nTZNAME:EET\r\nDTSTART:19701030T000000\r\nRRULE:FREQ=YEARLY;BYMONTH=10;BYDAY=-1FR\r\nEND:STANDARD"
    ],
    latitude: "+0300300",
    longitude: "+0311500"
  },
  "Africa/Casablanca": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0100\r\nTZOFFSETTO:+0100\r\nTZNAME:+01\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "+0333900",
    longitude: "-0073500"
  },
  "Africa/Ceuta": {
    ics: [
      "BEGIN:DAYLIGHT\r\nTZOFFSETFROM:+0100\r\nTZOFFSETTO:+0200\r\nTZNAME:CEST\r\nDTSTART:19700329T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=-1SU\r\nEND:DAYLIGHT",
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0200\r\nTZOFFSETTO:+0100\r\nTZNAME:CET\r\nDTSTART:19701025T030000\r\nRRULE:FREQ=YEARLY;BYMONTH=10;BYDAY=-1SU\r\nEND:STANDARD"
    ],
    latitude: "+0355300",
    longitude: "-0051900"
  },
  "Africa/Conakry": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0000\r\nTZOFFSETTO:+0000\r\nTZNAME:GMT\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ]
  },
  "Africa/Dakar": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0000\r\nTZOFFSETTO:+0000\r\nTZNAME:GMT\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ]
  },
  "Africa/Dar_es_Salaam": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0300\r\nTZOFFSETTO:+0300\r\nTZNAME:EAT\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ]
  },
  "Africa/Djibouti": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0300\r\nTZOFFSETTO:+0300\r\nTZNAME:EAT\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ]
  },
  "Africa/Douala": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0100\r\nTZOFFSETTO:+0100\r\nTZNAME:WAT\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ]
  },
  "Africa/El_Aaiun": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0100\r\nTZOFFSETTO:+0100\r\nTZNAME:+01\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "+0270900",
    longitude: "-0131200"
  },
  "Africa/Freetown": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0000\r\nTZOFFSETTO:+0000\r\nTZNAME:GMT\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ]
  },
  "Africa/Gaborone": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0200\r\nTZOFFSETTO:+0200\r\nTZNAME:CAT\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ]
  },
  "Africa/Harare": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0200\r\nTZOFFSETTO:+0200\r\nTZNAME:CAT\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ]
  },
  "Africa/Johannesburg": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0200\r\nTZOFFSETTO:+0200\r\nTZNAME:SAST\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "-0261500",
    longitude: "+0280000"
  },
  "Africa/Juba": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0200\r\nTZOFFSETTO:+0200\r\nTZNAME:CAT\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "+0045100",
    longitude: "+0313700"
  },
  "Africa/Kampala": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0300\r\nTZOFFSETTO:+0300\r\nTZNAME:EAT\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ]
  },
  "Africa/Khartoum": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0200\r\nTZOFFSETTO:+0200\r\nTZNAME:CAT\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "+0153600",
    longitude: "+0323200"
  },
  "Africa/Kigali": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0200\r\nTZOFFSETTO:+0200\r\nTZNAME:CAT\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ]
  },
  "Africa/Kinshasa": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0100\r\nTZOFFSETTO:+0100\r\nTZNAME:WAT\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ]
  },
  "Africa/Lagos": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0100\r\nTZOFFSETTO:+0100\r\nTZNAME:WAT\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "+0062700",
    longitude: "+0032400"
  },
  "Africa/Libreville": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0100\r\nTZOFFSETTO:+0100\r\nTZNAME:WAT\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ]
  },
  "Africa/Lome": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0000\r\nTZOFFSETTO:+0000\r\nTZNAME:GMT\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ]
  },
  "Africa/Luanda": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0100\r\nTZOFFSETTO:+0100\r\nTZNAME:WAT\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ]
  },
  "Africa/Lubumbashi": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0200\r\nTZOFFSETTO:+0200\r\nTZNAME:CAT\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ]
  },
  "Africa/Lusaka": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0200\r\nTZOFFSETTO:+0200\r\nTZNAME:CAT\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ]
  },
  "Africa/Malabo": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0100\r\nTZOFFSETTO:+0100\r\nTZNAME:WAT\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ]
  },
  "Africa/Maputo": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0200\r\nTZOFFSETTO:+0200\r\nTZNAME:CAT\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "-0255800",
    longitude: "+0323500"
  },
  "Africa/Maseru": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0200\r\nTZOFFSETTO:+0200\r\nTZNAME:SAST\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ]
  },
  "Africa/Mbabane": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0200\r\nTZOFFSETTO:+0200\r\nTZNAME:SAST\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ]
  },
  "Africa/Mogadishu": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0300\r\nTZOFFSETTO:+0300\r\nTZNAME:EAT\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ]
  },
  "Africa/Monrovia": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0000\r\nTZOFFSETTO:+0000\r\nTZNAME:GMT\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "+0061800",
    longitude: "-0104700"
  },
  "Africa/Nairobi": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0300\r\nTZOFFSETTO:+0300\r\nTZNAME:EAT\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "-0011700",
    longitude: "+0364900"
  },
  "Africa/Ndjamena": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0100\r\nTZOFFSETTO:+0100\r\nTZNAME:WAT\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "+0120700",
    longitude: "+0150300"
  },
  "Africa/Niamey": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0100\r\nTZOFFSETTO:+0100\r\nTZNAME:WAT\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ]
  },
  "Africa/Nouakchott": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0000\r\nTZOFFSETTO:+0000\r\nTZNAME:GMT\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ]
  },
  "Africa/Ouagadougou": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0000\r\nTZOFFSETTO:+0000\r\nTZNAME:GMT\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ]
  },
  "Africa/Porto-Novo": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0100\r\nTZOFFSETTO:+0100\r\nTZNAME:WAT\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ]
  },
  "Africa/Sao_Tome": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0000\r\nTZOFFSETTO:+0000\r\nTZNAME:GMT\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "+0002000",
    longitude: "+0064400"
  },
  "Africa/Timbuktu": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0000\r\nTZOFFSETTO:+0000\r\nTZNAME:GMT\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ]
  },
  "Africa/Tripoli": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0200\r\nTZOFFSETTO:+0200\r\nTZNAME:EET\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "+0325400",
    longitude: "+0131100"
  },
  "Africa/Tunis": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0100\r\nTZOFFSETTO:+0100\r\nTZNAME:CET\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "+0364800",
    longitude: "+0101100"
  },
  "Africa/Windhoek": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0200\r\nTZOFFSETTO:+0200\r\nTZNAME:CAT\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "-0223400",
    longitude: "+0170600"
  },
  "America/Adak": {
    ics: [
      "BEGIN:DAYLIGHT\r\nTZOFFSETFROM:-1000\r\nTZOFFSETTO:-0900\r\nTZNAME:HDT\r\nDTSTART:19700308T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=2SU\r\nEND:DAYLIGHT",
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0900\r\nTZOFFSETTO:-1000\r\nTZNAME:HST\r\nDTSTART:19701101T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=11;BYDAY=1SU\r\nEND:STANDARD"
    ],
    latitude: "+0515248",
    longitude: "-1763929"
  },
  "America/Anchorage": {
    ics: [
      "BEGIN:DAYLIGHT\r\nTZOFFSETFROM:-0900\r\nTZOFFSETTO:-0800\r\nTZNAME:AKDT\r\nDTSTART:19700308T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=2SU\r\nEND:DAYLIGHT",
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0800\r\nTZOFFSETTO:-0900\r\nTZNAME:AKST\r\nDTSTART:19701101T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=11;BYDAY=1SU\r\nEND:STANDARD"
    ],
    latitude: "+0611305",
    longitude: "-1495401"
  },
  "America/Anguilla": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0400\r\nTZOFFSETTO:-0400\r\nTZNAME:AST\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ]
  },
  "America/Antigua": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0400\r\nTZOFFSETTO:-0400\r\nTZNAME:AST\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ]
  },
  "America/Araguaina": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0300\r\nTZOFFSETTO:-0300\r\nTZNAME:-03\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "-0071200",
    longitude: "-0481200"
  },
  "America/Argentina/Buenos_Aires": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0300\r\nTZOFFSETTO:-0300\r\nTZNAME:-03\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "-0343600",
    longitude: "-0582700"
  },
  "America/Argentina/Catamarca": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0300\r\nTZOFFSETTO:-0300\r\nTZNAME:-03\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "-0282800",
    longitude: "-0654700"
  },
  "America/Argentina/ComodRivadavia": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0300\r\nTZOFFSETTO:-0300\r\nTZNAME:-03\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ]
  },
  "America/Argentina/Cordoba": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0300\r\nTZOFFSETTO:-0300\r\nTZNAME:-03\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "-0312400",
    longitude: "-0641100"
  },
  "America/Argentina/Jujuy": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0300\r\nTZOFFSETTO:-0300\r\nTZNAME:-03\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "-0241100",
    longitude: "-0651800"
  },
  "America/Argentina/La_Rioja": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0300\r\nTZOFFSETTO:-0300\r\nTZNAME:-03\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "-0292600",
    longitude: "-0665100"
  },
  "America/Argentina/Mendoza": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0300\r\nTZOFFSETTO:-0300\r\nTZNAME:-03\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "-0325300",
    longitude: "-0684900"
  },
  "America/Argentina/Rio_Gallegos": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0300\r\nTZOFFSETTO:-0300\r\nTZNAME:-03\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "-0513800",
    longitude: "-0691300"
  },
  "America/Argentina/Salta": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0300\r\nTZOFFSETTO:-0300\r\nTZNAME:-03\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "-0244700",
    longitude: "-0652500"
  },
  "America/Argentina/San_Juan": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0300\r\nTZOFFSETTO:-0300\r\nTZNAME:-03\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "-0313200",
    longitude: "-0683100"
  },
  "America/Argentina/San_Luis": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0300\r\nTZOFFSETTO:-0300\r\nTZNAME:-03\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "-0331900",
    longitude: "-0662100"
  },
  "America/Argentina/Tucuman": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0300\r\nTZOFFSETTO:-0300\r\nTZNAME:-03\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "-0264900",
    longitude: "-0651300"
  },
  "America/Argentina/Ushuaia": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0300\r\nTZOFFSETTO:-0300\r\nTZNAME:-03\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "-0544800",
    longitude: "-0681800"
  },
  "America/Aruba": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0400\r\nTZOFFSETTO:-0400\r\nTZNAME:AST\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ]
  },
  "America/Asuncion": {
    ics: [
      "BEGIN:DAYLIGHT\r\nTZOFFSETFROM:-0400\r\nTZOFFSETTO:-0300\r\nTZNAME:-03\r\nDTSTART:19701004T000000\r\nRRULE:FREQ=YEARLY;BYMONTH=10;BYDAY=1SU\r\nEND:DAYLIGHT",
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0300\r\nTZOFFSETTO:-0400\r\nTZNAME:-04\r\nDTSTART:19700322T000000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=4SU\r\nEND:STANDARD"
    ],
    latitude: "-0251600",
    longitude: "-0574000"
  },
  "America/Atikokan": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0500\r\nTZOFFSETTO:-0500\r\nTZNAME:EST\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ]
  },
  "America/Atka": {
    ics: [
      "BEGIN:DAYLIGHT\r\nTZOFFSETFROM:-1000\r\nTZOFFSETTO:-0900\r\nTZNAME:HDT\r\nDTSTART:19700308T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=2SU\r\nEND:DAYLIGHT",
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0900\r\nTZOFFSETTO:-1000\r\nTZNAME:HST\r\nDTSTART:19701101T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=11;BYDAY=1SU\r\nEND:STANDARD"
    ]
  },
  "America/Bahia": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0300\r\nTZOFFSETTO:-0300\r\nTZNAME:-03\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "-0125900",
    longitude: "-0383100"
  },
  "America/Bahia_Banderas": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0600\r\nTZOFFSETTO:-0600\r\nTZNAME:CST\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "+0204800",
    longitude: "-1051500"
  },
  "America/Barbados": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0400\r\nTZOFFSETTO:-0400\r\nTZNAME:AST\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "+0130600",
    longitude: "-0593700"
  },
  "America/Belem": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0300\r\nTZOFFSETTO:-0300\r\nTZNAME:-03\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "-0012700",
    longitude: "-0482900"
  },
  "America/Belize": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0600\r\nTZOFFSETTO:-0600\r\nTZNAME:CST\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "+0173000",
    longitude: "-0881200"
  },
  "America/Blanc-Sablon": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0400\r\nTZOFFSETTO:-0400\r\nTZNAME:AST\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ]
  },
  "America/Boa_Vista": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0400\r\nTZOFFSETTO:-0400\r\nTZNAME:-04\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "+0024900",
    longitude: "-0604000"
  },
  "America/Bogota": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0500\r\nTZOFFSETTO:-0500\r\nTZNAME:-05\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "+0043600",
    longitude: "-0740500"
  },
  "America/Boise": {
    ics: [
      "BEGIN:DAYLIGHT\r\nTZOFFSETFROM:-0700\r\nTZOFFSETTO:-0600\r\nTZNAME:MDT\r\nDTSTART:19700308T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=2SU\r\nEND:DAYLIGHT",
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0600\r\nTZOFFSETTO:-0700\r\nTZNAME:MST\r\nDTSTART:19701101T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=11;BYDAY=1SU\r\nEND:STANDARD"
    ],
    latitude: "+0433649",
    longitude: "-1161209"
  },
  "America/Buenos_Aires": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0300\r\nTZOFFSETTO:-0300\r\nTZNAME:-03\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ]
  },
  "America/Cambridge_Bay": {
    ics: [
      "BEGIN:DAYLIGHT\r\nTZOFFSETFROM:-0700\r\nTZOFFSETTO:-0600\r\nTZNAME:MDT\r\nDTSTART:19700308T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=2SU\r\nEND:DAYLIGHT",
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0600\r\nTZOFFSETTO:-0700\r\nTZNAME:MST\r\nDTSTART:19701101T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=11;BYDAY=1SU\r\nEND:STANDARD"
    ],
    latitude: "+0690650",
    longitude: "-1050310"
  },
  "America/Campo_Grande": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0400\r\nTZOFFSETTO:-0400\r\nTZNAME:-04\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "-0202700",
    longitude: "-0543700"
  },
  "America/Cancun": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0500\r\nTZOFFSETTO:-0500\r\nTZNAME:EST\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "+0210500",
    longitude: "-0864600"
  },
  "America/Caracas": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0400\r\nTZOFFSETTO:-0400\r\nTZNAME:-04\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "+0103000",
    longitude: "-0665600"
  },
  "America/Catamarca": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0300\r\nTZOFFSETTO:-0300\r\nTZNAME:-03\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ]
  },
  "America/Cayenne": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0300\r\nTZOFFSETTO:-0300\r\nTZNAME:-03\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "+0045600",
    longitude: "-0522000"
  },
  "America/Cayman": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0500\r\nTZOFFSETTO:-0500\r\nTZNAME:EST\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ]
  },
  "America/Chicago": {
    ics: [
      "BEGIN:DAYLIGHT\r\nTZOFFSETFROM:-0600\r\nTZOFFSETTO:-0500\r\nTZNAME:CDT\r\nDTSTART:19700308T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=2SU\r\nEND:DAYLIGHT",
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0500\r\nTZOFFSETTO:-0600\r\nTZNAME:CST\r\nDTSTART:19701101T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=11;BYDAY=1SU\r\nEND:STANDARD"
    ],
    latitude: "+0415100",
    longitude: "-0873900"
  },
  "America/Chihuahua": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0600\r\nTZOFFSETTO:-0600\r\nTZNAME:CST\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "+0283800",
    longitude: "-1060500"
  },
  "America/Ciudad_Juarez": {
    ics: [
      "BEGIN:DAYLIGHT\r\nTZOFFSETFROM:-0700\r\nTZOFFSETTO:-0600\r\nTZNAME:MDT\r\nDTSTART:19700308T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=2SU\r\nEND:DAYLIGHT",
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0600\r\nTZOFFSETTO:-0700\r\nTZNAME:MST\r\nDTSTART:19701101T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=11;BYDAY=1SU\r\nEND:STANDARD"
    ],
    latitude: "+0314400",
    longitude: "-1062900"
  },
  "America/Coral_Harbour": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0500\r\nTZOFFSETTO:-0500\r\nTZNAME:EST\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ]
  },
  "America/Cordoba": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0300\r\nTZOFFSETTO:-0300\r\nTZNAME:-03\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ]
  },
  "America/Costa_Rica": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0600\r\nTZOFFSETTO:-0600\r\nTZNAME:CST\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "+0095600",
    longitude: "-0840500"
  },
  "America/Creston": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0700\r\nTZOFFSETTO:-0700\r\nTZNAME:MST\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ]
  },
  "America/Cuiaba": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0400\r\nTZOFFSETTO:-0400\r\nTZNAME:-04\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "-0153500",
    longitude: "-0560500"
  },
  "America/Curacao": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0400\r\nTZOFFSETTO:-0400\r\nTZNAME:AST\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ]
  },
  "America/Danmarkshavn": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0000\r\nTZOFFSETTO:+0000\r\nTZNAME:GMT\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "+0764600",
    longitude: "-0184000"
  },
  "America/Dawson": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0700\r\nTZOFFSETTO:-0700\r\nTZNAME:MST\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "+0640400",
    longitude: "-1392500"
  },
  "America/Dawson_Creek": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0700\r\nTZOFFSETTO:-0700\r\nTZNAME:MST\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "+0554600",
    longitude: "-1201400"
  },
  "America/Denver": {
    ics: [
      "BEGIN:DAYLIGHT\r\nTZOFFSETFROM:-0700\r\nTZOFFSETTO:-0600\r\nTZNAME:MDT\r\nDTSTART:19700308T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=2SU\r\nEND:DAYLIGHT",
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0600\r\nTZOFFSETTO:-0700\r\nTZNAME:MST\r\nDTSTART:19701101T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=11;BYDAY=1SU\r\nEND:STANDARD"
    ],
    latitude: "+0394421",
    longitude: "-1045903"
  },
  "America/Detroit": {
    ics: [
      "BEGIN:DAYLIGHT\r\nTZOFFSETFROM:-0500\r\nTZOFFSETTO:-0400\r\nTZNAME:EDT\r\nDTSTART:19700308T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=2SU\r\nEND:DAYLIGHT",
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0400\r\nTZOFFSETTO:-0500\r\nTZNAME:EST\r\nDTSTART:19701101T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=11;BYDAY=1SU\r\nEND:STANDARD"
    ],
    latitude: "+0421953",
    longitude: "-0830245"
  },
  "America/Dominica": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0400\r\nTZOFFSETTO:-0400\r\nTZNAME:AST\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ]
  },
  "America/Edmonton": {
    ics: [
      "BEGIN:DAYLIGHT\r\nTZOFFSETFROM:-0700\r\nTZOFFSETTO:-0600\r\nTZNAME:MDT\r\nDTSTART:19700308T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=2SU\r\nEND:DAYLIGHT",
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0600\r\nTZOFFSETTO:-0700\r\nTZNAME:MST\r\nDTSTART:19701101T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=11;BYDAY=1SU\r\nEND:STANDARD"
    ],
    latitude: "+0533300",
    longitude: "-1132800"
  },
  "America/Eirunepe": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0500\r\nTZOFFSETTO:-0500\r\nTZNAME:-05\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "-0064000",
    longitude: "-0695200"
  },
  "America/El_Salvador": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0600\r\nTZOFFSETTO:-0600\r\nTZNAME:CST\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "+0134200",
    longitude: "-0891200"
  },
  "America/Ensenada": {
    ics: [
      "BEGIN:DAYLIGHT\r\nTZOFFSETFROM:-0800\r\nTZOFFSETTO:-0700\r\nTZNAME:PDT\r\nDTSTART:19700308T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=2SU\r\nEND:DAYLIGHT",
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0700\r\nTZOFFSETTO:-0800\r\nTZNAME:PST\r\nDTSTART:19701101T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=11;BYDAY=1SU\r\nEND:STANDARD"
    ]
  },
  "America/Fort_Nelson": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0700\r\nTZOFFSETTO:-0700\r\nTZNAME:MST\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "+0584800",
    longitude: "-1224200"
  },
  "America/Fort_Wayne": {
    ics: [
      "BEGIN:DAYLIGHT\r\nTZOFFSETFROM:-0500\r\nTZOFFSETTO:-0400\r\nTZNAME:EDT\r\nDTSTART:19700308T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=2SU\r\nEND:DAYLIGHT",
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0400\r\nTZOFFSETTO:-0500\r\nTZNAME:EST\r\nDTSTART:19701101T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=11;BYDAY=1SU\r\nEND:STANDARD"
    ]
  },
  "America/Fortaleza": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0300\r\nTZOFFSETTO:-0300\r\nTZNAME:-03\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "-0034300",
    longitude: "-0383000"
  },
  "America/Glace_Bay": {
    ics: [
      "BEGIN:DAYLIGHT\r\nTZOFFSETFROM:-0400\r\nTZOFFSETTO:-0300\r\nTZNAME:ADT\r\nDTSTART:19700308T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=2SU\r\nEND:DAYLIGHT",
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0300\r\nTZOFFSETTO:-0400\r\nTZNAME:AST\r\nDTSTART:19701101T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=11;BYDAY=1SU\r\nEND:STANDARD"
    ],
    latitude: "+0461200",
    longitude: "-0595700"
  },
  "America/Godthab": {
    ics: [
      "BEGIN:DAYLIGHT\r\nTZOFFSETFROM:-0200\r\nTZOFFSETTO:-0100\r\nTZNAME:-01\r\nDTSTART:19700328T230000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=-1SA\r\nEND:DAYLIGHT",
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0100\r\nTZOFFSETTO:-0200\r\nTZNAME:-02\r\nDTSTART:19701025T000000\r\nRRULE:FREQ=YEARLY;BYMONTH=10;BYDAY=-1SU\r\nEND:STANDARD"
    ]
  },
  "America/Goose_Bay": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0300\r\nTZOFFSETTO:-0400\r\nTZNAME:AST\r\nDTSTART:19701101T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=11;BYDAY=1SU\r\nEND:STANDARD",
      "BEGIN:DAYLIGHT\r\nTZOFFSETFROM:-0400\r\nTZOFFSETTO:-0300\r\nTZNAME:ADT\r\nDTSTART:19700308T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=2SU\r\nEND:DAYLIGHT"
    ],
    latitude: "+0532000",
    longitude: "-0602500"
  },
  "America/Grand_Turk": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0400\r\nTZOFFSETTO:-0500\r\nTZNAME:EST\r\nDTSTART:19701101T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=11;BYDAY=1SU\r\nEND:STANDARD",
      "BEGIN:DAYLIGHT\r\nTZOFFSETFROM:-0500\r\nTZOFFSETTO:-0400\r\nTZNAME:EDT\r\nDTSTART:19700308T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=2SU\r\nEND:DAYLIGHT"
    ],
    latitude: "+0212800",
    longitude: "-0710800"
  },
  "America/Grenada": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0400\r\nTZOFFSETTO:-0400\r\nTZNAME:AST\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ]
  },
  "America/Guadeloupe": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0400\r\nTZOFFSETTO:-0400\r\nTZNAME:AST\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ]
  },
  "America/Guatemala": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0600\r\nTZOFFSETTO:-0600\r\nTZNAME:CST\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "+0143800",
    longitude: "-0903100"
  },
  "America/Guayaquil": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0500\r\nTZOFFSETTO:-0500\r\nTZNAME:-05\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "-0021000",
    longitude: "-0795000"
  },
  "America/Guyana": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0400\r\nTZOFFSETTO:-0400\r\nTZNAME:-04\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "+0064800",
    longitude: "-0581000"
  },
  "America/Halifax": {
    ics: [
      "BEGIN:DAYLIGHT\r\nTZOFFSETFROM:-0400\r\nTZOFFSETTO:-0300\r\nTZNAME:ADT\r\nDTSTART:19700308T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=2SU\r\nEND:DAYLIGHT",
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0300\r\nTZOFFSETTO:-0400\r\nTZNAME:AST\r\nDTSTART:19701101T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=11;BYDAY=1SU\r\nEND:STANDARD"
    ],
    latitude: "+0443900",
    longitude: "-0633600"
  },
  "America/Havana": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0400\r\nTZOFFSETTO:-0500\r\nTZNAME:CST\r\nDTSTART:19701101T010000\r\nRRULE:FREQ=YEARLY;BYMONTH=11;BYDAY=1SU\r\nEND:STANDARD",
      "BEGIN:DAYLIGHT\r\nTZOFFSETFROM:-0500\r\nTZOFFSETTO:-0400\r\nTZNAME:CDT\r\nDTSTART:19700308T000000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=2SU\r\nEND:DAYLIGHT"
    ],
    latitude: "+0230800",
    longitude: "-0822200"
  },
  "America/Hermosillo": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0700\r\nTZOFFSETTO:-0700\r\nTZNAME:MST\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "+0290400",
    longitude: "-1105800"
  },
  "America/Indiana/Indianapolis": {
    ics: [
      "BEGIN:DAYLIGHT\r\nTZOFFSETFROM:-0500\r\nTZOFFSETTO:-0400\r\nTZNAME:EDT\r\nDTSTART:19700308T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=2SU\r\nEND:DAYLIGHT",
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0400\r\nTZOFFSETTO:-0500\r\nTZNAME:EST\r\nDTSTART:19701101T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=11;BYDAY=1SU\r\nEND:STANDARD"
    ],
    latitude: "+0394606",
    longitude: "-0860929"
  },
  "America/Indiana/Knox": {
    ics: [
      "BEGIN:DAYLIGHT\r\nTZOFFSETFROM:-0600\r\nTZOFFSETTO:-0500\r\nTZNAME:CDT\r\nDTSTART:19700308T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=2SU\r\nEND:DAYLIGHT",
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0500\r\nTZOFFSETTO:-0600\r\nTZNAME:CST\r\nDTSTART:19701101T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=11;BYDAY=1SU\r\nEND:STANDARD"
    ],
    latitude: "+0411745",
    longitude: "-0863730"
  },
  "America/Indiana/Marengo": {
    ics: [
      "BEGIN:DAYLIGHT\r\nTZOFFSETFROM:-0500\r\nTZOFFSETTO:-0400\r\nTZNAME:EDT\r\nDTSTART:19700308T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=2SU\r\nEND:DAYLIGHT",
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0400\r\nTZOFFSETTO:-0500\r\nTZNAME:EST\r\nDTSTART:19701101T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=11;BYDAY=1SU\r\nEND:STANDARD"
    ],
    latitude: "+0382232",
    longitude: "-0862041"
  },
  "America/Indiana/Petersburg": {
    ics: [
      "BEGIN:DAYLIGHT\r\nTZOFFSETFROM:-0500\r\nTZOFFSETTO:-0400\r\nTZNAME:EDT\r\nDTSTART:19700308T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=2SU\r\nEND:DAYLIGHT",
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0400\r\nTZOFFSETTO:-0500\r\nTZNAME:EST\r\nDTSTART:19701101T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=11;BYDAY=1SU\r\nEND:STANDARD"
    ],
    latitude: "+0382931",
    longitude: "-0871643"
  },
  "America/Indiana/Tell_City": {
    ics: [
      "BEGIN:DAYLIGHT\r\nTZOFFSETFROM:-0600\r\nTZOFFSETTO:-0500\r\nTZNAME:CDT\r\nDTSTART:19700308T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=2SU\r\nEND:DAYLIGHT",
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0500\r\nTZOFFSETTO:-0600\r\nTZNAME:CST\r\nDTSTART:19701101T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=11;BYDAY=1SU\r\nEND:STANDARD"
    ],
    latitude: "+0375711",
    longitude: "-0864541"
  },
  "America/Indiana/Vevay": {
    ics: [
      "BEGIN:DAYLIGHT\r\nTZOFFSETFROM:-0500\r\nTZOFFSETTO:-0400\r\nTZNAME:EDT\r\nDTSTART:19700308T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=2SU\r\nEND:DAYLIGHT",
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0400\r\nTZOFFSETTO:-0500\r\nTZNAME:EST\r\nDTSTART:19701101T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=11;BYDAY=1SU\r\nEND:STANDARD"
    ],
    latitude: "+0384452",
    longitude: "-0850402"
  },
  "America/Indiana/Vincennes": {
    ics: [
      "BEGIN:DAYLIGHT\r\nTZOFFSETFROM:-0500\r\nTZOFFSETTO:-0400\r\nTZNAME:EDT\r\nDTSTART:19700308T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=2SU\r\nEND:DAYLIGHT",
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0400\r\nTZOFFSETTO:-0500\r\nTZNAME:EST\r\nDTSTART:19701101T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=11;BYDAY=1SU\r\nEND:STANDARD"
    ],
    latitude: "+0384038",
    longitude: "-0873143"
  },
  "America/Indiana/Winamac": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0400\r\nTZOFFSETTO:-0500\r\nTZNAME:EST\r\nDTSTART:19701101T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=11;BYDAY=1SU\r\nEND:STANDARD",
      "BEGIN:DAYLIGHT\r\nTZOFFSETFROM:-0500\r\nTZOFFSETTO:-0400\r\nTZNAME:EDT\r\nDTSTART:19700308T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=2SU\r\nEND:DAYLIGHT"
    ],
    latitude: "+0410305",
    longitude: "-0863611"
  },
  "America/Indianapolis": {
    ics: [
      "BEGIN:DAYLIGHT\r\nTZOFFSETFROM:-0500\r\nTZOFFSETTO:-0400\r\nTZNAME:EDT\r\nDTSTART:19700308T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=2SU\r\nEND:DAYLIGHT",
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0400\r\nTZOFFSETTO:-0500\r\nTZNAME:EST\r\nDTSTART:19701101T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=11;BYDAY=1SU\r\nEND:STANDARD"
    ]
  },
  "America/Inuvik": {
    ics: [
      "BEGIN:DAYLIGHT\r\nTZOFFSETFROM:-0700\r\nTZOFFSETTO:-0600\r\nTZNAME:MDT\r\nDTSTART:19700308T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=2SU\r\nEND:DAYLIGHT",
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0600\r\nTZOFFSETTO:-0700\r\nTZNAME:MST\r\nDTSTART:19701101T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=11;BYDAY=1SU\r\nEND:STANDARD"
    ],
    latitude: "+0682059",
    longitude: "-1334300"
  },
  "America/Iqaluit": {
    ics: [
      "BEGIN:DAYLIGHT\r\nTZOFFSETFROM:-0500\r\nTZOFFSETTO:-0400\r\nTZNAME:EDT\r\nDTSTART:19700308T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=2SU\r\nEND:DAYLIGHT",
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0400\r\nTZOFFSETTO:-0500\r\nTZNAME:EST\r\nDTSTART:19701101T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=11;BYDAY=1SU\r\nEND:STANDARD"
    ],
    latitude: "+0634400",
    longitude: "-0682800"
  },
  "America/Jamaica": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0500\r\nTZOFFSETTO:-0500\r\nTZNAME:EST\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "+0175805",
    longitude: "-0764736"
  },
  "America/Jujuy": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0300\r\nTZOFFSETTO:-0300\r\nTZNAME:-03\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ]
  },
  "America/Juneau": {
    ics: [
      "BEGIN:DAYLIGHT\r\nTZOFFSETFROM:-0900\r\nTZOFFSETTO:-0800\r\nTZNAME:AKDT\r\nDTSTART:19700308T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=2SU\r\nEND:DAYLIGHT",
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0800\r\nTZOFFSETTO:-0900\r\nTZNAME:AKST\r\nDTSTART:19701101T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=11;BYDAY=1SU\r\nEND:STANDARD"
    ],
    latitude: "+0581807",
    longitude: "-1342511"
  },
  "America/Kentucky/Louisville": {
    ics: [
      "BEGIN:DAYLIGHT\r\nTZOFFSETFROM:-0500\r\nTZOFFSETTO:-0400\r\nTZNAME:EDT\r\nDTSTART:19700308T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=2SU\r\nEND:DAYLIGHT",
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0400\r\nTZOFFSETTO:-0500\r\nTZNAME:EST\r\nDTSTART:19701101T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=11;BYDAY=1SU\r\nEND:STANDARD"
    ],
    latitude: "+0381515",
    longitude: "-0854534"
  },
  "America/Kentucky/Monticello": {
    ics: [
      "BEGIN:DAYLIGHT\r\nTZOFFSETFROM:-0500\r\nTZOFFSETTO:-0400\r\nTZNAME:EDT\r\nDTSTART:19700308T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=2SU\r\nEND:DAYLIGHT",
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0400\r\nTZOFFSETTO:-0500\r\nTZNAME:EST\r\nDTSTART:19701101T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=11;BYDAY=1SU\r\nEND:STANDARD"
    ],
    latitude: "+0364947",
    longitude: "-0845057"
  },
  "America/Knox_IN": {
    ics: [
      "BEGIN:DAYLIGHT\r\nTZOFFSETFROM:-0600\r\nTZOFFSETTO:-0500\r\nTZNAME:CDT\r\nDTSTART:19700308T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=2SU\r\nEND:DAYLIGHT",
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0500\r\nTZOFFSETTO:-0600\r\nTZNAME:CST\r\nDTSTART:19701101T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=11;BYDAY=1SU\r\nEND:STANDARD"
    ]
  },
  "America/Kralendijk": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0400\r\nTZOFFSETTO:-0400\r\nTZNAME:AST\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ]
  },
  "America/La_Paz": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0400\r\nTZOFFSETTO:-0400\r\nTZNAME:-04\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "-0163000",
    longitude: "-0680900"
  },
  "America/Lima": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0500\r\nTZOFFSETTO:-0500\r\nTZNAME:-05\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "-0120300",
    longitude: "-0770300"
  },
  "America/Los_Angeles": {
    ics: [
      "BEGIN:DAYLIGHT\r\nTZOFFSETFROM:-0800\r\nTZOFFSETTO:-0700\r\nTZNAME:PDT\r\nDTSTART:19700308T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=2SU\r\nEND:DAYLIGHT",
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0700\r\nTZOFFSETTO:-0800\r\nTZNAME:PST\r\nDTSTART:19701101T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=11;BYDAY=1SU\r\nEND:STANDARD"
    ],
    latitude: "+0340308",
    longitude: "-1181434"
  },
  "America/Louisville": {
    ics: [
      "BEGIN:DAYLIGHT\r\nTZOFFSETFROM:-0500\r\nTZOFFSETTO:-0400\r\nTZNAME:EDT\r\nDTSTART:19700308T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=2SU\r\nEND:DAYLIGHT",
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0400\r\nTZOFFSETTO:-0500\r\nTZNAME:EST\r\nDTSTART:19701101T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=11;BYDAY=1SU\r\nEND:STANDARD"
    ]
  },
  "America/Lower_Princes": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0400\r\nTZOFFSETTO:-0400\r\nTZNAME:AST\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ]
  },
  "America/Maceio": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0300\r\nTZOFFSETTO:-0300\r\nTZNAME:-03\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "-0094000",
    longitude: "-0354300"
  },
  "America/Managua": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0600\r\nTZOFFSETTO:-0600\r\nTZNAME:CST\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "+0120900",
    longitude: "-0861700"
  },
  "America/Manaus": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0400\r\nTZOFFSETTO:-0400\r\nTZNAME:-04\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "-0030800",
    longitude: "-0600100"
  },
  "America/Marigot": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0400\r\nTZOFFSETTO:-0400\r\nTZNAME:AST\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ]
  },
  "America/Martinique": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0400\r\nTZOFFSETTO:-0400\r\nTZNAME:AST\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "+0143600",
    longitude: "-0610500"
  },
  "America/Matamoros": {
    ics: [
      "BEGIN:DAYLIGHT\r\nTZOFFSETFROM:-0600\r\nTZOFFSETTO:-0500\r\nTZNAME:CDT\r\nDTSTART:19700308T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=2SU\r\nEND:DAYLIGHT",
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0500\r\nTZOFFSETTO:-0600\r\nTZNAME:CST\r\nDTSTART:19701101T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=11;BYDAY=1SU\r\nEND:STANDARD"
    ],
    latitude: "+0255000",
    longitude: "-0973000"
  },
  "America/Mazatlan": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0700\r\nTZOFFSETTO:-0700\r\nTZNAME:MST\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "+0231300",
    longitude: "-1062500"
  },
  "America/Mendoza": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0300\r\nTZOFFSETTO:-0300\r\nTZNAME:-03\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ]
  },
  "America/Menominee": {
    ics: [
      "BEGIN:DAYLIGHT\r\nTZOFFSETFROM:-0600\r\nTZOFFSETTO:-0500\r\nTZNAME:CDT\r\nDTSTART:19700308T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=2SU\r\nEND:DAYLIGHT",
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0500\r\nTZOFFSETTO:-0600\r\nTZNAME:CST\r\nDTSTART:19701101T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=11;BYDAY=1SU\r\nEND:STANDARD"
    ],
    latitude: "+0450628",
    longitude: "-0873651"
  },
  "America/Merida": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0600\r\nTZOFFSETTO:-0600\r\nTZNAME:CST\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "+0205800",
    longitude: "-0893700"
  },
  "America/Metlakatla": {
    ics: [
      "BEGIN:DAYLIGHT\r\nTZOFFSETFROM:-0900\r\nTZOFFSETTO:-0800\r\nTZNAME:AKDT\r\nDTSTART:19700308T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=2SU\r\nEND:DAYLIGHT",
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0800\r\nTZOFFSETTO:-0900\r\nTZNAME:AKST\r\nDTSTART:19701101T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=11;BYDAY=1SU\r\nEND:STANDARD"
    ],
    latitude: "+0550737",
    longitude: "-1313435"
  },
  "America/Mexico_City": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0600\r\nTZOFFSETTO:-0600\r\nTZNAME:CST\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "+0192400",
    longitude: "-0990900"
  },
  "America/Miquelon": {
    ics: [
      "BEGIN:DAYLIGHT\r\nTZOFFSETFROM:-0300\r\nTZOFFSETTO:-0200\r\nTZNAME:-02\r\nDTSTART:19700308T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=2SU\r\nEND:DAYLIGHT",
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0200\r\nTZOFFSETTO:-0300\r\nTZNAME:-03\r\nDTSTART:19701101T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=11;BYDAY=1SU\r\nEND:STANDARD"
    ],
    latitude: "+0470300",
    longitude: "-0562000"
  },
  "America/Moncton": {
    ics: [
      "BEGIN:DAYLIGHT\r\nTZOFFSETFROM:-0400\r\nTZOFFSETTO:-0300\r\nTZNAME:ADT\r\nDTSTART:19700308T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=2SU\r\nEND:DAYLIGHT",
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0300\r\nTZOFFSETTO:-0400\r\nTZNAME:AST\r\nDTSTART:19701101T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=11;BYDAY=1SU\r\nEND:STANDARD"
    ],
    latitude: "+0460600",
    longitude: "-0644700"
  },
  "America/Monterrey": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0600\r\nTZOFFSETTO:-0600\r\nTZNAME:CST\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "+0254000",
    longitude: "-1001900"
  },
  "America/Montevideo": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0300\r\nTZOFFSETTO:-0300\r\nTZNAME:-03\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "-0345433",
    longitude: "-0561245"
  },
  "America/Montreal": {
    ics: [
      "BEGIN:DAYLIGHT\r\nTZOFFSETFROM:-0500\r\nTZOFFSETTO:-0400\r\nTZNAME:EDT\r\nDTSTART:19700308T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=2SU\r\nEND:DAYLIGHT",
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0400\r\nTZOFFSETTO:-0500\r\nTZNAME:EST\r\nDTSTART:19701101T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=11;BYDAY=1SU\r\nEND:STANDARD"
    ]
  },
  "America/Montserrat": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0400\r\nTZOFFSETTO:-0400\r\nTZNAME:AST\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ]
  },
  "America/Nassau": {
    ics: [
      "BEGIN:DAYLIGHT\r\nTZOFFSETFROM:-0500\r\nTZOFFSETTO:-0400\r\nTZNAME:EDT\r\nDTSTART:19700308T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=2SU\r\nEND:DAYLIGHT",
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0400\r\nTZOFFSETTO:-0500\r\nTZNAME:EST\r\nDTSTART:19701101T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=11;BYDAY=1SU\r\nEND:STANDARD"
    ]
  },
  "America/New_York": {
    ics: [
      "BEGIN:DAYLIGHT\r\nTZOFFSETFROM:-0500\r\nTZOFFSETTO:-0400\r\nTZNAME:EDT\r\nDTSTART:19700308T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=2SU\r\nEND:DAYLIGHT",
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0400\r\nTZOFFSETTO:-0500\r\nTZNAME:EST\r\nDTSTART:19701101T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=11;BYDAY=1SU\r\nEND:STANDARD"
    ],
    latitude: "+0404251",
    longitude: "-0740023"
  },
  "America/Nipigon": {
    ics: [
      "BEGIN:DAYLIGHT\r\nTZOFFSETFROM:-0500\r\nTZOFFSETTO:-0400\r\nTZNAME:EDT\r\nDTSTART:19700308T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=2SU\r\nEND:DAYLIGHT",
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0400\r\nTZOFFSETTO:-0500\r\nTZNAME:EST\r\nDTSTART:19701101T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=11;BYDAY=1SU\r\nEND:STANDARD"
    ]
  },
  "America/Nome": {
    ics: [
      "BEGIN:DAYLIGHT\r\nTZOFFSETFROM:-0900\r\nTZOFFSETTO:-0800\r\nTZNAME:AKDT\r\nDTSTART:19700308T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=2SU\r\nEND:DAYLIGHT",
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0800\r\nTZOFFSETTO:-0900\r\nTZNAME:AKST\r\nDTSTART:19701101T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=11;BYDAY=1SU\r\nEND:STANDARD"
    ],
    latitude: "+0643004",
    longitude: "-1652423"
  },
  "America/Noronha": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0200\r\nTZOFFSETTO:-0200\r\nTZNAME:-02\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "-0035100",
    longitude: "-0322500"
  },
  "America/North_Dakota/Beulah": {
    ics: [
      "BEGIN:DAYLIGHT\r\nTZOFFSETFROM:-0600\r\nTZOFFSETTO:-0500\r\nTZNAME:CDT\r\nDTSTART:19700308T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=2SU\r\nEND:DAYLIGHT",
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0500\r\nTZOFFSETTO:-0600\r\nTZNAME:CST\r\nDTSTART:19701101T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=11;BYDAY=1SU\r\nEND:STANDARD"
    ],
    latitude: "+0471551",
    longitude: "-1014640"
  },
  "America/North_Dakota/Center": {
    ics: [
      "BEGIN:DAYLIGHT\r\nTZOFFSETFROM:-0600\r\nTZOFFSETTO:-0500\r\nTZNAME:CDT\r\nDTSTART:19700308T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=2SU\r\nEND:DAYLIGHT",
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0500\r\nTZOFFSETTO:-0600\r\nTZNAME:CST\r\nDTSTART:19701101T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=11;BYDAY=1SU\r\nEND:STANDARD"
    ],
    latitude: "+0470659",
    longitude: "-1011757"
  },
  "America/North_Dakota/New_Salem": {
    ics: [
      "BEGIN:DAYLIGHT\r\nTZOFFSETFROM:-0600\r\nTZOFFSETTO:-0500\r\nTZNAME:CDT\r\nDTSTART:19700308T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=2SU\r\nEND:DAYLIGHT",
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0500\r\nTZOFFSETTO:-0600\r\nTZNAME:CST\r\nDTSTART:19701101T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=11;BYDAY=1SU\r\nEND:STANDARD"
    ],
    latitude: "+0465042",
    longitude: "-1012439"
  },
  "America/Nuuk": {
    ics: [
      "BEGIN:DAYLIGHT\r\nTZOFFSETFROM:-0200\r\nTZOFFSETTO:-0100\r\nTZNAME:-01\r\nDTSTART:19700328T230000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=-1SA\r\nEND:DAYLIGHT",
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0100\r\nTZOFFSETTO:-0200\r\nTZNAME:-02\r\nDTSTART:19701025T000000\r\nRRULE:FREQ=YEARLY;BYMONTH=10;BYDAY=-1SU\r\nEND:STANDARD"
    ],
    latitude: "+0641100",
    longitude: "-0514400"
  },
  "America/Ojinaga": {
    ics: [
      "BEGIN:DAYLIGHT\r\nTZOFFSETFROM:-0600\r\nTZOFFSETTO:-0500\r\nTZNAME:CDT\r\nDTSTART:19700308T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=2SU\r\nEND:DAYLIGHT",
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0500\r\nTZOFFSETTO:-0600\r\nTZNAME:CST\r\nDTSTART:19701101T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=11;BYDAY=1SU\r\nEND:STANDARD"
    ],
    latitude: "+0293400",
    longitude: "-1042500"
  },
  "America/Panama": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0500\r\nTZOFFSETTO:-0500\r\nTZNAME:EST\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "+0085800",
    longitude: "-0793200"
  },
  "America/Pangnirtung": {
    ics: [
      "BEGIN:DAYLIGHT\r\nTZOFFSETFROM:-0500\r\nTZOFFSETTO:-0400\r\nTZNAME:EDT\r\nDTSTART:19700308T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=2SU\r\nEND:DAYLIGHT",
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0400\r\nTZOFFSETTO:-0500\r\nTZNAME:EST\r\nDTSTART:19701101T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=11;BYDAY=1SU\r\nEND:STANDARD"
    ]
  },
  "America/Paramaribo": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0300\r\nTZOFFSETTO:-0300\r\nTZNAME:-03\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "+0055000",
    longitude: "-0551000"
  },
  "America/Phoenix": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0700\r\nTZOFFSETTO:-0700\r\nTZNAME:MST\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "+0332654",
    longitude: "-1120424"
  },
  "America/Port-au-Prince": {
    ics: [
      "BEGIN:DAYLIGHT\r\nTZOFFSETFROM:-0500\r\nTZOFFSETTO:-0400\r\nTZNAME:EDT\r\nDTSTART:19700308T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=2SU\r\nEND:DAYLIGHT",
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0400\r\nTZOFFSETTO:-0500\r\nTZNAME:EST\r\nDTSTART:19701101T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=11;BYDAY=1SU\r\nEND:STANDARD"
    ],
    latitude: "+0183200",
    longitude: "-0722000"
  },
  "America/Port_of_Spain": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0400\r\nTZOFFSETTO:-0400\r\nTZNAME:AST\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ]
  },
  "America/Porto_Acre": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0500\r\nTZOFFSETTO:-0500\r\nTZNAME:-05\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ]
  },
  "America/Porto_Velho": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0400\r\nTZOFFSETTO:-0400\r\nTZNAME:-04\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "-0084600",
    longitude: "-0635400"
  },
  "America/Puerto_Rico": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0400\r\nTZOFFSETTO:-0400\r\nTZNAME:AST\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "+0182806",
    longitude: "-0660622"
  },
  "America/Punta_Arenas": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0300\r\nTZOFFSETTO:-0300\r\nTZNAME:-03\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "-0530900",
    longitude: "-0705500"
  },
  "America/Rainy_River": {
    ics: [
      "BEGIN:DAYLIGHT\r\nTZOFFSETFROM:-0600\r\nTZOFFSETTO:-0500\r\nTZNAME:CDT\r\nDTSTART:19700308T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=2SU\r\nEND:DAYLIGHT",
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0500\r\nTZOFFSETTO:-0600\r\nTZNAME:CST\r\nDTSTART:19701101T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=11;BYDAY=1SU\r\nEND:STANDARD"
    ]
  },
  "America/Rankin_Inlet": {
    ics: [
      "BEGIN:DAYLIGHT\r\nTZOFFSETFROM:-0600\r\nTZOFFSETTO:-0500\r\nTZNAME:CDT\r\nDTSTART:19700308T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=2SU\r\nEND:DAYLIGHT",
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0500\r\nTZOFFSETTO:-0600\r\nTZNAME:CST\r\nDTSTART:19701101T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=11;BYDAY=1SU\r\nEND:STANDARD"
    ],
    latitude: "+0624900",
    longitude: "-0920459"
  },
  "America/Recife": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0300\r\nTZOFFSETTO:-0300\r\nTZNAME:-03\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "-0080300",
    longitude: "-0345400"
  },
  "America/Regina": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0600\r\nTZOFFSETTO:-0600\r\nTZNAME:CST\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "+0502400",
    longitude: "-1043900"
  },
  "America/Resolute": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0500\r\nTZOFFSETTO:-0600\r\nTZNAME:CST\r\nDTSTART:19701101T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=11;BYDAY=1SU\r\nEND:STANDARD",
      "BEGIN:DAYLIGHT\r\nTZOFFSETFROM:-0600\r\nTZOFFSETTO:-0500\r\nTZNAME:CDT\r\nDTSTART:19700308T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=2SU\r\nEND:DAYLIGHT"
    ],
    latitude: "+0744144",
    longitude: "-0944945"
  },
  "America/Rio_Branco": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0500\r\nTZOFFSETTO:-0500\r\nTZNAME:-05\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "-0095800",
    longitude: "-0674800"
  },
  "America/Rosario": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0300\r\nTZOFFSETTO:-0300\r\nTZNAME:-03\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ]
  },
  "America/Santa_Isabel": {
    ics: [
      "BEGIN:DAYLIGHT\r\nTZOFFSETFROM:-0800\r\nTZOFFSETTO:-0700\r\nTZNAME:PDT\r\nDTSTART:19700308T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=2SU\r\nEND:DAYLIGHT",
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0700\r\nTZOFFSETTO:-0800\r\nTZNAME:PST\r\nDTSTART:19701101T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=11;BYDAY=1SU\r\nEND:STANDARD"
    ]
  },
  "America/Santarem": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0300\r\nTZOFFSETTO:-0300\r\nTZNAME:-03\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "-0022600",
    longitude: "-0545200"
  },
  "America/Santiago": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0300\r\nTZOFFSETTO:-0400\r\nTZNAME:-04\r\nDTSTART:19700405T000000\r\nRRULE:FREQ=YEARLY;BYMONTH=4;BYDAY=1SU\r\nEND:STANDARD",
      "BEGIN:DAYLIGHT\r\nTZOFFSETFROM:-0400\r\nTZOFFSETTO:-0300\r\nTZNAME:-03\r\nDTSTART:19700906T000000\r\nRRULE:FREQ=YEARLY;BYMONTH=9;BYDAY=1SU\r\nEND:DAYLIGHT"
    ],
    latitude: "-0332700",
    longitude: "-0704000"
  },
  "America/Santo_Domingo": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0400\r\nTZOFFSETTO:-0400\r\nTZNAME:AST\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "+0182800",
    longitude: "-0695400"
  },
  "America/Sao_Paulo": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0300\r\nTZOFFSETTO:-0300\r\nTZNAME:-03\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "-0233200",
    longitude: "-0463700"
  },
  "America/Scoresbysund": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0100\r\nTZOFFSETTO:-0200\r\nTZNAME:-02\r\nDTSTART:19701025T000000\r\nRRULE:FREQ=YEARLY;BYMONTH=10;BYDAY=-1SU\r\nEND:STANDARD",
      "BEGIN:DAYLIGHT\r\nTZOFFSETFROM:-0200\r\nTZOFFSETTO:-0100\r\nTZNAME:-01\r\nDTSTART:19700328T230000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=-1SA\r\nEND:DAYLIGHT"
    ],
    latitude: "+0702900",
    longitude: "-0215800"
  },
  "America/Shiprock": {
    ics: [
      "BEGIN:DAYLIGHT\r\nTZOFFSETFROM:-0700\r\nTZOFFSETTO:-0600\r\nTZNAME:MDT\r\nDTSTART:19700308T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=2SU\r\nEND:DAYLIGHT",
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0600\r\nTZOFFSETTO:-0700\r\nTZNAME:MST\r\nDTSTART:19701101T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=11;BYDAY=1SU\r\nEND:STANDARD"
    ]
  },
  "America/Sitka": {
    ics: [
      "BEGIN:DAYLIGHT\r\nTZOFFSETFROM:-0900\r\nTZOFFSETTO:-0800\r\nTZNAME:AKDT\r\nDTSTART:19700308T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=2SU\r\nEND:DAYLIGHT",
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0800\r\nTZOFFSETTO:-0900\r\nTZNAME:AKST\r\nDTSTART:19701101T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=11;BYDAY=1SU\r\nEND:STANDARD"
    ],
    latitude: "+0571035",
    longitude: "-1351807"
  },
  "America/St_Barthelemy": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0400\r\nTZOFFSETTO:-0400\r\nTZNAME:AST\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ]
  },
  "America/St_Johns": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0230\r\nTZOFFSETTO:-0330\r\nTZNAME:NST\r\nDTSTART:19701101T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=11;BYDAY=1SU\r\nEND:STANDARD",
      "BEGIN:DAYLIGHT\r\nTZOFFSETFROM:-0330\r\nTZOFFSETTO:-0230\r\nTZNAME:NDT\r\nDTSTART:19700308T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=2SU\r\nEND:DAYLIGHT"
    ],
    latitude: "+0473400",
    longitude: "-0524300"
  },
  "America/St_Kitts": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0400\r\nTZOFFSETTO:-0400\r\nTZNAME:AST\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ]
  },
  "America/St_Lucia": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0400\r\nTZOFFSETTO:-0400\r\nTZNAME:AST\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ]
  },
  "America/St_Thomas": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0400\r\nTZOFFSETTO:-0400\r\nTZNAME:AST\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ]
  },
  "America/St_Vincent": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0400\r\nTZOFFSETTO:-0400\r\nTZNAME:AST\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ]
  },
  "America/Swift_Current": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0600\r\nTZOFFSETTO:-0600\r\nTZNAME:CST\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "+0501700",
    longitude: "-1075000"
  },
  "America/Tegucigalpa": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0600\r\nTZOFFSETTO:-0600\r\nTZNAME:CST\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "+0140600",
    longitude: "-0871300"
  },
  "America/Thule": {
    ics: [
      "BEGIN:DAYLIGHT\r\nTZOFFSETFROM:-0400\r\nTZOFFSETTO:-0300\r\nTZNAME:ADT\r\nDTSTART:19700308T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=2SU\r\nEND:DAYLIGHT",
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0300\r\nTZOFFSETTO:-0400\r\nTZNAME:AST\r\nDTSTART:19701101T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=11;BYDAY=1SU\r\nEND:STANDARD"
    ],
    latitude: "+0763400",
    longitude: "-0684700"
  },
  "America/Thunder_Bay": {
    ics: [
      "BEGIN:DAYLIGHT\r\nTZOFFSETFROM:-0500\r\nTZOFFSETTO:-0400\r\nTZNAME:EDT\r\nDTSTART:19700308T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=2SU\r\nEND:DAYLIGHT",
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0400\r\nTZOFFSETTO:-0500\r\nTZNAME:EST\r\nDTSTART:19701101T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=11;BYDAY=1SU\r\nEND:STANDARD"
    ]
  },
  "America/Tijuana": {
    ics: [
      "BEGIN:DAYLIGHT\r\nTZOFFSETFROM:-0800\r\nTZOFFSETTO:-0700\r\nTZNAME:PDT\r\nDTSTART:19700308T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=2SU\r\nEND:DAYLIGHT",
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0700\r\nTZOFFSETTO:-0800\r\nTZNAME:PST\r\nDTSTART:19701101T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=11;BYDAY=1SU\r\nEND:STANDARD"
    ],
    latitude: "+0323200",
    longitude: "-1170100"
  },
  "America/Toronto": {
    ics: [
      "BEGIN:DAYLIGHT\r\nTZOFFSETFROM:-0500\r\nTZOFFSETTO:-0400\r\nTZNAME:EDT\r\nDTSTART:19700308T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=2SU\r\nEND:DAYLIGHT",
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0400\r\nTZOFFSETTO:-0500\r\nTZNAME:EST\r\nDTSTART:19701101T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=11;BYDAY=1SU\r\nEND:STANDARD"
    ],
    latitude: "+0433900",
    longitude: "-0792300"
  },
  "America/Tortola": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0400\r\nTZOFFSETTO:-0400\r\nTZNAME:AST\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ]
  },
  "America/Vancouver": {
    ics: [
      "BEGIN:DAYLIGHT\r\nTZOFFSETFROM:-0800\r\nTZOFFSETTO:-0700\r\nTZNAME:PDT\r\nDTSTART:19700308T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=2SU\r\nEND:DAYLIGHT",
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0700\r\nTZOFFSETTO:-0800\r\nTZNAME:PST\r\nDTSTART:19701101T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=11;BYDAY=1SU\r\nEND:STANDARD"
    ],
    latitude: "+0491600",
    longitude: "-1230700"
  },
  "America/Virgin": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0400\r\nTZOFFSETTO:-0400\r\nTZNAME:AST\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ]
  },
  "America/Whitehorse": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0700\r\nTZOFFSETTO:-0700\r\nTZNAME:MST\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "+0604300",
    longitude: "-1350300"
  },
  "America/Winnipeg": {
    ics: [
      "BEGIN:DAYLIGHT\r\nTZOFFSETFROM:-0600\r\nTZOFFSETTO:-0500\r\nTZNAME:CDT\r\nDTSTART:19700308T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=2SU\r\nEND:DAYLIGHT",
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0500\r\nTZOFFSETTO:-0600\r\nTZNAME:CST\r\nDTSTART:19701101T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=11;BYDAY=1SU\r\nEND:STANDARD"
    ],
    latitude: "+0495300",
    longitude: "-0970900"
  },
  "America/Yakutat": {
    ics: [
      "BEGIN:DAYLIGHT\r\nTZOFFSETFROM:-0900\r\nTZOFFSETTO:-0800\r\nTZNAME:AKDT\r\nDTSTART:19700308T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=2SU\r\nEND:DAYLIGHT",
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0800\r\nTZOFFSETTO:-0900\r\nTZNAME:AKST\r\nDTSTART:19701101T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=11;BYDAY=1SU\r\nEND:STANDARD"
    ],
    latitude: "+0593249",
    longitude: "-1394338"
  },
  "America/Yellowknife": {
    ics: [
      "BEGIN:DAYLIGHT\r\nTZOFFSETFROM:-0700\r\nTZOFFSETTO:-0600\r\nTZNAME:MDT\r\nDTSTART:19700308T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=2SU\r\nEND:DAYLIGHT",
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0600\r\nTZOFFSETTO:-0700\r\nTZNAME:MST\r\nDTSTART:19701101T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=11;BYDAY=1SU\r\nEND:STANDARD"
    ]
  },
  "Antarctica/Casey": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0800\r\nTZOFFSETTO:+0800\r\nTZNAME:+08\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "-0661700",
    longitude: "+1103100"
  },
  "Antarctica/Davis": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0700\r\nTZOFFSETTO:+0700\r\nTZNAME:+07\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "-0683500",
    longitude: "+0775800"
  },
  "Antarctica/DumontDUrville": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+1000\r\nTZOFFSETTO:+1000\r\nTZNAME:+10\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ]
  },
  "Antarctica/Macquarie": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+1100\r\nTZOFFSETTO:+1000\r\nTZNAME:AEST\r\nDTSTART:19700405T030000\r\nRRULE:FREQ=YEARLY;BYMONTH=4;BYDAY=1SU\r\nEND:STANDARD",
      "BEGIN:DAYLIGHT\r\nTZOFFSETFROM:+1000\r\nTZOFFSETTO:+1100\r\nTZNAME:AEDT\r\nDTSTART:19701004T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=10;BYDAY=1SU\r\nEND:DAYLIGHT"
    ],
    latitude: "-0543000",
    longitude: "+1585700"
  },
  "Antarctica/Mawson": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0500\r\nTZOFFSETTO:+0500\r\nTZNAME:+05\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "-0673600",
    longitude: "+0625300"
  },
  "Antarctica/McMurdo": {
    ics: [
      "BEGIN:DAYLIGHT\r\nTZOFFSETFROM:+1200\r\nTZOFFSETTO:+1300\r\nTZNAME:NZDT\r\nDTSTART:19700927T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=9;BYDAY=-1SU\r\nEND:DAYLIGHT",
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+1300\r\nTZOFFSETTO:+1200\r\nTZNAME:NZST\r\nDTSTART:19700405T030000\r\nRRULE:FREQ=YEARLY;BYMONTH=4;BYDAY=1SU\r\nEND:STANDARD"
    ]
  },
  "Antarctica/Palmer": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0300\r\nTZOFFSETTO:-0300\r\nTZNAME:-03\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "-0644800",
    longitude: "-0640600"
  },
  "Antarctica/Rothera": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0300\r\nTZOFFSETTO:-0300\r\nTZNAME:-03\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "-0673400",
    longitude: "-0680800"
  },
  "Antarctica/South_Pole": {
    ics: [
      "BEGIN:DAYLIGHT\r\nTZOFFSETFROM:+1200\r\nTZOFFSETTO:+1300\r\nTZNAME:NZDT\r\nDTSTART:19700927T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=9;BYDAY=-1SU\r\nEND:DAYLIGHT",
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+1300\r\nTZOFFSETTO:+1200\r\nTZNAME:NZST\r\nDTSTART:19700405T030000\r\nRRULE:FREQ=YEARLY;BYMONTH=4;BYDAY=1SU\r\nEND:STANDARD"
    ]
  },
  "Antarctica/Syowa": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0300\r\nTZOFFSETTO:+0300\r\nTZNAME:+03\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ]
  },
  "Antarctica/Troll": {
    ics: [
      "BEGIN:DAYLIGHT\r\nTZOFFSETFROM:+0000\r\nTZOFFSETTO:+0200\r\nTZNAME:+02\r\nDTSTART:19700329T010000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=-1SU\r\nEND:DAYLIGHT",
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0200\r\nTZOFFSETTO:+0000\r\nTZNAME:+00\r\nDTSTART:19701025T030000\r\nRRULE:FREQ=YEARLY;BYMONTH=10;BYDAY=-1SU\r\nEND:STANDARD"
    ],
    latitude: "-0720041",
    longitude: "+0023206"
  },
  "Antarctica/Vostok": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0500\r\nTZOFFSETTO:+0500\r\nTZNAME:+05\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "-0782400",
    longitude: "+1065400"
  },
  "Arctic/Longyearbyen": {
    ics: [
      "BEGIN:DAYLIGHT\r\nTZOFFSETFROM:+0100\r\nTZOFFSETTO:+0200\r\nTZNAME:CEST\r\nDTSTART:19700329T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=-1SU\r\nEND:DAYLIGHT",
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0200\r\nTZOFFSETTO:+0100\r\nTZNAME:CET\r\nDTSTART:19701025T030000\r\nRRULE:FREQ=YEARLY;BYMONTH=10;BYDAY=-1SU\r\nEND:STANDARD"
    ]
  },
  "Asia/Aden": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0300\r\nTZOFFSETTO:+0300\r\nTZNAME:+03\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ]
  },
  "Asia/Almaty": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0500\r\nTZOFFSETTO:+0500\r\nTZNAME:+05\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "+0431500",
    longitude: "+0765700"
  },
  "Asia/Amman": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0300\r\nTZOFFSETTO:+0300\r\nTZNAME:+03\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "+0315700",
    longitude: "+0355600"
  },
  "Asia/Anadyr": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+1200\r\nTZOFFSETTO:+1200\r\nTZNAME:+12\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "+0644500",
    longitude: "+1772900"
  },
  "Asia/Aqtau": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0500\r\nTZOFFSETTO:+0500\r\nTZNAME:+05\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "+0443100",
    longitude: "+0501600"
  },
  "Asia/Aqtobe": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0500\r\nTZOFFSETTO:+0500\r\nTZNAME:+05\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "+0501700",
    longitude: "+0571000"
  },
  "Asia/Ashgabat": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0500\r\nTZOFFSETTO:+0500\r\nTZNAME:+05\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "+0375700",
    longitude: "+0582300"
  },
  "Asia/Ashkhabad": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0500\r\nTZOFFSETTO:+0500\r\nTZNAME:+05\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ]
  },
  "Asia/Atyrau": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0500\r\nTZOFFSETTO:+0500\r\nTZNAME:+05\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "+0470700",
    longitude: "+0515600"
  },
  "Asia/Baghdad": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0300\r\nTZOFFSETTO:+0300\r\nTZNAME:+03\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "+0332100",
    longitude: "+0442500"
  },
  "Asia/Bahrain": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0300\r\nTZOFFSETTO:+0300\r\nTZNAME:+03\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ]
  },
  "Asia/Baku": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0400\r\nTZOFFSETTO:+0400\r\nTZNAME:+04\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "+0402300",
    longitude: "+0495100"
  },
  "Asia/Bangkok": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0700\r\nTZOFFSETTO:+0700\r\nTZNAME:+07\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "+0134500",
    longitude: "+1003100"
  },
  "Asia/Barnaul": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0700\r\nTZOFFSETTO:+0700\r\nTZNAME:+07\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "+0532200",
    longitude: "+0834500"
  },
  "Asia/Beirut": {
    ics: [
      "BEGIN:DAYLIGHT\r\nTZOFFSETFROM:+0200\r\nTZOFFSETTO:+0300\r\nTZNAME:EEST\r\nDTSTART:19700329T000000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=-1SU\r\nEND:DAYLIGHT",
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0300\r\nTZOFFSETTO:+0200\r\nTZNAME:EET\r\nDTSTART:19701025T000000\r\nRRULE:FREQ=YEARLY;BYMONTH=10;BYDAY=-1SU\r\nEND:STANDARD"
    ],
    latitude: "+0335300",
    longitude: "+0353000"
  },
  "Asia/Bishkek": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0600\r\nTZOFFSETTO:+0600\r\nTZNAME:+06\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "+0425400",
    longitude: "+0743600"
  },
  "Asia/Brunei": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0800\r\nTZOFFSETTO:+0800\r\nTZNAME:+08\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ]
  },
  "Asia/Calcutta": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0530\r\nTZOFFSETTO:+0530\r\nTZNAME:IST\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ]
  },
  "Asia/Chita": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0900\r\nTZOFFSETTO:+0900\r\nTZNAME:+09\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "+0520300",
    longitude: "+1132800"
  },
  "Asia/Choibalsan": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0800\r\nTZOFFSETTO:+0800\r\nTZNAME:+08\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "+0480400",
    longitude: "+1143000"
  },
  "Asia/Chongqing": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0800\r\nTZOFFSETTO:+0800\r\nTZNAME:CST\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ]
  },
  "Asia/Chungking": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0800\r\nTZOFFSETTO:+0800\r\nTZNAME:CST\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ]
  },
  "Asia/Colombo": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0530\r\nTZOFFSETTO:+0530\r\nTZNAME:+0530\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "+0065600",
    longitude: "+0795100"
  },
  "Asia/Dacca": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0600\r\nTZOFFSETTO:+0600\r\nTZNAME:+06\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ]
  },
  "Asia/Damascus": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0300\r\nTZOFFSETTO:+0300\r\nTZNAME:+03\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "+0333000",
    longitude: "+0361800"
  },
  "Asia/Dhaka": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0600\r\nTZOFFSETTO:+0600\r\nTZNAME:+06\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "+0234300",
    longitude: "+0902500"
  },
  "Asia/Dili": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0900\r\nTZOFFSETTO:+0900\r\nTZNAME:+09\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "-0083300",
    longitude: "+1253500"
  },
  "Asia/Dubai": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0400\r\nTZOFFSETTO:+0400\r\nTZNAME:+04\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "+0251800",
    longitude: "+0551800"
  },
  "Asia/Dushanbe": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0500\r\nTZOFFSETTO:+0500\r\nTZNAME:+05\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "+0383500",
    longitude: "+0684800"
  },
  "Asia/Famagusta": {
    ics: [
      "BEGIN:DAYLIGHT\r\nTZOFFSETFROM:+0200\r\nTZOFFSETTO:+0300\r\nTZNAME:EEST\r\nDTSTART:19700329T030000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=-1SU\r\nEND:DAYLIGHT",
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0300\r\nTZOFFSETTO:+0200\r\nTZNAME:EET\r\nDTSTART:19701025T040000\r\nRRULE:FREQ=YEARLY;BYMONTH=10;BYDAY=-1SU\r\nEND:STANDARD"
    ],
    latitude: "+0350700",
    longitude: "+0335700"
  },
  "Asia/Gaza": {
    ics: [
      "BEGIN:DAYLIGHT\r\nTZOFFSETFROM:+0200\r\nTZOFFSETTO:+0300\r\nTZNAME:EEST\r\nDTSTART:19700328T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=-1SA\r\nEND:DAYLIGHT",
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0300\r\nTZOFFSETTO:+0200\r\nTZNAME:EET\r\nDTSTART:19701031T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=10;BYDAY=-1SA\r\nEND:STANDARD"
    ],
    latitude: "+0313000",
    longitude: "+0342800"
  },
  "Asia/Harbin": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0800\r\nTZOFFSETTO:+0800\r\nTZNAME:CST\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ]
  },
  "Asia/Hebron": {
    ics: [
      "BEGIN:DAYLIGHT\r\nTZOFFSETFROM:+0200\r\nTZOFFSETTO:+0300\r\nTZNAME:EEST\r\nDTSTART:19700328T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=-1SA\r\nEND:DAYLIGHT",
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0300\r\nTZOFFSETTO:+0200\r\nTZNAME:EET\r\nDTSTART:19701031T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=10;BYDAY=-1SA\r\nEND:STANDARD"
    ],
    latitude: "+0313200",
    longitude: "+0350542"
  },
  "Asia/Ho_Chi_Minh": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0700\r\nTZOFFSETTO:+0700\r\nTZNAME:+07\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "+0104500",
    longitude: "+1064000"
  },
  "Asia/Hong_Kong": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0800\r\nTZOFFSETTO:+0800\r\nTZNAME:HKT\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "+0221700",
    longitude: "+1140900"
  },
  "Asia/Hovd": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0700\r\nTZOFFSETTO:+0700\r\nTZNAME:+07\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "+0480100",
    longitude: "+0913900"
  },
  "Asia/Irkutsk": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0800\r\nTZOFFSETTO:+0800\r\nTZNAME:+08\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "+0521600",
    longitude: "+1042000"
  },
  "Asia/Istanbul": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0300\r\nTZOFFSETTO:+0300\r\nTZNAME:+03\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ]
  },
  "Asia/Jakarta": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0700\r\nTZOFFSETTO:+0700\r\nTZNAME:WIB\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "-0061000",
    longitude: "+1064800"
  },
  "Asia/Jayapura": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0900\r\nTZOFFSETTO:+0900\r\nTZNAME:WIT\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "-0023200",
    longitude: "+1404200"
  },
  "Asia/Jerusalem": {
    ics: [
      "BEGIN:DAYLIGHT\r\nTZOFFSETFROM:+0200\r\nTZOFFSETTO:+0300\r\nTZNAME:IDT\r\nDTSTART:19700327T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=-1FR\r\nEND:DAYLIGHT",
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0300\r\nTZOFFSETTO:+0200\r\nTZNAME:IST\r\nDTSTART:19701025T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=10;BYDAY=-1SU\r\nEND:STANDARD"
    ],
    latitude: "+0314650",
    longitude: "+0351326"
  },
  "Asia/Kabul": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0430\r\nTZOFFSETTO:+0430\r\nTZNAME:+0430\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "+0343100",
    longitude: "+0691200"
  },
  "Asia/Kamchatka": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+1200\r\nTZOFFSETTO:+1200\r\nTZNAME:+12\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "+0530100",
    longitude: "+1583900"
  },
  "Asia/Karachi": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0500\r\nTZOFFSETTO:+0500\r\nTZNAME:PKT\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "+0245200",
    longitude: "+0670300"
  },
  "Asia/Kashgar": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0600\r\nTZOFFSETTO:+0600\r\nTZNAME:+06\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ]
  },
  "Asia/Kathmandu": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0545\r\nTZOFFSETTO:+0545\r\nTZNAME:+0545\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "+0274300",
    longitude: "+0851900"
  },
  "Asia/Katmandu": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0545\r\nTZOFFSETTO:+0545\r\nTZNAME:+0545\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ]
  },
  "Asia/Khandyga": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0900\r\nTZOFFSETTO:+0900\r\nTZNAME:+09\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "+0623923",
    longitude: "+1353314"
  },
  "Asia/Kolkata": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0530\r\nTZOFFSETTO:+0530\r\nTZNAME:IST\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "+0223200",
    longitude: "+0882200"
  },
  "Asia/Krasnoyarsk": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0700\r\nTZOFFSETTO:+0700\r\nTZNAME:+07\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "+0560100",
    longitude: "+0925000"
  },
  "Asia/Kuala_Lumpur": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0800\r\nTZOFFSETTO:+0800\r\nTZNAME:+08\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ]
  },
  "Asia/Kuching": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0800\r\nTZOFFSETTO:+0800\r\nTZNAME:+08\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "+0013300",
    longitude: "+1102000"
  },
  "Asia/Kuwait": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0300\r\nTZOFFSETTO:+0300\r\nTZNAME:+03\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ]
  },
  "Asia/Macao": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0800\r\nTZOFFSETTO:+0800\r\nTZNAME:CST\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ]
  },
  "Asia/Macau": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0800\r\nTZOFFSETTO:+0800\r\nTZNAME:CST\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "+0221150",
    longitude: "+1133230"
  },
  "Asia/Magadan": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+1100\r\nTZOFFSETTO:+1100\r\nTZNAME:+11\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "+0593400",
    longitude: "+1504800"
  },
  "Asia/Makassar": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0800\r\nTZOFFSETTO:+0800\r\nTZNAME:WITA\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "-0050700",
    longitude: "+1192400"
  },
  "Asia/Manila": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0800\r\nTZOFFSETTO:+0800\r\nTZNAME:PST\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "+0143500",
    longitude: "+1210000"
  },
  "Asia/Muscat": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0400\r\nTZOFFSETTO:+0400\r\nTZNAME:+04\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ]
  },
  "Asia/Nicosia": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0300\r\nTZOFFSETTO:+0200\r\nTZNAME:EET\r\nDTSTART:19701025T040000\r\nRRULE:FREQ=YEARLY;BYMONTH=10;BYDAY=-1SU\r\nEND:STANDARD",
      "BEGIN:DAYLIGHT\r\nTZOFFSETFROM:+0200\r\nTZOFFSETTO:+0300\r\nTZNAME:EEST\r\nDTSTART:19700329T030000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=-1SU\r\nEND:DAYLIGHT"
    ],
    latitude: "+0351000",
    longitude: "+0332200"
  },
  "Asia/Novokuznetsk": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0700\r\nTZOFFSETTO:+0700\r\nTZNAME:+07\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "+0534500",
    longitude: "+0870700"
  },
  "Asia/Novosibirsk": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0700\r\nTZOFFSETTO:+0700\r\nTZNAME:+07\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "+0550200",
    longitude: "+0825500"
  },
  "Asia/Omsk": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0600\r\nTZOFFSETTO:+0600\r\nTZNAME:+06\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "+0550000",
    longitude: "+0732400"
  },
  "Asia/Oral": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0500\r\nTZOFFSETTO:+0500\r\nTZNAME:+05\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "+0511300",
    longitude: "+0512100"
  },
  "Asia/Phnom_Penh": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0700\r\nTZOFFSETTO:+0700\r\nTZNAME:+07\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ]
  },
  "Asia/Pontianak": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0700\r\nTZOFFSETTO:+0700\r\nTZNAME:WIB\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "+0000200",
    longitude: "+1092000"
  },
  "Asia/Pyongyang": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0900\r\nTZOFFSETTO:+0900\r\nTZNAME:KST\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "+0390100",
    longitude: "+1254500"
  },
  "Asia/Qatar": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0300\r\nTZOFFSETTO:+0300\r\nTZNAME:+03\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "+0251700",
    longitude: "+0513200"
  },
  "Asia/Qostanay": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0500\r\nTZOFFSETTO:+0500\r\nTZNAME:+05\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "+0531200",
    longitude: "+0633700"
  },
  "Asia/Qyzylorda": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0500\r\nTZOFFSETTO:+0500\r\nTZNAME:+05\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "+0444800",
    longitude: "+0652800"
  },
  "Asia/Rangoon": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0630\r\nTZOFFSETTO:+0630\r\nTZNAME:+0630\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ]
  },
  "Asia/Riyadh": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0300\r\nTZOFFSETTO:+0300\r\nTZNAME:+03\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "+0243800",
    longitude: "+0464300"
  },
  "Asia/Saigon": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0700\r\nTZOFFSETTO:+0700\r\nTZNAME:+07\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ]
  },
  "Asia/Sakhalin": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+1100\r\nTZOFFSETTO:+1100\r\nTZNAME:+11\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "+0465800",
    longitude: "+1424200"
  },
  "Asia/Samarkand": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0500\r\nTZOFFSETTO:+0500\r\nTZNAME:+05\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "+0394000",
    longitude: "+0664800"
  },
  "Asia/Seoul": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0900\r\nTZOFFSETTO:+0900\r\nTZNAME:KST\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "+0373300",
    longitude: "+1265800"
  },
  "Asia/Shanghai": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0800\r\nTZOFFSETTO:+0800\r\nTZNAME:CST\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "+0311400",
    longitude: "+1212800"
  },
  "Asia/Singapore": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0800\r\nTZOFFSETTO:+0800\r\nTZNAME:+08\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "+0011700",
    longitude: "+1035100"
  },
  "Asia/Srednekolymsk": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+1100\r\nTZOFFSETTO:+1100\r\nTZNAME:+11\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "+0672800",
    longitude: "+1534300"
  },
  "Asia/Taipei": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0800\r\nTZOFFSETTO:+0800\r\nTZNAME:CST\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "+0250300",
    longitude: "+1213000"
  },
  "Asia/Tashkent": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0500\r\nTZOFFSETTO:+0500\r\nTZNAME:+05\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "+0412000",
    longitude: "+0691800"
  },
  "Asia/Tbilisi": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0400\r\nTZOFFSETTO:+0400\r\nTZNAME:+04\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "+0414300",
    longitude: "+0444900"
  },
  "Asia/Tehran": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0330\r\nTZOFFSETTO:+0330\r\nTZNAME:+0330\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "+0354000",
    longitude: "+0512600"
  },
  "Asia/Tel_Aviv": {
    ics: [
      "BEGIN:DAYLIGHT\r\nTZOFFSETFROM:+0200\r\nTZOFFSETTO:+0300\r\nTZNAME:IDT\r\nDTSTART:19700327T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=-1FR\r\nEND:DAYLIGHT",
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0300\r\nTZOFFSETTO:+0200\r\nTZNAME:IST\r\nDTSTART:19701025T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=10;BYDAY=-1SU\r\nEND:STANDARD"
    ]
  },
  "Asia/Thimbu": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0600\r\nTZOFFSETTO:+0600\r\nTZNAME:+06\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ]
  },
  "Asia/Thimphu": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0600\r\nTZOFFSETTO:+0600\r\nTZNAME:+06\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "+0272800",
    longitude: "+0893900"
  },
  "Asia/Tokyo": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0900\r\nTZOFFSETTO:+0900\r\nTZNAME:JST\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "+0353916",
    longitude: "+1394441"
  },
  "Asia/Tomsk": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0700\r\nTZOFFSETTO:+0700\r\nTZNAME:+07\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "+0563000",
    longitude: "+0845800"
  },
  "Asia/Ujung_Pandang": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0800\r\nTZOFFSETTO:+0800\r\nTZNAME:WITA\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ]
  },
  "Asia/Ulaanbaatar": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0800\r\nTZOFFSETTO:+0800\r\nTZNAME:+08\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "+0475500",
    longitude: "+1065300"
  },
  "Asia/Ulan_Bator": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0800\r\nTZOFFSETTO:+0800\r\nTZNAME:+08\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ]
  },
  "Asia/Urumqi": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0600\r\nTZOFFSETTO:+0600\r\nTZNAME:+06\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "+0434800",
    longitude: "+0873500"
  },
  "Asia/Ust-Nera": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+1000\r\nTZOFFSETTO:+1000\r\nTZNAME:+10\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "+0643337",
    longitude: "+1431336"
  },
  "Asia/Vientiane": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0700\r\nTZOFFSETTO:+0700\r\nTZNAME:+07\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ]
  },
  "Asia/Vladivostok": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+1000\r\nTZOFFSETTO:+1000\r\nTZNAME:+10\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "+0431000",
    longitude: "+1315600"
  },
  "Asia/Yakutsk": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0900\r\nTZOFFSETTO:+0900\r\nTZNAME:+09\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "+0620000",
    longitude: "+1294000"
  },
  "Asia/Yangon": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0630\r\nTZOFFSETTO:+0630\r\nTZNAME:+0630\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "+0164700",
    longitude: "+0961000"
  },
  "Asia/Yekaterinburg": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0500\r\nTZOFFSETTO:+0500\r\nTZNAME:+05\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "+0565100",
    longitude: "+0603600"
  },
  "Asia/Yerevan": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0400\r\nTZOFFSETTO:+0400\r\nTZNAME:+04\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "+0401100",
    longitude: "+0443000"
  },
  "Atlantic/Azores": {
    ics: [
      "BEGIN:DAYLIGHT\r\nTZOFFSETFROM:-0100\r\nTZOFFSETTO:+0000\r\nTZNAME:+00\r\nDTSTART:19700329T000000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=-1SU\r\nEND:DAYLIGHT",
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0000\r\nTZOFFSETTO:-0100\r\nTZNAME:-01\r\nDTSTART:19701025T010000\r\nRRULE:FREQ=YEARLY;BYMONTH=10;BYDAY=-1SU\r\nEND:STANDARD"
    ],
    latitude: "+0374400",
    longitude: "-0254000"
  },
  "Atlantic/Bermuda": {
    ics: [
      "BEGIN:DAYLIGHT\r\nTZOFFSETFROM:-0400\r\nTZOFFSETTO:-0300\r\nTZNAME:ADT\r\nDTSTART:19700308T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=2SU\r\nEND:DAYLIGHT",
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0300\r\nTZOFFSETTO:-0400\r\nTZNAME:AST\r\nDTSTART:19701101T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=11;BYDAY=1SU\r\nEND:STANDARD"
    ],
    latitude: "+0321700",
    longitude: "-0644600"
  },
  "Atlantic/Canary": {
    ics: [
      "BEGIN:DAYLIGHT\r\nTZOFFSETFROM:+0000\r\nTZOFFSETTO:+0100\r\nTZNAME:WEST\r\nDTSTART:19700329T010000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=-1SU\r\nEND:DAYLIGHT",
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0100\r\nTZOFFSETTO:+0000\r\nTZNAME:WET\r\nDTSTART:19701025T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=10;BYDAY=-1SU\r\nEND:STANDARD"
    ],
    latitude: "+0280600",
    longitude: "-0152400"
  },
  "Atlantic/Cape_Verde": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0100\r\nTZOFFSETTO:-0100\r\nTZNAME:-01\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "+0145500",
    longitude: "-0233100"
  },
  "Atlantic/Faeroe": {
    ics: [
      "BEGIN:DAYLIGHT\r\nTZOFFSETFROM:+0000\r\nTZOFFSETTO:+0100\r\nTZNAME:WEST\r\nDTSTART:19700329T010000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=-1SU\r\nEND:DAYLIGHT",
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0100\r\nTZOFFSETTO:+0000\r\nTZNAME:WET\r\nDTSTART:19701025T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=10;BYDAY=-1SU\r\nEND:STANDARD"
    ]
  },
  "Atlantic/Faroe": {
    ics: [
      "BEGIN:DAYLIGHT\r\nTZOFFSETFROM:+0000\r\nTZOFFSETTO:+0100\r\nTZNAME:WEST\r\nDTSTART:19700329T010000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=-1SU\r\nEND:DAYLIGHT",
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0100\r\nTZOFFSETTO:+0000\r\nTZNAME:WET\r\nDTSTART:19701025T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=10;BYDAY=-1SU\r\nEND:STANDARD"
    ],
    latitude: "+0620100",
    longitude: "-0064600"
  },
  "Atlantic/Jan_Mayen": {
    ics: [
      "BEGIN:DAYLIGHT\r\nTZOFFSETFROM:+0100\r\nTZOFFSETTO:+0200\r\nTZNAME:CEST\r\nDTSTART:19700329T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=-1SU\r\nEND:DAYLIGHT",
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0200\r\nTZOFFSETTO:+0100\r\nTZNAME:CET\r\nDTSTART:19701025T030000\r\nRRULE:FREQ=YEARLY;BYMONTH=10;BYDAY=-1SU\r\nEND:STANDARD"
    ]
  },
  "Atlantic/Madeira": {
    ics: [
      "BEGIN:DAYLIGHT\r\nTZOFFSETFROM:+0000\r\nTZOFFSETTO:+0100\r\nTZNAME:WEST\r\nDTSTART:19700329T010000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=-1SU\r\nEND:DAYLIGHT",
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0100\r\nTZOFFSETTO:+0000\r\nTZNAME:WET\r\nDTSTART:19701025T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=10;BYDAY=-1SU\r\nEND:STANDARD"
    ],
    latitude: "+0323800",
    longitude: "-0165400"
  },
  "Atlantic/Reykjavik": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0000\r\nTZOFFSETTO:+0000\r\nTZNAME:GMT\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ]
  },
  "Atlantic/South_Georgia": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0200\r\nTZOFFSETTO:-0200\r\nTZNAME:-02\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "-0541600",
    longitude: "-0363200"
  },
  "Atlantic/St_Helena": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0000\r\nTZOFFSETTO:+0000\r\nTZNAME:GMT\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ]
  },
  "Atlantic/Stanley": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0300\r\nTZOFFSETTO:-0300\r\nTZNAME:-03\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "-0514200",
    longitude: "-0575100"
  },
  "Australia/ACT": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+1100\r\nTZOFFSETTO:+1000\r\nTZNAME:AEST\r\nDTSTART:19700405T030000\r\nRRULE:FREQ=YEARLY;BYMONTH=4;BYDAY=1SU\r\nEND:STANDARD",
      "BEGIN:DAYLIGHT\r\nTZOFFSETFROM:+1000\r\nTZOFFSETTO:+1100\r\nTZNAME:AEDT\r\nDTSTART:19701004T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=10;BYDAY=1SU\r\nEND:DAYLIGHT"
    ]
  },
  "Australia/Adelaide": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+1030\r\nTZOFFSETTO:+0930\r\nTZNAME:ACST\r\nDTSTART:19700405T030000\r\nRRULE:FREQ=YEARLY;BYMONTH=4;BYDAY=1SU\r\nEND:STANDARD",
      "BEGIN:DAYLIGHT\r\nTZOFFSETFROM:+0930\r\nTZOFFSETTO:+1030\r\nTZNAME:ACDT\r\nDTSTART:19701004T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=10;BYDAY=1SU\r\nEND:DAYLIGHT"
    ],
    latitude: "-0345500",
    longitude: "+1383500"
  },
  "Australia/Brisbane": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+1000\r\nTZOFFSETTO:+1000\r\nTZNAME:AEST\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "-0272800",
    longitude: "+1530200"
  },
  "Australia/Broken_Hill": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+1030\r\nTZOFFSETTO:+0930\r\nTZNAME:ACST\r\nDTSTART:19700405T030000\r\nRRULE:FREQ=YEARLY;BYMONTH=4;BYDAY=1SU\r\nEND:STANDARD",
      "BEGIN:DAYLIGHT\r\nTZOFFSETFROM:+0930\r\nTZOFFSETTO:+1030\r\nTZNAME:ACDT\r\nDTSTART:19701004T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=10;BYDAY=1SU\r\nEND:DAYLIGHT"
    ],
    latitude: "-0315700",
    longitude: "+1412700"
  },
  "Australia/Canberra": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+1100\r\nTZOFFSETTO:+1000\r\nTZNAME:AEST\r\nDTSTART:19700405T030000\r\nRRULE:FREQ=YEARLY;BYMONTH=4;BYDAY=1SU\r\nEND:STANDARD",
      "BEGIN:DAYLIGHT\r\nTZOFFSETFROM:+1000\r\nTZOFFSETTO:+1100\r\nTZNAME:AEDT\r\nDTSTART:19701004T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=10;BYDAY=1SU\r\nEND:DAYLIGHT"
    ]
  },
  "Australia/Currie": {
    ics: [
      "BEGIN:DAYLIGHT\r\nTZOFFSETFROM:+1000\r\nTZOFFSETTO:+1100\r\nTZNAME:AEDT\r\nDTSTART:19701004T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=10;BYDAY=1SU\r\nEND:DAYLIGHT",
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+1100\r\nTZOFFSETTO:+1000\r\nTZNAME:AEST\r\nDTSTART:19700405T030000\r\nRRULE:FREQ=YEARLY;BYMONTH=4;BYDAY=1SU\r\nEND:STANDARD"
    ]
  },
  "Australia/Darwin": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0930\r\nTZOFFSETTO:+0930\r\nTZNAME:ACST\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "-0122800",
    longitude: "+1305000"
  },
  "Australia/Eucla": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0845\r\nTZOFFSETTO:+0845\r\nTZNAME:+0845\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "-0314300",
    longitude: "+1285200"
  },
  "Australia/Hobart": {
    ics: [
      "BEGIN:DAYLIGHT\r\nTZOFFSETFROM:+1000\r\nTZOFFSETTO:+1100\r\nTZNAME:AEDT\r\nDTSTART:19701004T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=10;BYDAY=1SU\r\nEND:DAYLIGHT",
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+1100\r\nTZOFFSETTO:+1000\r\nTZNAME:AEST\r\nDTSTART:19700405T030000\r\nRRULE:FREQ=YEARLY;BYMONTH=4;BYDAY=1SU\r\nEND:STANDARD"
    ],
    latitude: "-0425300",
    longitude: "+1471900"
  },
  "Australia/LHI": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+1100\r\nTZOFFSETTO:+1030\r\nTZNAME:+1030\r\nDTSTART:19700405T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=4;BYDAY=1SU\r\nEND:STANDARD",
      "BEGIN:DAYLIGHT\r\nTZOFFSETFROM:+1030\r\nTZOFFSETTO:+1100\r\nTZNAME:+11\r\nDTSTART:19701004T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=10;BYDAY=1SU\r\nEND:DAYLIGHT"
    ]
  },
  "Australia/Lindeman": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+1000\r\nTZOFFSETTO:+1000\r\nTZNAME:AEST\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "-0201600",
    longitude: "+1490000"
  },
  "Australia/Lord_Howe": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+1100\r\nTZOFFSETTO:+1030\r\nTZNAME:+1030\r\nDTSTART:19700405T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=4;BYDAY=1SU\r\nEND:STANDARD",
      "BEGIN:DAYLIGHT\r\nTZOFFSETFROM:+1030\r\nTZOFFSETTO:+1100\r\nTZNAME:+11\r\nDTSTART:19701004T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=10;BYDAY=1SU\r\nEND:DAYLIGHT"
    ],
    latitude: "-0313300",
    longitude: "+1590500"
  },
  "Australia/Melbourne": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+1100\r\nTZOFFSETTO:+1000\r\nTZNAME:AEST\r\nDTSTART:19700405T030000\r\nRRULE:FREQ=YEARLY;BYMONTH=4;BYDAY=1SU\r\nEND:STANDARD",
      "BEGIN:DAYLIGHT\r\nTZOFFSETFROM:+1000\r\nTZOFFSETTO:+1100\r\nTZNAME:AEDT\r\nDTSTART:19701004T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=10;BYDAY=1SU\r\nEND:DAYLIGHT"
    ],
    latitude: "-0374900",
    longitude: "+1445800"
  },
  "Australia/NSW": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+1100\r\nTZOFFSETTO:+1000\r\nTZNAME:AEST\r\nDTSTART:19700405T030000\r\nRRULE:FREQ=YEARLY;BYMONTH=4;BYDAY=1SU\r\nEND:STANDARD",
      "BEGIN:DAYLIGHT\r\nTZOFFSETFROM:+1000\r\nTZOFFSETTO:+1100\r\nTZNAME:AEDT\r\nDTSTART:19701004T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=10;BYDAY=1SU\r\nEND:DAYLIGHT"
    ]
  },
  "Australia/North": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0930\r\nTZOFFSETTO:+0930\r\nTZNAME:ACST\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ]
  },
  "Australia/Perth": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0800\r\nTZOFFSETTO:+0800\r\nTZNAME:AWST\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "-0315700",
    longitude: "+1155100"
  },
  "Australia/Queensland": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+1000\r\nTZOFFSETTO:+1000\r\nTZNAME:AEST\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ]
  },
  "Australia/South": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+1030\r\nTZOFFSETTO:+0930\r\nTZNAME:ACST\r\nDTSTART:19700405T030000\r\nRRULE:FREQ=YEARLY;BYMONTH=4;BYDAY=1SU\r\nEND:STANDARD",
      "BEGIN:DAYLIGHT\r\nTZOFFSETFROM:+0930\r\nTZOFFSETTO:+1030\r\nTZNAME:ACDT\r\nDTSTART:19701004T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=10;BYDAY=1SU\r\nEND:DAYLIGHT"
    ]
  },
  "Australia/Sydney": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+1100\r\nTZOFFSETTO:+1000\r\nTZNAME:AEST\r\nDTSTART:19700405T030000\r\nRRULE:FREQ=YEARLY;BYMONTH=4;BYDAY=1SU\r\nEND:STANDARD",
      "BEGIN:DAYLIGHT\r\nTZOFFSETFROM:+1000\r\nTZOFFSETTO:+1100\r\nTZNAME:AEDT\r\nDTSTART:19701004T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=10;BYDAY=1SU\r\nEND:DAYLIGHT"
    ],
    latitude: "-0335200",
    longitude: "+1511300"
  },
  "Australia/Tasmania": {
    ics: [
      "BEGIN:DAYLIGHT\r\nTZOFFSETFROM:+1000\r\nTZOFFSETTO:+1100\r\nTZNAME:AEDT\r\nDTSTART:19701004T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=10;BYDAY=1SU\r\nEND:DAYLIGHT",
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+1100\r\nTZOFFSETTO:+1000\r\nTZNAME:AEST\r\nDTSTART:19700405T030000\r\nRRULE:FREQ=YEARLY;BYMONTH=4;BYDAY=1SU\r\nEND:STANDARD"
    ]
  },
  "Australia/Victoria": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+1100\r\nTZOFFSETTO:+1000\r\nTZNAME:AEST\r\nDTSTART:19700405T030000\r\nRRULE:FREQ=YEARLY;BYMONTH=4;BYDAY=1SU\r\nEND:STANDARD",
      "BEGIN:DAYLIGHT\r\nTZOFFSETFROM:+1000\r\nTZOFFSETTO:+1100\r\nTZNAME:AEDT\r\nDTSTART:19701004T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=10;BYDAY=1SU\r\nEND:DAYLIGHT"
    ]
  },
  "Australia/West": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0800\r\nTZOFFSETTO:+0800\r\nTZNAME:AWST\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ]
  },
  "Australia/Yancowinna": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+1030\r\nTZOFFSETTO:+0930\r\nTZNAME:ACST\r\nDTSTART:19700405T030000\r\nRRULE:FREQ=YEARLY;BYMONTH=4;BYDAY=1SU\r\nEND:STANDARD",
      "BEGIN:DAYLIGHT\r\nTZOFFSETFROM:+0930\r\nTZOFFSETTO:+1030\r\nTZNAME:ACDT\r\nDTSTART:19701004T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=10;BYDAY=1SU\r\nEND:DAYLIGHT"
    ]
  },
  "Brazil/Acre": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0500\r\nTZOFFSETTO:-0500\r\nTZNAME:-05\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ]
  },
  "Brazil/DeNoronha": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0200\r\nTZOFFSETTO:-0200\r\nTZNAME:-02\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ]
  },
  "Brazil/East": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0300\r\nTZOFFSETTO:-0300\r\nTZNAME:-03\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ]
  },
  "Brazil/West": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0400\r\nTZOFFSETTO:-0400\r\nTZNAME:-04\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ]
  },
  "Canada/Atlantic": {
    ics: [
      "BEGIN:DAYLIGHT\r\nTZOFFSETFROM:-0400\r\nTZOFFSETTO:-0300\r\nTZNAME:ADT\r\nDTSTART:19700308T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=2SU\r\nEND:DAYLIGHT",
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0300\r\nTZOFFSETTO:-0400\r\nTZNAME:AST\r\nDTSTART:19701101T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=11;BYDAY=1SU\r\nEND:STANDARD"
    ]
  },
  "Canada/Central": {
    ics: [
      "BEGIN:DAYLIGHT\r\nTZOFFSETFROM:-0600\r\nTZOFFSETTO:-0500\r\nTZNAME:CDT\r\nDTSTART:19700308T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=2SU\r\nEND:DAYLIGHT",
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0500\r\nTZOFFSETTO:-0600\r\nTZNAME:CST\r\nDTSTART:19701101T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=11;BYDAY=1SU\r\nEND:STANDARD"
    ]
  },
  "Canada/Eastern": {
    ics: [
      "BEGIN:DAYLIGHT\r\nTZOFFSETFROM:-0500\r\nTZOFFSETTO:-0400\r\nTZNAME:EDT\r\nDTSTART:19700308T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=2SU\r\nEND:DAYLIGHT",
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0400\r\nTZOFFSETTO:-0500\r\nTZNAME:EST\r\nDTSTART:19701101T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=11;BYDAY=1SU\r\nEND:STANDARD"
    ]
  },
  "Canada/Mountain": {
    ics: [
      "BEGIN:DAYLIGHT\r\nTZOFFSETFROM:-0700\r\nTZOFFSETTO:-0600\r\nTZNAME:MDT\r\nDTSTART:19700308T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=2SU\r\nEND:DAYLIGHT",
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0600\r\nTZOFFSETTO:-0700\r\nTZNAME:MST\r\nDTSTART:19701101T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=11;BYDAY=1SU\r\nEND:STANDARD"
    ]
  },
  "Canada/Newfoundland": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0230\r\nTZOFFSETTO:-0330\r\nTZNAME:NST\r\nDTSTART:19701101T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=11;BYDAY=1SU\r\nEND:STANDARD",
      "BEGIN:DAYLIGHT\r\nTZOFFSETFROM:-0330\r\nTZOFFSETTO:-0230\r\nTZNAME:NDT\r\nDTSTART:19700308T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=2SU\r\nEND:DAYLIGHT"
    ]
  },
  "Canada/Pacific": {
    ics: [
      "BEGIN:DAYLIGHT\r\nTZOFFSETFROM:-0800\r\nTZOFFSETTO:-0700\r\nTZNAME:PDT\r\nDTSTART:19700308T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=2SU\r\nEND:DAYLIGHT",
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0700\r\nTZOFFSETTO:-0800\r\nTZNAME:PST\r\nDTSTART:19701101T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=11;BYDAY=1SU\r\nEND:STANDARD"
    ]
  },
  "Canada/Saskatchewan": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0600\r\nTZOFFSETTO:-0600\r\nTZNAME:CST\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ]
  },
  "Canada/Yukon": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0700\r\nTZOFFSETTO:-0700\r\nTZNAME:MST\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ]
  },
  "Chile/Continental": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0300\r\nTZOFFSETTO:-0400\r\nTZNAME:-04\r\nDTSTART:19700405T000000\r\nRRULE:FREQ=YEARLY;BYMONTH=4;BYDAY=1SU\r\nEND:STANDARD",
      "BEGIN:DAYLIGHT\r\nTZOFFSETFROM:-0400\r\nTZOFFSETTO:-0300\r\nTZNAME:-03\r\nDTSTART:19700906T000000\r\nRRULE:FREQ=YEARLY;BYMONTH=9;BYDAY=1SU\r\nEND:DAYLIGHT"
    ]
  },
  "Chile/EasterIsland": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0500\r\nTZOFFSETTO:-0600\r\nTZNAME:-06\r\nDTSTART:19700404T220000\r\nRRULE:FREQ=YEARLY;BYMONTH=4;BYDAY=1SA\r\nEND:STANDARD",
      "BEGIN:DAYLIGHT\r\nTZOFFSETFROM:-0600\r\nTZOFFSETTO:-0500\r\nTZNAME:-05\r\nDTSTART:19700905T220000\r\nRRULE:FREQ=YEARLY;BYMONTH=9;BYDAY=1SA\r\nEND:DAYLIGHT"
    ]
  },
  "Europe/Amsterdam": {
    ics: [
      "BEGIN:DAYLIGHT\r\nTZOFFSETFROM:+0100\r\nTZOFFSETTO:+0200\r\nTZNAME:CEST\r\nDTSTART:19700329T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=-1SU\r\nEND:DAYLIGHT",
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0200\r\nTZOFFSETTO:+0100\r\nTZNAME:CET\r\nDTSTART:19701025T030000\r\nRRULE:FREQ=YEARLY;BYMONTH=10;BYDAY=-1SU\r\nEND:STANDARD"
    ]
  },
  "Europe/Andorra": {
    ics: [
      "BEGIN:DAYLIGHT\r\nTZOFFSETFROM:+0100\r\nTZOFFSETTO:+0200\r\nTZNAME:CEST\r\nDTSTART:19700329T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=-1SU\r\nEND:DAYLIGHT",
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0200\r\nTZOFFSETTO:+0100\r\nTZNAME:CET\r\nDTSTART:19701025T030000\r\nRRULE:FREQ=YEARLY;BYMONTH=10;BYDAY=-1SU\r\nEND:STANDARD"
    ],
    latitude: "+0423000",
    longitude: "+0013100"
  },
  "Europe/Astrakhan": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0400\r\nTZOFFSETTO:+0400\r\nTZNAME:+04\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "+0462100",
    longitude: "+0480300"
  },
  "Europe/Athens": {
    ics: [
      "BEGIN:DAYLIGHT\r\nTZOFFSETFROM:+0200\r\nTZOFFSETTO:+0300\r\nTZNAME:EEST\r\nDTSTART:19700329T030000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=-1SU\r\nEND:DAYLIGHT",
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0300\r\nTZOFFSETTO:+0200\r\nTZNAME:EET\r\nDTSTART:19701025T040000\r\nRRULE:FREQ=YEARLY;BYMONTH=10;BYDAY=-1SU\r\nEND:STANDARD"
    ],
    latitude: "+0375800",
    longitude: "+0234300"
  },
  "Europe/Belfast": {
    ics: [
      "BEGIN:DAYLIGHT\r\nTZOFFSETFROM:+0000\r\nTZOFFSETTO:+0100\r\nTZNAME:BST\r\nDTSTART:19700329T010000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=-1SU\r\nEND:DAYLIGHT",
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0100\r\nTZOFFSETTO:+0000\r\nTZNAME:GMT\r\nDTSTART:19701025T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=10;BYDAY=-1SU\r\nEND:STANDARD"
    ]
  },
  "Europe/Belgrade": {
    ics: [
      "BEGIN:DAYLIGHT\r\nTZOFFSETFROM:+0100\r\nTZOFFSETTO:+0200\r\nTZNAME:CEST\r\nDTSTART:19700329T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=-1SU\r\nEND:DAYLIGHT",
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0200\r\nTZOFFSETTO:+0100\r\nTZNAME:CET\r\nDTSTART:19701025T030000\r\nRRULE:FREQ=YEARLY;BYMONTH=10;BYDAY=-1SU\r\nEND:STANDARD"
    ],
    latitude: "+0445000",
    longitude: "+0203000"
  },
  "Europe/Berlin": {
    ics: [
      "BEGIN:DAYLIGHT\r\nTZOFFSETFROM:+0100\r\nTZOFFSETTO:+0200\r\nTZNAME:CEST\r\nDTSTART:19700329T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=-1SU\r\nEND:DAYLIGHT",
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0200\r\nTZOFFSETTO:+0100\r\nTZNAME:CET\r\nDTSTART:19701025T030000\r\nRRULE:FREQ=YEARLY;BYMONTH=10;BYDAY=-1SU\r\nEND:STANDARD"
    ],
    latitude: "+0523000",
    longitude: "+0132200"
  },
  "Europe/Bratislava": {
    ics: [
      "BEGIN:DAYLIGHT\r\nTZOFFSETFROM:+0100\r\nTZOFFSETTO:+0200\r\nTZNAME:CEST\r\nDTSTART:19700329T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=-1SU\r\nEND:DAYLIGHT",
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0200\r\nTZOFFSETTO:+0100\r\nTZNAME:CET\r\nDTSTART:19701025T030000\r\nRRULE:FREQ=YEARLY;BYMONTH=10;BYDAY=-1SU\r\nEND:STANDARD"
    ]
  },
  "Europe/Brussels": {
    ics: [
      "BEGIN:DAYLIGHT\r\nTZOFFSETFROM:+0100\r\nTZOFFSETTO:+0200\r\nTZNAME:CEST\r\nDTSTART:19700329T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=-1SU\r\nEND:DAYLIGHT",
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0200\r\nTZOFFSETTO:+0100\r\nTZNAME:CET\r\nDTSTART:19701025T030000\r\nRRULE:FREQ=YEARLY;BYMONTH=10;BYDAY=-1SU\r\nEND:STANDARD"
    ],
    latitude: "+0505000",
    longitude: "+0042000"
  },
  "Europe/Bucharest": {
    ics: [
      "BEGIN:DAYLIGHT\r\nTZOFFSETFROM:+0200\r\nTZOFFSETTO:+0300\r\nTZNAME:EEST\r\nDTSTART:19700329T030000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=-1SU\r\nEND:DAYLIGHT",
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0300\r\nTZOFFSETTO:+0200\r\nTZNAME:EET\r\nDTSTART:19701025T040000\r\nRRULE:FREQ=YEARLY;BYMONTH=10;BYDAY=-1SU\r\nEND:STANDARD"
    ],
    latitude: "+0442600",
    longitude: "+0260600"
  },
  "Europe/Budapest": {
    ics: [
      "BEGIN:DAYLIGHT\r\nTZOFFSETFROM:+0100\r\nTZOFFSETTO:+0200\r\nTZNAME:CEST\r\nDTSTART:19700329T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=-1SU\r\nEND:DAYLIGHT",
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0200\r\nTZOFFSETTO:+0100\r\nTZNAME:CET\r\nDTSTART:19701025T030000\r\nRRULE:FREQ=YEARLY;BYMONTH=10;BYDAY=-1SU\r\nEND:STANDARD"
    ],
    latitude: "+0473000",
    longitude: "+0190500"
  },
  "Europe/Busingen": {
    ics: [
      "BEGIN:DAYLIGHT\r\nTZOFFSETFROM:+0100\r\nTZOFFSETTO:+0200\r\nTZNAME:CEST\r\nDTSTART:19700329T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=-1SU\r\nEND:DAYLIGHT",
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0200\r\nTZOFFSETTO:+0100\r\nTZNAME:CET\r\nDTSTART:19701025T030000\r\nRRULE:FREQ=YEARLY;BYMONTH=10;BYDAY=-1SU\r\nEND:STANDARD"
    ]
  },
  "Europe/Chisinau": {
    ics: [
      "BEGIN:DAYLIGHT\r\nTZOFFSETFROM:+0200\r\nTZOFFSETTO:+0300\r\nTZNAME:EEST\r\nDTSTART:19700329T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=-1SU\r\nEND:DAYLIGHT",
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0300\r\nTZOFFSETTO:+0200\r\nTZNAME:EET\r\nDTSTART:19701025T030000\r\nRRULE:FREQ=YEARLY;BYMONTH=10;BYDAY=-1SU\r\nEND:STANDARD"
    ],
    latitude: "+0470000",
    longitude: "+0285000"
  },
  "Europe/Copenhagen": {
    ics: [
      "BEGIN:DAYLIGHT\r\nTZOFFSETFROM:+0100\r\nTZOFFSETTO:+0200\r\nTZNAME:CEST\r\nDTSTART:19700329T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=-1SU\r\nEND:DAYLIGHT",
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0200\r\nTZOFFSETTO:+0100\r\nTZNAME:CET\r\nDTSTART:19701025T030000\r\nRRULE:FREQ=YEARLY;BYMONTH=10;BYDAY=-1SU\r\nEND:STANDARD"
    ]
  },
  "Europe/Dublin": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0000\r\nTZOFFSETTO:+0100\r\nTZNAME:IST\r\nDTSTART:19700329T010000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=-1SU\r\nEND:STANDARD",
      "BEGIN:DAYLIGHT\r\nTZOFFSETFROM:+0100\r\nTZOFFSETTO:+0000\r\nTZNAME:GMT\r\nDTSTART:19701025T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=10;BYDAY=-1SU\r\nEND:DAYLIGHT"
    ],
    latitude: "+0532000",
    longitude: "-0061500"
  },
  "Europe/Gibraltar": {
    ics: [
      "BEGIN:DAYLIGHT\r\nTZOFFSETFROM:+0100\r\nTZOFFSETTO:+0200\r\nTZNAME:CEST\r\nDTSTART:19700329T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=-1SU\r\nEND:DAYLIGHT",
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0200\r\nTZOFFSETTO:+0100\r\nTZNAME:CET\r\nDTSTART:19701025T030000\r\nRRULE:FREQ=YEARLY;BYMONTH=10;BYDAY=-1SU\r\nEND:STANDARD"
    ],
    latitude: "+0360800",
    longitude: "-0052100"
  },
  "Europe/Guernsey": {
    ics: [
      "BEGIN:DAYLIGHT\r\nTZOFFSETFROM:+0000\r\nTZOFFSETTO:+0100\r\nTZNAME:BST\r\nDTSTART:19700329T010000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=-1SU\r\nEND:DAYLIGHT",
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0100\r\nTZOFFSETTO:+0000\r\nTZNAME:GMT\r\nDTSTART:19701025T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=10;BYDAY=-1SU\r\nEND:STANDARD"
    ]
  },
  "Europe/Helsinki": {
    ics: [
      "BEGIN:DAYLIGHT\r\nTZOFFSETFROM:+0200\r\nTZOFFSETTO:+0300\r\nTZNAME:EEST\r\nDTSTART:19700329T030000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=-1SU\r\nEND:DAYLIGHT",
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0300\r\nTZOFFSETTO:+0200\r\nTZNAME:EET\r\nDTSTART:19701025T040000\r\nRRULE:FREQ=YEARLY;BYMONTH=10;BYDAY=-1SU\r\nEND:STANDARD"
    ],
    latitude: "+0601000",
    longitude: "+0245800"
  },
  "Europe/Isle_of_Man": {
    ics: [
      "BEGIN:DAYLIGHT\r\nTZOFFSETFROM:+0000\r\nTZOFFSETTO:+0100\r\nTZNAME:BST\r\nDTSTART:19700329T010000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=-1SU\r\nEND:DAYLIGHT",
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0100\r\nTZOFFSETTO:+0000\r\nTZNAME:GMT\r\nDTSTART:19701025T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=10;BYDAY=-1SU\r\nEND:STANDARD"
    ]
  },
  "Europe/Istanbul": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0300\r\nTZOFFSETTO:+0300\r\nTZNAME:+03\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "+0410100",
    longitude: "+0285800"
  },
  "Europe/Jersey": {
    ics: [
      "BEGIN:DAYLIGHT\r\nTZOFFSETFROM:+0000\r\nTZOFFSETTO:+0100\r\nTZNAME:BST\r\nDTSTART:19700329T010000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=-1SU\r\nEND:DAYLIGHT",
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0100\r\nTZOFFSETTO:+0000\r\nTZNAME:GMT\r\nDTSTART:19701025T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=10;BYDAY=-1SU\r\nEND:STANDARD"
    ]
  },
  "Europe/Kaliningrad": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0200\r\nTZOFFSETTO:+0200\r\nTZNAME:EET\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "+0544300",
    longitude: "+0203000"
  },
  "Europe/Kiev": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0300\r\nTZOFFSETTO:+0200\r\nTZNAME:EET\r\nDTSTART:19701025T040000\r\nRRULE:FREQ=YEARLY;BYMONTH=10;BYDAY=-1SU\r\nEND:STANDARD",
      "BEGIN:DAYLIGHT\r\nTZOFFSETFROM:+0200\r\nTZOFFSETTO:+0300\r\nTZNAME:EEST\r\nDTSTART:19700329T030000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=-1SU\r\nEND:DAYLIGHT"
    ]
  },
  "Europe/Kirov": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0300\r\nTZOFFSETTO:+0300\r\nTZNAME:MSK\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "+0583600",
    longitude: "+0493900"
  },
  "Europe/Kyiv": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0300\r\nTZOFFSETTO:+0200\r\nTZNAME:EET\r\nDTSTART:19701025T040000\r\nRRULE:FREQ=YEARLY;BYMONTH=10;BYDAY=-1SU\r\nEND:STANDARD",
      "BEGIN:DAYLIGHT\r\nTZOFFSETFROM:+0200\r\nTZOFFSETTO:+0300\r\nTZNAME:EEST\r\nDTSTART:19700329T030000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=-1SU\r\nEND:DAYLIGHT"
    ],
    latitude: "+0502600",
    longitude: "+0303100"
  },
  "Europe/Lisbon": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0100\r\nTZOFFSETTO:+0000\r\nTZNAME:WET\r\nDTSTART:19701025T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=10;BYDAY=-1SU\r\nEND:STANDARD",
      "BEGIN:DAYLIGHT\r\nTZOFFSETFROM:+0000\r\nTZOFFSETTO:+0100\r\nTZNAME:WEST\r\nDTSTART:19700329T010000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=-1SU\r\nEND:DAYLIGHT"
    ],
    latitude: "+0384300",
    longitude: "-0090800"
  },
  "Europe/Ljubljana": {
    ics: [
      "BEGIN:DAYLIGHT\r\nTZOFFSETFROM:+0100\r\nTZOFFSETTO:+0200\r\nTZNAME:CEST\r\nDTSTART:19700329T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=-1SU\r\nEND:DAYLIGHT",
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0200\r\nTZOFFSETTO:+0100\r\nTZNAME:CET\r\nDTSTART:19701025T030000\r\nRRULE:FREQ=YEARLY;BYMONTH=10;BYDAY=-1SU\r\nEND:STANDARD"
    ]
  },
  "Europe/London": {
    ics: [
      "BEGIN:DAYLIGHT\r\nTZOFFSETFROM:+0000\r\nTZOFFSETTO:+0100\r\nTZNAME:BST\r\nDTSTART:19700329T010000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=-1SU\r\nEND:DAYLIGHT",
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0100\r\nTZOFFSETTO:+0000\r\nTZNAME:GMT\r\nDTSTART:19701025T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=10;BYDAY=-1SU\r\nEND:STANDARD"
    ],
    latitude: "+0513030",
    longitude: "+0000731"
  },
  "Europe/Luxembourg": {
    ics: [
      "BEGIN:DAYLIGHT\r\nTZOFFSETFROM:+0100\r\nTZOFFSETTO:+0200\r\nTZNAME:CEST\r\nDTSTART:19700329T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=-1SU\r\nEND:DAYLIGHT",
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0200\r\nTZOFFSETTO:+0100\r\nTZNAME:CET\r\nDTSTART:19701025T030000\r\nRRULE:FREQ=YEARLY;BYMONTH=10;BYDAY=-1SU\r\nEND:STANDARD"
    ]
  },
  "Europe/Madrid": {
    ics: [
      "BEGIN:DAYLIGHT\r\nTZOFFSETFROM:+0100\r\nTZOFFSETTO:+0200\r\nTZNAME:CEST\r\nDTSTART:19700329T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=-1SU\r\nEND:DAYLIGHT",
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0200\r\nTZOFFSETTO:+0100\r\nTZNAME:CET\r\nDTSTART:19701025T030000\r\nRRULE:FREQ=YEARLY;BYMONTH=10;BYDAY=-1SU\r\nEND:STANDARD"
    ],
    latitude: "+0402400",
    longitude: "-0034100"
  },
  "Europe/Malta": {
    ics: [
      "BEGIN:DAYLIGHT\r\nTZOFFSETFROM:+0100\r\nTZOFFSETTO:+0200\r\nTZNAME:CEST\r\nDTSTART:19700329T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=-1SU\r\nEND:DAYLIGHT",
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0200\r\nTZOFFSETTO:+0100\r\nTZNAME:CET\r\nDTSTART:19701025T030000\r\nRRULE:FREQ=YEARLY;BYMONTH=10;BYDAY=-1SU\r\nEND:STANDARD"
    ],
    latitude: "+0355400",
    longitude: "+0143100"
  },
  "Europe/Mariehamn": {
    ics: [
      "BEGIN:DAYLIGHT\r\nTZOFFSETFROM:+0200\r\nTZOFFSETTO:+0300\r\nTZNAME:EEST\r\nDTSTART:19700329T030000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=-1SU\r\nEND:DAYLIGHT",
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0300\r\nTZOFFSETTO:+0200\r\nTZNAME:EET\r\nDTSTART:19701025T040000\r\nRRULE:FREQ=YEARLY;BYMONTH=10;BYDAY=-1SU\r\nEND:STANDARD"
    ]
  },
  "Europe/Minsk": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0300\r\nTZOFFSETTO:+0300\r\nTZNAME:+03\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "+0535400",
    longitude: "+0273400"
  },
  "Europe/Monaco": {
    ics: [
      "BEGIN:DAYLIGHT\r\nTZOFFSETFROM:+0100\r\nTZOFFSETTO:+0200\r\nTZNAME:CEST\r\nDTSTART:19700329T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=-1SU\r\nEND:DAYLIGHT",
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0200\r\nTZOFFSETTO:+0100\r\nTZNAME:CET\r\nDTSTART:19701025T030000\r\nRRULE:FREQ=YEARLY;BYMONTH=10;BYDAY=-1SU\r\nEND:STANDARD"
    ]
  },
  "Europe/Moscow": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0300\r\nTZOFFSETTO:+0300\r\nTZNAME:MSK\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "+0554521",
    longitude: "+0373704"
  },
  "Europe/Nicosia": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0300\r\nTZOFFSETTO:+0200\r\nTZNAME:EET\r\nDTSTART:19701025T040000\r\nRRULE:FREQ=YEARLY;BYMONTH=10;BYDAY=-1SU\r\nEND:STANDARD",
      "BEGIN:DAYLIGHT\r\nTZOFFSETFROM:+0200\r\nTZOFFSETTO:+0300\r\nTZNAME:EEST\r\nDTSTART:19700329T030000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=-1SU\r\nEND:DAYLIGHT"
    ]
  },
  "Europe/Oslo": {
    ics: [
      "BEGIN:DAYLIGHT\r\nTZOFFSETFROM:+0100\r\nTZOFFSETTO:+0200\r\nTZNAME:CEST\r\nDTSTART:19700329T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=-1SU\r\nEND:DAYLIGHT",
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0200\r\nTZOFFSETTO:+0100\r\nTZNAME:CET\r\nDTSTART:19701025T030000\r\nRRULE:FREQ=YEARLY;BYMONTH=10;BYDAY=-1SU\r\nEND:STANDARD"
    ]
  },
  "Europe/Paris": {
    ics: [
      "BEGIN:DAYLIGHT\r\nTZOFFSETFROM:+0100\r\nTZOFFSETTO:+0200\r\nTZNAME:CEST\r\nDTSTART:19700329T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=-1SU\r\nEND:DAYLIGHT",
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0200\r\nTZOFFSETTO:+0100\r\nTZNAME:CET\r\nDTSTART:19701025T030000\r\nRRULE:FREQ=YEARLY;BYMONTH=10;BYDAY=-1SU\r\nEND:STANDARD"
    ],
    latitude: "+0485200",
    longitude: "+0022000"
  },
  "Europe/Podgorica": {
    ics: [
      "BEGIN:DAYLIGHT\r\nTZOFFSETFROM:+0100\r\nTZOFFSETTO:+0200\r\nTZNAME:CEST\r\nDTSTART:19700329T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=-1SU\r\nEND:DAYLIGHT",
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0200\r\nTZOFFSETTO:+0100\r\nTZNAME:CET\r\nDTSTART:19701025T030000\r\nRRULE:FREQ=YEARLY;BYMONTH=10;BYDAY=-1SU\r\nEND:STANDARD"
    ]
  },
  "Europe/Prague": {
    ics: [
      "BEGIN:DAYLIGHT\r\nTZOFFSETFROM:+0100\r\nTZOFFSETTO:+0200\r\nTZNAME:CEST\r\nDTSTART:19700329T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=-1SU\r\nEND:DAYLIGHT",
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0200\r\nTZOFFSETTO:+0100\r\nTZNAME:CET\r\nDTSTART:19701025T030000\r\nRRULE:FREQ=YEARLY;BYMONTH=10;BYDAY=-1SU\r\nEND:STANDARD"
    ],
    latitude: "+0500500",
    longitude: "+0142600"
  },
  "Europe/Riga": {
    ics: [
      "BEGIN:DAYLIGHT\r\nTZOFFSETFROM:+0200\r\nTZOFFSETTO:+0300\r\nTZNAME:EEST\r\nDTSTART:19700329T030000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=-1SU\r\nEND:DAYLIGHT",
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0300\r\nTZOFFSETTO:+0200\r\nTZNAME:EET\r\nDTSTART:19701025T040000\r\nRRULE:FREQ=YEARLY;BYMONTH=10;BYDAY=-1SU\r\nEND:STANDARD"
    ],
    latitude: "+0565700",
    longitude: "+0240600"
  },
  "Europe/Rome": {
    ics: [
      "BEGIN:DAYLIGHT\r\nTZOFFSETFROM:+0100\r\nTZOFFSETTO:+0200\r\nTZNAME:CEST\r\nDTSTART:19700329T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=-1SU\r\nEND:DAYLIGHT",
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0200\r\nTZOFFSETTO:+0100\r\nTZNAME:CET\r\nDTSTART:19701025T030000\r\nRRULE:FREQ=YEARLY;BYMONTH=10;BYDAY=-1SU\r\nEND:STANDARD"
    ],
    latitude: "+0415400",
    longitude: "+0122900"
  },
  "Europe/Samara": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0400\r\nTZOFFSETTO:+0400\r\nTZNAME:+04\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "+0531200",
    longitude: "+0500900"
  },
  "Europe/San_Marino": {
    ics: [
      "BEGIN:DAYLIGHT\r\nTZOFFSETFROM:+0100\r\nTZOFFSETTO:+0200\r\nTZNAME:CEST\r\nDTSTART:19700329T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=-1SU\r\nEND:DAYLIGHT",
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0200\r\nTZOFFSETTO:+0100\r\nTZNAME:CET\r\nDTSTART:19701025T030000\r\nRRULE:FREQ=YEARLY;BYMONTH=10;BYDAY=-1SU\r\nEND:STANDARD"
    ]
  },
  "Europe/Sarajevo": {
    ics: [
      "BEGIN:DAYLIGHT\r\nTZOFFSETFROM:+0100\r\nTZOFFSETTO:+0200\r\nTZNAME:CEST\r\nDTSTART:19700329T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=-1SU\r\nEND:DAYLIGHT",
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0200\r\nTZOFFSETTO:+0100\r\nTZNAME:CET\r\nDTSTART:19701025T030000\r\nRRULE:FREQ=YEARLY;BYMONTH=10;BYDAY=-1SU\r\nEND:STANDARD"
    ]
  },
  "Europe/Saratov": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0400\r\nTZOFFSETTO:+0400\r\nTZNAME:+04\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "+0513400",
    longitude: "+0460200"
  },
  "Europe/Simferopol": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0300\r\nTZOFFSETTO:+0300\r\nTZNAME:MSK\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "+0445700",
    longitude: "+0340600"
  },
  "Europe/Skopje": {
    ics: [
      "BEGIN:DAYLIGHT\r\nTZOFFSETFROM:+0100\r\nTZOFFSETTO:+0200\r\nTZNAME:CEST\r\nDTSTART:19700329T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=-1SU\r\nEND:DAYLIGHT",
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0200\r\nTZOFFSETTO:+0100\r\nTZNAME:CET\r\nDTSTART:19701025T030000\r\nRRULE:FREQ=YEARLY;BYMONTH=10;BYDAY=-1SU\r\nEND:STANDARD"
    ]
  },
  "Europe/Sofia": {
    ics: [
      "BEGIN:DAYLIGHT\r\nTZOFFSETFROM:+0200\r\nTZOFFSETTO:+0300\r\nTZNAME:EEST\r\nDTSTART:19700329T030000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=-1SU\r\nEND:DAYLIGHT",
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0300\r\nTZOFFSETTO:+0200\r\nTZNAME:EET\r\nDTSTART:19701025T040000\r\nRRULE:FREQ=YEARLY;BYMONTH=10;BYDAY=-1SU\r\nEND:STANDARD"
    ],
    latitude: "+0424100",
    longitude: "+0231900"
  },
  "Europe/Stockholm": {
    ics: [
      "BEGIN:DAYLIGHT\r\nTZOFFSETFROM:+0100\r\nTZOFFSETTO:+0200\r\nTZNAME:CEST\r\nDTSTART:19700329T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=-1SU\r\nEND:DAYLIGHT",
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0200\r\nTZOFFSETTO:+0100\r\nTZNAME:CET\r\nDTSTART:19701025T030000\r\nRRULE:FREQ=YEARLY;BYMONTH=10;BYDAY=-1SU\r\nEND:STANDARD"
    ]
  },
  "Europe/Tallinn": {
    ics: [
      "BEGIN:DAYLIGHT\r\nTZOFFSETFROM:+0200\r\nTZOFFSETTO:+0300\r\nTZNAME:EEST\r\nDTSTART:19700329T030000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=-1SU\r\nEND:DAYLIGHT",
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0300\r\nTZOFFSETTO:+0200\r\nTZNAME:EET\r\nDTSTART:19701025T040000\r\nRRULE:FREQ=YEARLY;BYMONTH=10;BYDAY=-1SU\r\nEND:STANDARD"
    ],
    latitude: "+0592500",
    longitude: "+0244500"
  },
  "Europe/Tirane": {
    ics: [
      "BEGIN:DAYLIGHT\r\nTZOFFSETFROM:+0100\r\nTZOFFSETTO:+0200\r\nTZNAME:CEST\r\nDTSTART:19700329T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=-1SU\r\nEND:DAYLIGHT",
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0200\r\nTZOFFSETTO:+0100\r\nTZNAME:CET\r\nDTSTART:19701025T030000\r\nRRULE:FREQ=YEARLY;BYMONTH=10;BYDAY=-1SU\r\nEND:STANDARD"
    ],
    latitude: "+0412000",
    longitude: "+0195000"
  },
  "Europe/Tiraspol": {
    ics: [
      "BEGIN:DAYLIGHT\r\nTZOFFSETFROM:+0200\r\nTZOFFSETTO:+0300\r\nTZNAME:EEST\r\nDTSTART:19700329T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=-1SU\r\nEND:DAYLIGHT",
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0300\r\nTZOFFSETTO:+0200\r\nTZNAME:EET\r\nDTSTART:19701025T030000\r\nRRULE:FREQ=YEARLY;BYMONTH=10;BYDAY=-1SU\r\nEND:STANDARD"
    ]
  },
  "Europe/Ulyanovsk": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0400\r\nTZOFFSETTO:+0400\r\nTZNAME:+04\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "+0542000",
    longitude: "+0482400"
  },
  "Europe/Uzhgorod": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0300\r\nTZOFFSETTO:+0200\r\nTZNAME:EET\r\nDTSTART:19701025T040000\r\nRRULE:FREQ=YEARLY;BYMONTH=10;BYDAY=-1SU\r\nEND:STANDARD",
      "BEGIN:DAYLIGHT\r\nTZOFFSETFROM:+0200\r\nTZOFFSETTO:+0300\r\nTZNAME:EEST\r\nDTSTART:19700329T030000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=-1SU\r\nEND:DAYLIGHT"
    ]
  },
  "Europe/Vaduz": {
    ics: [
      "BEGIN:DAYLIGHT\r\nTZOFFSETFROM:+0100\r\nTZOFFSETTO:+0200\r\nTZNAME:CEST\r\nDTSTART:19700329T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=-1SU\r\nEND:DAYLIGHT",
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0200\r\nTZOFFSETTO:+0100\r\nTZNAME:CET\r\nDTSTART:19701025T030000\r\nRRULE:FREQ=YEARLY;BYMONTH=10;BYDAY=-1SU\r\nEND:STANDARD"
    ]
  },
  "Europe/Vatican": {
    ics: [
      "BEGIN:DAYLIGHT\r\nTZOFFSETFROM:+0100\r\nTZOFFSETTO:+0200\r\nTZNAME:CEST\r\nDTSTART:19700329T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=-1SU\r\nEND:DAYLIGHT",
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0200\r\nTZOFFSETTO:+0100\r\nTZNAME:CET\r\nDTSTART:19701025T030000\r\nRRULE:FREQ=YEARLY;BYMONTH=10;BYDAY=-1SU\r\nEND:STANDARD"
    ]
  },
  "Europe/Vienna": {
    ics: [
      "BEGIN:DAYLIGHT\r\nTZOFFSETFROM:+0100\r\nTZOFFSETTO:+0200\r\nTZNAME:CEST\r\nDTSTART:19700329T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=-1SU\r\nEND:DAYLIGHT",
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0200\r\nTZOFFSETTO:+0100\r\nTZNAME:CET\r\nDTSTART:19701025T030000\r\nRRULE:FREQ=YEARLY;BYMONTH=10;BYDAY=-1SU\r\nEND:STANDARD"
    ],
    latitude: "+0481300",
    longitude: "+0162000"
  },
  "Europe/Vilnius": {
    ics: [
      "BEGIN:DAYLIGHT\r\nTZOFFSETFROM:+0200\r\nTZOFFSETTO:+0300\r\nTZNAME:EEST\r\nDTSTART:19700329T030000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=-1SU\r\nEND:DAYLIGHT",
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0300\r\nTZOFFSETTO:+0200\r\nTZNAME:EET\r\nDTSTART:19701025T040000\r\nRRULE:FREQ=YEARLY;BYMONTH=10;BYDAY=-1SU\r\nEND:STANDARD"
    ],
    latitude: "+0544100",
    longitude: "+0251900"
  },
  "Europe/Volgograd": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0300\r\nTZOFFSETTO:+0300\r\nTZNAME:MSK\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "+0484400",
    longitude: "+0442500"
  },
  "Europe/Warsaw": {
    ics: [
      "BEGIN:DAYLIGHT\r\nTZOFFSETFROM:+0100\r\nTZOFFSETTO:+0200\r\nTZNAME:CEST\r\nDTSTART:19700329T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=-1SU\r\nEND:DAYLIGHT",
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0200\r\nTZOFFSETTO:+0100\r\nTZNAME:CET\r\nDTSTART:19701025T030000\r\nRRULE:FREQ=YEARLY;BYMONTH=10;BYDAY=-1SU\r\nEND:STANDARD"
    ],
    latitude: "+0521500",
    longitude: "+0210000"
  },
  "Europe/Zagreb": {
    ics: [
      "BEGIN:DAYLIGHT\r\nTZOFFSETFROM:+0100\r\nTZOFFSETTO:+0200\r\nTZNAME:CEST\r\nDTSTART:19700329T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=-1SU\r\nEND:DAYLIGHT",
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0200\r\nTZOFFSETTO:+0100\r\nTZNAME:CET\r\nDTSTART:19701025T030000\r\nRRULE:FREQ=YEARLY;BYMONTH=10;BYDAY=-1SU\r\nEND:STANDARD"
    ]
  },
  "Europe/Zaporozhye": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0300\r\nTZOFFSETTO:+0200\r\nTZNAME:EET\r\nDTSTART:19701025T040000\r\nRRULE:FREQ=YEARLY;BYMONTH=10;BYDAY=-1SU\r\nEND:STANDARD",
      "BEGIN:DAYLIGHT\r\nTZOFFSETFROM:+0200\r\nTZOFFSETTO:+0300\r\nTZNAME:EEST\r\nDTSTART:19700329T030000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=-1SU\r\nEND:DAYLIGHT"
    ]
  },
  "Europe/Zurich": {
    ics: [
      "BEGIN:DAYLIGHT\r\nTZOFFSETFROM:+0100\r\nTZOFFSETTO:+0200\r\nTZNAME:CEST\r\nDTSTART:19700329T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=-1SU\r\nEND:DAYLIGHT",
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0200\r\nTZOFFSETTO:+0100\r\nTZNAME:CET\r\nDTSTART:19701025T030000\r\nRRULE:FREQ=YEARLY;BYMONTH=10;BYDAY=-1SU\r\nEND:STANDARD"
    ],
    latitude: "+0472300",
    longitude: "+0083200"
  },
  "Indian/Antananarivo": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0300\r\nTZOFFSETTO:+0300\r\nTZNAME:EAT\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ]
  },
  "Indian/Chagos": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0600\r\nTZOFFSETTO:+0600\r\nTZNAME:+06\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "-0072000",
    longitude: "+0722500"
  },
  "Indian/Christmas": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0700\r\nTZOFFSETTO:+0700\r\nTZNAME:+07\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ]
  },
  "Indian/Cocos": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0630\r\nTZOFFSETTO:+0630\r\nTZNAME:+0630\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ]
  },
  "Indian/Comoro": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0300\r\nTZOFFSETTO:+0300\r\nTZNAME:EAT\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ]
  },
  "Indian/Kerguelen": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0500\r\nTZOFFSETTO:+0500\r\nTZNAME:+05\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ]
  },
  "Indian/Mahe": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0400\r\nTZOFFSETTO:+0400\r\nTZNAME:+04\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ]
  },
  "Indian/Maldives": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0500\r\nTZOFFSETTO:+0500\r\nTZNAME:+05\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "+0041000",
    longitude: "+0733000"
  },
  "Indian/Mauritius": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0400\r\nTZOFFSETTO:+0400\r\nTZNAME:+04\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "-0201000",
    longitude: "+0573000"
  },
  "Indian/Mayotte": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0300\r\nTZOFFSETTO:+0300\r\nTZNAME:EAT\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ]
  },
  "Indian/Reunion": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0400\r\nTZOFFSETTO:+0400\r\nTZNAME:+04\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ]
  },
  "Mexico/BajaNorte": {
    ics: [
      "BEGIN:DAYLIGHT\r\nTZOFFSETFROM:-0800\r\nTZOFFSETTO:-0700\r\nTZNAME:PDT\r\nDTSTART:19700308T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=2SU\r\nEND:DAYLIGHT",
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0700\r\nTZOFFSETTO:-0800\r\nTZNAME:PST\r\nDTSTART:19701101T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=11;BYDAY=1SU\r\nEND:STANDARD"
    ]
  },
  "Mexico/BajaSur": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0700\r\nTZOFFSETTO:-0700\r\nTZNAME:MST\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ]
  },
  "Mexico/General": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0600\r\nTZOFFSETTO:-0600\r\nTZNAME:CST\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ]
  },
  "Pacific/Apia": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+1300\r\nTZOFFSETTO:+1300\r\nTZNAME:+13\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "-0135000",
    longitude: "-1714400"
  },
  "Pacific/Auckland": {
    ics: [
      "BEGIN:DAYLIGHT\r\nTZOFFSETFROM:+1200\r\nTZOFFSETTO:+1300\r\nTZNAME:NZDT\r\nDTSTART:19700927T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=9;BYDAY=-1SU\r\nEND:DAYLIGHT",
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+1300\r\nTZOFFSETTO:+1200\r\nTZNAME:NZST\r\nDTSTART:19700405T030000\r\nRRULE:FREQ=YEARLY;BYMONTH=4;BYDAY=1SU\r\nEND:STANDARD"
    ],
    latitude: "-0365200",
    longitude: "+1744600"
  },
  "Pacific/Bougainville": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+1100\r\nTZOFFSETTO:+1100\r\nTZNAME:+11\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "-0061300",
    longitude: "+1553400"
  },
  "Pacific/Chatham": {
    ics: [
      "BEGIN:DAYLIGHT\r\nTZOFFSETFROM:+1245\r\nTZOFFSETTO:+1345\r\nTZNAME:+1345\r\nDTSTART:19700927T024500\r\nRRULE:FREQ=YEARLY;BYMONTH=9;BYDAY=-1SU\r\nEND:DAYLIGHT",
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+1345\r\nTZOFFSETTO:+1245\r\nTZNAME:+1245\r\nDTSTART:19700405T034500\r\nRRULE:FREQ=YEARLY;BYMONTH=4;BYDAY=1SU\r\nEND:STANDARD"
    ],
    latitude: "-0435700",
    longitude: "-1763300"
  },
  "Pacific/Chuuk": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+1000\r\nTZOFFSETTO:+1000\r\nTZNAME:+10\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ]
  },
  "Pacific/Easter": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0500\r\nTZOFFSETTO:-0600\r\nTZNAME:-06\r\nDTSTART:19700404T220000\r\nRRULE:FREQ=YEARLY;BYMONTH=4;BYDAY=1SA\r\nEND:STANDARD",
      "BEGIN:DAYLIGHT\r\nTZOFFSETFROM:-0600\r\nTZOFFSETTO:-0500\r\nTZNAME:-05\r\nDTSTART:19700905T220000\r\nRRULE:FREQ=YEARLY;BYMONTH=9;BYDAY=1SA\r\nEND:DAYLIGHT"
    ],
    latitude: "-0270900",
    longitude: "-1092600"
  },
  "Pacific/Efate": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+1100\r\nTZOFFSETTO:+1100\r\nTZNAME:+11\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "-0174000",
    longitude: "+1682500"
  },
  "Pacific/Enderbury": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+1300\r\nTZOFFSETTO:+1300\r\nTZNAME:+13\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ]
  },
  "Pacific/Fakaofo": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+1300\r\nTZOFFSETTO:+1300\r\nTZNAME:+13\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "-0092200",
    longitude: "-1711400"
  },
  "Pacific/Fiji": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+1200\r\nTZOFFSETTO:+1200\r\nTZNAME:+12\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "-0180800",
    longitude: "+1782500"
  },
  "Pacific/Funafuti": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+1200\r\nTZOFFSETTO:+1200\r\nTZNAME:+12\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ]
  },
  "Pacific/Galapagos": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0600\r\nTZOFFSETTO:-0600\r\nTZNAME:-06\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "+0005400",
    longitude: "-0893600"
  },
  "Pacific/Gambier": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0900\r\nTZOFFSETTO:-0900\r\nTZNAME:-09\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "-0230800",
    longitude: "-1345700"
  },
  "Pacific/Guadalcanal": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+1100\r\nTZOFFSETTO:+1100\r\nTZNAME:+11\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "-0093200",
    longitude: "+1601200"
  },
  "Pacific/Guam": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+1000\r\nTZOFFSETTO:+1000\r\nTZNAME:ChST\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "+0132800",
    longitude: "+1444500"
  },
  "Pacific/Honolulu": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-1000\r\nTZOFFSETTO:-1000\r\nTZNAME:HST\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "+0211825",
    longitude: "-1575130"
  },
  "Pacific/Johnston": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-1000\r\nTZOFFSETTO:-1000\r\nTZNAME:HST\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ]
  },
  "Pacific/Kanton": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+1300\r\nTZOFFSETTO:+1300\r\nTZNAME:+13\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "-0024700",
    longitude: "-1714300"
  },
  "Pacific/Kiritimati": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+1400\r\nTZOFFSETTO:+1400\r\nTZNAME:+14\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "+0015200",
    longitude: "-1572000"
  },
  "Pacific/Kosrae": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+1100\r\nTZOFFSETTO:+1100\r\nTZNAME:+11\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "+0051900",
    longitude: "+1625900"
  },
  "Pacific/Kwajalein": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+1200\r\nTZOFFSETTO:+1200\r\nTZNAME:+12\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "+0090500",
    longitude: "+1672000"
  },
  "Pacific/Majuro": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+1200\r\nTZOFFSETTO:+1200\r\nTZNAME:+12\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ]
  },
  "Pacific/Marquesas": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0930\r\nTZOFFSETTO:-0930\r\nTZNAME:-0930\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "-0090000",
    longitude: "-1393000"
  },
  "Pacific/Midway": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-1100\r\nTZOFFSETTO:-1100\r\nTZNAME:SST\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ]
  },
  "Pacific/Nauru": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+1200\r\nTZOFFSETTO:+1200\r\nTZNAME:+12\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "+0003100",
    longitude: "+1665500"
  },
  "Pacific/Niue": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-1100\r\nTZOFFSETTO:-1100\r\nTZNAME:-11\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "-0190100",
    longitude: "-1695500"
  },
  "Pacific/Norfolk": {
    ics: [
      "BEGIN:DAYLIGHT\r\nTZOFFSETFROM:+1100\r\nTZOFFSETTO:+1200\r\nTZNAME:+12\r\nDTSTART:19701004T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=10;BYDAY=1SU\r\nEND:DAYLIGHT",
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+1200\r\nTZOFFSETTO:+1100\r\nTZNAME:+11\r\nDTSTART:19700405T030000\r\nRRULE:FREQ=YEARLY;BYMONTH=4;BYDAY=1SU\r\nEND:STANDARD"
    ],
    latitude: "-0290300",
    longitude: "+1675800"
  },
  "Pacific/Noumea": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+1100\r\nTZOFFSETTO:+1100\r\nTZNAME:+11\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "-0221600",
    longitude: "+1662700"
  },
  "Pacific/Pago_Pago": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-1100\r\nTZOFFSETTO:-1100\r\nTZNAME:SST\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "-0141600",
    longitude: "-1704200"
  },
  "Pacific/Palau": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+0900\r\nTZOFFSETTO:+0900\r\nTZNAME:+09\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "+0072000",
    longitude: "+1342900"
  },
  "Pacific/Pitcairn": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0800\r\nTZOFFSETTO:-0800\r\nTZNAME:-08\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "-0250400",
    longitude: "-1300500"
  },
  "Pacific/Pohnpei": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+1100\r\nTZOFFSETTO:+1100\r\nTZNAME:+11\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ]
  },
  "Pacific/Ponape": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+1100\r\nTZOFFSETTO:+1100\r\nTZNAME:+11\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ]
  },
  "Pacific/Port_Moresby": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+1000\r\nTZOFFSETTO:+1000\r\nTZNAME:+10\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "-0093000",
    longitude: "+1471000"
  },
  "Pacific/Rarotonga": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-1000\r\nTZOFFSETTO:-1000\r\nTZNAME:-10\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "-0211400",
    longitude: "-1594600"
  },
  "Pacific/Saipan": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+1000\r\nTZOFFSETTO:+1000\r\nTZNAME:ChST\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ]
  },
  "Pacific/Samoa": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-1100\r\nTZOFFSETTO:-1100\r\nTZNAME:SST\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ]
  },
  "Pacific/Tahiti": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-1000\r\nTZOFFSETTO:-1000\r\nTZNAME:-10\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "-0173200",
    longitude: "-1493400"
  },
  "Pacific/Tarawa": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+1200\r\nTZOFFSETTO:+1200\r\nTZNAME:+12\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "+0012500",
    longitude: "+1730000"
  },
  "Pacific/Tongatapu": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+1300\r\nTZOFFSETTO:+1300\r\nTZNAME:+13\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ],
    latitude: "-0210800",
    longitude: "-1751200"
  },
  "Pacific/Truk": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+1000\r\nTZOFFSETTO:+1000\r\nTZNAME:+10\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ]
  },
  "Pacific/Wake": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+1200\r\nTZOFFSETTO:+1200\r\nTZNAME:+12\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ]
  },
  "Pacific/Wallis": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+1200\r\nTZOFFSETTO:+1200\r\nTZNAME:+12\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ]
  },
  "Pacific/Yap": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:+1000\r\nTZOFFSETTO:+1000\r\nTZNAME:+10\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ]
  },
  "US/Alaska": {
    ics: [
      "BEGIN:DAYLIGHT\r\nTZOFFSETFROM:-0900\r\nTZOFFSETTO:-0800\r\nTZNAME:AKDT\r\nDTSTART:19700308T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=2SU\r\nEND:DAYLIGHT",
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0800\r\nTZOFFSETTO:-0900\r\nTZNAME:AKST\r\nDTSTART:19701101T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=11;BYDAY=1SU\r\nEND:STANDARD"
    ]
  },
  "US/Aleutian": {
    ics: [
      "BEGIN:DAYLIGHT\r\nTZOFFSETFROM:-1000\r\nTZOFFSETTO:-0900\r\nTZNAME:HDT\r\nDTSTART:19700308T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=2SU\r\nEND:DAYLIGHT",
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0900\r\nTZOFFSETTO:-1000\r\nTZNAME:HST\r\nDTSTART:19701101T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=11;BYDAY=1SU\r\nEND:STANDARD"
    ]
  },
  "US/Arizona": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0700\r\nTZOFFSETTO:-0700\r\nTZNAME:MST\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ]
  },
  "US/Central": {
    ics: [
      "BEGIN:DAYLIGHT\r\nTZOFFSETFROM:-0600\r\nTZOFFSETTO:-0500\r\nTZNAME:CDT\r\nDTSTART:19700308T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=2SU\r\nEND:DAYLIGHT",
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0500\r\nTZOFFSETTO:-0600\r\nTZNAME:CST\r\nDTSTART:19701101T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=11;BYDAY=1SU\r\nEND:STANDARD"
    ]
  },
  "US/East-Indiana": {
    ics: [
      "BEGIN:DAYLIGHT\r\nTZOFFSETFROM:-0500\r\nTZOFFSETTO:-0400\r\nTZNAME:EDT\r\nDTSTART:19700308T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=2SU\r\nEND:DAYLIGHT",
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0400\r\nTZOFFSETTO:-0500\r\nTZNAME:EST\r\nDTSTART:19701101T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=11;BYDAY=1SU\r\nEND:STANDARD"
    ]
  },
  "US/Eastern": {
    ics: [
      "BEGIN:DAYLIGHT\r\nTZOFFSETFROM:-0500\r\nTZOFFSETTO:-0400\r\nTZNAME:EDT\r\nDTSTART:19700308T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=2SU\r\nEND:DAYLIGHT",
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0400\r\nTZOFFSETTO:-0500\r\nTZNAME:EST\r\nDTSTART:19701101T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=11;BYDAY=1SU\r\nEND:STANDARD"
    ]
  },
  "US/Hawaii": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-1000\r\nTZOFFSETTO:-1000\r\nTZNAME:HST\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ]
  },
  "US/Indiana-Starke": {
    ics: [
      "BEGIN:DAYLIGHT\r\nTZOFFSETFROM:-0600\r\nTZOFFSETTO:-0500\r\nTZNAME:CDT\r\nDTSTART:19700308T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=2SU\r\nEND:DAYLIGHT",
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0500\r\nTZOFFSETTO:-0600\r\nTZNAME:CST\r\nDTSTART:19701101T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=11;BYDAY=1SU\r\nEND:STANDARD"
    ]
  },
  "US/Michigan": {
    ics: [
      "BEGIN:DAYLIGHT\r\nTZOFFSETFROM:-0500\r\nTZOFFSETTO:-0400\r\nTZNAME:EDT\r\nDTSTART:19700308T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=2SU\r\nEND:DAYLIGHT",
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0400\r\nTZOFFSETTO:-0500\r\nTZNAME:EST\r\nDTSTART:19701101T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=11;BYDAY=1SU\r\nEND:STANDARD"
    ]
  },
  "US/Mountain": {
    ics: [
      "BEGIN:DAYLIGHT\r\nTZOFFSETFROM:-0700\r\nTZOFFSETTO:-0600\r\nTZNAME:MDT\r\nDTSTART:19700308T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=2SU\r\nEND:DAYLIGHT",
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0600\r\nTZOFFSETTO:-0700\r\nTZNAME:MST\r\nDTSTART:19701101T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=11;BYDAY=1SU\r\nEND:STANDARD"
    ]
  },
  "US/Pacific": {
    ics: [
      "BEGIN:DAYLIGHT\r\nTZOFFSETFROM:-0800\r\nTZOFFSETTO:-0700\r\nTZNAME:PDT\r\nDTSTART:19700308T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=2SU\r\nEND:DAYLIGHT",
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-0700\r\nTZOFFSETTO:-0800\r\nTZNAME:PST\r\nDTSTART:19701101T020000\r\nRRULE:FREQ=YEARLY;BYMONTH=11;BYDAY=1SU\r\nEND:STANDARD"
    ]
  },
  "US/Samoa": {
    ics: [
      "BEGIN:STANDARD\r\nTZOFFSETFROM:-1100\r\nTZOFFSETTO:-1100\r\nTZNAME:SST\r\nDTSTART:19700101T000000\r\nEND:STANDARD"
    ]
  }
};
const tzData = {
  version,
  aliases,
  zones
};
class TimezoneManager {
  /**
   * Constructor
   */
  constructor() {
    this._aliases = /* @__PURE__ */ new Map();
    this._pendingAliases = [];
    this._timezones = /* @__PURE__ */ new Map();
  }
  /**
   * Gets a timezone for the given id
   *
   * @param {string} timezoneId The id of the timezone
   * @return {Timezone|null}
   */
  getTimezoneForId(timezoneId) {
    return this._getTimezoneForIdRec(timezoneId, 0);
  }
  _getTimezoneForIdRec(timezoneId, level) {
    if (this._timezones.has(timezoneId)) {
      return this._timezones.get(timezoneId);
    }
    if (level >= 20) {
      console.error("TimezoneManager.getTimezoneForIdRec() exceeds recursion limits");
      return null;
    }
    if (this._aliases.has(timezoneId)) {
      const resolvedTimezoneId = this._aliases.get(timezoneId);
      return this._getTimezoneForIdRec(resolvedTimezoneId, level + 1);
    }
    return null;
  }
  /**
   * Checks if there is a timezone for the given id stored in this manager
   *
   * @param {string} timezoneId The id of the timezone
   * @return {boolean}
   */
  hasTimezoneForId(timezoneId) {
    return this._timezones.has(timezoneId) || this._aliases.has(timezoneId);
  }
  /**
   * Checks if the given timezone id is an alias
   *
   * @param {string} timezoneId The id of the timezone
   * @return {boolean}
   */
  isAlias(timezoneId) {
    return !this._timezones.has(timezoneId) && this._aliases.has(timezoneId);
  }
  /**
   * Lists all timezones
   *
   * @param {boolean=} includeAliases Whether or not to include aliases
   * @return {string[]}
   */
  listAllTimezones(includeAliases = false) {
    const timezones = Array.from(this._timezones.keys());
    if (includeAliases) {
      return timezones.concat(Array.from(this._aliases.keys()));
    }
    return timezones;
  }
  /**
   * Registers a timezone
   *
   * @param {Timezone} timezone The timezone-object to register
   */
  registerTimezone(timezone) {
    this._timezones.set(timezone.timezoneId, timezone);
    ICALmodule.TimezoneService.register(timezone.timezoneId, timezone.toICALTimezone());
    this._pendingAliases = this._pendingAliases.filter(([aliasName, timezoneId]) => {
      if (timezoneId !== timezone.timezoneId) {
        return true;
      }
      ICALmodule.TimezoneService.register(aliasName, timezone.toICALTimezone());
      return false;
    });
  }
  registerDefaultTimezones() {
    console.debug(`@nextcloud/calendar-js app is using version ${tzData.version} of the timezone database`);
    for (const tzid in tzData.zones) {
      if (Object.prototype.hasOwnProperty.call(tzData.zones, [tzid])) {
        const ics = [
          "BEGIN:VTIMEZONE",
          "TZID:" + tzid,
          ...tzData.zones[tzid].ics,
          "END:VTIMEZONE"
        ].join("\r\n");
        this.registerTimezoneFromICS(tzid, ics);
      }
    }
    for (const tzid in tzData.aliases) {
      if (Object.prototype.hasOwnProperty.call(tzData.aliases, [tzid])) {
        this.registerAlias(tzid, tzData.aliases[tzid].aliasTo);
      }
    }
  }
  /**
   * Registers a timezone based on ics data
   *
   * @param {string} timezoneId The id of the timezone
   * @param {string} ics The iCalendar timezone definition
   */
  registerTimezoneFromICS(timezoneId, ics) {
    const timezone = new Timezone2(timezoneId, ics);
    this.registerTimezone(timezone);
  }
  /**
   * Registers a new timezone-alias
   *
   * @param {string} aliasName The timezone-id of the alias
   * @param {string} timezoneId The timezone-id to resolve the alias to
   */
  registerAlias(aliasName, timezoneId) {
    this._aliases.set(aliasName, timezoneId);
    const resolvedTimezone = this.getTimezoneForId(timezoneId);
    if (!resolvedTimezone) {
      this._pendingAliases.push([aliasName, timezoneId]);
      return;
    }
    ICALmodule.TimezoneService.register(aliasName, resolvedTimezone.toICALTimezone());
  }
  /**
   * Unregisters a timezone
   *
   * @param {string} timezoneId Unregisters a timezone by Id
   */
  unregisterTimezones(timezoneId) {
    this._timezones.delete(timezoneId);
    ICALmodule.TimezoneService.remove(timezoneId);
  }
  /**
   * Unregisters a timezone-alias
   *
   * @param {string} aliasName The alias to unregister
   */
  unregisterAlias(aliasName) {
    this._aliases.delete(aliasName);
    this._pendingAliases = this._pendingAliases.filter(([pendingAliasName]) => pendingAliasName !== aliasName);
    ICALmodule.TimezoneService.remove(aliasName);
  }
  /**
   * Clear all timezones
   */
  clearAllTimezones() {
    this._aliases = /* @__PURE__ */ new Map();
    this._pendingAliases = [];
    this._timezones = /* @__PURE__ */ new Map();
    ICALmodule.TimezoneService.reset();
    timezoneManager$1.registerTimezone(Timezone2.utc);
    timezoneManager$1.registerTimezone(Timezone2.floating);
    timezoneManager$1.registerAlias("GMT", Timezone2.utc.timezoneId);
    timezoneManager$1.registerAlias("Z", Timezone2.utc.timezoneId);
  }
}
const timezoneManager$1 = new TimezoneManager();
timezoneManager$1.clearAllTimezones();
function getTimezoneManager$1() {
  return timezoneManager$1;
}
var vueSelect = { exports: {} };
(function(module, exports) {
  !function(e2, t4) {
    module.exports = t4();
  }("undefined" != typeof self ? self : commonjsGlobal, function() {
    return (() => {
      var e2 = { 646: (e3) => {
        e3.exports = function(e4) {
          if (Array.isArray(e4)) {
            for (var t30 = 0, n2 = new Array(e4.length); t30 < e4.length; t30++) n2[t30] = e4[t30];
            return n2;
          }
        };
      }, 713: (e3) => {
        e3.exports = function(e4, t30, n2) {
          return t30 in e4 ? Object.defineProperty(e4, t30, { value: n2, enumerable: true, configurable: true, writable: true }) : e4[t30] = n2, e4;
        };
      }, 860: (e3) => {
        e3.exports = function(e4) {
          if (Symbol.iterator in Object(e4) || "[object Arguments]" === Object.prototype.toString.call(e4)) return Array.from(e4);
        };
      }, 206: (e3) => {
        e3.exports = function() {
          throw new TypeError("Invalid attempt to spread non-iterable instance");
        };
      }, 319: (e3, t30, n2) => {
        var o2 = n2(646), i = n2(860), s2 = n2(206);
        e3.exports = function(e4) {
          return o2(e4) || i(e4) || s2();
        };
      }, 8: (e3) => {
        function t30(n2) {
          return "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? e3.exports = t30 = function(e4) {
            return typeof e4;
          } : e3.exports = t30 = function(e4) {
            return e4 && "function" == typeof Symbol && e4.constructor === Symbol && e4 !== Symbol.prototype ? "symbol" : typeof e4;
          }, t30(n2);
        }
        e3.exports = t30;
      } }, t4 = {};
      function n(o2) {
        var i = t4[o2];
        if (void 0 !== i) return i.exports;
        var s2 = t4[o2] = { exports: {} };
        return e2[o2](s2, s2.exports, n), s2.exports;
      }
      n.n = (e3) => {
        var t30 = e3 && e3.__esModule ? () => e3.default : () => e3;
        return n.d(t30, { a: t30 }), t30;
      }, n.d = (e3, t30) => {
        for (var o2 in t30) n.o(t30, o2) && !n.o(e3, o2) && Object.defineProperty(e3, o2, { enumerable: true, get: t30[o2] });
      }, n.o = (e3, t30) => Object.prototype.hasOwnProperty.call(e3, t30), n.r = (e3) => {
        "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(e3, Symbol.toStringTag, { value: "Module" }), Object.defineProperty(e3, "__esModule", { value: true });
      };
      var o = {};
      return (() => {
        n.r(o), n.d(o, { VueSelect: () => m2, default: () => _2, mixins: () => O });
        var e3 = n(319), t30 = n.n(e3), i = n(8), s2 = n.n(i), r = n(713), a2 = n.n(r);
        const l = { props: { autoscroll: { type: Boolean, default: true } }, watch: { typeAheadPointer: function() {
          this.autoscroll && this.maybeAdjustScroll();
        }, open: function(e4) {
          var t33 = this;
          this.autoscroll && e4 && this.$nextTick(function() {
            return t33.maybeAdjustScroll();
          });
        } }, methods: { maybeAdjustScroll: function() {
          var e4, t33 = (null === (e4 = this.$refs.dropdownMenu) || void 0 === e4 ? void 0 : e4.children[this.typeAheadPointer]) || false;
          if (t33) {
            var n2 = this.getDropdownViewport(), o2 = t33.getBoundingClientRect(), i2 = o2.top, s3 = o2.bottom, r2 = o2.height;
            if (i2 < n2.top) return this.$refs.dropdownMenu.scrollTop = t33.offsetTop;
            if (s3 > n2.bottom) return this.$refs.dropdownMenu.scrollTop = t33.offsetTop - (n2.height - r2);
          }
        }, getDropdownViewport: function() {
          return this.$refs.dropdownMenu ? this.$refs.dropdownMenu.getBoundingClientRect() : { height: 0, top: 0, bottom: 0 };
        } } }, c = { data: function() {
          return { typeAheadPointer: -1 };
        }, watch: { filteredOptions: function() {
          if (this.resetFocusOnOptionsChange) {
            for (var e4 = 0; e4 < this.filteredOptions.length; e4++) if (this.selectable(this.filteredOptions[e4])) {
              this.typeAheadPointer = e4;
              break;
            }
          }
        }, open: function(e4) {
          e4 && this.typeAheadToLastSelected();
        }, selectedValue: function() {
          this.open && this.typeAheadToLastSelected();
        } }, methods: { typeAheadUp: function() {
          for (var e4 = this.typeAheadPointer - 1; e4 >= 0; e4--) if (this.selectable(this.filteredOptions[e4])) {
            this.typeAheadPointer = e4;
            break;
          }
        }, typeAheadDown: function() {
          for (var e4 = this.typeAheadPointer + 1; e4 < this.filteredOptions.length; e4++) if (this.selectable(this.filteredOptions[e4])) {
            this.typeAheadPointer = e4;
            break;
          }
        }, typeAheadSelect: function() {
          var e4 = this.filteredOptions[this.typeAheadPointer];
          e4 && this.selectable(e4) && this.select(e4);
        }, typeAheadToLastSelected: function() {
          var e4 = 0 !== this.selectedValue.length ? this.filteredOptions.indexOf(this.selectedValue[this.selectedValue.length - 1]) : -1;
          -1 !== e4 && (this.typeAheadPointer = e4);
        } } }, u = { props: { loading: { type: Boolean, default: false } }, data: function() {
          return { mutableLoading: false };
        }, watch: { search: function() {
          this.$emit("search", this.search, this.toggleLoading);
        }, loading: function(e4) {
          this.mutableLoading = e4;
        } }, methods: { toggleLoading: function() {
          var e4 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : null;
          return this.mutableLoading = null == e4 ? !this.mutableLoading : e4;
        } } };
        function p(e4, t33, n2, o2, i2, s3, r2, a3) {
          var l2, c2 = "function" == typeof e4 ? e4.options : e4;
          if (t33 && (c2.render = t33, c2.staticRenderFns = n2, c2._compiled = true), l2) ;
          return { exports: e4, options: c2 };
        }
        const d2 = { Deselect: p({}, function() {
          var e4 = this.$createElement, t33 = this._self._c || e4;
          return t33("svg", { attrs: { xmlns: "http://www.w3.org/2000/svg", width: "10", height: "10" } }, [t33("path", { attrs: { d: "M6.895455 5l2.842897-2.842898c.348864-.348863.348864-.914488 0-1.263636L9.106534.261648c-.348864-.348864-.914489-.348864-1.263636 0L5 3.104545 2.157102.261648c-.348863-.348864-.914488-.348864-1.263636 0L.261648.893466c-.348864.348864-.348864.914489 0 1.263636L3.104545 5 .261648 7.842898c-.348864.348863-.348864.914488 0 1.263636l.631818.631818c.348864.348864.914773.348864 1.263636 0L5 6.895455l2.842898 2.842897c.348863.348864.914772.348864 1.263636 0l.631818-.631818c.348864-.348864.348864-.914489 0-1.263636L6.895455 5z" } })]);
        }, []).exports, OpenIndicator: p({}, function() {
          var e4 = this.$createElement, t33 = this._self._c || e4;
          return t33("svg", { attrs: { xmlns: "http://www.w3.org/2000/svg", width: "14", height: "10" } }, [t33("path", { attrs: { d: "M9.211364 7.59931l4.48338-4.867229c.407008-.441854.407008-1.158247 0-1.60046l-.73712-.80023c-.407008-.441854-1.066904-.441854-1.474243 0L7 5.198617 2.51662.33139c-.407008-.441853-1.066904-.441853-1.474243 0l-.737121.80023c-.407008.441854-.407008 1.158248 0 1.600461l4.48338 4.867228L7 10l2.211364-2.40069z" } })]);
        }, []).exports }, h3 = { inserted: function(e4, t33, n2) {
          var o2 = n2.context;
          if (o2.appendToBody) {
            document.body.appendChild(e4);
            var i2 = o2.$refs.toggle.getBoundingClientRect(), s3 = i2.height, r2 = i2.top, a3 = i2.left, l2 = i2.width, c2 = window.scrollX || window.pageXOffset, u2 = window.scrollY || window.pageYOffset;
            e4.unbindPosition = o2.calculatePosition(e4, o2, { width: l2 + "px", left: c2 + a3 + "px", top: u2 + r2 + s3 + "px" });
          }
        }, unbind: function(e4, t33, n2) {
          n2.context.appendToBody && (e4.unbindPosition && "function" == typeof e4.unbindPosition && e4.unbindPosition(), e4.parentNode && e4.parentNode.removeChild(e4));
        } };
        const f2 = function(e4) {
          var t33 = {};
          return Object.keys(e4).sort().forEach(function(n2) {
            t33[n2] = e4[n2];
          }), JSON.stringify(t33);
        };
        var y = 0;
        const b = function() {
          return ++y;
        };
        function g(e4, t33) {
          var n2 = Object.keys(e4);
          if (Object.getOwnPropertySymbols) {
            var o2 = Object.getOwnPropertySymbols(e4);
            t33 && (o2 = o2.filter(function(t51) {
              return Object.getOwnPropertyDescriptor(e4, t51).enumerable;
            })), n2.push.apply(n2, o2);
          }
          return n2;
        }
        function v2(e4) {
          for (var t33 = 1; t33 < arguments.length; t33++) {
            var n2 = null != arguments[t33] ? arguments[t33] : {};
            t33 % 2 ? g(Object(n2), true).forEach(function(t51) {
              a2()(e4, t51, n2[t51]);
            }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e4, Object.getOwnPropertyDescriptors(n2)) : g(Object(n2)).forEach(function(t51) {
              Object.defineProperty(e4, t51, Object.getOwnPropertyDescriptor(n2, t51));
            });
          }
          return e4;
        }
        const m2 = p({ components: v2({}, d2), directives: { appendToBody: h3 }, mixins: [l, c, u], props: { value: {}, components: { type: Object, default: function() {
          return {};
        } }, options: { type: Array, default: function() {
          return [];
        } }, limit: { type: Number, default: null }, disabled: { type: Boolean, default: false }, clearable: { type: Boolean, default: true }, deselectFromDropdown: { type: Boolean, default: false }, searchable: { type: Boolean, default: true }, multiple: { type: Boolean, default: false }, placeholder: { type: String, default: "" }, transition: { type: String, default: "vs__fade" }, clearSearchOnSelect: { type: Boolean, default: true }, closeOnSelect: { type: Boolean, default: true }, label: { type: String, default: "label" }, ariaLabelCombobox: { type: String, default: "Search for options" }, ariaLabelListbox: { type: String, default: "Options" }, ariaLabelClearSelected: { type: String, default: "Clear selected" }, ariaLabelDeselectOption: { type: Function, default: function(e4) {
          return "Deselect ".concat(e4);
        } }, autocomplete: { type: String, default: "off" }, reduce: { type: Function, default: function(e4) {
          return e4;
        } }, selectable: { type: Function, default: function(e4) {
          return true;
        } }, getOptionLabel: { type: Function, default: function(e4) {
          return "object" === s2()(e4) ? e4.hasOwnProperty(this.label) ? e4[this.label] : console.warn('[vue-select warn]: Label key "option.'.concat(this.label, '" does not') + " exist in options object ".concat(JSON.stringify(e4), ".\n") + "https://vue-select.org/api/props.html#getoptionlabel") : e4;
        } }, getOptionKey: { type: Function, default: function(e4) {
          if ("object" !== s2()(e4)) return e4;
          try {
            return e4.hasOwnProperty("id") ? e4.id : f2(e4);
          } catch (t33) {
            return console.warn("[vue-select warn]: Could not stringify this option to generate unique key. Please provide'getOptionKey' prop to return a unique key for each option.\nhttps://vue-select.org/api/props.html#getoptionkey", e4, t33);
          }
        } }, onTab: { type: Function, default: function() {
          this.selectOnTab && !this.isComposing && this.typeAheadSelect();
        } }, taggable: { type: Boolean, default: false }, tabindex: { type: Number, default: null }, pushTags: { type: Boolean, default: false }, filterable: { type: Boolean, default: true }, filterBy: { type: Function, default: function(e4, t33, n2) {
          return (t33 || "").toLocaleLowerCase().indexOf(n2.toLocaleLowerCase()) > -1;
        } }, filter: { type: Function, default: function(e4, t33) {
          var n2 = this;
          return e4.filter(function(e5) {
            var o2 = n2.getOptionLabel(e5);
            return "number" == typeof o2 && (o2 = o2.toString()), n2.filterBy(e5, o2, t33);
          });
        } }, createOption: { type: Function, default: function(e4) {
          return "object" === s2()(this.optionList[0]) ? a2()({}, this.label, e4) : e4;
        } }, resetFocusOnOptionsChange: { type: Boolean, default: true }, resetOnOptionsChange: { default: false, validator: function(e4) {
          return ["function", "boolean"].includes(s2()(e4));
        } }, clearSearchOnBlur: { type: Function, default: function(e4) {
          var t33 = e4.clearSearchOnSelect, n2 = e4.multiple;
          return t33 && !n2;
        } }, noDrop: { type: Boolean, default: false }, inputId: { type: String }, dir: { type: String, default: "auto" }, selectOnTab: { type: Boolean, default: false }, selectOnKeyCodes: { type: Array, default: function() {
          return [13];
        } }, searchInputQuerySelector: { type: String, default: "[type=search]" }, mapKeydown: { type: Function, default: function(e4, t33) {
          return e4;
        } }, appendToBody: { type: Boolean, default: false }, calculatePosition: { type: Function, default: function(e4, t33, n2) {
          var o2 = n2.width, i2 = n2.top, s3 = n2.left;
          e4.style.top = i2, e4.style.left = s3, e4.style.width = o2;
        } }, dropdownShouldOpen: { type: Function, default: function(e4) {
          var t33 = e4.noDrop, n2 = e4.open, o2 = e4.mutableLoading;
          return !t33 && (n2 && !o2);
        } }, keyboardFocusBorder: { type: Boolean, default: false }, uid: { type: [String, Number], default: function() {
          return b();
        } } }, data: function() {
          return { search: "", open: false, isComposing: false, isKeyboardNavigation: false, pushedTags: [], _value: [] };
        }, computed: { isTrackingValues: function() {
          return void 0 === this.value || this.$options.propsData.hasOwnProperty("reduce");
        }, selectedValue: function() {
          var e4 = this.value;
          return this.isTrackingValues && (e4 = this.$data._value), null != e4 && "" !== e4 ? [].concat(e4) : [];
        }, optionList: function() {
          return this.options.concat(this.pushTags ? this.pushedTags : []);
        }, searchEl: function() {
          return this.$scopedSlots.search ? this.$refs.selectedOptions.querySelector(this.searchInputQuerySelector) : this.$refs.search;
        }, scope: function() {
          var e4 = this, t33 = { search: this.search, loading: this.loading, searching: this.searching, filteredOptions: this.filteredOptions };
          return { search: { attributes: v2({ id: this.inputId, disabled: this.disabled, placeholder: this.searchPlaceholder, tabindex: this.tabindex, readonly: !this.searchable, role: "combobox", "aria-autocomplete": "list", "aria-label": this.ariaLabelCombobox, "aria-controls": "vs-".concat(this.uid, "__listbox"), "aria-owns": "vs-".concat(this.uid, "__listbox"), "aria-expanded": this.dropdownOpen.toString(), ref: "search", type: "search", autocomplete: this.autocomplete, value: this.search }, this.dropdownOpen && this.filteredOptions[this.typeAheadPointer] ? { "aria-activedescendant": "vs-".concat(this.uid, "__option-").concat(this.typeAheadPointer) } : {}), events: { compositionstart: function() {
            return e4.isComposing = true;
          }, compositionend: function() {
            return e4.isComposing = false;
          }, keydown: this.onSearchKeyDown, keypress: this.onSearchKeyPress, blur: this.onSearchBlur, focus: this.onSearchFocus, input: function(t51) {
            return e4.search = t51.target.value;
          } } }, spinner: { loading: this.mutableLoading }, noOptions: { search: this.search, loading: this.mutableLoading, searching: this.searching }, openIndicator: { attributes: { ref: "openIndicator", role: "presentation", class: "vs__open-indicator" } }, listHeader: t33, listFooter: t33, header: v2({}, t33, { deselect: this.deselect }), footer: v2({}, t33, { deselect: this.deselect }) };
        }, childComponents: function() {
          return v2({}, d2, {}, this.components);
        }, stateClasses: function() {
          return { "vs--open": this.dropdownOpen, "vs--single": !this.multiple, "vs--multiple": this.multiple, "vs--searching": this.searching && !this.noDrop, "vs--searchable": this.searchable && !this.noDrop, "vs--unsearchable": !this.searchable, "vs--loading": this.mutableLoading, "vs--disabled": this.disabled };
        }, searching: function() {
          return !!this.search;
        }, dropdownOpen: function() {
          return this.dropdownShouldOpen(this);
        }, searchPlaceholder: function() {
          return this.isValueEmpty && this.placeholder ? this.placeholder : void 0;
        }, filteredOptions: function() {
          var e4 = this, t33 = function(t51) {
            return null !== e4.limit ? t51.slice(0, e4.limit) : t51;
          }, n2 = [].concat(this.optionList);
          if (!this.filterable && !this.taggable) return t33(n2);
          var o2 = this.search.length ? this.filter(n2, this.search, this) : n2;
          if (this.taggable && this.search.length) {
            var i2 = this.createOption(this.search);
            this.optionExists(i2) || o2.unshift(i2);
          }
          return t33(o2);
        }, isValueEmpty: function() {
          return 0 === this.selectedValue.length;
        }, showClearButton: function() {
          return !this.multiple && this.clearable && !this.open && !this.isValueEmpty;
        } }, watch: { options: function(e4, t33) {
          var n2 = this;
          !this.taggable && ("function" == typeof n2.resetOnOptionsChange ? n2.resetOnOptionsChange(e4, t33, n2.selectedValue) : n2.resetOnOptionsChange) && this.clearSelection(), this.value && this.isTrackingValues && this.setInternalValueFromOptions(this.value);
        }, value: { immediate: true, handler: function(e4) {
          this.isTrackingValues && this.setInternalValueFromOptions(e4);
        } }, multiple: function() {
          this.clearSelection();
        }, open: function(e4) {
          this.$emit(e4 ? "open" : "close");
        }, search: function(e4) {
          e4.length && (this.open = true);
        } }, created: function() {
          this.mutableLoading = this.loading, this.$on("option:created", this.pushTag);
        }, methods: { setInternalValueFromOptions: function(e4) {
          var t33 = this;
          Array.isArray(e4) ? this.$data._value = e4.map(function(e5) {
            return t33.findOptionFromReducedValue(e5);
          }) : this.$data._value = this.findOptionFromReducedValue(e4);
        }, select: function(e4) {
          this.$emit("option:selecting", e4), this.isOptionSelected(e4) ? this.deselectFromDropdown && (this.clearable || this.multiple && this.selectedValue.length > 1) && this.deselect(e4) : (this.taggable && !this.optionExists(e4) && this.$emit("option:created", e4), this.multiple && (e4 = this.selectedValue.concat(e4)), this.updateValue(e4), this.$emit("option:selected", e4)), this.onAfterSelect(e4);
        }, deselect: function(e4) {
          var t33 = this;
          this.$emit("option:deselecting", e4), this.updateValue(this.selectedValue.filter(function(n2) {
            return !t33.optionComparator(n2, e4);
          })), this.$emit("option:deselected", e4);
        }, keyboardDeselect: function(e4, t33) {
          var n2, o2;
          this.deselect(e4);
          var i2 = null === (n2 = this.$refs.deselectButtons) || void 0 === n2 ? void 0 : n2[t33 + 1], s3 = null === (o2 = this.$refs.deselectButtons) || void 0 === o2 ? void 0 : o2[t33 - 1], r2 = null != i2 ? i2 : s3;
          r2 ? r2.focus() : this.searchEl.focus();
        }, clearSelection: function() {
          this.updateValue(this.multiple ? [] : null), this.searchEl.focus();
        }, onAfterSelect: function(e4) {
          var t33 = this;
          this.closeOnSelect && (this.open = !this.open), this.clearSearchOnSelect && (this.search = ""), this.noDrop && this.multiple && this.$nextTick(function() {
            return t33.$refs.search.focus();
          });
        }, updateValue: function(e4) {
          var t33 = this;
          void 0 === this.value && (this.$data._value = e4), null !== e4 && (e4 = Array.isArray(e4) ? e4.map(function(e5) {
            return t33.reduce(e5);
          }) : this.reduce(e4)), this.$emit("input", e4);
        }, toggleDropdown: function(e4) {
          var n2 = e4.target !== this.searchEl;
          n2 && e4.preventDefault();
          var o2 = [].concat(t30()(this.$refs.deselectButtons || []), t30()([this.$refs.clearButton]));
          void 0 === this.searchEl || o2.filter(Boolean).some(function(t33) {
            return t33.contains(e4.target) || t33 === e4.target;
          }) ? e4.preventDefault() : this.open && n2 ? this.searchEl.blur() : this.disabled || (this.open = true, this.searchEl.focus());
        }, isOptionSelected: function(e4) {
          var t33 = this;
          return this.selectedValue.some(function(n2) {
            return t33.optionComparator(n2, e4);
          });
        }, isOptionDeselectable: function(e4) {
          return this.isOptionSelected(e4) && this.deselectFromDropdown;
        }, hasKeyboardFocusBorder: function(e4) {
          return !(!this.keyboardFocusBorder || !this.isKeyboardNavigation) && e4 === this.typeAheadPointer;
        }, optionComparator: function(e4, t33) {
          return this.getOptionKey(e4) === this.getOptionKey(t33);
        }, findOptionFromReducedValue: function(e4) {
          var n2 = this, o2 = [].concat(t30()(this.options), t30()(this.pushedTags)).filter(function(t33) {
            return JSON.stringify(n2.reduce(t33)) === JSON.stringify(e4);
          });
          return 1 === o2.length ? o2[0] : o2.find(function(e5) {
            return n2.optionComparator(e5, n2.$data._value);
          }) || e4;
        }, closeSearchOptions: function() {
          this.open = false, this.$emit("search:blur");
        }, maybeDeleteValue: function() {
          if (!this.searchEl.value.length && this.selectedValue && this.selectedValue.length && this.clearable) {
            var e4 = null;
            this.multiple && (e4 = t30()(this.selectedValue.slice(0, this.selectedValue.length - 1))), this.updateValue(e4);
          }
        }, optionExists: function(e4) {
          var t33 = this;
          return this.optionList.some(function(n2) {
            return t33.optionComparator(n2, e4);
          });
        }, optionAriaSelected: function(e4) {
          return this.selectable(e4) ? String(this.isOptionSelected(e4)) : null;
        }, normalizeOptionForSlot: function(e4) {
          return "object" === s2()(e4) ? e4 : a2()({}, this.label, e4);
        }, pushTag: function(e4) {
          this.pushedTags.push(e4);
        }, onEscape: function() {
          this.search.length ? this.search = "" : this.open = false;
        }, onSearchBlur: function() {
          if (!this.mousedown || this.searching) {
            var e4 = this.clearSearchOnSelect, t33 = this.multiple;
            return this.clearSearchOnBlur({ clearSearchOnSelect: e4, multiple: t33 }) && (this.search = ""), void this.closeSearchOptions();
          }
          this.mousedown = false, 0 !== this.search.length || 0 !== this.options.length || this.closeSearchOptions();
        }, onSearchFocus: function() {
          this.open = true, this.$emit("search:focus");
        }, onMousedown: function() {
          this.mousedown = true;
        }, onMouseUp: function() {
          this.mousedown = false;
        }, onMouseMove: function(e4, t33) {
          this.isKeyboardNavigation = false, this.selectable(e4) && (this.typeAheadPointer = t33);
        }, onSearchKeyDown: function(e4) {
          var t33 = this, n2 = function(e5) {
            if (e5.preventDefault(), t33.open) return !t33.isComposing && t33.typeAheadSelect();
            t33.open = true;
          }, o2 = { 8: function(e5) {
            return t33.maybeDeleteValue();
          }, 9: function(e5) {
            return t33.onTab();
          }, 27: function(e5) {
            return t33.onEscape();
          }, 38: function(e5) {
            if (e5.preventDefault(), t33.isKeyboardNavigation = true, t33.open) return t33.typeAheadUp();
            t33.open = true;
          }, 40: function(e5) {
            if (e5.preventDefault(), t33.isKeyboardNavigation = true, t33.open) return t33.typeAheadDown();
            t33.open = true;
          } };
          this.selectOnKeyCodes.forEach(function(e5) {
            return o2[e5] = n2;
          });
          var i2 = this.mapKeydown(o2, this);
          if ("function" == typeof i2[e4.keyCode]) return i2[e4.keyCode](e4);
        }, onSearchKeyPress: function(e4) {
          this.open || 32 !== e4.keyCode || (e4.preventDefault(), this.open = true);
        } } }, function() {
          var e4 = this, t33 = e4.$createElement, n2 = e4._self._c || t33;
          return n2("div", { staticClass: "v-select", class: e4.stateClasses, attrs: { id: "v-select-" + e4.uid, dir: e4.dir } }, [e4._t("header", null, null, e4.scope.header), e4._v(" "), n2("div", { ref: "toggle", staticClass: "vs__dropdown-toggle" }, [n2("div", { ref: "selectedOptions", staticClass: "vs__selected-options", on: { mousedown: e4.toggleDropdown } }, [e4._l(e4.selectedValue, function(t51, o2) {
            return e4._t("selected-option-container", [n2("span", { key: e4.getOptionKey(t51), staticClass: "vs__selected" }, [e4._t("selected-option", [e4._v("\n            " + e4._s(e4.getOptionLabel(t51)) + "\n          ")], null, e4.normalizeOptionForSlot(t51)), e4._v(" "), e4.multiple ? n2("button", { ref: "deselectButtons", refInFor: true, staticClass: "vs__deselect", attrs: { disabled: e4.disabled, type: "button", title: e4.ariaLabelDeselectOption(e4.getOptionLabel(t51)), "aria-label": e4.ariaLabelDeselectOption(e4.getOptionLabel(t51)) }, on: { mousedown: function(n3) {
              return n3.stopPropagation(), e4.deselect(t51);
            }, keydown: function(n3) {
              return !n3.type.indexOf("key") && e4._k(n3.keyCode, "enter", 13, n3.key, "Enter") ? null : e4.keyboardDeselect(t51, o2);
            } } }, [n2(e4.childComponents.Deselect, { tag: "component" })], 1) : e4._e()], 2)], { option: e4.normalizeOptionForSlot(t51), deselect: e4.deselect, multiple: e4.multiple, disabled: e4.disabled });
          }), e4._v(" "), e4._t("search", [n2("input", e4._g(e4._b({ staticClass: "vs__search" }, "input", e4.scope.search.attributes, false), e4.scope.search.events))], null, e4.scope.search)], 2), e4._v(" "), n2("div", { ref: "actions", staticClass: "vs__actions" }, [n2("button", { directives: [{ name: "show", rawName: "v-show", value: e4.showClearButton, expression: "showClearButton" }], ref: "clearButton", staticClass: "vs__clear", attrs: { disabled: e4.disabled, type: "button", title: e4.ariaLabelClearSelected, "aria-label": e4.ariaLabelClearSelected }, on: { click: e4.clearSelection } }, [n2(e4.childComponents.Deselect, { tag: "component" })], 1), e4._v(" "), e4.noDrop ? e4._e() : n2("button", { ref: "openIndicatorButton", staticClass: "vs__open-indicator-button", attrs: { type: "button", tabindex: "-1", "aria-labelledby": "vs-" + e4.uid + "__listbox", "aria-controls": "vs-" + e4.uid + "__listbox", "aria-expanded": e4.dropdownOpen.toString() }, on: { mousedown: e4.toggleDropdown } }, [e4._t("open-indicator", [n2(e4.childComponents.OpenIndicator, e4._b({ tag: "component" }, "component", e4.scope.openIndicator.attributes, false))], null, e4.scope.openIndicator)], 2), e4._v(" "), e4._t("spinner", [n2("div", { directives: [{ name: "show", rawName: "v-show", value: e4.mutableLoading, expression: "mutableLoading" }], staticClass: "vs__spinner" }, [e4._v("Loading...")])], null, e4.scope.spinner)], 2)]), e4._v(" "), n2("transition", { attrs: { name: e4.transition } }, [e4.dropdownOpen ? n2("ul", { directives: [{ name: "append-to-body", rawName: "v-append-to-body" }], key: "vs-" + e4.uid + "__listbox", ref: "dropdownMenu", staticClass: "vs__dropdown-menu", attrs: { id: "vs-" + e4.uid + "__listbox", role: "listbox", "aria-label": e4.ariaLabelListbox, "aria-multiselectable": e4.multiple, tabindex: "-1" }, on: { mousedown: function(t51) {
            return t51.preventDefault(), e4.onMousedown(t51);
          }, mouseup: e4.onMouseUp } }, [e4._t("list-header", null, null, e4.scope.listHeader), e4._v(" "), e4._l(e4.filteredOptions, function(t51, o2) {
            return n2("li", { key: e4.getOptionKey(t51), staticClass: "vs__dropdown-option", class: { "vs__dropdown-option--deselect": e4.isOptionDeselectable(t51) && o2 === e4.typeAheadPointer, "vs__dropdown-option--selected": e4.isOptionSelected(t51), "vs__dropdown-option--highlight": o2 === e4.typeAheadPointer, "vs__dropdown-option--kb-focus": e4.hasKeyboardFocusBorder(o2), "vs__dropdown-option--disabled": !e4.selectable(t51) }, attrs: { id: "vs-" + e4.uid + "__option-" + o2, role: "option", "aria-selected": e4.optionAriaSelected(t51) }, on: { mousemove: function(n3) {
              return e4.onMouseMove(t51, o2);
            }, click: function(n3) {
              n3.preventDefault(), n3.stopPropagation(), e4.selectable(t51) && e4.select(t51);
            } } }, [e4._t("option", [e4._v("\n          " + e4._s(e4.getOptionLabel(t51)) + "\n        ")], null, e4.normalizeOptionForSlot(t51))], 2);
          }), e4._v(" "), 0 === e4.filteredOptions.length ? n2("li", { staticClass: "vs__no-options" }, [e4._t("no-options", [e4._v("\n          Sorry, no matching options.\n        ")], null, e4.scope.noOptions)], 2) : e4._e(), e4._v(" "), e4._t("list-footer", null, null, e4.scope.listFooter)], 2) : n2("ul", { staticStyle: { display: "none", visibility: "hidden" }, attrs: { id: "vs-" + e4.uid + "__listbox", role: "listbox", "aria-label": e4.ariaLabelListbox } })]), e4._v(" "), e4._t("footer", null, null, e4.scope.footer)], 2);
        }, []).exports, O = { ajax: u, pointer: c, pointerScroll: l }, _2 = m2;
      })(), o;
    })();
  });
})(vueSelect);
var vueSelectExports = vueSelect.exports;
const min = Math.min;
const max = Math.max;
const round = Math.round;
const floor = Math.floor;
const createCoords = (v2) => ({
  x: v2,
  y: v2
});
const oppositeSideMap = {
  left: "right",
  right: "left",
  bottom: "top",
  top: "bottom"
};
const oppositeAlignmentMap = {
  start: "end",
  end: "start"
};
function clamp(start, value3, end) {
  return max(start, min(value3, end));
}
function evaluate(value3, param) {
  return typeof value3 === "function" ? value3(param) : value3;
}
function getSide(placement) {
  return placement.split("-")[0];
}
function getAlignment(placement) {
  return placement.split("-")[1];
}
function getOppositeAxis(axis) {
  return axis === "x" ? "y" : "x";
}
function getAxisLength(axis) {
  return axis === "y" ? "height" : "width";
}
function getSideAxis(placement) {
  return ["top", "bottom"].includes(getSide(placement)) ? "y" : "x";
}
function getAlignmentAxis(placement) {
  return getOppositeAxis(getSideAxis(placement));
}
function getAlignmentSides(placement, rects, rtl) {
  if (rtl === void 0) {
    rtl = false;
  }
  const alignment = getAlignment(placement);
  const alignmentAxis = getAlignmentAxis(placement);
  const length = getAxisLength(alignmentAxis);
  let mainAlignmentSide = alignmentAxis === "x" ? alignment === (rtl ? "end" : "start") ? "right" : "left" : alignment === "start" ? "bottom" : "top";
  if (rects.reference[length] > rects.floating[length]) {
    mainAlignmentSide = getOppositePlacement(mainAlignmentSide);
  }
  return [mainAlignmentSide, getOppositePlacement(mainAlignmentSide)];
}
function getExpandedPlacements(placement) {
  const oppositePlacement = getOppositePlacement(placement);
  return [getOppositeAlignmentPlacement(placement), oppositePlacement, getOppositeAlignmentPlacement(oppositePlacement)];
}
function getOppositeAlignmentPlacement(placement) {
  return placement.replace(/start|end/g, (alignment) => oppositeAlignmentMap[alignment]);
}
function getSideList(side, isStart, rtl) {
  const lr = ["left", "right"];
  const rl = ["right", "left"];
  const tb = ["top", "bottom"];
  const bt = ["bottom", "top"];
  switch (side) {
    case "top":
    case "bottom":
      if (rtl) return isStart ? rl : lr;
      return isStart ? lr : rl;
    case "left":
    case "right":
      return isStart ? tb : bt;
    default:
      return [];
  }
}
function getOppositeAxisPlacements(placement, flipAlignment, direction, rtl) {
  const alignment = getAlignment(placement);
  let list2 = getSideList(getSide(placement), direction === "start", rtl);
  if (alignment) {
    list2 = list2.map((side) => side + "-" + alignment);
    if (flipAlignment) {
      list2 = list2.concat(list2.map(getOppositeAlignmentPlacement));
    }
  }
  return list2;
}
function getOppositePlacement(placement) {
  return placement.replace(/left|right|bottom|top/g, (side) => oppositeSideMap[side]);
}
function expandPaddingObject(padding) {
  return {
    top: 0,
    right: 0,
    bottom: 0,
    left: 0,
    ...padding
  };
}
function getPaddingObject(padding) {
  return typeof padding !== "number" ? expandPaddingObject(padding) : {
    top: padding,
    right: padding,
    bottom: padding,
    left: padding
  };
}
function rectToClientRect(rect) {
  const {
    x: x2,
    y,
    width,
    height
  } = rect;
  return {
    width,
    height,
    top: y,
    left: x2,
    right: x2 + width,
    bottom: y + height,
    x: x2,
    y
  };
}
function computeCoordsFromPlacement(_ref, placement, rtl) {
  let {
    reference,
    floating
  } = _ref;
  const sideAxis = getSideAxis(placement);
  const alignmentAxis = getAlignmentAxis(placement);
  const alignLength = getAxisLength(alignmentAxis);
  const side = getSide(placement);
  const isVertical = sideAxis === "y";
  const commonX = reference.x + reference.width / 2 - floating.width / 2;
  const commonY = reference.y + reference.height / 2 - floating.height / 2;
  const commonAlign = reference[alignLength] / 2 - floating[alignLength] / 2;
  let coords;
  switch (side) {
    case "top":
      coords = {
        x: commonX,
        y: reference.y - floating.height
      };
      break;
    case "bottom":
      coords = {
        x: commonX,
        y: reference.y + reference.height
      };
      break;
    case "right":
      coords = {
        x: reference.x + reference.width,
        y: commonY
      };
      break;
    case "left":
      coords = {
        x: reference.x - floating.width,
        y: commonY
      };
      break;
    default:
      coords = {
        x: reference.x,
        y: reference.y
      };
  }
  switch (getAlignment(placement)) {
    case "start":
      coords[alignmentAxis] -= commonAlign * (rtl && isVertical ? -1 : 1);
      break;
    case "end":
      coords[alignmentAxis] += commonAlign * (rtl && isVertical ? -1 : 1);
      break;
  }
  return coords;
}
const computePosition$1 = async (reference, floating, config2) => {
  const {
    placement = "bottom",
    strategy = "absolute",
    middleware = [],
    platform: platform2
  } = config2;
  const validMiddleware = middleware.filter(Boolean);
  const rtl = await (platform2.isRTL == null ? void 0 : platform2.isRTL(floating));
  let rects = await platform2.getElementRects({
    reference,
    floating,
    strategy
  });
  let {
    x: x2,
    y
  } = computeCoordsFromPlacement(rects, placement, rtl);
  let statefulPlacement = placement;
  let middlewareData = {};
  let resetCount = 0;
  for (let i = 0; i < validMiddleware.length; i++) {
    const {
      name,
      fn
    } = validMiddleware[i];
    const {
      x: nextX,
      y: nextY,
      data: data11,
      reset
    } = await fn({
      x: x2,
      y,
      initialPlacement: placement,
      placement: statefulPlacement,
      strategy,
      middlewareData,
      rects,
      platform: platform2,
      elements: {
        reference,
        floating
      }
    });
    x2 = nextX != null ? nextX : x2;
    y = nextY != null ? nextY : y;
    middlewareData = {
      ...middlewareData,
      [name]: {
        ...middlewareData[name],
        ...data11
      }
    };
    if (reset && resetCount <= 50) {
      resetCount++;
      if (typeof reset === "object") {
        if (reset.placement) {
          statefulPlacement = reset.placement;
        }
        if (reset.rects) {
          rects = reset.rects === true ? await platform2.getElementRects({
            reference,
            floating,
            strategy
          }) : reset.rects;
        }
        ({
          x: x2,
          y
        } = computeCoordsFromPlacement(rects, statefulPlacement, rtl));
      }
      i = -1;
    }
  }
  return {
    x: x2,
    y,
    placement: statefulPlacement,
    strategy,
    middlewareData
  };
};
async function detectOverflow(state, options2) {
  var _await$platform$isEle;
  if (options2 === void 0) {
    options2 = {};
  }
  const {
    x: x2,
    y,
    platform: platform2,
    rects,
    elements,
    strategy
  } = state;
  const {
    boundary = "clippingAncestors",
    rootBoundary = "viewport",
    elementContext = "floating",
    altBoundary = false,
    padding = 0
  } = evaluate(options2, state);
  const paddingObject = getPaddingObject(padding);
  const altContext = elementContext === "floating" ? "reference" : "floating";
  const element = elements[altBoundary ? altContext : elementContext];
  const clippingClientRect = rectToClientRect(await platform2.getClippingRect({
    element: ((_await$platform$isEle = await (platform2.isElement == null ? void 0 : platform2.isElement(element))) != null ? _await$platform$isEle : true) ? element : element.contextElement || await (platform2.getDocumentElement == null ? void 0 : platform2.getDocumentElement(elements.floating)),
    boundary,
    rootBoundary,
    strategy
  }));
  const rect = elementContext === "floating" ? {
    x: x2,
    y,
    width: rects.floating.width,
    height: rects.floating.height
  } : rects.reference;
  const offsetParent = await (platform2.getOffsetParent == null ? void 0 : platform2.getOffsetParent(elements.floating));
  const offsetScale = await (platform2.isElement == null ? void 0 : platform2.isElement(offsetParent)) ? await (platform2.getScale == null ? void 0 : platform2.getScale(offsetParent)) || {
    x: 1,
    y: 1
  } : {
    x: 1,
    y: 1
  };
  const elementClientRect = rectToClientRect(platform2.convertOffsetParentRelativeRectToViewportRelativeRect ? await platform2.convertOffsetParentRelativeRectToViewportRelativeRect({
    elements,
    rect,
    offsetParent,
    strategy
  }) : rect);
  return {
    top: (clippingClientRect.top - elementClientRect.top + paddingObject.top) / offsetScale.y,
    bottom: (elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom) / offsetScale.y,
    left: (clippingClientRect.left - elementClientRect.left + paddingObject.left) / offsetScale.x,
    right: (elementClientRect.right - clippingClientRect.right + paddingObject.right) / offsetScale.x
  };
}
const flip$1 = function(options2) {
  if (options2 === void 0) {
    options2 = {};
  }
  return {
    name: "flip",
    options: options2,
    async fn(state) {
      var _middlewareData$arrow, _middlewareData$flip;
      const {
        placement,
        middlewareData,
        rects,
        initialPlacement,
        platform: platform2,
        elements
      } = state;
      const {
        mainAxis: checkMainAxis = true,
        crossAxis: checkCrossAxis = true,
        fallbackPlacements: specifiedFallbackPlacements,
        fallbackStrategy = "bestFit",
        fallbackAxisSideDirection = "none",
        flipAlignment = true,
        ...detectOverflowOptions
      } = evaluate(options2, state);
      if ((_middlewareData$arrow = middlewareData.arrow) != null && _middlewareData$arrow.alignmentOffset) {
        return {};
      }
      const side = getSide(placement);
      const initialSideAxis = getSideAxis(initialPlacement);
      const isBasePlacement = getSide(initialPlacement) === initialPlacement;
      const rtl = await (platform2.isRTL == null ? void 0 : platform2.isRTL(elements.floating));
      const fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipAlignment ? [getOppositePlacement(initialPlacement)] : getExpandedPlacements(initialPlacement));
      const hasFallbackAxisSideDirection = fallbackAxisSideDirection !== "none";
      if (!specifiedFallbackPlacements && hasFallbackAxisSideDirection) {
        fallbackPlacements.push(...getOppositeAxisPlacements(initialPlacement, flipAlignment, fallbackAxisSideDirection, rtl));
      }
      const placements = [initialPlacement, ...fallbackPlacements];
      const overflow = await detectOverflow(state, detectOverflowOptions);
      const overflows = [];
      let overflowsData = ((_middlewareData$flip = middlewareData.flip) == null ? void 0 : _middlewareData$flip.overflows) || [];
      if (checkMainAxis) {
        overflows.push(overflow[side]);
      }
      if (checkCrossAxis) {
        const sides = getAlignmentSides(placement, rects, rtl);
        overflows.push(overflow[sides[0]], overflow[sides[1]]);
      }
      overflowsData = [...overflowsData, {
        placement,
        overflows
      }];
      if (!overflows.every((side2) => side2 <= 0)) {
        var _middlewareData$flip2, _overflowsData$filter;
        const nextIndex = (((_middlewareData$flip2 = middlewareData.flip) == null ? void 0 : _middlewareData$flip2.index) || 0) + 1;
        const nextPlacement = placements[nextIndex];
        if (nextPlacement) {
          return {
            data: {
              index: nextIndex,
              overflows: overflowsData
            },
            reset: {
              placement: nextPlacement
            }
          };
        }
        let resetPlacement = (_overflowsData$filter = overflowsData.filter((d2) => d2.overflows[0] <= 0).sort((a2, b) => a2.overflows[1] - b.overflows[1])[0]) == null ? void 0 : _overflowsData$filter.placement;
        if (!resetPlacement) {
          switch (fallbackStrategy) {
            case "bestFit": {
              var _overflowsData$filter2;
              const placement2 = (_overflowsData$filter2 = overflowsData.filter((d2) => {
                if (hasFallbackAxisSideDirection) {
                  const currentSideAxis = getSideAxis(d2.placement);
                  return currentSideAxis === initialSideAxis || // Create a bias to the `y` side axis due to horizontal
                  // reading directions favoring greater width.
                  currentSideAxis === "y";
                }
                return true;
              }).map((d2) => [d2.placement, d2.overflows.filter((overflow2) => overflow2 > 0).reduce((acc, overflow2) => acc + overflow2, 0)]).sort((a2, b) => a2[1] - b[1])[0]) == null ? void 0 : _overflowsData$filter2[0];
              if (placement2) {
                resetPlacement = placement2;
              }
              break;
            }
            case "initialPlacement":
              resetPlacement = initialPlacement;
              break;
          }
        }
        if (placement !== resetPlacement) {
          return {
            reset: {
              placement: resetPlacement
            }
          };
        }
      }
      return {};
    }
  };
};
async function convertValueToCoords(state, options2) {
  const {
    placement,
    platform: platform2,
    elements
  } = state;
  const rtl = await (platform2.isRTL == null ? void 0 : platform2.isRTL(elements.floating));
  const side = getSide(placement);
  const alignment = getAlignment(placement);
  const isVertical = getSideAxis(placement) === "y";
  const mainAxisMulti = ["left", "top"].includes(side) ? -1 : 1;
  const crossAxisMulti = rtl && isVertical ? -1 : 1;
  const rawValue = evaluate(options2, state);
  let {
    mainAxis,
    crossAxis,
    alignmentAxis
  } = typeof rawValue === "number" ? {
    mainAxis: rawValue,
    crossAxis: 0,
    alignmentAxis: null
  } : {
    mainAxis: rawValue.mainAxis || 0,
    crossAxis: rawValue.crossAxis || 0,
    alignmentAxis: rawValue.alignmentAxis
  };
  if (alignment && typeof alignmentAxis === "number") {
    crossAxis = alignment === "end" ? alignmentAxis * -1 : alignmentAxis;
  }
  return isVertical ? {
    x: crossAxis * crossAxisMulti,
    y: mainAxis * mainAxisMulti
  } : {
    x: mainAxis * mainAxisMulti,
    y: crossAxis * crossAxisMulti
  };
}
const offset$1 = function(options2) {
  if (options2 === void 0) {
    options2 = 0;
  }
  return {
    name: "offset",
    options: options2,
    async fn(state) {
      var _middlewareData$offse, _middlewareData$arrow;
      const {
        x: x2,
        y,
        placement,
        middlewareData
      } = state;
      const diffCoords = await convertValueToCoords(state, options2);
      if (placement === ((_middlewareData$offse = middlewareData.offset) == null ? void 0 : _middlewareData$offse.placement) && (_middlewareData$arrow = middlewareData.arrow) != null && _middlewareData$arrow.alignmentOffset) {
        return {};
      }
      return {
        x: x2 + diffCoords.x,
        y: y + diffCoords.y,
        data: {
          ...diffCoords,
          placement
        }
      };
    }
  };
};
const shift$1 = function(options2) {
  if (options2 === void 0) {
    options2 = {};
  }
  return {
    name: "shift",
    options: options2,
    async fn(state) {
      const {
        x: x2,
        y,
        placement
      } = state;
      const {
        mainAxis: checkMainAxis = true,
        crossAxis: checkCrossAxis = false,
        limiter = {
          fn: (_ref) => {
            let {
              x: x3,
              y: y2
            } = _ref;
            return {
              x: x3,
              y: y2
            };
          }
        },
        ...detectOverflowOptions
      } = evaluate(options2, state);
      const coords = {
        x: x2,
        y
      };
      const overflow = await detectOverflow(state, detectOverflowOptions);
      const crossAxis = getSideAxis(getSide(placement));
      const mainAxis = getOppositeAxis(crossAxis);
      let mainAxisCoord = coords[mainAxis];
      let crossAxisCoord = coords[crossAxis];
      if (checkMainAxis) {
        const minSide = mainAxis === "y" ? "top" : "left";
        const maxSide = mainAxis === "y" ? "bottom" : "right";
        const min2 = mainAxisCoord + overflow[minSide];
        const max2 = mainAxisCoord - overflow[maxSide];
        mainAxisCoord = clamp(min2, mainAxisCoord, max2);
      }
      if (checkCrossAxis) {
        const minSide = crossAxis === "y" ? "top" : "left";
        const maxSide = crossAxis === "y" ? "bottom" : "right";
        const min2 = crossAxisCoord + overflow[minSide];
        const max2 = crossAxisCoord - overflow[maxSide];
        crossAxisCoord = clamp(min2, crossAxisCoord, max2);
      }
      const limitedCoords = limiter.fn({
        ...state,
        [mainAxis]: mainAxisCoord,
        [crossAxis]: crossAxisCoord
      });
      return {
        ...limitedCoords,
        data: {
          x: limitedCoords.x - x2,
          y: limitedCoords.y - y,
          enabled: {
            [mainAxis]: checkMainAxis,
            [crossAxis]: checkCrossAxis
          }
        }
      };
    }
  };
};
const limitShift$1 = function(options2) {
  if (options2 === void 0) {
    options2 = {};
  }
  return {
    options: options2,
    fn(state) {
      const {
        x: x2,
        y,
        placement,
        rects,
        middlewareData
      } = state;
      const {
        offset: offset2 = 0,
        mainAxis: checkMainAxis = true,
        crossAxis: checkCrossAxis = true
      } = evaluate(options2, state);
      const coords = {
        x: x2,
        y
      };
      const crossAxis = getSideAxis(placement);
      const mainAxis = getOppositeAxis(crossAxis);
      let mainAxisCoord = coords[mainAxis];
      let crossAxisCoord = coords[crossAxis];
      const rawOffset = evaluate(offset2, state);
      const computedOffset = typeof rawOffset === "number" ? {
        mainAxis: rawOffset,
        crossAxis: 0
      } : {
        mainAxis: 0,
        crossAxis: 0,
        ...rawOffset
      };
      if (checkMainAxis) {
        const len = mainAxis === "y" ? "height" : "width";
        const limitMin = rects.reference[mainAxis] - rects.floating[len] + computedOffset.mainAxis;
        const limitMax = rects.reference[mainAxis] + rects.reference[len] - computedOffset.mainAxis;
        if (mainAxisCoord < limitMin) {
          mainAxisCoord = limitMin;
        } else if (mainAxisCoord > limitMax) {
          mainAxisCoord = limitMax;
        }
      }
      if (checkCrossAxis) {
        var _middlewareData$offse, _middlewareData$offse2;
        const len = mainAxis === "y" ? "width" : "height";
        const isOriginSide = ["top", "left"].includes(getSide(placement));
        const limitMin = rects.reference[crossAxis] - rects.floating[len] + (isOriginSide ? ((_middlewareData$offse = middlewareData.offset) == null ? void 0 : _middlewareData$offse[crossAxis]) || 0 : 0) + (isOriginSide ? 0 : computedOffset.crossAxis);
        const limitMax = rects.reference[crossAxis] + rects.reference[len] + (isOriginSide ? 0 : ((_middlewareData$offse2 = middlewareData.offset) == null ? void 0 : _middlewareData$offse2[crossAxis]) || 0) - (isOriginSide ? computedOffset.crossAxis : 0);
        if (crossAxisCoord < limitMin) {
          crossAxisCoord = limitMin;
        } else if (crossAxisCoord > limitMax) {
          crossAxisCoord = limitMax;
        }
      }
      return {
        [mainAxis]: mainAxisCoord,
        [crossAxis]: crossAxisCoord
      };
    }
  };
};
function hasWindow() {
  return typeof window !== "undefined";
}
function getNodeName(node) {
  if (isNode(node)) {
    return (node.nodeName || "").toLowerCase();
  }
  return "#document";
}
function getWindow(node) {
  var _node$ownerDocument;
  return (node == null || (_node$ownerDocument = node.ownerDocument) == null ? void 0 : _node$ownerDocument.defaultView) || window;
}
function getDocumentElement(node) {
  var _ref;
  return (_ref = (isNode(node) ? node.ownerDocument : node.document) || window.document) == null ? void 0 : _ref.documentElement;
}
function isNode(value3) {
  if (!hasWindow()) {
    return false;
  }
  return value3 instanceof Node || value3 instanceof getWindow(value3).Node;
}
function isElement(value3) {
  if (!hasWindow()) {
    return false;
  }
  return value3 instanceof Element || value3 instanceof getWindow(value3).Element;
}
function isHTMLElement(value3) {
  if (!hasWindow()) {
    return false;
  }
  return value3 instanceof HTMLElement || value3 instanceof getWindow(value3).HTMLElement;
}
function isShadowRoot(value3) {
  if (!hasWindow() || typeof ShadowRoot === "undefined") {
    return false;
  }
  return value3 instanceof ShadowRoot || value3 instanceof getWindow(value3).ShadowRoot;
}
function isOverflowElement(element) {
  const {
    overflow,
    overflowX,
    overflowY,
    display
  } = getComputedStyle$1(element);
  return /auto|scroll|overlay|hidden|clip/.test(overflow + overflowY + overflowX) && !["inline", "contents"].includes(display);
}
function isTableElement(element) {
  return ["table", "td", "th"].includes(getNodeName(element));
}
function isTopLayer(element) {
  return [":popover-open", ":modal"].some((selector) => {
    try {
      return element.matches(selector);
    } catch (e2) {
      return false;
    }
  });
}
function isContainingBlock(elementOrCss) {
  const webkit = isWebKit();
  const css = isElement(elementOrCss) ? getComputedStyle$1(elementOrCss) : elementOrCss;
  return ["transform", "translate", "scale", "rotate", "perspective"].some((value3) => css[value3] ? css[value3] !== "none" : false) || (css.containerType ? css.containerType !== "normal" : false) || !webkit && (css.backdropFilter ? css.backdropFilter !== "none" : false) || !webkit && (css.filter ? css.filter !== "none" : false) || ["transform", "translate", "scale", "rotate", "perspective", "filter"].some((value3) => (css.willChange || "").includes(value3)) || ["paint", "layout", "strict", "content"].some((value3) => (css.contain || "").includes(value3));
}
function getContainingBlock(element) {
  let currentNode = getParentNode(element);
  while (isHTMLElement(currentNode) && !isLastTraversableNode(currentNode)) {
    if (isContainingBlock(currentNode)) {
      return currentNode;
    } else if (isTopLayer(currentNode)) {
      return null;
    }
    currentNode = getParentNode(currentNode);
  }
  return null;
}
function isWebKit() {
  if (typeof CSS === "undefined" || !CSS.supports) return false;
  return CSS.supports("-webkit-backdrop-filter", "none");
}
function isLastTraversableNode(node) {
  return ["html", "body", "#document"].includes(getNodeName(node));
}
function getComputedStyle$1(element) {
  return getWindow(element).getComputedStyle(element);
}
function getNodeScroll(element) {
  if (isElement(element)) {
    return {
      scrollLeft: element.scrollLeft,
      scrollTop: element.scrollTop
    };
  }
  return {
    scrollLeft: element.scrollX,
    scrollTop: element.scrollY
  };
}
function getParentNode(node) {
  if (getNodeName(node) === "html") {
    return node;
  }
  const result = (
    // Step into the shadow DOM of the parent of a slotted node.
    node.assignedSlot || // DOM Element detected.
    node.parentNode || // ShadowRoot detected.
    isShadowRoot(node) && node.host || // Fallback.
    getDocumentElement(node)
  );
  return isShadowRoot(result) ? result.host : result;
}
function getNearestOverflowAncestor(node) {
  const parentNode = getParentNode(node);
  if (isLastTraversableNode(parentNode)) {
    return node.ownerDocument ? node.ownerDocument.body : node.body;
  }
  if (isHTMLElement(parentNode) && isOverflowElement(parentNode)) {
    return parentNode;
  }
  return getNearestOverflowAncestor(parentNode);
}
function getOverflowAncestors(node, list2, traverseIframes) {
  var _node$ownerDocument2;
  if (list2 === void 0) {
    list2 = [];
  }
  if (traverseIframes === void 0) {
    traverseIframes = true;
  }
  const scrollableAncestor = getNearestOverflowAncestor(node);
  const isBody = scrollableAncestor === ((_node$ownerDocument2 = node.ownerDocument) == null ? void 0 : _node$ownerDocument2.body);
  const win = getWindow(scrollableAncestor);
  if (isBody) {
    const frameElement = getFrameElement(win);
    return list2.concat(win, win.visualViewport || [], isOverflowElement(scrollableAncestor) ? scrollableAncestor : [], frameElement && traverseIframes ? getOverflowAncestors(frameElement) : []);
  }
  return list2.concat(scrollableAncestor, getOverflowAncestors(scrollableAncestor, [], traverseIframes));
}
function getFrameElement(win) {
  return win.parent && Object.getPrototypeOf(win.parent) ? win.frameElement : null;
}
function getCssDimensions(element) {
  const css = getComputedStyle$1(element);
  let width = parseFloat(css.width) || 0;
  let height = parseFloat(css.height) || 0;
  const hasOffset = isHTMLElement(element);
  const offsetWidth = hasOffset ? element.offsetWidth : width;
  const offsetHeight = hasOffset ? element.offsetHeight : height;
  const shouldFallback = round(width) !== offsetWidth || round(height) !== offsetHeight;
  if (shouldFallback) {
    width = offsetWidth;
    height = offsetHeight;
  }
  return {
    width,
    height,
    $: shouldFallback
  };
}
function unwrapElement(element) {
  return !isElement(element) ? element.contextElement : element;
}
function getScale(element) {
  const domElement = unwrapElement(element);
  if (!isHTMLElement(domElement)) {
    return createCoords(1);
  }
  const rect = domElement.getBoundingClientRect();
  const {
    width,
    height,
    $
  } = getCssDimensions(domElement);
  let x2 = ($ ? round(rect.width) : rect.width) / width;
  let y = ($ ? round(rect.height) : rect.height) / height;
  if (!x2 || !Number.isFinite(x2)) {
    x2 = 1;
  }
  if (!y || !Number.isFinite(y)) {
    y = 1;
  }
  return {
    x: x2,
    y
  };
}
const noOffsets = /* @__PURE__ */ createCoords(0);
function getVisualOffsets(element) {
  const win = getWindow(element);
  if (!isWebKit() || !win.visualViewport) {
    return noOffsets;
  }
  return {
    x: win.visualViewport.offsetLeft,
    y: win.visualViewport.offsetTop
  };
}
function shouldAddVisualOffsets(element, isFixed, floatingOffsetParent) {
  if (isFixed === void 0) {
    isFixed = false;
  }
  if (!floatingOffsetParent || isFixed && floatingOffsetParent !== getWindow(element)) {
    return false;
  }
  return isFixed;
}
function getBoundingClientRect(element, includeScale, isFixedStrategy, offsetParent) {
  if (includeScale === void 0) {
    includeScale = false;
  }
  if (isFixedStrategy === void 0) {
    isFixedStrategy = false;
  }
  const clientRect = element.getBoundingClientRect();
  const domElement = unwrapElement(element);
  let scale = createCoords(1);
  if (includeScale) {
    if (offsetParent) {
      if (isElement(offsetParent)) {
        scale = getScale(offsetParent);
      }
    } else {
      scale = getScale(element);
    }
  }
  const visualOffsets = shouldAddVisualOffsets(domElement, isFixedStrategy, offsetParent) ? getVisualOffsets(domElement) : createCoords(0);
  let x2 = (clientRect.left + visualOffsets.x) / scale.x;
  let y = (clientRect.top + visualOffsets.y) / scale.y;
  let width = clientRect.width / scale.x;
  let height = clientRect.height / scale.y;
  if (domElement) {
    const win = getWindow(domElement);
    const offsetWin = offsetParent && isElement(offsetParent) ? getWindow(offsetParent) : offsetParent;
    let currentWin = win;
    let currentIFrame = getFrameElement(currentWin);
    while (currentIFrame && offsetParent && offsetWin !== currentWin) {
      const iframeScale = getScale(currentIFrame);
      const iframeRect = currentIFrame.getBoundingClientRect();
      const css = getComputedStyle$1(currentIFrame);
      const left = iframeRect.left + (currentIFrame.clientLeft + parseFloat(css.paddingLeft)) * iframeScale.x;
      const top = iframeRect.top + (currentIFrame.clientTop + parseFloat(css.paddingTop)) * iframeScale.y;
      x2 *= iframeScale.x;
      y *= iframeScale.y;
      width *= iframeScale.x;
      height *= iframeScale.y;
      x2 += left;
      y += top;
      currentWin = getWindow(currentIFrame);
      currentIFrame = getFrameElement(currentWin);
    }
  }
  return rectToClientRect({
    width,
    height,
    x: x2,
    y
  });
}
function getWindowScrollBarX(element, rect) {
  const leftScroll = getNodeScroll(element).scrollLeft;
  if (!rect) {
    return getBoundingClientRect(getDocumentElement(element)).left + leftScroll;
  }
  return rect.left + leftScroll;
}
function getHTMLOffset(documentElement, scroll, ignoreScrollbarX) {
  if (ignoreScrollbarX === void 0) {
    ignoreScrollbarX = false;
  }
  const htmlRect = documentElement.getBoundingClientRect();
  const x2 = htmlRect.left + scroll.scrollLeft - (ignoreScrollbarX ? 0 : (
    // RTL <body> scrollbar.
    getWindowScrollBarX(documentElement, htmlRect)
  ));
  const y = htmlRect.top + scroll.scrollTop;
  return {
    x: x2,
    y
  };
}
function convertOffsetParentRelativeRectToViewportRelativeRect(_ref) {
  let {
    elements,
    rect,
    offsetParent,
    strategy
  } = _ref;
  const isFixed = strategy === "fixed";
  const documentElement = getDocumentElement(offsetParent);
  const topLayer = elements ? isTopLayer(elements.floating) : false;
  if (offsetParent === documentElement || topLayer && isFixed) {
    return rect;
  }
  let scroll = {
    scrollLeft: 0,
    scrollTop: 0
  };
  let scale = createCoords(1);
  const offsets = createCoords(0);
  const isOffsetParentAnElement = isHTMLElement(offsetParent);
  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {
    if (getNodeName(offsetParent) !== "body" || isOverflowElement(documentElement)) {
      scroll = getNodeScroll(offsetParent);
    }
    if (isHTMLElement(offsetParent)) {
      const offsetRect = getBoundingClientRect(offsetParent);
      scale = getScale(offsetParent);
      offsets.x = offsetRect.x + offsetParent.clientLeft;
      offsets.y = offsetRect.y + offsetParent.clientTop;
    }
  }
  const htmlOffset = documentElement && !isOffsetParentAnElement && !isFixed ? getHTMLOffset(documentElement, scroll, true) : createCoords(0);
  return {
    width: rect.width * scale.x,
    height: rect.height * scale.y,
    x: rect.x * scale.x - scroll.scrollLeft * scale.x + offsets.x + htmlOffset.x,
    y: rect.y * scale.y - scroll.scrollTop * scale.y + offsets.y + htmlOffset.y
  };
}
function getClientRects(element) {
  return Array.from(element.getClientRects());
}
function getDocumentRect(element) {
  const html = getDocumentElement(element);
  const scroll = getNodeScroll(element);
  const body = element.ownerDocument.body;
  const width = max(html.scrollWidth, html.clientWidth, body.scrollWidth, body.clientWidth);
  const height = max(html.scrollHeight, html.clientHeight, body.scrollHeight, body.clientHeight);
  let x2 = -scroll.scrollLeft + getWindowScrollBarX(element);
  const y = -scroll.scrollTop;
  if (getComputedStyle$1(body).direction === "rtl") {
    x2 += max(html.clientWidth, body.clientWidth) - width;
  }
  return {
    width,
    height,
    x: x2,
    y
  };
}
function getViewportRect(element, strategy) {
  const win = getWindow(element);
  const html = getDocumentElement(element);
  const visualViewport = win.visualViewport;
  let width = html.clientWidth;
  let height = html.clientHeight;
  let x2 = 0;
  let y = 0;
  if (visualViewport) {
    width = visualViewport.width;
    height = visualViewport.height;
    const visualViewportBased = isWebKit();
    if (!visualViewportBased || visualViewportBased && strategy === "fixed") {
      x2 = visualViewport.offsetLeft;
      y = visualViewport.offsetTop;
    }
  }
  return {
    width,
    height,
    x: x2,
    y
  };
}
function getInnerBoundingClientRect(element, strategy) {
  const clientRect = getBoundingClientRect(element, true, strategy === "fixed");
  const top = clientRect.top + element.clientTop;
  const left = clientRect.left + element.clientLeft;
  const scale = isHTMLElement(element) ? getScale(element) : createCoords(1);
  const width = element.clientWidth * scale.x;
  const height = element.clientHeight * scale.y;
  const x2 = left * scale.x;
  const y = top * scale.y;
  return {
    width,
    height,
    x: x2,
    y
  };
}
function getClientRectFromClippingAncestor(element, clippingAncestor, strategy) {
  let rect;
  if (clippingAncestor === "viewport") {
    rect = getViewportRect(element, strategy);
  } else if (clippingAncestor === "document") {
    rect = getDocumentRect(getDocumentElement(element));
  } else if (isElement(clippingAncestor)) {
    rect = getInnerBoundingClientRect(clippingAncestor, strategy);
  } else {
    const visualOffsets = getVisualOffsets(element);
    rect = {
      x: clippingAncestor.x - visualOffsets.x,
      y: clippingAncestor.y - visualOffsets.y,
      width: clippingAncestor.width,
      height: clippingAncestor.height
    };
  }
  return rectToClientRect(rect);
}
function hasFixedPositionAncestor(element, stopNode) {
  const parentNode = getParentNode(element);
  if (parentNode === stopNode || !isElement(parentNode) || isLastTraversableNode(parentNode)) {
    return false;
  }
  return getComputedStyle$1(parentNode).position === "fixed" || hasFixedPositionAncestor(parentNode, stopNode);
}
function getClippingElementAncestors(element, cache) {
  const cachedResult = cache.get(element);
  if (cachedResult) {
    return cachedResult;
  }
  let result = getOverflowAncestors(element, [], false).filter((el) => isElement(el) && getNodeName(el) !== "body");
  let currentContainingBlockComputedStyle = null;
  const elementIsFixed = getComputedStyle$1(element).position === "fixed";
  let currentNode = elementIsFixed ? getParentNode(element) : element;
  while (isElement(currentNode) && !isLastTraversableNode(currentNode)) {
    const computedStyle = getComputedStyle$1(currentNode);
    const currentNodeIsContaining = isContainingBlock(currentNode);
    if (!currentNodeIsContaining && computedStyle.position === "fixed") {
      currentContainingBlockComputedStyle = null;
    }
    const shouldDropCurrentNode = elementIsFixed ? !currentNodeIsContaining && !currentContainingBlockComputedStyle : !currentNodeIsContaining && computedStyle.position === "static" && !!currentContainingBlockComputedStyle && ["absolute", "fixed"].includes(currentContainingBlockComputedStyle.position) || isOverflowElement(currentNode) && !currentNodeIsContaining && hasFixedPositionAncestor(element, currentNode);
    if (shouldDropCurrentNode) {
      result = result.filter((ancestor) => ancestor !== currentNode);
    } else {
      currentContainingBlockComputedStyle = computedStyle;
    }
    currentNode = getParentNode(currentNode);
  }
  cache.set(element, result);
  return result;
}
function getClippingRect(_ref) {
  let {
    element,
    boundary,
    rootBoundary,
    strategy
  } = _ref;
  const elementClippingAncestors = boundary === "clippingAncestors" ? isTopLayer(element) ? [] : getClippingElementAncestors(element, this._c) : [].concat(boundary);
  const clippingAncestors = [...elementClippingAncestors, rootBoundary];
  const firstClippingAncestor = clippingAncestors[0];
  const clippingRect = clippingAncestors.reduce((accRect, clippingAncestor) => {
    const rect = getClientRectFromClippingAncestor(element, clippingAncestor, strategy);
    accRect.top = max(rect.top, accRect.top);
    accRect.right = min(rect.right, accRect.right);
    accRect.bottom = min(rect.bottom, accRect.bottom);
    accRect.left = max(rect.left, accRect.left);
    return accRect;
  }, getClientRectFromClippingAncestor(element, firstClippingAncestor, strategy));
  return {
    width: clippingRect.right - clippingRect.left,
    height: clippingRect.bottom - clippingRect.top,
    x: clippingRect.left,
    y: clippingRect.top
  };
}
function getDimensions(element) {
  const {
    width,
    height
  } = getCssDimensions(element);
  return {
    width,
    height
  };
}
function getRectRelativeToOffsetParent(element, offsetParent, strategy) {
  const isOffsetParentAnElement = isHTMLElement(offsetParent);
  const documentElement = getDocumentElement(offsetParent);
  const isFixed = strategy === "fixed";
  const rect = getBoundingClientRect(element, true, isFixed, offsetParent);
  let scroll = {
    scrollLeft: 0,
    scrollTop: 0
  };
  const offsets = createCoords(0);
  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {
    if (getNodeName(offsetParent) !== "body" || isOverflowElement(documentElement)) {
      scroll = getNodeScroll(offsetParent);
    }
    if (isOffsetParentAnElement) {
      const offsetRect = getBoundingClientRect(offsetParent, true, isFixed, offsetParent);
      offsets.x = offsetRect.x + offsetParent.clientLeft;
      offsets.y = offsetRect.y + offsetParent.clientTop;
    } else if (documentElement) {
      offsets.x = getWindowScrollBarX(documentElement);
    }
  }
  const htmlOffset = documentElement && !isOffsetParentAnElement && !isFixed ? getHTMLOffset(documentElement, scroll) : createCoords(0);
  const x2 = rect.left + scroll.scrollLeft - offsets.x - htmlOffset.x;
  const y = rect.top + scroll.scrollTop - offsets.y - htmlOffset.y;
  return {
    x: x2,
    y,
    width: rect.width,
    height: rect.height
  };
}
function isStaticPositioned(element) {
  return getComputedStyle$1(element).position === "static";
}
function getTrueOffsetParent(element, polyfill) {
  if (!isHTMLElement(element) || getComputedStyle$1(element).position === "fixed") {
    return null;
  }
  if (polyfill) {
    return polyfill(element);
  }
  let rawOffsetParent = element.offsetParent;
  if (getDocumentElement(element) === rawOffsetParent) {
    rawOffsetParent = rawOffsetParent.ownerDocument.body;
  }
  return rawOffsetParent;
}
function getOffsetParent(element, polyfill) {
  const win = getWindow(element);
  if (isTopLayer(element)) {
    return win;
  }
  if (!isHTMLElement(element)) {
    let svgOffsetParent = getParentNode(element);
    while (svgOffsetParent && !isLastTraversableNode(svgOffsetParent)) {
      if (isElement(svgOffsetParent) && !isStaticPositioned(svgOffsetParent)) {
        return svgOffsetParent;
      }
      svgOffsetParent = getParentNode(svgOffsetParent);
    }
    return win;
  }
  let offsetParent = getTrueOffsetParent(element, polyfill);
  while (offsetParent && isTableElement(offsetParent) && isStaticPositioned(offsetParent)) {
    offsetParent = getTrueOffsetParent(offsetParent, polyfill);
  }
  if (offsetParent && isLastTraversableNode(offsetParent) && isStaticPositioned(offsetParent) && !isContainingBlock(offsetParent)) {
    return win;
  }
  return offsetParent || getContainingBlock(element) || win;
}
const getElementRects = async function(data11) {
  const getOffsetParentFn = this.getOffsetParent || getOffsetParent;
  const getDimensionsFn = this.getDimensions;
  const floatingDimensions = await getDimensionsFn(data11.floating);
  return {
    reference: getRectRelativeToOffsetParent(data11.reference, await getOffsetParentFn(data11.floating), data11.strategy),
    floating: {
      x: 0,
      y: 0,
      width: floatingDimensions.width,
      height: floatingDimensions.height
    }
  };
};
function isRTL(element) {
  return getComputedStyle$1(element).direction === "rtl";
}
const platform = {
  convertOffsetParentRelativeRectToViewportRelativeRect,
  getDocumentElement,
  getClippingRect,
  getOffsetParent,
  getElementRects,
  getClientRects,
  getDimensions,
  getScale,
  isElement,
  isRTL
};
function rectsAreEqual(a2, b) {
  return a2.x === b.x && a2.y === b.y && a2.width === b.width && a2.height === b.height;
}
function observeMove(element, onMove) {
  let io = null;
  let timeoutId;
  const root = getDocumentElement(element);
  function cleanup() {
    var _io;
    clearTimeout(timeoutId);
    (_io = io) == null || _io.disconnect();
    io = null;
  }
  function refresh(skip, threshold) {
    if (skip === void 0) {
      skip = false;
    }
    if (threshold === void 0) {
      threshold = 1;
    }
    cleanup();
    const elementRectForRootMargin = element.getBoundingClientRect();
    const {
      left,
      top,
      width,
      height
    } = elementRectForRootMargin;
    if (!skip) {
      onMove();
    }
    if (!width || !height) {
      return;
    }
    const insetTop = floor(top);
    const insetRight = floor(root.clientWidth - (left + width));
    const insetBottom = floor(root.clientHeight - (top + height));
    const insetLeft = floor(left);
    const rootMargin = -insetTop + "px " + -insetRight + "px " + -insetBottom + "px " + -insetLeft + "px";
    const options2 = {
      rootMargin,
      threshold: max(0, min(1, threshold)) || 1
    };
    let isFirstUpdate = true;
    function handleObserve(entries) {
      const ratio = entries[0].intersectionRatio;
      if (ratio !== threshold) {
        if (!isFirstUpdate) {
          return refresh();
        }
        if (!ratio) {
          timeoutId = setTimeout(() => {
            refresh(false, 1e-7);
          }, 1e3);
        } else {
          refresh(false, ratio);
        }
      }
      if (ratio === 1 && !rectsAreEqual(elementRectForRootMargin, element.getBoundingClientRect())) {
        refresh();
      }
      isFirstUpdate = false;
    }
    try {
      io = new IntersectionObserver(handleObserve, {
        ...options2,
        // Handle <iframe>s
        root: root.ownerDocument
      });
    } catch (e2) {
      io = new IntersectionObserver(handleObserve, options2);
    }
    io.observe(element);
  }
  refresh(true);
  return cleanup;
}
function autoUpdate(reference, floating, update, options2) {
  if (options2 === void 0) {
    options2 = {};
  }
  const {
    ancestorScroll = true,
    ancestorResize = true,
    elementResize = typeof ResizeObserver === "function",
    layoutShift = typeof IntersectionObserver === "function",
    animationFrame = false
  } = options2;
  const referenceEl = unwrapElement(reference);
  const ancestors = ancestorScroll || ancestorResize ? [...referenceEl ? getOverflowAncestors(referenceEl) : [], ...getOverflowAncestors(floating)] : [];
  ancestors.forEach((ancestor) => {
    ancestorScroll && ancestor.addEventListener("scroll", update, {
      passive: true
    });
    ancestorResize && ancestor.addEventListener("resize", update);
  });
  const cleanupIo = referenceEl && layoutShift ? observeMove(referenceEl, update) : null;
  let reobserveFrame = -1;
  let resizeObserver = null;
  if (elementResize) {
    resizeObserver = new ResizeObserver((_ref) => {
      let [firstEntry] = _ref;
      if (firstEntry && firstEntry.target === referenceEl && resizeObserver) {
        resizeObserver.unobserve(floating);
        cancelAnimationFrame(reobserveFrame);
        reobserveFrame = requestAnimationFrame(() => {
          var _resizeObserver;
          (_resizeObserver = resizeObserver) == null || _resizeObserver.observe(floating);
        });
      }
      update();
    });
    if (referenceEl && !animationFrame) {
      resizeObserver.observe(referenceEl);
    }
    resizeObserver.observe(floating);
  }
  let frameId;
  let prevRefRect = animationFrame ? getBoundingClientRect(reference) : null;
  if (animationFrame) {
    frameLoop();
  }
  function frameLoop() {
    const nextRefRect = getBoundingClientRect(reference);
    if (prevRefRect && !rectsAreEqual(prevRefRect, nextRefRect)) {
      update();
    }
    prevRefRect = nextRefRect;
    frameId = requestAnimationFrame(frameLoop);
  }
  update();
  return () => {
    var _resizeObserver2;
    ancestors.forEach((ancestor) => {
      ancestorScroll && ancestor.removeEventListener("scroll", update);
      ancestorResize && ancestor.removeEventListener("resize", update);
    });
    cleanupIo == null || cleanupIo();
    (_resizeObserver2 = resizeObserver) == null || _resizeObserver2.disconnect();
    resizeObserver = null;
    if (animationFrame) {
      cancelAnimationFrame(frameId);
    }
  };
}
const offset = offset$1;
const shift = shift$1;
const flip = flip$1;
const limitShift = limitShift$1;
const computePosition = (reference, floating, options2) => {
  const cache = /* @__PURE__ */ new Map();
  const mergedOptions = {
    platform,
    ...options2
  };
  const platformWithCache = {
    ...mergedOptions.platform,
    _c: cache
  };
  return computePosition$1(reference, floating, {
    ...mergedOptions,
    platform: platformWithCache
  });
};
const _sfc_main$i = {
  name: "ChevronDownIcon",
  emits: ["click"],
  props: {
    title: {
      type: String
    },
    fillColor: {
      type: String,
      default: "currentColor"
    },
    size: {
      type: Number,
      default: 24
    }
  }
};
var _sfc_render$i = function render2() {
  var _vm = this, _c = _vm._self._c;
  return _c("span", _vm._b({ staticClass: "material-design-icon chevron-down-icon", attrs: { "aria-hidden": _vm.title ? null : "true", "aria-label": _vm.title, "role": "img" }, on: { "click": function($event) {
    return _vm.$emit("click", $event);
  } } }, "span", _vm.$attrs, false), [_c("svg", { staticClass: "material-design-icon__svg", attrs: { "fill": _vm.fillColor, "width": _vm.size, "height": _vm.size, "viewBox": "0 0 24 24" } }, [_c("path", { attrs: { "d": "M7.41,8.58L12,13.17L16.59,8.58L18,10L12,16L6,10L7.41,8.58Z" } }, [_vm.title ? _c("title", [_vm._v(_vm._s(_vm.title))]) : _vm._e()])])]);
};
var _sfc_staticRenderFns$i = [];
var __component__$i = /* @__PURE__ */ normalizeComponent$1(
  _sfc_main$i,
  _sfc_render$i,
  _sfc_staticRenderFns$i,
  false,
  null,
  null
);
const ChevronDown = __component__$i.exports;
const FindRanges = (text3, search) => {
  const ranges = [];
  let currentIndex = 0;
  let index = text3.toLowerCase().indexOf(search.toLowerCase(), currentIndex);
  let i = 0;
  while (index > -1 && i < text3.length) {
    currentIndex = index + search.length;
    ranges.push({ start: index, end: currentIndex });
    index = text3.toLowerCase().indexOf(search.toLowerCase(), currentIndex);
    i++;
  }
  return ranges;
};
const _sfc_main$h = {
  name: "NcHighlight",
  props: {
    /**
     * The string to display
     */
    text: {
      type: String,
      default: ""
    },
    /**
     * The string to match and highlight
     */
    search: {
      type: String,
      default: ""
    },
    /**
     * The ranges to highlight, takes precedence over the search prop.
     */
    highlight: {
      type: Array,
      default: () => []
    }
  },
  computed: {
    /**
     * The indice ranges which should be highlighted.
     * If an array with ranges is provided, we use it. Otherwise
     * we calculate it based on the provided substring to highlight.
     *
     * @return {Array} The array of ranges to highlight
     */
    ranges() {
      let ranges = [];
      if (!this.search && this.highlight.length === 0) {
        return ranges;
      }
      if (this.highlight.length > 0) {
        ranges = this.highlight;
      } else {
        ranges = FindRanges(this.text, this.search);
      }
      ranges.forEach((range, i) => {
        if (range.end < range.start) {
          ranges[i] = {
            start: range.end,
            end: range.start
          };
        }
      });
      ranges = ranges.reduce((validRanges, range) => {
        if (range.start < this.text.length && range.end > 0) {
          validRanges.push({
            start: range.start < 0 ? 0 : range.start,
            end: range.end > this.text.length ? this.text.length : range.end
          });
        }
        return validRanges;
      }, []);
      ranges.sort((a2, b) => {
        return a2.start - b.start;
      });
      ranges = ranges.reduce((mergedRanges, range) => {
        if (!mergedRanges.length) {
          mergedRanges.push(range);
        } else {
          const idx = mergedRanges.length - 1;
          if (mergedRanges[idx].end >= range.start) {
            mergedRanges[idx] = {
              start: mergedRanges[idx].start,
              end: Math.max(mergedRanges[idx].end, range.end)
            };
          } else {
            mergedRanges.push(range);
          }
        }
        return mergedRanges;
      }, []);
      return ranges;
    },
    /**
     * Calculate the different chunks to show based on the ranges to highlight.
     *
     * @return {Array} The chunks
     */
    chunks() {
      if (this.ranges.length === 0) {
        return [{
          start: 0,
          end: this.text.length,
          highlight: false,
          text: this.text
        }];
      }
      const chunks = [];
      let currentIndex = 0;
      let currentRange = 0;
      while (currentIndex < this.text.length) {
        const range = this.ranges[currentRange];
        if (range.start === currentIndex) {
          chunks.push({
            ...range,
            highlight: true,
            text: this.text.slice(range.start, range.end)
          });
          currentRange++;
          currentIndex = range.end;
          if (currentRange >= this.ranges.length && currentIndex < this.text.length) {
            chunks.push({
              start: currentIndex,
              end: this.text.length,
              highlight: false,
              text: this.text.slice(currentIndex)
            });
            currentIndex = this.text.length;
          }
          continue;
        }
        chunks.push({
          start: currentIndex,
          end: range.start,
          highlight: false,
          text: this.text.slice(currentIndex, range.start)
        });
        currentIndex = range.start;
      }
      return chunks;
    }
  },
  /**
   * The render function to display the component
   *
   * @param {Function} h The function to create VNodes
   * @return {object} The created VNode
   */
  render(h3) {
    if (!this.ranges.length) {
      return h3("span", {}, this.text);
    }
    return h3("span", {}, this.chunks.map((chunk2) => {
      return chunk2.highlight ? h3("strong", {}, chunk2.text) : chunk2.text;
    }));
  }
};
const _sfc_render$h = null;
const _sfc_staticRenderFns$h = null;
var __component__$h = /* @__PURE__ */ normalizeComponent$1(
  _sfc_main$h,
  _sfc_render$h,
  _sfc_staticRenderFns$h,
  false,
  null,
  null
);
const NcHighlight = __component__$h.exports;
const _sfc_main$g = {
  name: "NcEllipsisedOption",
  components: {
    NcHighlight
  },
  props: {
    /**
     * The text to be display in one line. If it is longer than 10 characters, it is be truncated with ellipsis in the end but keeping up to 10 last characters to fit the parent container.
     */
    name: {
      type: String,
      default: ""
    },
    /**
     * The search value to highlight in the text
     */
    search: {
      type: String,
      default: ""
    }
  },
  computed: {
    needsTruncate() {
      return this.name && this.name.length >= 10;
    },
    /**
     * Index at which to split the name if it is longer than 10 characters.
     *
     * @return {number} The position at which to split
     */
    split() {
      return this.name.length - Math.min(Math.floor(this.name.length / 2), 10);
    },
    part1() {
      if (this.needsTruncate) {
        return this.name.slice(0, this.split);
      }
      return this.name;
    },
    part2() {
      if (this.needsTruncate) {
        return this.name.slice(this.split);
      }
      return "";
    },
    /**
     * The ranges to highlight. Since we split the string for ellipsising,
     * the Highlight component cannot figure this out itself and needs the ranges provided.
     *
     * @return {Array} The array with the ranges to highlight
     */
    highlight1() {
      if (!this.search) {
        return [];
      }
      return FindRanges(this.name, this.search);
    },
    /**
     * We shift the ranges for the second part by the position of the split.
     * Ranges out of the string length are discarded by the Highlight component,
     * so we don't need to take care of this here.
     *
     * @return {Array} The array with the ranges to highlight
     */
    highlight2() {
      return this.highlight1.map((range) => {
        return {
          start: range.start - this.split,
          end: range.end - this.split
        };
      });
    }
  }
};
var _sfc_render$g = function render3() {
  var _vm = this, _c = _vm._self._c;
  return _c("span", { staticClass: "name-parts", attrs: { "dir": "auto", "title": _vm.name } }, [_c("NcHighlight", { staticClass: "name-parts__first", attrs: { "text": _vm.part1, "search": _vm.search, "highlight": _vm.highlight1 } }), _vm.part2 ? _c("NcHighlight", { staticClass: "name-parts__last", attrs: { "text": _vm.part2, "search": _vm.search, "highlight": _vm.highlight2 } }) : _vm._e()], 1);
};
var _sfc_staticRenderFns$g = [];
var __component__$g = /* @__PURE__ */ normalizeComponent$1(
  _sfc_main$g,
  _sfc_render$g,
  _sfc_staticRenderFns$g,
  false,
  null,
  "f6384352"
);
const NcEllipsisedOption = __component__$g.exports;
const _sfc_main$f = {
  name: "NcActionLink",
  mixins: [ActionTextMixin],
  inject: {
    isInSemanticMenu: {
      from: "NcActions:isSemanticMenu",
      default: false
    }
  },
  props: {
    /**
     * destionation to link to
     */
    href: {
      type: String,
      default: "#",
      required: true,
      validator: (value3) => {
        try {
          return new URL(value3);
        } catch (error) {
          return value3.startsWith("#") || value3.startsWith("/");
        }
      }
    },
    /**
     * download the link instead of opening
     */
    download: {
      type: String,
      default: null
    },
    /**
     * target to open the link
     */
    target: {
      type: String,
      default: "_self",
      validator: (value3) => {
        return value3 && (!value3.startsWith("_") || ["_blank", "_self", "_parent", "_top"].indexOf(value3) > -1);
      }
    },
    /**
     * Declares a native tooltip when not null
     */
    title: {
      type: String,
      default: null
    },
    /**
     * @deprecated To be removed in @nextcloud/vue 9. Migration guide: remove ariaHidden prop from NcAction* components.
     * @todo Add a check in @nextcloud/vue 9 that this prop is not provided,
     * otherwise root element will inherit incorrect aria-hidden.
     */
    ariaHidden: {
      type: Boolean,
      default: null
    }
  }
};
var _sfc_render$f = function render4() {
  var _vm = this, _c = _vm._self._c;
  return _c("li", { staticClass: "action", attrs: { "role": _vm.isInSemanticMenu && "presentation" } }, [_c("a", { staticClass: "action-link focusable", attrs: { "download": _vm.download, "href": _vm.href, "aria-label": _vm.ariaLabel, "target": _vm.target, "title": _vm.title, "rel": "nofollow noreferrer noopener", "role": _vm.isInSemanticMenu && "menuitem" }, on: { "click": _vm.onClick } }, [_vm._t("icon", function() {
    return [_c("span", { staticClass: "action-link__icon", class: [_vm.isIconUrl ? "action-link__icon--url" : _vm.icon], style: { backgroundImage: _vm.isIconUrl ? `url(${_vm.icon})` : null }, attrs: { "aria-hidden": "true" } })];
  }), _vm.name ? _c("span", { staticClass: "action-link__longtext-wrapper" }, [_c("strong", { staticClass: "action-link__name" }, [_vm._v(" " + _vm._s(_vm.name) + " ")]), _c("br"), _c("span", { staticClass: "action-link__longtext", domProps: { "textContent": _vm._s(_vm.text) } })]) : _vm.isLongText ? _c("span", { staticClass: "action-link__longtext", domProps: { "textContent": _vm._s(_vm.text) } }) : _c("span", { staticClass: "action-link__text" }, [_vm._v(_vm._s(_vm.text))]), _vm._e()], 2)]);
};
var _sfc_staticRenderFns$f = [];
var __component__$f = /* @__PURE__ */ normalizeComponent$1(
  _sfc_main$f,
  _sfc_render$f,
  _sfc_staticRenderFns$f,
  false,
  null,
  "30c015f0"
);
const NcActionLink = __component__$f.exports;
const _sfc_main$e = {
  name: "NcActionRouter",
  mixins: [ActionTextMixin],
  inject: {
    isInSemanticMenu: {
      from: "NcActions:isSemanticMenu",
      default: false
    }
  },
  props: {
    /**
     * router-link to prop [https://router.vuejs.org/api/#to](https://router.vuejs.org/api/#to)
     */
    to: {
      type: [String, Object],
      default: "",
      required: true
    },
    /**
     * router-link exact prop [https://router.vuejs.org/api/#exact](https://router.vuejs.org/api/#exact)
     */
    exact: {
      type: Boolean,
      default: false
    }
  }
};
var _sfc_render$e = function render5() {
  var _vm = this, _c = _vm._self._c;
  return _c("li", { staticClass: "action", attrs: { "role": _vm.isInSemanticMenu && "presentation" } }, [_c("RouterLink", { staticClass: "action-router focusable", attrs: { "to": _vm.to, "aria-label": _vm.ariaLabel, "exact": _vm.exact, "title": _vm.title, "rel": "nofollow noreferrer noopener", "role": _vm.isInSemanticMenu && "menuitem" }, nativeOn: { "click": function($event) {
    return _vm.onClick.apply(null, arguments);
  } } }, [_vm._t("icon", function() {
    return [_c("span", { staticClass: "action-router__icon", class: [_vm.isIconUrl ? "action-router__icon--url" : _vm.icon], style: { backgroundImage: _vm.isIconUrl ? `url(${_vm.icon})` : null }, attrs: { "aria-hidden": "true" } })];
  }), _vm.name ? _c("span", { staticClass: "action-router__longtext-wrapper" }, [_c("strong", { staticClass: "action-router__name" }, [_vm._v(" " + _vm._s(_vm.name) + " ")]), _c("br"), _c("span", { staticClass: "action-router__longtext", domProps: { "textContent": _vm._s(_vm.text) } })]) : _vm.isLongText ? _c("span", { staticClass: "action-router__longtext", domProps: { "textContent": _vm._s(_vm.text) } }) : _c("span", { staticClass: "action-router__text" }, [_vm._v(_vm._s(_vm.text))]), _vm._e()], 2)], 1);
};
var _sfc_staticRenderFns$e = [];
var __component__$e = /* @__PURE__ */ normalizeComponent$1(
  _sfc_main$e,
  _sfc_render$e,
  _sfc_staticRenderFns$e,
  false,
  null,
  "579c6b4d"
);
const NcActionRouter = __component__$e.exports;
const _sfc_main$d = {
  name: "NcActionText",
  mixins: [ActionTextMixin],
  inject: {
    isInSemanticMenu: {
      from: "NcActions:isSemanticMenu",
      default: false
    }
  }
};
var _sfc_render$d = function render6() {
  var _vm = this, _c = _vm._self._c;
  return _c("li", { staticClass: "action", attrs: { "role": _vm.isInSemanticMenu && "presentation" } }, [_c("span", { staticClass: "action-text", on: { "click": _vm.onClick } }, [_vm._t("icon", function() {
    return [_vm.icon !== "" ? _c("span", { staticClass: "action-text__icon", class: [_vm.isIconUrl ? "action-text__icon--url" : _vm.icon], style: { backgroundImage: _vm.isIconUrl ? `url(${_vm.icon})` : null }, attrs: { "aria-hidden": "true" } }) : _vm._e()];
  }), _vm.name ? _c("span", { staticClass: "action-text__longtext-wrapper" }, [_c("strong", { staticClass: "action-text__name" }, [_vm._v(" " + _vm._s(_vm.name) + " ")]), _c("br"), _c("span", { staticClass: "action-text__longtext", domProps: { "textContent": _vm._s(_vm.text) } })]) : _vm.isLongText ? _c("span", { staticClass: "action-text__longtext", domProps: { "textContent": _vm._s(_vm.text) } }) : _c("span", { staticClass: "action-text__text" }, [_vm._v(_vm._s(_vm.text))]), _vm._e()], 2)]);
};
var _sfc_staticRenderFns$d = [];
var __component__$d = /* @__PURE__ */ normalizeComponent$1(
  _sfc_main$d,
  _sfc_render$d,
  _sfc_staticRenderFns$d,
  false,
  null,
  "824615f4"
);
const NcActionText = __component__$d.exports;
function loadState(app, key, fallback) {
  const elem = document.querySelector(`#initial-state-${app}-${key}`);
  if (elem === null) {
    if (fallback !== void 0) {
      return fallback;
    }
    throw new Error(`Could not find initial state ${key} of ${app}`);
  }
  try {
    return JSON.parse(atob(elem.value));
  } catch (e2) {
    throw new Error(`Could not parse initial state ${key} of ${app}`);
  }
}
function e() {
  try {
    return loadState("core", "capabilities");
  } catch {
    return console.debug("Could not find capabilities initial state fall back to _oc_capabilities"), "_oc_capabilities" in window ? window._oc_capabilities : {};
  }
}
const onlineSvg = '<!--\n  - SPDX-FileCopyrightText: 2020 Google Inc.\n  - SPDX-License-Identifier: Apache-2.0\n-->\n<svg viewBox="0 0 16 16" width="16" height="16" xmlns="http://www.w3.org/2000/svg">\n	<path fill="var(--color-success)" d="M4.8 11.2h6.4V4.8H4.8v6.4zM8 0C3.6 0 0 3.6 0 8s3.6 8 8 8 8-3.6 8-8-3.6-8-8-8z" />\n</svg>\n';
const awaySvg = '<!--\n  - SPDX-FileCopyrightText: 2020 Google Inc.\n  - SPDX-License-Identifier: Apache-2.0\n-->\n<svg viewBox="0 0 16 16" width="16" height="16" xmlns="http://www.w3.org/2000/svg">\n	<path fill="none" d="M-4-4h24v24H-4z" />\n	<path fill="var(--color-warning)" d="M6.9.1C3 .6-.1 4-.1 8c0 4.4 3.6 8 8 8 4 0 7.4-3 8-6.9-1.2 1.3-2.9 2.1-4.7 2.1-3.5 0-6.4-2.9-6.4-6.4 0-1.9.8-3.6 2.1-4.7z" />\n</svg>\n';
const dndSvg = '<!--\n  - SPDX-FileCopyrightText: 2020 Google Inc.\n  - SPDX-License-Identifier: Apache-2.0\n-->\n<svg viewBox="0 0 16 16" width="16" height="16" xmlns="http://www.w3.org/2000/svg">\n	<path fill="none" d="M-4-4h24v24H-4V-4z" />\n	<path fill="var(--color-error)" d="M8 0C3.6 0 0 3.6 0 8s3.6 8 8 8 8-3.6 8-8-3.6-8-8-8z" />\n	<path fill="#fdffff" d="M5 6.5h6c.8 0 1.5.7 1.5 1.5s-.7 1.5-1.5 1.5H5c-.8 0-1.5-.7-1.5-1.5S4.2 6.5 5 6.5z" />\n</svg>\n';
const invisibleSvg = '<!--\n  - SPDX-FileCopyrightText: 2020 Google Inc.\n  - SPDX-License-Identifier: Apache-2.0\n-->\n<svg viewBox="0 0 16 16" width="16" height="16" xmlns="http://www.w3.org/2000/svg">\n	<path fill="none" d="M-4-4h24v24H-4V-4z" />\n	<path d="M8 0C3.6 0 0 3.6 0 8s3.6 8 8 8 8-3.6 8-8-3.6-8-8-8zm0 3.2c2.7 0 4.8 2.1 4.8 4.8s-2.1 4.8-4.8 4.8S3.2 10.7 3.2 8 5.3 3.2 8 3.2z" />\n</svg>\n';
register(t10);
const getUserStatusText = (status) => {
  switch (status) {
    case "away":
      return t("away");
    case "busy":
      return t("busy");
    case "dnd":
      return t("do not disturb");
    case "online":
      return t("online");
    case "invisible":
      return t("invisible");
    case "offline":
      return t("offline");
    default:
      return status;
  }
};
register(t50);
const _sfc_main$c = {
  name: "NcUserStatusIcon",
  props: {
    /**
     * Set the user id to fetch the status
     */
    user: {
      type: String,
      default: null
    },
    /**
     * Set the status
     *
     * @type {'online' | 'away' | 'busy' | 'dnd' | 'invisible' | 'offline'}
     */
    status: {
      type: String,
      default: null,
      validator: (value3) => [
        "online",
        "away",
        "busy",
        "dnd",
        "invisible",
        "offline"
      ].includes(value3)
    },
    /**
     * Set the `aria-hidden` attribute
     *
     * @type {'true' | 'false'}
     */
    ariaHidden: {
      type: String,
      default: null,
      validator: (value3) => [
        "true",
        "false"
      ].includes(value3)
    }
  },
  data() {
    return {
      fetchedUserStatus: null
    };
  },
  computed: {
    activeStatus() {
      return this.status ?? this.fetchedUserStatus;
    },
    activeSvg() {
      const matchSvg = {
        online: onlineSvg,
        away: awaySvg,
        busy: awaySvg,
        dnd: dndSvg,
        invisible: invisibleSvg,
        offline: invisibleSvg
      };
      return matchSvg[this.activeStatus] ?? null;
    },
    ariaLabel() {
      if (this.ariaHidden === "true") {
        return null;
      }
      return t("User status: {status}", { status: getUserStatusText(this.activeStatus) });
    }
  },
  watch: {
    user: {
      immediate: true,
      async handler(user, _oldUser) {
        if (!user || !e()?.user_status?.enabled) {
          this.fetchedUserStatus = null;
          return;
        }
        try {
          const { data: data11 } = await cancelableClient.get(v("/apps/user_status/api/v1/statuses/{user}", { user }));
          this.fetchedUserStatus = data11.ocs?.data?.status;
        } catch (error) {
          this.fetchedUserStatus = null;
        }
      }
    }
  }
};
var _sfc_render$c = function render7() {
  var _vm = this, _c = _vm._self._c;
  return _vm.activeStatus ? _c("span", { staticClass: "user-status-icon", class: {
    "user-status-icon--invisible": ["invisible", "offline"].includes(_vm.status)
  }, attrs: { "role": "img", "aria-hidden": _vm.ariaHidden, "aria-label": _vm.ariaLabel }, domProps: { "innerHTML": _vm._s(_vm.activeSvg) } }) : _vm._e();
};
var _sfc_staticRenderFns$c = [];
var __component__$c = /* @__PURE__ */ normalizeComponent$1(
  _sfc_main$c,
  _sfc_render$c,
  _sfc_staticRenderFns$c,
  false,
  null,
  "0555d8d0"
);
const NcUserStatusIcon = __component__$c.exports;
register(t3);
class Color {
  /**
   * @param {number} r The red value
   * @param {number} g The green value
   * @param {number} b The blue value
   * @param {string} [name] The name of the color
   */
  constructor(r, g, b, name) {
    this.r = r;
    this.g = g;
    this.b = b;
    if (name) {
      this.name = name;
    }
  }
  get color() {
    const toHex = (num) => `00${num.toString(16)}`.slice(-2);
    return `#${toHex(this.r)}${toHex(this.g)}${toHex(this.b)}`;
  }
}
function stepCalc(steps, ends) {
  const step = new Array(3);
  step[0] = (ends[1].r - ends[0].r) / steps;
  step[1] = (ends[1].g - ends[0].g) / steps;
  step[2] = (ends[1].b - ends[0].b) / steps;
  return step;
}
function mixPalette(steps, color1, color2) {
  const palette = [];
  palette.push(color1);
  const step = stepCalc(steps, [color1, color2]);
  for (let i = 1; i < steps; i++) {
    const r = Math.floor(color1.r + step[0] * i);
    const g = Math.floor(color1.g + step[1] * i);
    const b = Math.floor(color1.b + step[2] * i);
    palette.push(new Color(r, g, b));
  }
  return palette;
}
[
  new Color(182, 70, 157, t("Purple")),
  new Color(
    191,
    103,
    139,
    t("Rosy brown")
    // TRANSLATORS: A color name for RGB(191, 103, 139)
  ),
  new Color(
    201,
    136,
    121,
    t("Feldspar")
    // TRANSLATORS: A color name for RGB(201, 136, 121)
  ),
  new Color(
    211,
    169,
    103,
    t("Whiskey")
    // TRANSLATORS: A color name for RGB(211, 169, 103)
  ),
  new Color(
    221,
    203,
    85,
    t("Gold")
  ),
  new Color(
    165,
    184,
    114,
    t("Olivine")
    // TRANSLATORS: A color name for RGB(165, 184, 114)
  ),
  new Color(
    110,
    166,
    143,
    t("Acapulco")
    // TRANSLATORS: A color name for RGB(110, 166, 143)
  ),
  new Color(
    55,
    148,
    172,
    t("Boston Blue")
    // TRANSLATORS: A color name for RGB(55, 148, 172)
  ),
  new Color(
    0,
    130,
    201,
    t("Nextcloud blue")
  ),
  new Color(
    45,
    115,
    190,
    t("Mariner")
    // TRANSLATORS: A color name for RGB(45, 115, 190)
  ),
  new Color(
    91,
    100,
    179,
    t("Blue Violet")
    // TRANSLATORS: A color name for RGB(91, 100, 179)
  ),
  new Color(
    136,
    85,
    168,
    t("Deluge")
    // TRANSLATORS: A color name for RGB(136, 85, 168)
  )
];
function GenColors(steps) {
  const red = new Color(182, 70, 157, t("Purple"));
  const yellow = new Color(221, 203, 85, t("Gold"));
  const blue = new Color(0, 130, 201, t("Nextcloud blue"));
  const palette1 = mixPalette(steps, red, yellow);
  const palette2 = mixPalette(steps, yellow, blue);
  const palette3 = mixPalette(steps, blue, red);
  return palette1.concat(palette2).concat(palette3);
}
var md5$1 = { exports: {} };
var crypt = { exports: {} };
(function() {
  var base64map = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", crypt$1 = {
    // Bit-wise rotation left
    rotl: function(n, b) {
      return n << b | n >>> 32 - b;
    },
    // Bit-wise rotation right
    rotr: function(n, b) {
      return n << 32 - b | n >>> b;
    },
    // Swap big-endian to little-endian and vice versa
    endian: function(n) {
      if (n.constructor == Number) {
        return crypt$1.rotl(n, 8) & 16711935 | crypt$1.rotl(n, 24) & 4278255360;
      }
      for (var i = 0; i < n.length; i++)
        n[i] = crypt$1.endian(n[i]);
      return n;
    },
    // Generate an array of any length of random bytes
    randomBytes: function(n) {
      for (var bytes = []; n > 0; n--)
        bytes.push(Math.floor(Math.random() * 256));
      return bytes;
    },
    // Convert a byte array to big-endian 32-bit words
    bytesToWords: function(bytes) {
      for (var words = [], i = 0, b = 0; i < bytes.length; i++, b += 8)
        words[b >>> 5] |= bytes[i] << 24 - b % 32;
      return words;
    },
    // Convert big-endian 32-bit words to a byte array
    wordsToBytes: function(words) {
      for (var bytes = [], b = 0; b < words.length * 32; b += 8)
        bytes.push(words[b >>> 5] >>> 24 - b % 32 & 255);
      return bytes;
    },
    // Convert a byte array to a hex string
    bytesToHex: function(bytes) {
      for (var hex = [], i = 0; i < bytes.length; i++) {
        hex.push((bytes[i] >>> 4).toString(16));
        hex.push((bytes[i] & 15).toString(16));
      }
      return hex.join("");
    },
    // Convert a hex string to a byte array
    hexToBytes: function(hex) {
      for (var bytes = [], c = 0; c < hex.length; c += 2)
        bytes.push(parseInt(hex.substr(c, 2), 16));
      return bytes;
    },
    // Convert a byte array to a base-64 string
    bytesToBase64: function(bytes) {
      for (var base64 = [], i = 0; i < bytes.length; i += 3) {
        var triplet = bytes[i] << 16 | bytes[i + 1] << 8 | bytes[i + 2];
        for (var j = 0; j < 4; j++)
          if (i * 8 + j * 6 <= bytes.length * 8)
            base64.push(base64map.charAt(triplet >>> 6 * (3 - j) & 63));
          else
            base64.push("=");
      }
      return base64.join("");
    },
    // Convert a base-64 string to a byte array
    base64ToBytes: function(base64) {
      base64 = base64.replace(/[^A-Z0-9+\/]/ig, "");
      for (var bytes = [], i = 0, imod4 = 0; i < base64.length; imod4 = ++i % 4) {
        if (imod4 == 0) continue;
        bytes.push((base64map.indexOf(base64.charAt(i - 1)) & Math.pow(2, -2 * imod4 + 8) - 1) << imod4 * 2 | base64map.indexOf(base64.charAt(i)) >>> 6 - imod4 * 2);
      }
      return bytes;
    }
  };
  crypt.exports = crypt$1;
})();
var cryptExports = crypt.exports;
var charenc = {
  // UTF-8 encoding
  utf8: {
    // Convert a string to a byte array
    stringToBytes: function(str) {
      return charenc.bin.stringToBytes(unescape(encodeURIComponent(str)));
    },
    // Convert a byte array to a string
    bytesToString: function(bytes) {
      return decodeURIComponent(escape(charenc.bin.bytesToString(bytes)));
    }
  },
  // Binary encoding
  bin: {
    // Convert a string to a byte array
    stringToBytes: function(str) {
      for (var bytes = [], i = 0; i < str.length; i++)
        bytes.push(str.charCodeAt(i) & 255);
      return bytes;
    },
    // Convert a byte array to a string
    bytesToString: function(bytes) {
      for (var str = [], i = 0; i < bytes.length; i++)
        str.push(String.fromCharCode(bytes[i]));
      return str.join("");
    }
  }
};
var charenc_1 = charenc;
/*!
 * Determine if an object is a Buffer
 *
 * @author   Feross Aboukhadijeh <https://feross.org>
 * @license  MIT
 */
var isBuffer_1 = function(obj) {
  return obj != null && (isBuffer(obj) || isSlowBuffer(obj) || !!obj._isBuffer);
};
function isBuffer(obj) {
  return !!obj.constructor && typeof obj.constructor.isBuffer === "function" && obj.constructor.isBuffer(obj);
}
function isSlowBuffer(obj) {
  return typeof obj.readFloatLE === "function" && typeof obj.slice === "function" && isBuffer(obj.slice(0, 0));
}
(function() {
  var crypt2 = cryptExports, utf8 = charenc_1.utf8, isBuffer2 = isBuffer_1, bin = charenc_1.bin, md52 = function(message, options2) {
    if (message.constructor == String)
      if (options2 && options2.encoding === "binary")
        message = bin.stringToBytes(message);
      else
        message = utf8.stringToBytes(message);
    else if (isBuffer2(message))
      message = Array.prototype.slice.call(message, 0);
    else if (!Array.isArray(message) && message.constructor !== Uint8Array)
      message = message.toString();
    var m2 = crypt2.bytesToWords(message), l = message.length * 8, a2 = 1732584193, b = -271733879, c = -1732584194, d2 = 271733878;
    for (var i = 0; i < m2.length; i++) {
      m2[i] = (m2[i] << 8 | m2[i] >>> 24) & 16711935 | (m2[i] << 24 | m2[i] >>> 8) & 4278255360;
    }
    m2[l >>> 5] |= 128 << l % 32;
    m2[(l + 64 >>> 9 << 4) + 14] = l;
    var FF = md52._ff, GG = md52._gg, HH2 = md52._hh, II = md52._ii;
    for (var i = 0; i < m2.length; i += 16) {
      var aa = a2, bb = b, cc = c, dd2 = d2;
      a2 = FF(a2, b, c, d2, m2[i + 0], 7, -680876936);
      d2 = FF(d2, a2, b, c, m2[i + 1], 12, -389564586);
      c = FF(c, d2, a2, b, m2[i + 2], 17, 606105819);
      b = FF(b, c, d2, a2, m2[i + 3], 22, -1044525330);
      a2 = FF(a2, b, c, d2, m2[i + 4], 7, -176418897);
      d2 = FF(d2, a2, b, c, m2[i + 5], 12, 1200080426);
      c = FF(c, d2, a2, b, m2[i + 6], 17, -1473231341);
      b = FF(b, c, d2, a2, m2[i + 7], 22, -45705983);
      a2 = FF(a2, b, c, d2, m2[i + 8], 7, 1770035416);
      d2 = FF(d2, a2, b, c, m2[i + 9], 12, -1958414417);
      c = FF(c, d2, a2, b, m2[i + 10], 17, -42063);
      b = FF(b, c, d2, a2, m2[i + 11], 22, -1990404162);
      a2 = FF(a2, b, c, d2, m2[i + 12], 7, 1804603682);
      d2 = FF(d2, a2, b, c, m2[i + 13], 12, -40341101);
      c = FF(c, d2, a2, b, m2[i + 14], 17, -1502002290);
      b = FF(b, c, d2, a2, m2[i + 15], 22, 1236535329);
      a2 = GG(a2, b, c, d2, m2[i + 1], 5, -165796510);
      d2 = GG(d2, a2, b, c, m2[i + 6], 9, -1069501632);
      c = GG(c, d2, a2, b, m2[i + 11], 14, 643717713);
      b = GG(b, c, d2, a2, m2[i + 0], 20, -373897302);
      a2 = GG(a2, b, c, d2, m2[i + 5], 5, -701558691);
      d2 = GG(d2, a2, b, c, m2[i + 10], 9, 38016083);
      c = GG(c, d2, a2, b, m2[i + 15], 14, -660478335);
      b = GG(b, c, d2, a2, m2[i + 4], 20, -405537848);
      a2 = GG(a2, b, c, d2, m2[i + 9], 5, 568446438);
      d2 = GG(d2, a2, b, c, m2[i + 14], 9, -1019803690);
      c = GG(c, d2, a2, b, m2[i + 3], 14, -187363961);
      b = GG(b, c, d2, a2, m2[i + 8], 20, 1163531501);
      a2 = GG(a2, b, c, d2, m2[i + 13], 5, -1444681467);
      d2 = GG(d2, a2, b, c, m2[i + 2], 9, -51403784);
      c = GG(c, d2, a2, b, m2[i + 7], 14, 1735328473);
      b = GG(b, c, d2, a2, m2[i + 12], 20, -1926607734);
      a2 = HH2(a2, b, c, d2, m2[i + 5], 4, -378558);
      d2 = HH2(d2, a2, b, c, m2[i + 8], 11, -2022574463);
      c = HH2(c, d2, a2, b, m2[i + 11], 16, 1839030562);
      b = HH2(b, c, d2, a2, m2[i + 14], 23, -35309556);
      a2 = HH2(a2, b, c, d2, m2[i + 1], 4, -1530992060);
      d2 = HH2(d2, a2, b, c, m2[i + 4], 11, 1272893353);
      c = HH2(c, d2, a2, b, m2[i + 7], 16, -155497632);
      b = HH2(b, c, d2, a2, m2[i + 10], 23, -1094730640);
      a2 = HH2(a2, b, c, d2, m2[i + 13], 4, 681279174);
      d2 = HH2(d2, a2, b, c, m2[i + 0], 11, -358537222);
      c = HH2(c, d2, a2, b, m2[i + 3], 16, -722521979);
      b = HH2(b, c, d2, a2, m2[i + 6], 23, 76029189);
      a2 = HH2(a2, b, c, d2, m2[i + 9], 4, -640364487);
      d2 = HH2(d2, a2, b, c, m2[i + 12], 11, -421815835);
      c = HH2(c, d2, a2, b, m2[i + 15], 16, 530742520);
      b = HH2(b, c, d2, a2, m2[i + 2], 23, -995338651);
      a2 = II(a2, b, c, d2, m2[i + 0], 6, -198630844);
      d2 = II(d2, a2, b, c, m2[i + 7], 10, 1126891415);
      c = II(c, d2, a2, b, m2[i + 14], 15, -1416354905);
      b = II(b, c, d2, a2, m2[i + 5], 21, -57434055);
      a2 = II(a2, b, c, d2, m2[i + 12], 6, 1700485571);
      d2 = II(d2, a2, b, c, m2[i + 3], 10, -1894986606);
      c = II(c, d2, a2, b, m2[i + 10], 15, -1051523);
      b = II(b, c, d2, a2, m2[i + 1], 21, -2054922799);
      a2 = II(a2, b, c, d2, m2[i + 8], 6, 1873313359);
      d2 = II(d2, a2, b, c, m2[i + 15], 10, -30611744);
      c = II(c, d2, a2, b, m2[i + 6], 15, -1560198380);
      b = II(b, c, d2, a2, m2[i + 13], 21, 1309151649);
      a2 = II(a2, b, c, d2, m2[i + 4], 6, -145523070);
      d2 = II(d2, a2, b, c, m2[i + 11], 10, -1120210379);
      c = II(c, d2, a2, b, m2[i + 2], 15, 718787259);
      b = II(b, c, d2, a2, m2[i + 9], 21, -343485551);
      a2 = a2 + aa >>> 0;
      b = b + bb >>> 0;
      c = c + cc >>> 0;
      d2 = d2 + dd2 >>> 0;
    }
    return crypt2.endian([a2, b, c, d2]);
  };
  md52._ff = function(a2, b, c, d2, x2, s2, t4) {
    var n = a2 + (b & c | ~b & d2) + (x2 >>> 0) + t4;
    return (n << s2 | n >>> 32 - s2) + b;
  };
  md52._gg = function(a2, b, c, d2, x2, s2, t4) {
    var n = a2 + (b & d2 | c & ~d2) + (x2 >>> 0) + t4;
    return (n << s2 | n >>> 32 - s2) + b;
  };
  md52._hh = function(a2, b, c, d2, x2, s2, t4) {
    var n = a2 + (b ^ c ^ d2) + (x2 >>> 0) + t4;
    return (n << s2 | n >>> 32 - s2) + b;
  };
  md52._ii = function(a2, b, c, d2, x2, s2, t4) {
    var n = a2 + (c ^ (b | ~d2)) + (x2 >>> 0) + t4;
    return (n << s2 | n >>> 32 - s2) + b;
  };
  md52._blocksize = 16;
  md52._digestsize = 16;
  md5$1.exports = function(message, options2) {
    if (message === void 0 || message === null)
      throw new Error("Illegal argument " + message);
    var digestbytes = crypt2.wordsToBytes(md52(message, options2));
    return options2 && options2.asBytes ? digestbytes : options2 && options2.asString ? bin.bytesToString(digestbytes) : crypt2.bytesToHex(digestbytes);
  };
})();
var md5Exports = md5$1.exports;
const md5 = /* @__PURE__ */ getDefaultExportFromCjs(md5Exports);
const usernameToColor = function(username) {
  let hash = username.toLowerCase();
  if (hash.match(/^([0-9a-f]{4}-?){8}$/) === null) {
    hash = md5(hash);
  }
  hash = hash.replace(/[^0-9a-f]/g, "");
  const steps = 6;
  const finalPalette = GenColors(steps);
  function hashToInt(hash2, maximum) {
    let finalInt = 0;
    const result = [];
    for (let i = 0; i < hash2.length; i++) {
      result.push(parseInt(hash2.charAt(i), 16) % 16);
    }
    for (const j in result) {
      finalInt += result[j];
    }
    return parseInt(parseInt(finalInt, 10) % maximum, 10);
  }
  return finalPalette[hashToInt(hash, steps * 3)];
};
const getAvatarUrl = (user, size, isGuest) => {
  const darkTheme = window.getComputedStyle(document.body).getPropertyValue("--background-invert-if-dark") === "invert(100%)";
  return _("/avatar" + (isGuest ? "/guest" : "") + "/{user}/{size}" + (darkTheme ? "/dark" : ""), {
    user,
    size
  });
};
var LogLevel = /* @__PURE__ */ ((LogLevel2) => {
  LogLevel2[LogLevel2["Debug"] = 0] = "Debug";
  LogLevel2[LogLevel2["Info"] = 1] = "Info";
  LogLevel2[LogLevel2["Warn"] = 2] = "Warn";
  LogLevel2[LogLevel2["Error"] = 3] = "Error";
  LogLevel2[LogLevel2["Fatal"] = 4] = "Fatal";
  return LogLevel2;
})(LogLevel || {});
var __defProp$1 = Object.defineProperty;
var __defNormalProp$1 = (obj, key, value3) => key in obj ? __defProp$1(obj, key, { enumerable: true, configurable: true, writable: true, value: value3 }) : obj[key] = value3;
var __publicField$1 = (obj, key, value3) => {
  __defNormalProp$1(obj, key + "", value3);
  return value3;
};
class ConsoleLogger {
  constructor(context) {
    __publicField$1(this, "context");
    this.context = context || {};
  }
  formatMessage(message, level, context) {
    let msg = "[" + LogLevel[level].toUpperCase() + "] ";
    if (context && context.app) {
      msg += context.app + ": ";
    }
    if (typeof message === "string")
      return msg + message;
    msg += "Unexpected ".concat(message.name);
    if (message.message)
      msg += ' "'.concat(message.message, '"');
    if (level === LogLevel.Debug && message.stack)
      msg += "\n\nStack trace:\n".concat(message.stack);
    return msg;
  }
  log(level, message, context) {
    var _a, _b;
    if (typeof ((_a = this.context) == null ? void 0 : _a.level) === "number" && level < ((_b = this.context) == null ? void 0 : _b.level)) {
      return;
    }
    if (typeof message === "object" && (context == null ? void 0 : context.error) === void 0) {
      context.error = message;
    }
    switch (level) {
      case LogLevel.Debug:
        console.debug(this.formatMessage(message, LogLevel.Debug, context), context);
        break;
      case LogLevel.Info:
        console.info(this.formatMessage(message, LogLevel.Info, context), context);
        break;
      case LogLevel.Warn:
        console.warn(this.formatMessage(message, LogLevel.Warn, context), context);
        break;
      case LogLevel.Error:
        console.error(this.formatMessage(message, LogLevel.Error, context), context);
        break;
      case LogLevel.Fatal:
      default:
        console.error(this.formatMessage(message, LogLevel.Fatal, context), context);
        break;
    }
  }
  debug(message, context) {
    this.log(LogLevel.Debug, message, Object.assign({}, this.context, context));
  }
  info(message, context) {
    this.log(LogLevel.Info, message, Object.assign({}, this.context, context));
  }
  warn(message, context) {
    this.log(LogLevel.Warn, message, Object.assign({}, this.context, context));
  }
  error(message, context) {
    this.log(LogLevel.Error, message, Object.assign({}, this.context, context));
  }
  fatal(message, context) {
    this.log(LogLevel.Fatal, message, Object.assign({}, this.context, context));
  }
}
function buildConsoleLogger(context) {
  return new ConsoleLogger(context);
}
var __defProp = Object.defineProperty;
var __defNormalProp = (obj, key, value3) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value: value3 }) : obj[key] = value3;
var __publicField = (obj, key, value3) => {
  __defNormalProp(obj, typeof key !== "symbol" ? key + "" : key, value3);
  return value3;
};
class LoggerBuilder {
  constructor(factory) {
    __publicField(this, "context");
    __publicField(this, "factory");
    this.context = {};
    this.factory = factory;
  }
  /**
   * Set the app name within the logging context
   *
   * @param appId App name
   */
  setApp(appId) {
    this.context.app = appId;
    return this;
  }
  /**
   * Set the logging level within the logging context
   *
   * @param level Logging level
   */
  setLogLevel(level) {
    this.context.level = level;
    return this;
  }
  /* eslint-disable jsdoc/no-undefined-types */
  /**
   * Set the user id within the logging context
   * @param uid User ID
   * @see {@link detectUser}
   */
  /* eslint-enable jsdoc/no-undefined-types */
  setUid(uid) {
    this.context.uid = uid;
    return this;
  }
  /**
   * Detect the currently logged in user and set the user id within the logging context
   */
  detectUser() {
    const user = getCurrentUser();
    if (user !== null) {
      this.context.uid = user.uid;
    }
    return this;
  }
  /**
   * Detect and use logging level configured in nextcloud config
   */
  detectLogLevel() {
    const self2 = this;
    const onLoaded = () => {
      var _a, _b;
      if (document.readyState === "complete" || document.readyState === "interactive") {
        self2.context.level = (_b = (_a = window._oc_config) == null ? void 0 : _a.loglevel) != null ? _b : LogLevel.Warn;
        if (window._oc_debug) {
          self2.context.level = LogLevel.Debug;
        }
        document.removeEventListener("readystatechange", onLoaded);
      } else {
        document.addEventListener("readystatechange", onLoaded);
      }
    };
    onLoaded();
    return this;
  }
  /** Build a logger using the logging context and factory */
  build() {
    if (this.context.level === void 0) {
      this.detectLogLevel();
    }
    return this.factory(this.context);
  }
}
function getLoggerBuilder() {
  return new LoggerBuilder(buildConsoleLogger);
}
const logger = getLoggerBuilder().detectUser().setApp("@nextcloud/vue").build();
function getEnabledContactsMenuActions(entry) {
  if (!window._nc_contacts_menu_hooks) {
    return [];
  }
  return Object.values(window._nc_contacts_menu_hooks).filter((action) => action.enabled(entry));
}
const getRoute = (router, url) => {
  const removePrefix = (str, prefix) => str.startsWith(prefix) ? str.slice(prefix.length) : str;
  const removePrefixes = (str, ...prefixes) => prefixes.reduce((acc, prefix) => removePrefix(acc, prefix), str);
  if (!router) {
    return null;
  }
  const isAbsoluteURL = /^https?:\/\//.test(url);
  const isNonHttpLink = /^[a-z][a-z0-9+.-]*:.+/.test(url);
  if (!isAbsoluteURL && isNonHttpLink) {
    return null;
  }
  if (isAbsoluteURL && !url.startsWith(w())) {
    return null;
  }
  if (!isAbsoluteURL && !url.startsWith("/")) {
    return null;
  }
  const relativeUrl = isAbsoluteURL ? removePrefixes(url, w(), "/index.php") : url;
  const relativeRouterBase = removePrefixes(router.history.base, f(), "/index.php");
  const potentialRouterPath = removePrefixes(relativeUrl, relativeRouterBase) || "/";
  const route = router.resolve(potentialRouterPath).route;
  if (!route.matched.length) {
    return null;
  }
  return route.fullPath;
};
const checkIfIsFullscreen = () => window.outerHeight === screen.height;
const isFullscreen = ref$1(checkIfIsFullscreen());
window.addEventListener("resize", () => {
  isFullscreen.value = checkIfIsFullscreen();
});
readonly(isFullscreen);
const MOBILE_BREAKPOINT = 1024;
const MOBILE_SMALL_BREAKPOINT = MOBILE_BREAKPOINT / 2;
const isLessThanBreakpoint = (breakpoint) => document.documentElement.clientWidth < breakpoint;
const isMobile = ref$1(isLessThanBreakpoint(MOBILE_BREAKPOINT));
const isSmallMobile = ref$1(isLessThanBreakpoint(MOBILE_SMALL_BREAKPOINT));
window.addEventListener("resize", () => {
  isMobile.value = isLessThanBreakpoint(MOBILE_BREAKPOINT);
  isSmallMobile.value = isLessThanBreakpoint(MOBILE_SMALL_BREAKPOINT);
}, { passive: true });
readonly(isMobile);
var striptags = { exports: {} };
(function(module) {
  (function(global) {
    if (typeof Symbol2 !== "function") {
      var Symbol2 = function(name) {
        return name;
      };
      Symbol2.nonNative = true;
    }
    const STATE_PLAINTEXT = Symbol2("plaintext");
    const STATE_HTML = Symbol2("html");
    const STATE_COMMENT = Symbol2("comment");
    const ALLOWED_TAGS_REGEX = /<(\w*)>/g;
    const NORMALIZE_TAG_REGEX = /<\/?([^\s\/>]+)/;
    function striptags2(html, allowable_tags, tag_replacement) {
      html = html || "";
      allowable_tags = allowable_tags || [];
      tag_replacement = tag_replacement || "";
      let context = init_context(allowable_tags, tag_replacement);
      return striptags_internal(html, context);
    }
    function init_striptags_stream(allowable_tags, tag_replacement) {
      allowable_tags = allowable_tags || [];
      tag_replacement = tag_replacement || "";
      let context = init_context(allowable_tags, tag_replacement);
      return function striptags_stream(html) {
        return striptags_internal(html || "", context);
      };
    }
    striptags2.init_streaming_mode = init_striptags_stream;
    function init_context(allowable_tags, tag_replacement) {
      allowable_tags = parse_allowable_tags(allowable_tags);
      return {
        allowable_tags,
        tag_replacement,
        state: STATE_PLAINTEXT,
        tag_buffer: "",
        depth: 0,
        in_quote_char: ""
      };
    }
    function striptags_internal(html, context) {
      if (typeof html != "string") {
        throw new TypeError("'html' parameter must be a string");
      }
      let allowable_tags = context.allowable_tags;
      let tag_replacement = context.tag_replacement;
      let state = context.state;
      let tag_buffer = context.tag_buffer;
      let depth = context.depth;
      let in_quote_char = context.in_quote_char;
      let output = "";
      for (let idx = 0, length = html.length; idx < length; idx++) {
        let char = html[idx];
        if (state === STATE_PLAINTEXT) {
          switch (char) {
            case "<":
              state = STATE_HTML;
              tag_buffer += char;
              break;
            default:
              output += char;
              break;
          }
        } else if (state === STATE_HTML) {
          switch (char) {
            case "<":
              if (in_quote_char) {
                break;
              }
              depth++;
              break;
            case ">":
              if (in_quote_char) {
                break;
              }
              if (depth) {
                depth--;
                break;
              }
              in_quote_char = "";
              state = STATE_PLAINTEXT;
              tag_buffer += ">";
              if (allowable_tags.has(normalize_tag(tag_buffer))) {
                output += tag_buffer;
              } else {
                output += tag_replacement;
              }
              tag_buffer = "";
              break;
            case '"':
            case "'":
              if (char === in_quote_char) {
                in_quote_char = "";
              } else {
                in_quote_char = in_quote_char || char;
              }
              tag_buffer += char;
              break;
            case "-":
              if (tag_buffer === "<!-") {
                state = STATE_COMMENT;
              }
              tag_buffer += char;
              break;
            case " ":
            case "\n":
              if (tag_buffer === "<") {
                state = STATE_PLAINTEXT;
                output += "< ";
                tag_buffer = "";
                break;
              }
              tag_buffer += char;
              break;
            default:
              tag_buffer += char;
              break;
          }
        } else if (state === STATE_COMMENT) {
          switch (char) {
            case ">":
              if (tag_buffer.slice(-2) == "--") {
                state = STATE_PLAINTEXT;
              }
              tag_buffer = "";
              break;
            default:
              tag_buffer += char;
              break;
          }
        }
      }
      context.state = state;
      context.tag_buffer = tag_buffer;
      context.depth = depth;
      context.in_quote_char = in_quote_char;
      return output;
    }
    function parse_allowable_tags(allowable_tags) {
      let tag_set = /* @__PURE__ */ new Set();
      if (typeof allowable_tags === "string") {
        let match;
        while (match = ALLOWED_TAGS_REGEX.exec(allowable_tags)) {
          tag_set.add(match[1]);
        }
      } else if (!Symbol2.nonNative && typeof allowable_tags[Symbol2.iterator] === "function") {
        tag_set = new Set(allowable_tags);
      } else if (typeof allowable_tags.forEach === "function") {
        allowable_tags.forEach(tag_set.add, tag_set);
      }
      return tag_set;
    }
    function normalize_tag(tag_buffer) {
      let match = NORMALIZE_TAG_REGEX.exec(tag_buffer);
      return match ? match[1].toLowerCase() : null;
    }
    if (module.exports) {
      module.exports = striptags2;
    } else {
      global.striptags = striptags2;
    }
  })(commonjsGlobal);
})(striptags);
Vue.util.warn;
const defaultWindow = isClient ? window : void 0;
function unrefElement(elRef) {
  var _a;
  const plain = toValue(elRef);
  return (_a = plain == null ? void 0 : plain.$el) != null ? _a : plain;
}
function useEventListener(...args) {
  let target;
  let events;
  let listeners;
  let options2;
  if (typeof args[0] === "string" || Array.isArray(args[0])) {
    [events, listeners, options2] = args;
    target = defaultWindow;
  } else {
    [target, events, listeners, options2] = args;
  }
  if (!target)
    return noop$1;
  if (!Array.isArray(events))
    events = [events];
  if (!Array.isArray(listeners))
    listeners = [listeners];
  const cleanups = [];
  const cleanup = () => {
    cleanups.forEach((fn) => fn());
    cleanups.length = 0;
  };
  const register2 = (el, event, listener, options22) => {
    el.addEventListener(event, listener, options22);
    return () => el.removeEventListener(event, listener, options22);
  };
  const stopWatch = watch(
    () => [unrefElement(target), toValue(options2)],
    ([el, options22]) => {
      cleanup();
      if (!el)
        return;
      const optionsClone = isObject$1(options22) ? { ...options22 } : options22;
      cleanups.push(
        ...events.flatMap((event) => {
          return listeners.map((listener) => register2(el, event, listener, optionsClone));
        })
      );
    },
    { immediate: true, flush: "post" }
  );
  const stop = () => {
    stopWatch();
    cleanup();
  };
  tryOnScopeDispose(stop);
  return stop;
}
let _iOSWorkaround = false;
function onClickOutside(target, handler9, options2 = {}) {
  const { window: window2 = defaultWindow, ignore = [], capture = true, detectIframe = false } = options2;
  if (!window2)
    return noop$1;
  if (isIOS && !_iOSWorkaround) {
    _iOSWorkaround = true;
    Array.from(window2.document.body.children).forEach((el) => el.addEventListener("click", noop$1));
    window2.document.documentElement.addEventListener("click", noop$1);
  }
  let shouldListen = true;
  const shouldIgnore = (event) => {
    return toValue(ignore).some((target2) => {
      if (typeof target2 === "string") {
        return Array.from(window2.document.querySelectorAll(target2)).some((el) => el === event.target || event.composedPath().includes(el));
      } else {
        const el = unrefElement(target2);
        return el && (event.target === el || event.composedPath().includes(el));
      }
    });
  };
  function hasMultipleRoots(target2) {
    const vm = toValue(target2);
    return vm && vm.$.subTree.shapeFlag === 16;
  }
  function checkMultipleRoots(target2, event) {
    const vm = toValue(target2);
    const children = vm.$.subTree && vm.$.subTree.children;
    if (children == null || !Array.isArray(children))
      return false;
    return children.some((child) => child.el === event.target || event.composedPath().includes(child.el));
  }
  const listener = (event) => {
    const el = unrefElement(target);
    if (event.target == null)
      return;
    if (!(el instanceof Element) && hasMultipleRoots(target) && checkMultipleRoots(target, event))
      return;
    if (!el || el === event.target || event.composedPath().includes(el))
      return;
    if (event.detail === 0)
      shouldListen = !shouldIgnore(event);
    if (!shouldListen) {
      shouldListen = true;
      return;
    }
    handler9(event);
  };
  let isProcessingClick = false;
  const cleanup = [
    useEventListener(window2, "click", (event) => {
      if (!isProcessingClick) {
        isProcessingClick = true;
        setTimeout(() => {
          isProcessingClick = false;
        }, 0);
        listener(event);
      }
    }, { passive: true, capture }),
    useEventListener(window2, "pointerdown", (e2) => {
      const el = unrefElement(target);
      shouldListen = !shouldIgnore(e2) && !!(el && !e2.composedPath().includes(el));
    }, { passive: true }),
    detectIframe && useEventListener(window2, "blur", (event) => {
      setTimeout(() => {
        var _a;
        const el = unrefElement(target);
        if (((_a = window2.document.activeElement) == null ? void 0 : _a.tagName) === "IFRAME" && !(el == null ? void 0 : el.contains(window2.document.activeElement))) {
          handler9(event);
        }
      }, 0);
    })
  ].filter(Boolean);
  const stop = () => cleanup.forEach((fn) => fn());
  return stop;
}
const vOnClickOutside = {
  [directiveHooks.mounted](el, binding) {
    const capture = !binding.modifiers.bubble;
    if (typeof binding.value === "function") {
      el.__onClickOutside_stop = onClickOutside(el, binding.value, { capture });
    } else {
      const [handler9, options2] = binding.value;
      el.__onClickOutside_stop = onClickOutside(el, handler9, Object.assign({ capture }, options2));
    }
  },
  [directiveHooks.unmounted](el) {
    el.__onClickOutside_stop();
  }
};
function resolveElement(el) {
  if (typeof Window !== "undefined" && el instanceof Window)
    return el.document.documentElement;
  if (typeof Document !== "undefined" && el instanceof Document)
    return el.documentElement;
  return el;
}
function checkOverflowScroll(ele) {
  const style = window.getComputedStyle(ele);
  if (style.overflowX === "scroll" || style.overflowY === "scroll" || style.overflowX === "auto" && ele.clientWidth < ele.scrollWidth || style.overflowY === "auto" && ele.clientHeight < ele.scrollHeight) {
    return true;
  } else {
    const parent = ele.parentNode;
    if (!parent || parent.tagName === "BODY")
      return false;
    return checkOverflowScroll(parent);
  }
}
function preventDefault(rawEvent) {
  const e2 = rawEvent || window.event;
  const _target = e2.target;
  if (checkOverflowScroll(_target))
    return false;
  if (e2.touches.length > 1)
    return true;
  if (e2.preventDefault)
    e2.preventDefault();
  return false;
}
const elInitialOverflow = /* @__PURE__ */ new WeakMap();
function useScrollLock(element, initialState = false) {
  const isLocked = ref$1(initialState);
  let stopTouchMoveListener = null;
  let initialOverflow = "";
  watch(toRef(element), (el) => {
    const target = resolveElement(toValue(el));
    if (target) {
      const ele = target;
      if (!elInitialOverflow.get(ele))
        elInitialOverflow.set(ele, ele.style.overflow);
      if (ele.style.overflow !== "hidden")
        initialOverflow = ele.style.overflow;
      if (ele.style.overflow === "hidden")
        return isLocked.value = true;
      if (isLocked.value)
        return ele.style.overflow = "hidden";
    }
  }, {
    immediate: true
  });
  const lock = () => {
    const el = resolveElement(toValue(element));
    if (!el || isLocked.value)
      return;
    if (isIOS) {
      stopTouchMoveListener = useEventListener(
        el,
        "touchmove",
        (e2) => {
          preventDefault(e2);
        },
        { passive: false }
      );
    }
    el.style.overflow = "hidden";
    isLocked.value = true;
  };
  const unlock = () => {
    const el = resolveElement(toValue(element));
    if (!el || !isLocked.value)
      return;
    if (isIOS)
      stopTouchMoveListener == null ? void 0 : stopTouchMoveListener();
    el.style.overflow = initialOverflow;
    elInitialOverflow.delete(el);
    isLocked.value = false;
  };
  tryOnScopeDispose(unlock);
  return computed({
    get() {
      return isLocked.value;
    },
    set(v2) {
      if (v2)
        lock();
      else unlock();
    }
  });
}
function onScrollLock() {
  let isMounted = false;
  const state = ref$1(false);
  return (el, binding) => {
    state.value = binding.value;
    if (isMounted)
      return;
    isMounted = true;
    const isLocked = useScrollLock(el, binding.value);
    watch(state, (v2) => isLocked.value = v2);
  };
}
onScrollLock();
register(t9);
const userStatus = {
  data() {
    return {
      hasStatus: false,
      userStatus: {
        status: null,
        message: null,
        icon: null
      }
    };
  },
  methods: {
    /**
     * Fetches the user-status from the server
     *
     * @param {string} userId UserId of the user to fetch the status for
     *
     * @return {Promise<void>}
     */
    async fetchUserStatus(userId) {
      if (!userId) {
        return;
      }
      const capabilities = e();
      if (!Object.prototype.hasOwnProperty.call(capabilities, "user_status") || !capabilities.user_status.enabled) {
        return;
      }
      if (!getCurrentUser()) {
        return;
      }
      try {
        const { data: data11 } = await cancelableClient.get(v("apps/user_status/api/v1/statuses/{userId}", { userId }));
        const {
          status,
          message,
          icon
        } = data11.ocs.data;
        this.userStatus.status = status;
        this.userStatus.message = message || "";
        this.userStatus.icon = icon || "";
        this.hasStatus = true;
      } catch (e2) {
        if (e2.response.status === 404 && e2.response.data.ocs?.data?.length === 0) {
          return;
        }
        console.error(e2);
      }
    }
  }
};
const browserStorage = getBuilder_1("nextcloud").persist().build();
function getUserHasAvatar(userId) {
  const flag = browserStorage.getItem("user-has-avatar." + userId);
  if (typeof flag === "string") {
    return Boolean(flag);
  }
  return null;
}
function setUserHasAvatar(userId, flag) {
  if (userId) {
    browserStorage.setItem("user-has-avatar." + userId, flag);
  }
}
const _sfc_main$b = {
  name: "NcAvatar",
  directives: {
    ClickOutside: vOnClickOutside
  },
  components: {
    DotsHorizontal,
    NcActions,
    NcButton,
    NcIconSvgWrapper,
    NcLoadingIcon,
    NcUserStatusIcon
  },
  mixins: [userStatus],
  props: {
    /**
     * Set a custom url to the avatar image
     * either the url, user or displayName property must be defined
     */
    url: {
      type: String,
      default: void 0
    },
    /**
     * Set a css icon-class for an icon to be used instead of the avatar.
     */
    iconClass: {
      type: String,
      default: void 0
    },
    /**
     * Set the user id to fetch the avatar
     * either the url, user or displayName property must be defined
     */
    user: {
      type: String,
      default: void 0
    },
    /**
     * Do not show the user status on the avatar.
     */
    hideStatus: {
      type: Boolean,
      default: false
    },
    /**
     * Whether or not to display the user-status.
     * @deprecated - Use `hideStatus` instead. Will be removed with v9.
     */
    showUserStatus: {
      type: Boolean,
      default: true
    },
    /**
     * Show the verbose user status (e.g. "online" / "away") instead of just the status icon.
     */
    verboseStatus: {
      type: Boolean,
      default: false
    },
    /**
     * Whether or not to the status-icon should be used instead of online/away
     * @deprecated - Use `verboseStatus` instead. Will be removed with v9.
     */
    showUserStatusCompact: {
      type: Boolean,
      default: true
    },
    /**
     * When the user status was preloaded via another source it can be handed in with this property to save the request.
     * If this property is not set the status will be fetched automatically.
     * If a preloaded no-status is available provide this object with properties "status", "icon" and "message" set to null.
     */
    preloadedUserStatus: {
      type: Object,
      default: void 0
    },
    /**
     * Is the user a guest user (then we have to user a different endpoint)
     */
    isGuest: {
      type: Boolean,
      default: false
    },
    /**
     * Set a display name that will be rendered as a tooltip
     * either the url, user or displayName property must be defined
     * specify just the displayname to generate a placeholder avatar without
     * trying to fetch the avatar based on the user id
     */
    displayName: {
      type: String,
      default: void 0
    },
    /**
     * Set a size in px for the rendered avatar
     */
    size: {
      type: Number,
      default: 32
    },
    /**
     * Do not automatically generate a placeholder avatars if there is no real avatar is available.
     */
    noPlaceholder: {
      type: Boolean,
      default: false
    },
    /**
     * Placeholder avatars will be automatically generated when this is set to true.
     * @deprecated - Use `noPlaceholder` instead. Will be removed in v9.
     */
    allowPlaceholder: {
      type: Boolean,
      default: true
    },
    /**
     * Disable the tooltip
     */
    disableTooltip: {
      type: Boolean,
      default: false
    },
    /**
     * Disable the menu
     */
    disableMenu: {
      type: Boolean,
      default: false
    },
    /**
     * Declares a custom tooltip when not null
     * Fallback will be the displayName
     *
     * requires disableTooltip not to be set to true
     */
    tooltipMessage: {
      type: String,
      default: null
    },
    /**
     * Declares username is not a user's name, when true.
     * Prevents loading user's avatar from server and forces generating colored initials,
     * i.e. if the user is a group
     */
    isNoUser: {
      type: Boolean,
      default: false
    },
    /**
     * Selector for the popover menu container
     */
    menuContainer: {
      type: [String, Object, Element, Boolean],
      default: "body"
    }
  },
  data() {
    return {
      avatarUrlLoaded: null,
      avatarSrcSetLoaded: null,
      userDoesNotExist: false,
      isAvatarLoaded: false,
      isMenuLoaded: false,
      contactsMenuLoading: false,
      contactsMenuData: {},
      contactsMenuActions: [],
      contactsMenuOpenState: false
    };
  },
  computed: {
    avatarAriaLabel() {
      if (!this.hasMenu) {
        return;
      }
      if (this.canDisplayUserStatus || this.showUserStatusIconOnAvatar) {
        return t("Avatar of {displayName}, {status}", { displayName: this.displayName ?? this.user, status: getUserStatusText(this.userStatus.status) });
      }
      return t("Avatar of {displayName}", { displayName: this.displayName ?? this.user });
    },
    canDisplayUserStatus() {
      return !this.hideStatus && this.showUserStatus && this.hasStatus && ["online", "away", "busy", "dnd"].includes(this.userStatus.status);
    },
    showUserStatusIconOnAvatar() {
      return !this.hideStatus && this.showUserStatus && !this.verboseStatus && this.showUserStatusCompact && this.hasStatus && this.userStatus.status !== "dnd" && this.userStatus.icon;
    },
    /**
     * The user identifier, either the display name if set or the user property
     * If both properties are not set an empty string is returned
     */
    userIdentifier() {
      if (this.isDisplayNameDefined) {
        return this.displayName;
      }
      if (this.isUserDefined) {
        return this.user;
      }
      return "";
    },
    isUserDefined() {
      return typeof this.user !== "undefined";
    },
    isDisplayNameDefined() {
      return typeof this.displayName !== "undefined";
    },
    isUrlDefined() {
      return typeof this.url !== "undefined";
    },
    hasMenu() {
      if (this.disableMenu) {
        return false;
      }
      if (this.isMenuLoaded) {
        return this.menu.length > 0;
      }
      return !(this.user === getCurrentUser()?.uid || this.userDoesNotExist || this.url);
    },
    /**
     * True if initials should be shown as the user icon fallback
     */
    showInitials() {
      return !this.noPlaceholder && this.allowPlaceholder && this.userDoesNotExist && !(this.iconClass || this.$slots.icon);
    },
    avatarStyle() {
      return {
        "--size": this.size + "px",
        lineHeight: this.showInitials ? this.size + "px" : 0,
        fontSize: Math.round(this.size * 0.45) + "px"
      };
    },
    initialsWrapperStyle() {
      const { r, g, b } = usernameToColor(this.userIdentifier);
      return {
        backgroundColor: `rgba(${r}, ${g}, ${b}, 0.1)`
      };
    },
    initialsStyle() {
      const { r, g, b } = usernameToColor(this.userIdentifier);
      return {
        color: `rgb(${r}, ${g}, ${b})`
      };
    },
    tooltip() {
      if (this.disableTooltip) {
        return false;
      }
      if (this.tooltipMessage) {
        return this.tooltipMessage;
      }
      return this.displayName;
    },
    /**
     * Get the (max. two) initials of the user as uppcase string
     */
    initials() {
      let initials = "?";
      if (this.showInitials) {
        const user = this.userIdentifier.trim();
        if (user === "") {
          return initials;
        }
        const filteredChars = user.match(/[\p{L}\p{N}\s]/gu);
        if (filteredChars == null) {
          return initials;
        }
        const filtered = filteredChars.join("");
        const idx = filtered.lastIndexOf(" ");
        initials = String.fromCodePoint(filtered.codePointAt(0));
        if (idx !== -1) {
          initials = initials.concat(String.fromCodePoint(filtered.codePointAt(idx + 1)));
        }
      }
      return initials.toLocaleUpperCase();
    },
    menu() {
      const actions = this.contactsMenuActions.map((item) => {
        const route = getRoute(this.$router, item.hyperlink);
        return {
          ncActionComponent: route ? NcActionRouter : NcActionLink,
          ncActionComponentProps: route ? {
            to: route,
            icon: item.icon
          } : {
            href: item.hyperlink,
            icon: item.icon
          },
          text: item.title
        };
      });
      for (const action of getEnabledContactsMenuActions(this.contactsMenuData)) {
        try {
          actions.push({
            ncActionComponent: NcActionButton,
            ncActionComponentProps: {},
            ncActionComponentHandlers: {
              click: () => action.callback(this.contactsMenuData)
            },
            text: action.displayName(this.contactsMenuData),
            iconSvg: action.iconSvg(this.contactsMenuData)
          });
        } catch (error) {
          logger.error(`Failed to render ContactsMenu action ${action.id}`, {
            error,
            action
          });
        }
      }
      function escape2(html) {
        const text3 = document.createTextNode(html);
        const p = document.createElement("p");
        p.appendChild(text3);
        return p.innerHTML;
      }
      if (!this.hideStatus && this.showUserStatus && (this.userStatus.icon || this.userStatus.message)) {
        const emojiIcon = `<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16">
					<text x="50%" y="50%" text-anchor="middle" style="dominant-baseline: central; font-size: 85%">${escape2(this.userStatus.icon)}</text>
				</svg>`;
        return [{
          ncActionComponent: NcActionText,
          ncActionComponentProps: {},
          iconSvg: this.userStatus.icon ? emojiIcon : void 0,
          text: `${this.userStatus.message}`
        }].concat(actions);
      }
      return actions;
    }
  },
  watch: {
    url() {
      this.userDoesNotExist = false;
      this.loadAvatarUrl();
    },
    user() {
      this.userDoesNotExist = false;
      this.isMenuLoaded = false;
      this.loadAvatarUrl();
    }
  },
  mounted() {
    this.loadAvatarUrl();
    subscribe("settings:avatar:updated", this.loadAvatarUrl);
    subscribe("settings:display-name:updated", this.loadAvatarUrl);
    if (!this.hideStatus && this.showUserStatus && this.user && !this.isNoUser) {
      if (!this.preloadedUserStatus) {
        this.fetchUserStatus(this.user);
      } else {
        this.userStatus.status = this.preloadedUserStatus.status || "";
        this.userStatus.message = this.preloadedUserStatus.message || "";
        this.userStatus.icon = this.preloadedUserStatus.icon || "";
        this.hasStatus = this.preloadedUserStatus.status !== null;
      }
      subscribe("user_status:status.updated", this.handleUserStatusUpdated);
    }
  },
  beforeDestroy() {
    unsubscribe("settings:avatar:updated", this.loadAvatarUrl);
    unsubscribe("settings:display-name:updated", this.loadAvatarUrl);
    unsubscribe("user_status:status.updated", this.handleUserStatusUpdated);
  },
  methods: {
    t,
    handleUserStatusUpdated(state) {
      if (this.user === state.userId) {
        this.userStatus = {
          status: state.status,
          icon: state.icon,
          message: state.message
        };
      }
    },
    /**
     * Toggle the popover menu on click or enter
     * @param {KeyboardEvent|MouseEvent} event the UI event
     */
    async toggleMenu(event) {
      if (event.type === "keydown" && event.key !== "Enter") {
        return;
      }
      if (!this.contactsMenuOpenState) {
        await this.fetchContactsMenu();
      }
      this.contactsMenuOpenState = !this.contactsMenuOpenState;
    },
    closeMenu() {
      this.contactsMenuOpenState = false;
    },
    async fetchContactsMenu() {
      this.contactsMenuLoading = true;
      try {
        const user = encodeURIComponent(this.user);
        const { data: data11 } = await cancelableClient.post(_("contactsmenu/findOne"), `shareType=0&shareWith=${user}`);
        this.contactsMenuData = data11;
        this.contactsMenuActions = data11.topAction ? [data11.topAction].concat(data11.actions) : data11.actions;
      } catch (e2) {
        this.contactsMenuOpenState = false;
      }
      this.contactsMenuLoading = false;
      this.isMenuLoaded = true;
    },
    /**
     * Handle avatar loading if user or url defined
     */
    loadAvatarUrl() {
      this.isAvatarLoaded = false;
      if (!this.isUrlDefined && (!this.isUserDefined || this.isNoUser || this.iconClass)) {
        this.isAvatarLoaded = true;
        this.userDoesNotExist = true;
        return;
      }
      if (this.isUrlDefined) {
        this.updateImageIfValid(this.url);
        return;
      }
      if (this.size <= 64) {
        const avatarUrl = this.avatarUrlGenerator(this.user, 64);
        const srcset = [
          avatarUrl + " 1x",
          this.avatarUrlGenerator(this.user, 512) + " 8x"
        ].join(", ");
        this.updateImageIfValid(avatarUrl, srcset);
      } else {
        const avatarUrl = this.avatarUrlGenerator(this.user, 512);
        this.updateImageIfValid(avatarUrl);
      }
    },
    /**
     * Generate an avatar url from the server's avatar endpoint
     *
     * @param {string} user the user id
     * @param {number} size the desired size
     * @return {string}
     */
    avatarUrlGenerator(user, size) {
      let avatarUrl = getAvatarUrl(user, size, this.isGuest);
      if (user === getCurrentUser()?.uid && typeof oc_userconfig !== "undefined") {
        avatarUrl += "?v=" + oc_userconfig.avatar.version;
      }
      return avatarUrl;
    },
    /**
     * Check if the provided url is valid and update Avatar if so
     *
     * @param {string} url the avatar url
     * @param {Array} srcset the avatar srcset
     */
    updateImageIfValid(url, srcset = null) {
      const userHasAvatar = getUserHasAvatar(this.user);
      if (this.isUserDefined && typeof userHasAvatar === "boolean") {
        this.isAvatarLoaded = true;
        this.avatarUrlLoaded = url;
        if (srcset) {
          this.avatarSrcSetLoaded = srcset;
        }
        if (userHasAvatar === false) {
          this.userDoesNotExist = true;
        }
        return;
      }
      const img = new Image();
      img.onload = () => {
        this.avatarUrlLoaded = url;
        if (srcset) {
          this.avatarSrcSetLoaded = srcset;
        }
        this.isAvatarLoaded = true;
        setUserHasAvatar(this.user, true);
      };
      img.onerror = () => {
        console.debug("Invalid avatar url", url);
        this.avatarUrlLoaded = null;
        this.avatarSrcSetLoaded = null;
        this.userDoesNotExist = true;
        this.isAvatarLoaded = false;
        setUserHasAvatar(this.user, false);
      };
      if (srcset) {
        img.srcset = srcset;
      }
      img.src = url;
    }
  }
};
var _sfc_render$b = function render8() {
  var _vm = this, _c = _vm._self._c;
  return _c("span", { directives: [{ name: "click-outside", rawName: "v-click-outside", value: _vm.closeMenu, expression: "closeMenu" }], ref: "main", staticClass: "avatardiv popovermenu-wrapper", class: {
    "avatardiv--unknown": _vm.userDoesNotExist,
    "avatardiv--with-menu": _vm.hasMenu,
    "avatardiv--with-menu-loading": _vm.contactsMenuLoading
  }, style: _vm.avatarStyle, attrs: { "title": _vm.tooltip } }, [_vm._t("icon", function() {
    return [_vm.iconClass ? _c("span", { staticClass: "avatar-class-icon", class: _vm.iconClass }) : _vm.isAvatarLoaded && !_vm.userDoesNotExist ? _c("img", { attrs: { "src": _vm.avatarUrlLoaded, "srcset": _vm.avatarSrcSetLoaded, "alt": "" } }) : _vm._e()];
  }), _vm.hasMenu && _vm.menu.length === 0 ? _c("NcButton", { staticClass: "action-item action-item__menutoggle", attrs: { "aria-label": _vm.avatarAriaLabel, "variant": "tertiary-no-background" }, on: { "click": _vm.toggleMenu }, scopedSlots: _vm._u([{ key: "icon", fn: function() {
    return [_vm.contactsMenuLoading ? _c("NcLoadingIcon") : _c("DotsHorizontal", { attrs: { "size": 20 } })];
  }, proxy: true }], null, false, 2617833509) }) : _vm.hasMenu ? _c("NcActions", { attrs: { "aria-label": _vm.avatarAriaLabel, "container": _vm.menuContainer, "force-menu": "", "manual-open": "", "open": _vm.contactsMenuOpenState, "variant": "tertiary-no-background" }, on: { "update:open": function($event) {
    _vm.contactsMenuOpenState = $event;
  }, "click": _vm.toggleMenu }, scopedSlots: _vm._u([_vm.contactsMenuLoading ? { key: "icon", fn: function() {
    return [_c("NcLoadingIcon")];
  }, proxy: true } : null], null, true) }, _vm._l(_vm.menu, function(item, key) {
    return _c(item.ncActionComponent, _vm._g(_vm._b({ key, tag: "component", scopedSlots: _vm._u([item.iconSvg ? { key: "icon", fn: function() {
      return [_c("NcIconSvgWrapper", { attrs: { "svg": item.iconSvg } })];
    }, proxy: true } : null], null, true) }, "component", item.ncActionComponentProps, false), item.ncActionComponentHandlers), [_vm._v(" " + _vm._s(item.text) + " ")]);
  }), 1) : _vm._e(), _vm.showUserStatusIconOnAvatar ? _c("span", { staticClass: "avatardiv__user-status avatardiv__user-status--icon" }, [_vm._v(" " + _vm._s(_vm.userStatus.icon) + " ")]) : _vm.canDisplayUserStatus ? _c("NcUserStatusIcon", { staticClass: "avatardiv__user-status", attrs: { "status": _vm.userStatus.status, "aria-hidden": String(_vm.hasMenu) } }) : _vm._e(), _vm.showInitials ? _c("span", { staticClass: "avatardiv__initials-wrapper", style: _vm.initialsWrapperStyle }, [_c("span", { staticClass: "avatardiv__initials", style: _vm.initialsStyle }, [_vm._v(" " + _vm._s(_vm.initials) + " ")])]) : _vm._e()], 2);
};
var _sfc_staticRenderFns$b = [];
var __component__$b = /* @__PURE__ */ normalizeComponent$1(
  _sfc_main$b,
  _sfc_render$b,
  _sfc_staticRenderFns$b,
  false,
  null,
  "f132fa9c"
);
const NcAvatar = __component__$b.exports;
const margin = 8;
const defaultSize = 32;
const _sfc_main$a = {
  name: "NcListItemIcon",
  components: {
    NcAvatar,
    NcHighlight,
    NcIconSvgWrapper
  },
  mixins: [
    userStatus
  ],
  props: {
    /**
     * Default first line text
     */
    name: {
      type: String,
      required: true
    },
    /**
     * Secondary optional line
     * Only visible on size of 32 and above
     */
    subname: {
      type: String,
      default: ""
    },
    /**
     * Icon class to be displayed at the end of the component
     */
    icon: {
      type: String,
      default: ""
    },
    /**
     * SVG icon to be displayed at the end of the component
     */
    iconSvg: {
      type: String,
      default: ""
    },
    /**
     * Descriptive name for the icon
     */
    iconName: {
      type: String,
      default: ""
    },
    /**
     * Search within the highlight of name/subname
     */
    search: {
      type: String,
      default: ""
    },
    /**
     * Set a size in px that will define the avatar height/width
     * and therefore, the height of the component
     */
    avatarSize: {
      type: Number,
      default: defaultSize
    },
    /**
     * Disable the margins of this component.
     * Useful for integration in `NcSelect` for example
     */
    noMargin: {
      type: Boolean,
      default: false
    },
    /**
     * See the [Avatar](#Avatar) displayName prop
     * Fallback to name
     */
    displayName: {
      type: String,
      default: null
    },
    /**
     * See the [Avatar](#Avatar) isNoUser prop
     * Enable/disable the UserStatus fetching
     */
    isNoUser: {
      type: Boolean,
      default: false
    },
    /**
     * Unique list item ID
     */
    id: {
      type: String,
      default: null
    }
  },
  setup() {
    return {
      margin,
      defaultSize
    };
  },
  computed: {
    hasIcon() {
      return this.icon !== "";
    },
    hasIconSvg() {
      return this.iconSvg !== "";
    },
    isValidSubname() {
      return this.subname?.trim?.() !== "";
    },
    isSizeBigEnough() {
      return this.avatarSize >= 26;
    },
    cssVars() {
      const margin2 = this.noMargin ? 0 : this.margin;
      return {
        "--height": this.avatarSize + 2 * margin2 + "px",
        "--margin": this.margin + "px"
      };
    },
    /**
     * Seperates the search property into two parts, the first one is the search part on the name, the second on the subname.
     * @return {[string, string]}
     */
    searchParts() {
      const EMAIL_NOTATION = /^([^<]*)<([^>]+)>?$/;
      const match = this.search.match(EMAIL_NOTATION);
      if (this.isNoUser || !match) {
        return [this.search, this.search];
      }
      return [match[1].trim(), match[2]];
    }
  },
  beforeMount() {
    if (!this.isNoUser && !this.subname) {
      this.fetchUserStatus(this.user);
    }
  }
};
var _sfc_render$a = function render9() {
  var _vm = this, _c = _vm._self._c;
  return _c("span", _vm._g({ staticClass: "option", class: { "option--compact": _vm.avatarSize < _vm.defaultSize }, style: _vm.cssVars, attrs: { "id": _vm.id } }, _vm.$listeners), [_c("NcAvatar", _vm._b({ staticClass: "option__avatar", attrs: { "disable-menu": true, "disable-tooltip": true, "display-name": _vm.displayName || _vm.name, "is-no-user": _vm.isNoUser, "size": _vm.avatarSize } }, "NcAvatar", _vm.$attrs, false)), _c("div", { staticClass: "option__details" }, [_c("NcHighlight", { staticClass: "option__lineone", attrs: { "text": _vm.name, "search": _vm.searchParts[0] } }), _vm.isValidSubname && _vm.isSizeBigEnough ? _c("NcHighlight", { staticClass: "option__linetwo", attrs: { "text": _vm.subname, "search": _vm.searchParts[1] } }) : _vm.hasStatus ? _c("span", [_c("span", [_vm._v(_vm._s(_vm.userStatus.icon))]), _c("span", [_vm._v(_vm._s(_vm.userStatus.message))])]) : _vm._e()], 1), _vm._t("default", function() {
    return [_vm.hasIconSvg ? _c("NcIconSvgWrapper", { staticClass: "option__icon", attrs: { "svg": _vm.iconSvg, "name": _vm.iconName } }) : _vm.hasIcon ? _c("span", { staticClass: "icon option__icon", class: _vm.icon, attrs: { "aria-label": _vm.iconName } }) : _vm._e()];
  })], 2);
};
var _sfc_staticRenderFns$a = [];
var __component__$a = /* @__PURE__ */ normalizeComponent$1(
  _sfc_main$a,
  _sfc_render$a,
  _sfc_staticRenderFns$a,
  false,
  null,
  "a0f4d73a"
);
const NcListItemIcon = __component__$a.exports;
register(t15, t35);
const _sfc_main$9 = {
  name: "NcSelect",
  components: {
    ChevronDown,
    NcEllipsisedOption,
    NcListItemIcon,
    NcLoadingIcon,
    VueSelect: vueSelectExports.VueSelect
  },
  model: {
    prop: "modelValue",
    event: "update:modelValue"
  },
  props: {
    // Add VueSelect props to $props
    ...vueSelectExports.VueSelect.props,
    ...vueSelectExports.VueSelect.mixins.reduce((allProps, mixin) => ({ ...allProps, ...mixin.props }), {}),
    /**
     * `aria-label` for the clear input button
     */
    ariaLabelClearSelected: {
      type: String,
      default: t("Clear selected")
    },
    /**
     * `aria-label` for the search input
     *
     * A descriptive `inputLabel` is preferred as this is not visible.
     */
    ariaLabelCombobox: {
      type: String,
      default: null
    },
    /**
     * `aria-label` for the listbox element
     */
    ariaLabelListbox: {
      type: String,
      default: t("Options")
    },
    /**
     * Allows to customize the `aria-label` for the deselect-option button
     * The default is "Deselect " + optionLabel
     * @type {(optionLabel: string) => string}
     */
    ariaLabelDeselectOption: {
      type: Function,
      default: (optionLabel) => t("Deselect {option}", { option: optionLabel })
    },
    /**
     * Append the dropdown element to the end of the body
     * and size/position it dynamically.
     *
     * @see https://vue-select.org/api/props.html#appendtobody
     */
    appendToBody: {
      type: Boolean,
      default: true
    },
    /**
     * When `appendToBody` is true, this function is responsible for
     * positioning the drop down list.
     *
     * If a function is returned from `calculatePosition`, it will
     * be called when the drop down list is removed from the DOM.
     * This allows for any garbage collection you may need to do.
     *
     * @see https://vue-select.org/api/props.html#calculateposition
     */
    calculatePosition: {
      type: Function,
      default: null
    },
    /**
     * Close the dropdown when selecting an option.
     *
     * @deprecated Use the `keepOpen` prop instead
     */
    closeOnSelect: {
      type: Boolean,
      default: true
    },
    /**
     * Keep the dropdown open after selecting an option.
     *
     * @default false
     * @since 8.25.0
     */
    keepOpen: {
      type: Boolean,
      default: false
    },
    /**
     * Replace default vue-select components
     *
     * @see https://vue-select.org/api/props.html#components
     */
    components: {
      type: Object,
      default: () => ({
        Deselect: {
          render: (createElement) => createElement(Close, {
            props: {
              size: 20,
              fillColor: "var(--vs-controls-color)"
            },
            style: {
              cursor: "pointer"
            }
          })
        }
      })
    },
    /**
     * Sets the maximum number of options to display in the dropdown list
     */
    limit: {
      type: Number,
      default: null
    },
    /**
     * Disable the component
     *
     * @see https://vue-select.org/api/props.html#disabled
     */
    disabled: {
      type: Boolean,
      default: false
    },
    /**
     * Determines whether the dropdown should be open.
     * Receives the component instance as the only argument.
     *
     * @see https://vue-select.org/api/props.html#dropdownshouldopen
     */
    dropdownShouldOpen: {
      type: Function,
      default: ({ noDrop, open }) => {
        return noDrop ? false : open;
      }
    },
    /**
     * Callback to determine if the provided option should
     * match the current search text. Used to determine
     * if the option should be displayed.
     *
     * Defaults to the internal vue-select function documented at the link
     * below
     *
     * Enabling `userSelect` will automatically set this to filter by the
     * `displayName` and `subname` properties of the user option object
     * unless this prop is set explicitly
     *
     * @see https://vue-select.org/api/props.html#filterby
     */
    filterBy: {
      type: Function,
      default: null
    },
    /**
     * Class for the `input`
     *
     * Necessary for use in NcActionInput
     */
    inputClass: {
      type: [String, Object],
      default: null
    },
    /**
     * Input element id
     */
    inputId: {
      type: String,
      default: () => `select-input-${GenRandomId()}`
    },
    /**
     * Visible label for the input element
     *
     * @todo Set default for @nextcloud/vue 9
     */
    inputLabel: {
      type: String,
      default: null
    },
    /**
     * Pass true if you are using an external label
     */
    labelOutside: {
      type: Boolean,
      default: false
    },
    /**
     * Display a visible border around dropdown options
     * which have keyboard focus
     */
    keyboardFocusBorder: {
      type: Boolean,
      default: true
    },
    /**
     * Key of the displayed label for object options
     *
     * Defaults to the internal vue-select string documented at the link
     * below
     *
     * Enabling `userSelect` will automatically set this to `'displayName'`
     * unless this prop is set explicitly
     *
     * @see https://vue-select.org/api/props.html#label
     */
    label: {
      type: String,
      default: null
    },
    /**
     * Show the loading icon
     *
     * @see https://vue-select.org/api/props.html#loading
     */
    loading: {
      type: Boolean,
      default: false
    },
    /**
     * Allow selection of multiple options
     *
     * @see https://vue-select.org/api/props.html#multiple
     */
    multiple: {
      type: Boolean,
      default: false
    },
    /**
     * Disable automatic wrapping when selected options overflow the width
     */
    noWrap: {
      type: Boolean,
      default: false
    },
    /**
     * Array of options
     *
     * @type {Array<string | number | Record<string | number, any>>}
     *
     * @see https://vue-select.org/api/props.html#options
     */
    options: {
      type: Array,
      default: () => []
    },
    /**
     * Placeholder text
     *
     * @see https://vue-select.org/api/props.html#placeholder
     */
    placeholder: {
      type: String,
      default: ""
    },
    /**
     * Customized component's response to keydown events while the search input has focus
     *
     * @see https://vue-select.org/guide/keydown.html#mapkeydown
     */
    mapKeydown: {
      type: Function,
      /**
       * Patched Vue-Select keydown events handlers map to stop Escape propagation in open select
       *
       * @param {Record<number, Function>} map - Mapped keyCode to handlers { <keyCode>:<callback> }
       * @param {import('@nextcloud/vue-select').VueSelect} vm - VueSelect instance
       * @return {Record<number, Function>} patched keydown event handlers
       */
      default(map, vm) {
        return {
          ...map,
          /**
           * Patched Escape handler to stop propagation from open select
           *
           * @param {KeyboardEvent} event - default keydown event handler
           */
          27: (event) => {
            if (vm.open) {
              event.stopPropagation();
            }
            map[27](event);
          }
        };
      }
    },
    /**
     * A unique identifier used to generate IDs and DOM attributes. Must be unique for every instance of the component.
     *
     * @see https://vue-select.org/api/props.html#uid
     */
    uid: {
      type: String,
      default: () => GenRandomId()
    },
    /**
     * When `appendToBody` is true, this sets the placement of the dropdown
     *
     * @type {'bottom' | 'top'}
     */
    placement: {
      type: String,
      default: "bottom"
    },
    /**
     * If false, the focused dropdown option will not be reset when filtered
     * options change
     */
    resetFocusOnOptionsChange: {
      type: Boolean,
      default: true
    },
    /**
     * Enable the user selector with avatars
     *
     * Objects must contain the data expected by the
     * [NcListItemIcon](#/Components/NcListItemIcon) and
     * [NcAvatar](#/Components/NcAvatar) components
     *
     * @deprecated Use the `NcSelectUsers` component instead
     */
    userSelect: {
      type: Boolean,
      default: false
    },
    /**
     * Removed in v9 - use `modelValue` (`v-model`) instead
     * @deprecated
     */
    value: {
      type: [String, Number, Object, Array],
      default: void 0
    },
    /**
     * Currently selected value
     *
     * The `v-model` directive may be used for two-way data binding
     *
     * @type {string | number | Record<string | number, any> | Array<any>}
     *
     * @see https://vue-select.org/api/props.html#value
     */
    modelValue: {
      type: [String, Number, Object, Array],
      default: null
    },
    /**
     * Enable if a value is required for native form validation
     */
    required: {
      type: Boolean,
      default: false
    },
    /**
     * Any available prop
     *
     * @see https://vue-select.org/api/props.html
     */
    // Not an actual prop but needed to show in vue-styleguidist docs
    // eslint-disable-next-line
    " ": {}
  },
  emits: [
    /**
     * All events from https://vue-select.org/api/events.html
     */
    // Not an actual event but needed to show in vue-styleguidist docs
    " ",
    /**
     * Removed in v9 - use `update:modelValue` (`v-model`) instead
     * @deprecated
     */
    "input",
    "update:modelValue",
    /** Same as update:modelValue for Vue 2 compatibility */
    "update:model-value"
  ],
  setup() {
    const clickableArea = Number.parseInt(window.getComputedStyle(document.body).getPropertyValue("--default-clickable-area"));
    const gridBaseLine = Number.parseInt(window.getComputedStyle(document.body).getPropertyValue("--default-grid-baseline"));
    const avatarSize = clickableArea - 2 * gridBaseLine;
    const model = useModelMigration("value", "input");
    return {
      avatarSize,
      model
    };
  },
  data() {
    return {
      search: ""
    };
  },
  computed: {
    inputRequired() {
      if (!this.required) {
        return null;
      }
      return this.model === null || Array.isArray(this.model) && this.model.length === 0;
    },
    localCalculatePosition() {
      if (this.calculatePosition !== null) {
        return this.calculatePosition;
      }
      return (dropdownMenu, component, { width }) => {
        dropdownMenu.style.width = width;
        const addClass = {
          name: "addClass",
          fn(_middlewareArgs) {
            dropdownMenu.classList.add("vs__dropdown-menu--floating");
            return {};
          }
        };
        const togglePlacementClass = {
          name: "togglePlacementClass",
          fn({ placement }) {
            component.$el.classList.toggle(
              "select--drop-up",
              placement === "top"
            );
            dropdownMenu.classList.toggle(
              "vs__dropdown-menu--floating-placement-top",
              placement === "top"
            );
            return {};
          }
        };
        const updatePosition = () => {
          computePosition(component.$refs.toggle, dropdownMenu, {
            placement: this.placement,
            middleware: [
              offset(-1),
              addClass,
              togglePlacementClass,
              // Match popperjs default collision prevention behavior by appending the following middleware in order
              flip(),
              shift({ limiter: limitShift() })
            ]
          }).then(({ x: x2, y }) => {
            Object.assign(dropdownMenu.style, {
              left: `${x2}px`,
              top: `${y}px`,
              width: `${component.$refs.toggle.getBoundingClientRect().width}px`
            });
          });
        };
        const cleanup = autoUpdate(
          component.$refs.toggle,
          dropdownMenu,
          updatePosition
        );
        return cleanup;
      };
    },
    localFilterBy() {
      const EMAIL_NOTATION = /[^<]*<([^>]+)/;
      if (this.filterBy !== null) {
        return this.filterBy;
      }
      if (this.userSelect) {
        return (option, label, search) => {
          const match = search.match(EMAIL_NOTATION);
          return match && option.subname?.toLocaleLowerCase?.()?.indexOf(match[1].toLocaleLowerCase()) > -1 || `${label} ${option.subname}`.toLocaleLowerCase().indexOf(search.toLocaleLowerCase()) > -1;
        };
      }
      return vueSelectExports.VueSelect.props.filterBy.default;
    },
    localLabel() {
      if (this.label !== null) {
        return this.label;
      }
      if (this.userSelect) {
        return "displayName";
      }
      return vueSelectExports.VueSelect.props.label.default;
    },
    propsToForward() {
      const vueSelectKeys = [
        ...Object.keys(vueSelectExports.VueSelect.props),
        ...vueSelectExports.VueSelect.mixins.flatMap((mixin) => Object.keys(mixin.props ?? {}))
      ];
      const initialPropsToForward = Object.fromEntries(
        Object.entries(this.$props).filter(([key, _value]) => vueSelectKeys.includes(key))
      );
      const propsToForward = {
        ...initialPropsToForward,
        // Custom overrides of vue-select props
        value: this.model,
        calculatePosition: this.localCalculatePosition,
        closeOnSelect: this.closeOnSelect && !this.keepOpen,
        filterBy: this.localFilterBy,
        label: this.localLabel
      };
      return propsToForward;
    },
    listenersToForward() {
      return {
        ...this.$listeners,
        input: ($event) => {
          this.model = $event;
        }
      };
    }
  },
  mounted() {
    if (!this.labelOutside && !this.inputLabel && !this.ariaLabelCombobox) {
      Vue.util.warn("[NcSelect] An `inputLabel` or `ariaLabelCombobox` should be set. If an external label is used, `labelOutside` should be set to `true`.");
    }
    if (this.inputLabel && this.ariaLabelCombobox) {
      Vue.util.warn("[NcSelect] Only one of `inputLabel` or `ariaLabelCombobox` should to be set.");
    }
  },
  methods: {
    t
  }
};
var _sfc_render$9 = function render10() {
  var _vm = this, _c = _vm._self._c;
  return _c("VueSelect", _vm._g(_vm._b({ staticClass: "select", class: {
    "select--no-wrap": _vm.noWrap,
    "user-select": _vm.userSelect
  }, on: { "search": (searchString) => _vm.search = searchString }, scopedSlots: _vm._u([!_vm.labelOutside && _vm.inputLabel ? { key: "header", fn: function() {
    return [_c("label", { staticClass: "select__label", attrs: { "for": _vm.inputId } }, [_vm._v(" " + _vm._s(_vm.inputLabel) + " ")])];
  }, proxy: true } : null, { key: "search", fn: function({ attributes, events }) {
    return [_c("input", _vm._g(_vm._b({ class: ["vs__search", _vm.inputClass], attrs: { "required": _vm.inputRequired, "dir": "auto" } }, "input", attributes, false), events))];
  } }, { key: "open-indicator", fn: function({ attributes }) {
    return [_c("ChevronDown", _vm._b({ style: {
      cursor: !_vm.disabled ? "pointer" : null
    }, attrs: { "fill-color": "var(--vs-controls-color)", "size": 26 } }, "ChevronDown", attributes, false))];
  } }, { key: "option", fn: function(option) {
    return [_vm._t("option", function() {
      return [_vm.userSelect ? _c("NcListItemIcon", _vm._b({ attrs: { "avatar-size": 32, "name": option[_vm.localLabel], "search": _vm.search } }, "NcListItemIcon", option, false)) : _c("NcEllipsisedOption", { attrs: { "name": String(option[_vm.localLabel]), "search": _vm.search } })];
    }, null, option)];
  } }, { key: "selected-option", fn: function(selectedOption) {
    return [_vm._t("selected-option", function() {
      return [_vm.userSelect ? _c("NcListItemIcon", _vm._b({ attrs: { "avatar-size": _vm.avatarSize, "name": selectedOption[_vm.localLabel], "no-margin": "", "search": _vm.search } }, "NcListItemIcon", selectedOption, false)) : _c("NcEllipsisedOption", { attrs: { "name": String(selectedOption[_vm.localLabel]), "search": _vm.search } })];
    }, { "vBind": selectedOption })];
  } }, { key: "spinner", fn: function(spinner) {
    return [spinner.loading ? _c("NcLoadingIcon") : _vm._e()];
  } }, { key: "no-options", fn: function() {
    return [_vm._v(" " + _vm._s(_vm.t("No results")) + " ")];
  }, proxy: true }, _vm._l(_vm.$scopedSlots, function(_2, name) {
    return { key: name, fn: function(data11) {
      return [_vm._t(name, null, null, data11)];
    } };
  })], null, true) }, "VueSelect", _vm.propsToForward, false), _vm.listenersToForward));
};
var _sfc_staticRenderFns$9 = [];
var __component__$9 = /* @__PURE__ */ normalizeComponent$1(
  _sfc_main$9,
  _sfc_render$9,
  _sfc_staticRenderFns$9,
  false,
  null,
  null
);
const NcSelect = __component__$9.exports;
register(t24);
function getSortedTimezoneList(timezoneList = [], additionalTimezones = []) {
  const sortedByContinent = {};
  const sortedList = [];
  for (const timezoneId of timezoneList) {
    const components = timezoneId.split("/");
    let [continent, name] = [components.shift(), components.join("/")];
    if (!name) {
      name = continent;
      continent = t("Global");
    }
    sortedByContinent[continent] = sortedByContinent[continent] || {
      continent,
      regions: []
    };
    sortedByContinent[continent].regions.push({
      label: getReadableTimezoneName(name),
      cities: [],
      timezoneId
    });
  }
  for (const additionalTimezone of additionalTimezones) {
    const { continent, label, timezoneId } = additionalTimezone;
    sortedByContinent[continent] = sortedByContinent[continent] || {
      continent,
      regions: []
    };
    sortedByContinent[continent].regions.push({
      label,
      cities: [],
      timezoneId
    });
  }
  for (const continent in sortedByContinent) {
    if (!Object.prototype.hasOwnProperty.call(sortedByContinent, continent)) {
      continue;
    }
    sortedByContinent[continent].regions.sort((a2, b) => {
      if (a2.label < b.label) {
        return -1;
      }
      return 1;
    });
    sortedList.push(sortedByContinent[continent]);
  }
  sortedList.sort((a2, b) => {
    if (a2.continent < b.continent) {
      return -1;
    }
    return 1;
  });
  return sortedList;
}
function getReadableTimezoneName(timezoneId) {
  return timezoneId.split("_").join(" ").replace("St ", "St. ").split("/").join(" - ");
}
const timezoneManager = getTimezoneManager$1();
let initialized = false;
function getTimezoneManager() {
  if (!initialized) {
    timezoneManager.registerDefaultTimezones();
    initialized = true;
  }
  return timezoneManager;
}
register(t41);
const _sfc_main$8 = {
  name: "NcTimezonePicker",
  components: {
    NcSelect
  },
  model: {
    prop: "modelValue",
    event: "update:modelValue"
  },
  props: {
    /**
     * An array of additional timezones to include with the standard database. Useful if there is a custom timezone, e.g. read from user data
     */
    additionalTimezones: {
      type: Array,
      default: () => []
    },
    /**
     * Removed in v9 - use `modelValue` (`v-model`) instead
     * @deprecated
     */
    value: {
      type: String,
      default: void 0
    },
    /**
     * The selected timezone. Use v-model for two-way binding. The default timezone is floating, which means a time independent of timezone. See https://icalendar.org/CalDAV-Access-RFC-4791/7-3-date-and-floating-time.html for details.
     */
    modelValue: {
      type: String,
      default: "floating"
    },
    /**
     * ID of the inner vue-select element, can be used for labels like: `vs-${uid}__combobox`
     */
    uid: {
      type: [String, Number],
      default: () => `tz-${GenRandomId(5)}`
    }
  },
  emits: [
    /**
     * Removed in v9 - use `update:modelValue` (`v-model`) instead
     * @deprecated
     */
    "input",
    /**
     * Two-way binding of the value prop. Use v-model="selectedTimezone" for two-way binding
     */
    "update:modelValue",
    /** Same as update:modelValue for Vue 2 compatibility */
    "update:model-value"
  ],
  setup() {
    const model = useModelMigration("value", "input");
    return {
      model
    };
  },
  computed: {
    placeholder() {
      return t("Type to search time zone");
    },
    selectedTimezone() {
      for (const additionalTimezone of this.additionalTimezones) {
        if (additionalTimezone.timezoneId === this.model) {
          return additionalTimezone;
        }
      }
      return {
        label: getReadableTimezoneName(this.model),
        timezoneId: this.model
      };
    },
    options() {
      const timezoneManager2 = getTimezoneManager();
      const timezoneList = getSortedTimezoneList(timezoneManager2.listAllTimezones(), this.additionalTimezones);
      let timezonesGrouped = [];
      Object.values(timezoneList).forEach((group) => {
        timezonesGrouped = timezonesGrouped.concat(group.regions);
      });
      return timezonesGrouped;
    }
  },
  methods: {
    t,
    change(newValue) {
      if (!newValue) {
        return;
      }
      this.model = newValue.timezoneId;
    },
    /**
     * Returns whether this is a continent label,
     * or an actual timezone. Continent labels are not selectable.
     *
     * @param {string} option The option
     * @return {boolean}
     */
    isSelectable(option) {
      return !option.timezoneId.startsWith("tz-group__");
    },
    /**
     * Function to filter the timezone list.
     * We search in the timezoneId, so both continent and region names can be matched.
     *
     * @param {object} option The timezone option
     * @param {string} label The label of the timezone
     * @param {string} search The search string
     * @return {boolean}
     */
    filterBy(option, label, search) {
      const terms = search.trim().split(" ");
      if (option.timezoneId.startsWith("tz-group__")) {
        return option.regions.some((region) => {
          return this.matchTimezoneId(region.timezoneId, terms);
        });
      }
      return this.matchTimezoneId(option.timezoneId, terms);
    },
    matchTimezoneId(timezoneId, terms) {
      return terms.every((term) => timezoneId.toLowerCase().includes(term.toLowerCase()));
    }
  }
};
var _sfc_render$8 = function render11() {
  var _vm = this, _c = _vm._self._c;
  return _c("NcSelect", { attrs: { "aria-label-combobox": _vm.t("Search for time zone"), "clearable": false, "filter-by": _vm.filterBy, "multiple": false, "options": _vm.options, "placeholder": _vm.placeholder, "selectable": _vm.isSelectable, "uid": _vm.uid, "value": _vm.selectedTimezone, "label": "label" }, on: { "option:selected": _vm.change } });
};
var _sfc_staticRenderFns$8 = [];
var __component__$8 = /* @__PURE__ */ normalizeComponent$1(
  _sfc_main$8,
  _sfc_render$8,
  _sfc_staticRenderFns$8,
  false,
  null,
  null
);
const NcTimezonePicker = __component__$8.exports;
function isDate(value3) {
  return value3 instanceof Date || Object.prototype.toString.call(value3) === "[object Date]";
}
function toDate(value3) {
  if (isDate(value3)) {
    return new Date(value3.getTime());
  }
  if (value3 == null) {
    return /* @__PURE__ */ new Date(NaN);
  }
  return new Date(value3);
}
function isValidDate$1(value3) {
  return isDate(value3) && !isNaN(value3.getTime());
}
function startOfWeek(value3) {
  var firstDayOfWeek2 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0;
  if (!(firstDayOfWeek2 >= 0 && firstDayOfWeek2 <= 6)) {
    throw new RangeError("weekStartsOn must be between 0 and 6");
  }
  var date = toDate(value3);
  var day = date.getDay();
  var diff = (day + 7 - firstDayOfWeek2) % 7;
  date.setDate(date.getDate() - diff);
  date.setHours(0, 0, 0, 0);
  return date;
}
function startOfWeekYear(value3) {
  var _ref = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, _ref$firstDayOfWeek = _ref.firstDayOfWeek, firstDayOfWeek2 = _ref$firstDayOfWeek === void 0 ? 0 : _ref$firstDayOfWeek, _ref$firstWeekContain = _ref.firstWeekContainsDate, firstWeekContainsDate = _ref$firstWeekContain === void 0 ? 1 : _ref$firstWeekContain;
  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {
    throw new RangeError("firstWeekContainsDate must be between 1 and 7");
  }
  var date = toDate(value3);
  var year = date.getFullYear();
  var firstDateOfFirstWeek = /* @__PURE__ */ new Date(0);
  for (var i = year + 1; i >= year - 1; i--) {
    firstDateOfFirstWeek.setFullYear(i, 0, firstWeekContainsDate);
    firstDateOfFirstWeek.setHours(0, 0, 0, 0);
    firstDateOfFirstWeek = startOfWeek(firstDateOfFirstWeek, firstDayOfWeek2);
    if (date.getTime() >= firstDateOfFirstWeek.getTime()) {
      break;
    }
  }
  return firstDateOfFirstWeek;
}
function getWeek(value3) {
  var _ref2 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, _ref2$firstDayOfWeek = _ref2.firstDayOfWeek, firstDayOfWeek2 = _ref2$firstDayOfWeek === void 0 ? 0 : _ref2$firstDayOfWeek, _ref2$firstWeekContai = _ref2.firstWeekContainsDate, firstWeekContainsDate = _ref2$firstWeekContai === void 0 ? 1 : _ref2$firstWeekContai;
  var date = toDate(value3);
  var firstDateOfThisWeek = startOfWeek(date, firstDayOfWeek2);
  var firstDateOfFirstWeek = startOfWeekYear(date, {
    firstDayOfWeek: firstDayOfWeek2,
    firstWeekContainsDate
  });
  var diff = firstDateOfThisWeek.getTime() - firstDateOfFirstWeek.getTime();
  return Math.round(diff / (7 * 24 * 3600 * 1e3)) + 1;
}
var locale$1 = {
  months: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"],
  monthsShort: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"],
  weekdays: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"],
  weekdaysShort: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
  weekdaysMin: ["Su", "Mo", "Tu", "We", "Th", "Fr", "Sa"],
  firstDayOfWeek: 0,
  firstWeekContainsDate: 1
};
var REGEX_FORMAT = /\[([^\]]+)]|YYYY|YY?|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|m{1,2}|s{1,2}|Z{1,2}|S{1,3}|w{1,2}|x|X|a|A/g;
function pad(val) {
  var len = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 2;
  var output = "".concat(Math.abs(val));
  var sign = val < 0 ? "-" : "";
  while (output.length < len) {
    output = "0".concat(output);
  }
  return sign + output;
}
function getOffset(date) {
  return Math.round(date.getTimezoneOffset() / 15) * 15;
}
function formatTimezone(offset2) {
  var delimeter = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "";
  var sign = offset2 > 0 ? "-" : "+";
  var absOffset = Math.abs(offset2);
  var hours = Math.floor(absOffset / 60);
  var minutes = absOffset % 60;
  return sign + pad(hours, 2) + delimeter + pad(minutes, 2);
}
var meridiem = function meridiem2(h3, _2, isLowercase) {
  var word = h3 < 12 ? "AM" : "PM";
  return isLowercase ? word.toLocaleLowerCase() : word;
};
var formatFlags = {
  Y: function Y(date) {
    var y = date.getFullYear();
    return y <= 9999 ? "".concat(y) : "+".concat(y);
  },
  // Year: 00, 01, ..., 99
  YY: function YY(date) {
    return pad(date.getFullYear(), 4).substr(2);
  },
  // Year: 1900, 1901, ..., 2099
  YYYY: function YYYY(date) {
    return pad(date.getFullYear(), 4);
  },
  // Month: 1, 2, ..., 12
  M: function M(date) {
    return date.getMonth() + 1;
  },
  // Month: 01, 02, ..., 12
  MM: function MM(date) {
    return pad(date.getMonth() + 1, 2);
  },
  MMM: function MMM(date, locale3) {
    return locale3.monthsShort[date.getMonth()];
  },
  MMMM: function MMMM(date, locale3) {
    return locale3.months[date.getMonth()];
  },
  // Day of month: 1, 2, ..., 31
  D: function D(date) {
    return date.getDate();
  },
  // Day of month: 01, 02, ..., 31
  DD: function DD(date) {
    return pad(date.getDate(), 2);
  },
  // Hour: 0, 1, ... 23
  H: function H(date) {
    return date.getHours();
  },
  // Hour: 00, 01, ..., 23
  HH: function HH(date) {
    return pad(date.getHours(), 2);
  },
  // Hour: 1, 2, ..., 12
  h: function h2(date) {
    var hours = date.getHours();
    if (hours === 0) {
      return 12;
    }
    if (hours > 12) {
      return hours % 12;
    }
    return hours;
  },
  // Hour: 01, 02, ..., 12
  hh: function hh() {
    var hours = formatFlags.h.apply(formatFlags, arguments);
    return pad(hours, 2);
  },
  // Minute: 0, 1, ..., 59
  m: function m(date) {
    return date.getMinutes();
  },
  // Minute: 00, 01, ..., 59
  mm: function mm(date) {
    return pad(date.getMinutes(), 2);
  },
  // Second: 0, 1, ..., 59
  s: function s(date) {
    return date.getSeconds();
  },
  // Second: 00, 01, ..., 59
  ss: function ss(date) {
    return pad(date.getSeconds(), 2);
  },
  // 1/10 of second: 0, 1, ..., 9
  S: function S(date) {
    return Math.floor(date.getMilliseconds() / 100);
  },
  // 1/100 of second: 00, 01, ..., 99
  SS: function SS(date) {
    return pad(Math.floor(date.getMilliseconds() / 10), 2);
  },
  // Millisecond: 000, 001, ..., 999
  SSS: function SSS(date) {
    return pad(date.getMilliseconds(), 3);
  },
  // Day of week: 0, 1, ..., 6
  d: function d(date) {
    return date.getDay();
  },
  // Day of week: 'Su', 'Mo', ..., 'Sa'
  dd: function dd(date, locale3) {
    return locale3.weekdaysMin[date.getDay()];
  },
  // Day of week: 'Sun', 'Mon',..., 'Sat'
  ddd: function ddd(date, locale3) {
    return locale3.weekdaysShort[date.getDay()];
  },
  // Day of week: 'Sunday', 'Monday', ...,'Saturday'
  dddd: function dddd(date, locale3) {
    return locale3.weekdays[date.getDay()];
  },
  // AM, PM
  A: function A(date, locale3) {
    var meridiemFunc = locale3.meridiem || meridiem;
    return meridiemFunc(date.getHours(), date.getMinutes(), false);
  },
  // am, pm
  a: function a(date, locale3) {
    var meridiemFunc = locale3.meridiem || meridiem;
    return meridiemFunc(date.getHours(), date.getMinutes(), true);
  },
  // Timezone: -01:00, +00:00, ... +12:00
  Z: function Z(date) {
    return formatTimezone(getOffset(date), ":");
  },
  // Timezone: -0100, +0000, ... +1200
  ZZ: function ZZ(date) {
    return formatTimezone(getOffset(date));
  },
  // Seconds timestamp: 512969520
  X: function X(date) {
    return Math.floor(date.getTime() / 1e3);
  },
  // Milliseconds timestamp: 512969520900
  x: function x(date) {
    return date.getTime();
  },
  w: function w2(date, locale3) {
    return getWeek(date, {
      firstDayOfWeek: locale3.firstDayOfWeek,
      firstWeekContainsDate: locale3.firstWeekContainsDate
    });
  },
  ww: function ww(date, locale3) {
    return pad(formatFlags.w(date, locale3), 2);
  }
};
function format(val, str) {
  var options2 = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
  var formatStr = str ? String(str) : "YYYY-MM-DDTHH:mm:ss.SSSZ";
  var date = toDate(val);
  if (!isValidDate$1(date)) {
    return "Invalid Date";
  }
  var locale3 = options2.locale || locale$1;
  return formatStr.replace(REGEX_FORMAT, function(match, p1) {
    if (p1) {
      return p1;
    }
    if (typeof formatFlags[match] === "function") {
      return "".concat(formatFlags[match](date, locale3));
    }
    return match;
  });
}
function _toConsumableArray(arr) {
  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();
}
function _nonIterableSpread() {
  throw new TypeError("Invalid attempt to spread non-iterable instance");
}
function _iterableToArray(iter) {
  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter);
}
function _arrayWithoutHoles(arr) {
  if (Array.isArray(arr)) {
    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {
      arr2[i] = arr[i];
    }
    return arr2;
  }
}
function ownKeys$1(object, enumerableOnly) {
  var keys = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    if (enumerableOnly) symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    });
    keys.push.apply(keys, symbols);
  }
  return keys;
}
function _objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};
    if (i % 2) {
      ownKeys$1(source, true).forEach(function(key) {
        _defineProperty$1(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys$1(source).forEach(function(key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }
  return target;
}
function _slicedToArray$1(arr, i) {
  return _arrayWithHoles$1(arr) || _iterableToArrayLimit$1(arr, i) || _nonIterableRest$1();
}
function _nonIterableRest$1() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance");
}
function _iterableToArrayLimit$1(arr, i) {
  if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === "[object Arguments]")) {
    return;
  }
  var _arr = [];
  var _n = true;
  var _d = false;
  var _e = void 0;
  try {
    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
      _arr.push(_s.value);
      if (i && _arr.length === i) break;
    }
  } catch (err) {
    _d = true;
    _e = err;
  } finally {
    try {
      if (!_n && _i["return"] != null) _i["return"]();
    } finally {
      if (_d) throw _e;
    }
  }
  return _arr;
}
function _arrayWithHoles$1(arr) {
  if (Array.isArray(arr)) return arr;
}
function _defineProperty$1(obj, key, value3) {
  if (key in obj) {
    Object.defineProperty(obj, key, { value: value3, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value3;
  }
  return obj;
}
var formattingTokens = /(\[[^\[]*\])|(MM?M?M?|Do|DD?|ddd?d?|w[o|w]?|YYYY|YY|a|A|hh?|HH?|mm?|ss?|S{1,3}|x|X|ZZ?|.)/g;
var match1 = /\d/;
var match2 = /\d\d/;
var match3 = /\d{3}/;
var match4 = /\d{4}/;
var match1to2 = /\d\d?/;
var matchShortOffset = /[+-]\d\d:?\d\d/;
var matchSigned = /[+-]?\d+/;
var matchTimestamp = /[+-]?\d+(\.\d{1,3})?/;
var YEAR = "year";
var MONTH = "month";
var DAY = "day";
var HOUR = "hour";
var MINUTE = "minute";
var SECOND = "second";
var MILLISECOND = "millisecond";
var parseFlags = {};
var addParseFlag = function addParseFlag2(token, regex, callback) {
  var tokens = Array.isArray(token) ? token : [token];
  var func;
  if (typeof callback === "string") {
    func = function func2(input) {
      var value3 = parseInt(input, 10);
      return _defineProperty$1({}, callback, value3);
    };
  } else {
    func = callback;
  }
  tokens.forEach(function(key) {
    parseFlags[key] = [regex, func];
  });
};
var escapeStringRegExp = function escapeStringRegExp2(str) {
  return str.replace(/[|\\{}()[\]^$+*?.]/g, "\\$&");
};
var matchWordRegExp = function matchWordRegExp2(localeKey) {
  return function(locale3) {
    var array = locale3[localeKey];
    if (!Array.isArray(array)) {
      throw new Error("Locale[".concat(localeKey, "] need an array"));
    }
    return new RegExp(array.map(escapeStringRegExp).join("|"));
  };
};
var matchWordCallback = function matchWordCallback2(localeKey, key) {
  return function(input, locale3) {
    var array = locale3[localeKey];
    if (!Array.isArray(array)) {
      throw new Error("Locale[".concat(localeKey, "] need an array"));
    }
    var index = array.indexOf(input);
    if (index < 0) {
      throw new Error("Invalid Word");
    }
    return _defineProperty$1({}, key, index);
  };
};
addParseFlag("Y", matchSigned, YEAR);
addParseFlag("YY", match2, function(input) {
  var year = (/* @__PURE__ */ new Date()).getFullYear();
  var cent = Math.floor(year / 100);
  var value3 = parseInt(input, 10);
  value3 = (value3 > 68 ? cent - 1 : cent) * 100 + value3;
  return _defineProperty$1({}, YEAR, value3);
});
addParseFlag("YYYY", match4, YEAR);
addParseFlag("M", match1to2, function(input) {
  return _defineProperty$1({}, MONTH, parseInt(input, 10) - 1);
});
addParseFlag("MM", match2, function(input) {
  return _defineProperty$1({}, MONTH, parseInt(input, 10) - 1);
});
addParseFlag("MMM", matchWordRegExp("monthsShort"), matchWordCallback("monthsShort", MONTH));
addParseFlag("MMMM", matchWordRegExp("months"), matchWordCallback("months", MONTH));
addParseFlag("D", match1to2, DAY);
addParseFlag("DD", match2, DAY);
addParseFlag(["H", "h"], match1to2, HOUR);
addParseFlag(["HH", "hh"], match2, HOUR);
addParseFlag("m", match1to2, MINUTE);
addParseFlag("mm", match2, MINUTE);
addParseFlag("s", match1to2, SECOND);
addParseFlag("ss", match2, SECOND);
addParseFlag("S", match1, function(input) {
  return _defineProperty$1({}, MILLISECOND, parseInt(input, 10) * 100);
});
addParseFlag("SS", match2, function(input) {
  return _defineProperty$1({}, MILLISECOND, parseInt(input, 10) * 10);
});
addParseFlag("SSS", match3, MILLISECOND);
function matchMeridiem(locale3) {
  return locale3.meridiemParse || /[ap]\.?m?\.?/i;
}
function defaultIsPM(input) {
  return "".concat(input).toLowerCase().charAt(0) === "p";
}
addParseFlag(["A", "a"], matchMeridiem, function(input, locale3) {
  var isPM = typeof locale3.isPM === "function" ? locale3.isPM(input) : defaultIsPM(input);
  return {
    isPM
  };
});
function offsetFromString(str) {
  var _ref8 = str.match(/([+-]|\d\d)/g) || ["-", "0", "0"], _ref9 = _slicedToArray$1(_ref8, 3), symbol = _ref9[0], hour = _ref9[1], minute = _ref9[2];
  var minutes = parseInt(hour, 10) * 60 + parseInt(minute, 10);
  if (minutes === 0) {
    return 0;
  }
  return symbol === "+" ? -minutes : +minutes;
}
addParseFlag(["Z", "ZZ"], matchShortOffset, function(input) {
  return {
    offset: offsetFromString(input)
  };
});
addParseFlag("x", matchSigned, function(input) {
  return {
    date: new Date(parseInt(input, 10))
  };
});
addParseFlag("X", matchTimestamp, function(input) {
  return {
    date: new Date(parseFloat(input) * 1e3)
  };
});
addParseFlag("d", match1, "weekday");
addParseFlag("dd", matchWordRegExp("weekdaysMin"), matchWordCallback("weekdaysMin", "weekday"));
addParseFlag("ddd", matchWordRegExp("weekdaysShort"), matchWordCallback("weekdaysShort", "weekday"));
addParseFlag("dddd", matchWordRegExp("weekdays"), matchWordCallback("weekdays", "weekday"));
addParseFlag("w", match1to2, "week");
addParseFlag("ww", match2, "week");
function to24hour(hour, isPM) {
  if (hour !== void 0 && isPM !== void 0) {
    if (isPM) {
      if (hour < 12) {
        return hour + 12;
      }
    } else if (hour === 12) {
      return 0;
    }
  }
  return hour;
}
function getFullInputArray(input) {
  var backupDate = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : /* @__PURE__ */ new Date();
  var result = [0, 0, 1, 0, 0, 0, 0];
  var backupArr = [backupDate.getFullYear(), backupDate.getMonth(), backupDate.getDate(), backupDate.getHours(), backupDate.getMinutes(), backupDate.getSeconds(), backupDate.getMilliseconds()];
  var useBackup = true;
  for (var i = 0; i < 7; i++) {
    if (input[i] === void 0) {
      result[i] = useBackup ? backupArr[i] : result[i];
    } else {
      result[i] = input[i];
      useBackup = false;
    }
  }
  return result;
}
function createDate$1(y, m2, d2, h3, M2, s2, ms) {
  var date;
  if (y < 100 && y >= 0) {
    date = new Date(y + 400, m2, d2, h3, M2, s2, ms);
    if (isFinite(date.getFullYear())) {
      date.setFullYear(y);
    }
  } else {
    date = new Date(y, m2, d2, h3, M2, s2, ms);
  }
  return date;
}
function createUTCDate() {
  var date;
  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
    args[_key] = arguments[_key];
  }
  var y = args[0];
  if (y < 100 && y >= 0) {
    args[0] += 400;
    date = new Date(Date.UTC.apply(Date, args));
    if (isFinite(date.getUTCFullYear())) {
      date.setUTCFullYear(y);
    }
  } else {
    date = new Date(Date.UTC.apply(Date, args));
  }
  return date;
}
function makeParser(dateString, format2, locale3) {
  var tokens = format2.match(formattingTokens);
  if (!tokens) {
    throw new Error();
  }
  var length = tokens.length;
  var mark = {};
  for (var i = 0; i < length; i += 1) {
    var token = tokens[i];
    var parseTo = parseFlags[token];
    if (!parseTo) {
      var word = token.replace(/^\[|\]$/g, "");
      if (dateString.indexOf(word) === 0) {
        dateString = dateString.substr(word.length);
      } else {
        throw new Error("not match");
      }
    } else {
      var regex = typeof parseTo[0] === "function" ? parseTo[0](locale3) : parseTo[0];
      var parser = parseTo[1];
      var value3 = (regex.exec(dateString) || [])[0];
      var obj = parser(value3, locale3);
      mark = _objectSpread({}, mark, {}, obj);
      dateString = dateString.replace(value3, "");
    }
  }
  return mark;
}
function parse(str, format2) {
  var options2 = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
  try {
    var _options$locale = options2.locale, _locale = _options$locale === void 0 ? locale$1 : _options$locale, _options$backupDate = options2.backupDate, backupDate = _options$backupDate === void 0 ? /* @__PURE__ */ new Date() : _options$backupDate;
    var parseResult = makeParser(str, format2, _locale);
    var year = parseResult.year, month = parseResult.month, day = parseResult.day, hour = parseResult.hour, minute = parseResult.minute, second = parseResult.second, millisecond = parseResult.millisecond, isPM = parseResult.isPM, date = parseResult.date, offset2 = parseResult.offset, weekday = parseResult.weekday, week = parseResult.week;
    if (date) {
      return date;
    }
    var inputArray = [year, month, day, hour, minute, second, millisecond];
    inputArray[3] = to24hour(inputArray[3], isPM);
    if (week !== void 0 && month === void 0 && day === void 0) {
      var firstDate = startOfWeekYear(year === void 0 ? backupDate : new Date(year, 3), {
        firstDayOfWeek: _locale.firstDayOfWeek,
        firstWeekContainsDate: _locale.firstWeekContainsDate
      });
      return new Date(firstDate.getTime() + (week - 1) * 7 * 24 * 3600 * 1e3);
    }
    var parsedDate;
    var result = getFullInputArray(inputArray, backupDate);
    if (offset2 !== void 0) {
      result[6] += offset2 * 60 * 1e3;
      parsedDate = createUTCDate.apply(void 0, _toConsumableArray(result));
    } else {
      parsedDate = createDate$1.apply(void 0, _toConsumableArray(result));
    }
    if (weekday !== void 0 && parsedDate.getDay() !== weekday) {
      return /* @__PURE__ */ new Date(NaN);
    }
    return parsedDate;
  } catch (e2) {
    return /* @__PURE__ */ new Date(NaN);
  }
}
function _typeof$1(obj) {
  "@babel/helpers - typeof";
  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    _typeof$1 = function(obj2) {
      return typeof obj2;
    };
  } else {
    _typeof$1 = function(obj2) {
      return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    };
  }
  return _typeof$1(obj);
}
function _defineProperty(obj, key, value3) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value3,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value3;
  }
  return obj;
}
function _extends() {
  _extends = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends.apply(this, arguments);
}
function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    if (enumerableOnly) symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    });
    keys.push.apply(keys, symbols);
  }
  return keys;
}
function _objectSpread2(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};
    if (i % 2) {
      ownKeys(Object(source), true).forEach(function(key) {
        _defineProperty(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys(Object(source)).forEach(function(key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }
  return target;
}
function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }
  return target;
}
function _objectWithoutProperties(source, excluded) {
  if (source == null) return {};
  var target = _objectWithoutPropertiesLoose(source, excluded);
  var key, i;
  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
    for (i = 0; i < sourceSymbolKeys.length; i++) {
      key = sourceSymbolKeys[i];
      if (excluded.indexOf(key) >= 0) continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
      target[key] = source[key];
    }
  }
  return target;
}
function _slicedToArray(arr, i) {
  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();
}
function _arrayWithHoles(arr) {
  if (Array.isArray(arr)) return arr;
}
function _iterableToArrayLimit(arr, i) {
  if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return;
  var _arr = [];
  var _n = true;
  var _d = false;
  var _e = void 0;
  try {
    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
      _arr.push(_s.value);
      if (i && _arr.length === i) break;
    }
  } catch (err) {
    _d = true;
    _e = err;
  } finally {
    try {
      if (!_n && _i["return"] != null) _i["return"]();
    } finally {
      if (_d) throw _e;
    }
  }
  return _arr;
}
function _unsupportedIterableToArray(o, minLen) {
  if (!o) return;
  if (typeof o === "string") return _arrayLikeToArray(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor) n = o.constructor.name;
  if (n === "Map" || n === "Set") return Array.from(n);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
}
function _arrayLikeToArray(arr, len) {
  if (len == null || len > arr.length) len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
  return arr2;
}
function _nonIterableRest() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _extends$1() {
  return _extends$1 = Object.assign || function(a2) {
    for (var b, c = 1; c < arguments.length; c++) {
      for (var d2 in b = arguments[c], b) {
        Object.prototype.hasOwnProperty.call(b, d2) && (a2[d2] = b[d2]);
      }
    }
    return a2;
  }, _extends$1.apply(this, arguments);
}
var normalMerge = ["attrs", "props", "domProps"], toArrayMerge = ["class", "style", "directives"], functionalMerge = ["on", "nativeOn"], mergeJsxProps = function mergeJsxProps2(a2) {
  return a2.reduce(function(c, a3) {
    for (var b in a3) {
      if (!c[b]) c[b] = a3[b];
      else if (-1 !== normalMerge.indexOf(b)) c[b] = _extends$1({}, c[b], a3[b]);
      else if (-1 !== toArrayMerge.indexOf(b)) {
        var d2 = c[b] instanceof Array ? c[b] : [c[b]], e2 = a3[b] instanceof Array ? a3[b] : [a3[b]];
        c[b] = d2.concat(e2);
      } else if (-1 !== functionalMerge.indexOf(b)) {
        for (var f2 in a3[b]) {
          if (c[b][f2]) {
            var g = c[b][f2] instanceof Array ? c[b][f2] : [c[b][f2]], h3 = a3[b][f2] instanceof Array ? a3[b][f2] : [a3[b][f2]];
            c[b][f2] = g.concat(h3);
          } else c[b][f2] = a3[b][f2];
        }
      } else if ("hook" == b) for (var i in a3[b]) {
        c[b][i] = c[b][i] ? mergeFn(c[b][i], a3[b][i]) : a3[b][i];
      }
      else c[b] = a3[b];
    }
    return c;
  }, {});
}, mergeFn = function mergeFn2(a2, b) {
  return function() {
    a2 && a2.apply(this, arguments), b && b.apply(this, arguments);
  };
};
var helper = mergeJsxProps;
function createDate(y) {
  var M2 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0;
  var d2 = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 1;
  var h3 = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : 0;
  var m2 = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : 0;
  var s2 = arguments.length > 5 && arguments[5] !== void 0 ? arguments[5] : 0;
  var ms = arguments.length > 6 && arguments[6] !== void 0 ? arguments[6] : 0;
  var date = new Date(y, M2, d2, h3, m2, s2, ms);
  if (y < 100 && y >= 0) {
    date.setFullYear(y);
  }
  return date;
}
function isValidDate(date) {
  return date instanceof Date && !isNaN(date);
}
function isValidRangeDate(date) {
  return Array.isArray(date) && date.length === 2 && date.every(isValidDate) && date[0] <= date[1];
}
function isValidDates(dates2) {
  return Array.isArray(dates2) && dates2.every(isValidDate);
}
function getValidDate(value3) {
  var date = new Date(value3);
  if (isValidDate(date)) {
    return date;
  }
  for (var _len = arguments.length, backup = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
    backup[_key - 1] = arguments[_key];
  }
  if (backup.length) {
    return getValidDate.apply(void 0, backup);
  }
  return /* @__PURE__ */ new Date();
}
function startOfYear(value3) {
  var date = new Date(value3);
  date.setMonth(0, 1);
  date.setHours(0, 0, 0, 0);
  return date;
}
function startOfMonth(value3) {
  var date = new Date(value3);
  date.setDate(1);
  date.setHours(0, 0, 0, 0);
  return date;
}
function startOfDay(value3) {
  var date = new Date(value3);
  date.setHours(0, 0, 0, 0);
  return date;
}
function getCalendar(_ref) {
  var firstDayOfWeek2 = _ref.firstDayOfWeek, year = _ref.year, month = _ref.month;
  var arr = [];
  var calendar = createDate(year, month, 0);
  var lastDayInLastMonth = calendar.getDate();
  var firstDayInLastMonth = lastDayInLastMonth - (calendar.getDay() + 7 - firstDayOfWeek2) % 7;
  for (var i = firstDayInLastMonth; i <= lastDayInLastMonth; i++) {
    arr.push(createDate(year, month, i - lastDayInLastMonth));
  }
  calendar.setMonth(month + 1, 0);
  var lastDayInCurrentMonth = calendar.getDate();
  for (var _i = 1; _i <= lastDayInCurrentMonth; _i++) {
    arr.push(createDate(year, month, _i));
  }
  var lastMonthLength = lastDayInLastMonth - firstDayInLastMonth + 1;
  var nextMonthLength = 6 * 7 - lastMonthLength - lastDayInCurrentMonth;
  for (var _i2 = 1; _i2 <= nextMonthLength; _i2++) {
    arr.push(createDate(year, month, lastDayInCurrentMonth + _i2));
  }
  return arr;
}
function setMonth(dirtyDate, dirtyMonth) {
  var date = new Date(dirtyDate);
  var month = typeof dirtyMonth === "function" ? dirtyMonth(date.getMonth()) : Number(dirtyMonth);
  var year = date.getFullYear();
  var daysInMonth = createDate(year, month + 1, 0).getDate();
  var day = date.getDate();
  date.setMonth(month, Math.min(day, daysInMonth));
  return date;
}
function setYear(dirtyDate, dirtyYear) {
  var date = new Date(dirtyDate);
  var year = typeof dirtyYear === "function" ? dirtyYear(date.getFullYear()) : dirtyYear;
  date.setFullYear(year);
  return date;
}
function assignTime(target, source) {
  var date = new Date(target);
  var time = new Date(source);
  date.setHours(time.getHours(), time.getMinutes(), time.getSeconds());
  return date;
}
function chunk(arr, size) {
  if (!Array.isArray(arr)) {
    return [];
  }
  var result = [];
  var len = arr.length;
  var i = 0;
  size = size || len;
  while (i < len) {
    result.push(arr.slice(i, i += size));
  }
  return result;
}
function isObject(obj) {
  return Object.prototype.toString.call(obj) === "[object Object]";
}
function pick(obj, props) {
  if (!isObject(obj)) return {};
  if (!Array.isArray(props)) {
    props = [props];
  }
  var res = {};
  props.forEach(function(prop) {
    if (prop in obj) {
      res[prop] = obj[prop];
    }
  });
  return res;
}
function mergeDeep(target, source) {
  if (!isObject(target)) {
    return {};
  }
  var result = target;
  if (isObject(source)) {
    Object.keys(source).forEach(function(key) {
      var value3 = source[key];
      if (isObject(value3) && isObject(target[key])) {
        value3 = mergeDeep(target[key], value3);
      }
      result = _objectSpread2({}, result, _defineProperty({}, key, value3));
    });
  }
  return result;
}
function unwrapExports(x2) {
  return x2 && x2.__esModule && Object.prototype.hasOwnProperty.call(x2, "default") ? x2["default"] : x2;
}
function createCommonjsModule(fn, module) {
  return module = { exports: {} }, fn(module, module.exports), module.exports;
}
var en = createCommonjsModule(function(module, exports) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports["default"] = void 0;
  var locale3 = {
    months: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"],
    monthsShort: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"],
    weekdays: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"],
    weekdaysShort: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
    weekdaysMin: ["Su", "Mo", "Tu", "We", "Th", "Fr", "Sa"],
    firstDayOfWeek: 0,
    firstWeekContainsDate: 1
  };
  var _default31 = locale3;
  exports["default"] = _default31;
  module.exports = exports.default;
});
var en$1 = unwrapExports(en);
var lang = {
  formatLocale: en$1,
  yearFormat: "YYYY",
  monthFormat: "MMM",
  monthBeforeYear: true
};
var defaultLocale = "en";
var locales = {};
locales[defaultLocale] = lang;
function locale(name, object, isLocal) {
  if (typeof name !== "string") return locales[defaultLocale];
  var l = defaultLocale;
  if (locales[name]) {
    l = name;
  }
  if (object) {
    locales[name] = object;
    l = name;
  }
  if (!isLocal) {
    defaultLocale = l;
  }
  return locales[name] || locales[defaultLocale];
}
function getLocale(name) {
  return locale(name, null, true);
}
function rafThrottle(fn) {
  var isRunning = false;
  return function fnBinfRaf() {
    var _this = this;
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    if (isRunning) return;
    isRunning = true;
    requestAnimationFrame(function() {
      isRunning = false;
      fn.apply(_this, args);
    });
  };
}
function getPopupElementSize(element) {
  var originalDisplay = element.style.display;
  var originalVisibility = element.style.visibility;
  element.style.display = "block";
  element.style.visibility = "hidden";
  var styles = window.getComputedStyle(element);
  var width = element.offsetWidth + parseInt(styles.marginLeft, 10) + parseInt(styles.marginRight, 10);
  var height = element.offsetHeight + parseInt(styles.marginTop, 10) + parseInt(styles.marginBottom, 10);
  element.style.display = originalDisplay;
  element.style.visibility = originalVisibility;
  return {
    width,
    height
  };
}
function getRelativePosition(el, targetWidth, targetHeight, fixed) {
  var left = 0;
  var top = 0;
  var offsetX = 0;
  var offsetY = 0;
  var relativeRect = el.getBoundingClientRect();
  var dw = document.documentElement.clientWidth;
  var dh = document.documentElement.clientHeight;
  if (fixed) {
    offsetX = window.pageXOffset + relativeRect.left;
    offsetY = window.pageYOffset + relativeRect.top;
  }
  if (dw - relativeRect.left < targetWidth && relativeRect.right < targetWidth) {
    left = offsetX - relativeRect.left + 1;
  } else if (relativeRect.left + relativeRect.width / 2 <= dw / 2) {
    left = offsetX;
  } else {
    left = offsetX + relativeRect.width - targetWidth;
  }
  if (relativeRect.top <= targetHeight && dh - relativeRect.bottom <= targetHeight) {
    top = offsetY + dh - relativeRect.top - targetHeight;
  } else if (relativeRect.top + relativeRect.height / 2 <= dh / 2) {
    top = offsetY + relativeRect.height;
  } else {
    top = offsetY - targetHeight;
  }
  return {
    left: "".concat(left, "px"),
    top: "".concat(top, "px")
  };
}
function getScrollParent(node) {
  var until = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : document.body;
  if (!node || node === until) {
    return null;
  }
  var style = function style2(value3, prop) {
    return getComputedStyle(value3, null).getPropertyValue(prop);
  };
  var regex = /(auto|scroll)/;
  var scroll = regex.test(style(node, "overflow") + style(node, "overflow-y") + style(node, "overflow-x"));
  return scroll ? node : getScrollParent(node.parentNode, until);
}
var script = {
  name: "Popup",
  inject: {
    prefixClass: {
      default: "mx"
    }
  },
  props: {
    visible: {
      type: Boolean,
      default: false
    },
    appendToBody: {
      type: Boolean,
      default: true
    }
  },
  data: function data() {
    return {
      top: "",
      left: ""
    };
  },
  watch: {
    visible: {
      immediate: true,
      handler: function handler(val) {
        var _this = this;
        this.$nextTick(function() {
          if (val) {
            _this.displayPopup();
          }
        });
      }
    }
  },
  mounted: function mounted() {
    var _this2 = this;
    if (this.appendToBody) {
      document.body.appendChild(this.$el);
    }
    this._clickoutEvent = "ontouchend" in document ? "touchstart" : "mousedown";
    document.addEventListener(this._clickoutEvent, this.handleClickOutside);
    var relativeElement = this.$parent.$el;
    this._displayPopup = rafThrottle(function() {
      return _this2.displayPopup();
    });
    this._scrollParent = getScrollParent(relativeElement) || window;
    this._scrollParent.addEventListener("scroll", this._displayPopup);
    window.addEventListener("resize", this._displayPopup);
  },
  beforeDestroy: function beforeDestroy() {
    if (this.appendToBody && this.$el.parentNode) {
      this.$el.parentNode.removeChild(this.$el);
    }
    document.removeEventListener(this._clickoutEvent, this.handleClickOutside);
    this._scrollParent.removeEventListener("scroll", this._displayPopup);
    window.removeEventListener("resize", this._displayPopup);
  },
  methods: {
    handleClickOutside: function handleClickOutside(evt) {
      if (!this.visible) return;
      var target = evt.target;
      var el = this.$el;
      if (el && !el.contains(target)) {
        this.$emit("clickoutside", evt);
      }
    },
    displayPopup: function displayPopup() {
      if (!this.visible) return;
      var popup = this.$el;
      var relativeElement = this.$parent.$el;
      var appendToBody = this.appendToBody;
      if (!this._popupRect) {
        this._popupRect = getPopupElementSize(popup);
      }
      var _this$_popupRect = this._popupRect, width = _this$_popupRect.width, height = _this$_popupRect.height;
      var _getRelativePosition = getRelativePosition(relativeElement, width, height, appendToBody), left = _getRelativePosition.left, top = _getRelativePosition.top;
      this.left = left;
      this.top = top;
    }
  }
};
function normalizeComponent(template, style, script2, scopeId, isFunctionalTemplate, moduleIdentifier, shadowMode, createInjector, createInjectorSSR, createInjectorShadow) {
  var options2 = typeof script2 === "function" ? script2.options : script2;
  if (template && template.render) {
    options2.render = template.render;
    options2.staticRenderFns = template.staticRenderFns;
    options2._compiled = true;
  }
  return script2;
}
var __vue_script__ = script;
var __vue_render__ = function __vue_render__2() {
  var _vm = this;
  var _h = _vm.$createElement;
  var _c = _vm._self._c || _h;
  return _c("transition", {
    attrs: {
      "name": _vm.prefixClass + "-zoom-in-down"
    }
  }, [_vm.visible ? _c("div", {
    class: _vm.prefixClass + "-datepicker-main " + _vm.prefixClass + "-datepicker-popup",
    style: {
      top: _vm.top,
      left: _vm.left,
      position: "absolute"
    }
  }, [_vm._t("default")], 2) : _vm._e()]);
};
var __vue_staticRenderFns__ = [];
var __vue_inject_styles__ = void 0;
var __vue_component__ = normalizeComponent({
  render: __vue_render__,
  staticRenderFns: __vue_staticRenderFns__
}, __vue_inject_styles__, __vue_script__);
var __vue_render__$1 = function __vue_render__3() {
  var _vm = this;
  var _h = _vm.$createElement;
  var _c = _vm._self._c || _h;
  return _c("svg", {
    attrs: {
      "xmlns": "http://www.w3.org/2000/svg",
      "viewBox": "0 0 1024 1024",
      "width": "1em",
      "height": "1em"
    }
  }, [_c("path", {
    attrs: {
      "d": "M940.218182 107.054545h-209.454546V46.545455h-65.163636v60.50909H363.054545V46.545455H297.890909v60.50909H83.781818c-18.618182 0-32.581818 13.963636-32.581818 32.581819v805.236363c0 18.618182 13.963636 32.581818 32.581818 32.581818h861.090909c18.618182 0 32.581818-13.963636 32.581818-32.581818V139.636364c-4.654545-18.618182-18.618182-32.581818-37.236363-32.581819zM297.890909 172.218182V232.727273h65.163636V172.218182h307.2V232.727273h65.163637V172.218182h176.872727v204.8H116.363636V172.218182h181.527273zM116.363636 912.290909V442.181818h795.927273v470.109091H116.363636z"
    }
  })]);
};
var __vue_staticRenderFns__$1 = [];
var __vue_inject_styles__$1 = void 0;
var __vue_component__$1 = normalizeComponent({
  render: __vue_render__$1,
  staticRenderFns: __vue_staticRenderFns__$1
}, __vue_inject_styles__$1, {});
var __vue_render__$2 = function __vue_render__4() {
  var _vm = this;
  var _h = _vm.$createElement;
  var _c = _vm._self._c || _h;
  return _c("svg", {
    attrs: {
      "xmlns": "http://www.w3.org/2000/svg",
      "viewBox": "0 0 24 24",
      "width": "1em",
      "height": "1em"
    }
  }, [_c("path", {
    attrs: {
      "d": "M0 0h24v24H0z",
      "fill": "none"
    }
  }), _vm._v(" "), _c("path", {
    attrs: {
      "d": "M11.99 2C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z"
    }
  }), _vm._v(" "), _c("path", {
    attrs: {
      "d": "M12.5 7H11v6l5.25 3.15.75-1.23-4.5-2.67z"
    }
  })]);
};
var __vue_staticRenderFns__$2 = [];
var __vue_inject_styles__$2 = void 0;
var __vue_component__$2 = normalizeComponent({
  render: __vue_render__$2,
  staticRenderFns: __vue_staticRenderFns__$2
}, __vue_inject_styles__$2, {});
var __vue_render__$3 = function __vue_render__5() {
  var _vm = this;
  var _h = _vm.$createElement;
  var _c = _vm._self._c || _h;
  return _c("svg", {
    attrs: {
      "xmlns": "http://www.w3.org/2000/svg",
      "viewBox": "0 0 1024 1024",
      "width": "1em",
      "height": "1em"
    }
  }, [_c("path", {
    attrs: {
      "d": "M810.005333 274.005333l-237.994667 237.994667 237.994667 237.994667-60.010667 60.010667-237.994667-237.994667-237.994667 237.994667-60.010667-60.010667 237.994667-237.994667-237.994667-237.994667 60.010667-60.010667 237.994667 237.994667 237.994667-237.994667z"
    }
  })]);
};
var __vue_staticRenderFns__$3 = [];
var __vue_inject_styles__$3 = void 0;
var __vue_component__$3 = normalizeComponent({
  render: __vue_render__$3,
  staticRenderFns: __vue_staticRenderFns__$3
}, __vue_inject_styles__$3, {});
var script$1 = {
  props: {
    type: String,
    disabled: Boolean
  },
  inject: {
    prefixClass: {
      default: "mx"
    }
  }
};
var __vue_script__$1 = script$1;
var __vue_render__$4 = function __vue_render__6() {
  var _vm = this;
  var _h = _vm.$createElement;
  var _c = _vm._self._c || _h;
  return _c("button", _vm._g({
    class: [_vm.prefixClass + "-btn " + _vm.prefixClass + "-btn-text " + _vm.prefixClass + "-btn-icon-" + _vm.type, {
      disabled: _vm.disabled
    }],
    attrs: {
      "type": "button",
      "disabled": _vm.disabled
    }
  }, _vm.$listeners), [_c("i", {
    class: _vm.prefixClass + "-icon-" + _vm.type
  })]);
};
var __vue_staticRenderFns__$4 = [];
var __vue_inject_styles__$4 = void 0;
var __vue_component__$4 = normalizeComponent({
  render: __vue_render__$4,
  staticRenderFns: __vue_staticRenderFns__$4
}, __vue_inject_styles__$4, __vue_script__$1);
var script$2 = {
  name: "TableDate",
  components: {
    IconButton: __vue_component__$4
  },
  inject: {
    getLocale: {
      default: function _default() {
        return getLocale;
      }
    },
    getWeek: {
      default: function _default2() {
        return getWeek;
      }
    },
    prefixClass: {
      default: "mx"
    },
    onDateMouseEnter: {
      default: void 0
    },
    onDateMouseLeave: {
      default: void 0
    }
  },
  props: {
    disabledCalendarChanger: {
      type: Function,
      default: function _default3() {
        return false;
      }
    },
    calendar: {
      type: Date,
      default: function _default4() {
        return /* @__PURE__ */ new Date();
      }
    },
    showWeekNumber: {
      type: Boolean,
      default: false
    },
    titleFormat: {
      type: String,
      default: "YYYY-MM-DD"
    },
    getRowClasses: {
      type: Function,
      default: function _default5() {
        return [];
      }
    },
    getCellClasses: {
      type: Function,
      default: function _default6() {
        return [];
      }
    }
  },
  computed: {
    firstDayOfWeek: function firstDayOfWeek() {
      return this.getLocale().formatLocale.firstDayOfWeek || 0;
    },
    yearMonth: function yearMonth() {
      var _this$getLocale = this.getLocale(), yearFormat = _this$getLocale.yearFormat, monthBeforeYear = _this$getLocale.monthBeforeYear, _this$getLocale$month = _this$getLocale.monthFormat, monthFormat = _this$getLocale$month === void 0 ? "MMM" : _this$getLocale$month;
      var yearLabel = {
        panel: "year",
        label: this.formatDate(this.calendar, yearFormat)
      };
      var monthLabel = {
        panel: "month",
        label: this.formatDate(this.calendar, monthFormat)
      };
      return monthBeforeYear ? [monthLabel, yearLabel] : [yearLabel, monthLabel];
    },
    days: function days() {
      var locale3 = this.getLocale();
      var days2 = locale3.days || locale3.formatLocale.weekdaysMin;
      return days2.concat(days2).slice(this.firstDayOfWeek, this.firstDayOfWeek + 7);
    },
    dates: function dates() {
      var year = this.calendar.getFullYear();
      var month = this.calendar.getMonth();
      var arr = getCalendar({
        firstDayOfWeek: this.firstDayOfWeek,
        year,
        month
      });
      return chunk(arr, 7);
    }
  },
  methods: {
    isDisabledArrows: function isDisabledArrows(type) {
      var date = new Date(this.calendar);
      switch (type) {
        case "last-year":
          date.setFullYear(date.getFullYear() - 1, date.getMonth() + 1, 0);
          date.setHours(23, 59, 59, 999);
          break;
        case "next-year":
          date.setFullYear(date.getFullYear() + 1);
          break;
        case "last-month":
          date.setMonth(date.getMonth(), 0);
          date.setHours(23, 59, 59, 999);
          break;
        case "next-month":
          date.setMonth(date.getMonth() + 1);
          break;
      }
      return this.disabledCalendarChanger(date, type);
    },
    handleIconLeftClick: function handleIconLeftClick() {
      this.$emit("changecalendar", setMonth(this.calendar, function(v2) {
        return v2 - 1;
      }), "last-month");
    },
    handleIconRightClick: function handleIconRightClick() {
      this.$emit("changecalendar", setMonth(this.calendar, function(v2) {
        return v2 + 1;
      }), "next-month");
    },
    handleIconDoubleLeftClick: function handleIconDoubleLeftClick() {
      this.$emit("changecalendar", setYear(this.calendar, function(v2) {
        return v2 - 1;
      }), "last-year");
    },
    handleIconDoubleRightClick: function handleIconDoubleRightClick() {
      this.$emit("changecalendar", setYear(this.calendar, function(v2) {
        return v2 + 1;
      }), "next-year");
    },
    handlePanelChange: function handlePanelChange(panel) {
      this.$emit("changepanel", panel);
    },
    handleMouseEnter: function handleMouseEnter(cell) {
      if (typeof this.onDateMouseEnter === "function") {
        this.onDateMouseEnter(cell);
      }
    },
    handleMouseLeave: function handleMouseLeave(cell) {
      if (typeof this.onDateMouseLeave === "function") {
        this.onDateMouseLeave(cell);
      }
    },
    handleCellClick: function handleCellClick(evt) {
      var target = evt.target;
      if (target.tagName.toUpperCase() === "DIV") {
        target = target.parentNode;
      }
      var index = target.getAttribute("data-row-col");
      if (index) {
        var _index$split$map = index.split(",").map(function(v2) {
          return parseInt(v2, 10);
        }), _index$split$map2 = _slicedToArray(_index$split$map, 2), row = _index$split$map2[0], col = _index$split$map2[1];
        var date = this.dates[row][col];
        this.$emit("select", new Date(date));
      }
    },
    formatDate: function formatDate(date, fmt) {
      return format(date, fmt, {
        locale: this.getLocale().formatLocale
      });
    },
    getCellTitle: function getCellTitle(date) {
      var fmt = this.titleFormat;
      return this.formatDate(date, fmt);
    },
    getWeekNumber: function getWeekNumber(date) {
      return this.getWeek(date, this.getLocale().formatLocale);
    }
  }
};
var __vue_script__$2 = script$2;
var __vue_render__$5 = function __vue_render__7() {
  var _vm = this;
  var _h = _vm.$createElement;
  var _c = _vm._self._c || _h;
  return _c("div", {
    class: _vm.prefixClass + "-calendar " + _vm.prefixClass + "-calendar-panel-date"
  }, [_c("div", {
    class: _vm.prefixClass + "-calendar-header"
  }, [_c("icon-button", {
    attrs: {
      "type": "double-left",
      "disabled": _vm.isDisabledArrows("last-year")
    },
    on: {
      "click": _vm.handleIconDoubleLeftClick
    }
  }), _vm._v(" "), _c("icon-button", {
    attrs: {
      "type": "left",
      "disabled": _vm.isDisabledArrows("last-month")
    },
    on: {
      "click": _vm.handleIconLeftClick
    }
  }), _vm._v(" "), _c("icon-button", {
    attrs: {
      "type": "double-right",
      "disabled": _vm.isDisabledArrows("next-year")
    },
    on: {
      "click": _vm.handleIconDoubleRightClick
    }
  }), _vm._v(" "), _c("icon-button", {
    attrs: {
      "type": "right",
      "disabled": _vm.isDisabledArrows("next-month")
    },
    on: {
      "click": _vm.handleIconRightClick
    }
  }), _vm._v(" "), _c("span", {
    class: _vm.prefixClass + "-calendar-header-label"
  }, _vm._l(_vm.yearMonth, function(item) {
    return _c("button", {
      key: item.panel,
      class: _vm.prefixClass + "-btn " + _vm.prefixClass + "-btn-text " + _vm.prefixClass + "-btn-current-" + item.panel,
      attrs: {
        "type": "button"
      },
      on: {
        "click": function click($event) {
          return _vm.handlePanelChange(item.panel);
        }
      }
    }, [_vm._v("\n        " + _vm._s(item.label) + "\n      ")]);
  }), 0)], 1), _vm._v(" "), _c("div", {
    class: _vm.prefixClass + "-calendar-content"
  }, [_c("table", {
    class: _vm.prefixClass + "-table " + _vm.prefixClass + "-table-date"
  }, [_c("thead", [_c("tr", [_vm.showWeekNumber ? _c("th", {
    class: _vm.prefixClass + "-week-number-header"
  }) : _vm._e(), _vm._v(" "), _vm._l(_vm.days, function(day) {
    return _c("th", {
      key: day
    }, [_vm._v(_vm._s(day))]);
  })], 2)]), _vm._v(" "), _c("tbody", {
    on: {
      "click": _vm.handleCellClick
    }
  }, _vm._l(_vm.dates, function(row, i) {
    return _c("tr", {
      key: i,
      class: [_vm.prefixClass + "-date-row", _vm.getRowClasses(row)]
    }, [_vm.showWeekNumber ? _c("td", {
      class: _vm.prefixClass + "-week-number",
      attrs: {
        "data-row-col": i + ",0"
      }
    }, [_vm._v("\n            " + _vm._s(_vm.getWeekNumber(row[0])) + "\n          ")]) : _vm._e(), _vm._v(" "), _vm._l(row, function(cell, j) {
      return _c("td", {
        key: j,
        staticClass: "cell",
        class: _vm.getCellClasses(cell),
        attrs: {
          "data-row-col": i + "," + j,
          "title": _vm.getCellTitle(cell)
        },
        on: {
          "mouseenter": function mouseenter($event) {
            return _vm.handleMouseEnter(cell);
          },
          "mouseleave": function mouseleave($event) {
            return _vm.handleMouseLeave(cell);
          }
        }
      }, [_c("div", [_vm._v(_vm._s(cell.getDate()))])]);
    })], 2);
  }), 0)])])]);
};
var __vue_staticRenderFns__$5 = [];
var __vue_inject_styles__$5 = void 0;
var __vue_component__$5 = normalizeComponent({
  render: __vue_render__$5,
  staticRenderFns: __vue_staticRenderFns__$5
}, __vue_inject_styles__$5, __vue_script__$2);
var script$3 = {
  name: "TableMonth",
  components: {
    IconButton: __vue_component__$4
  },
  inject: {
    getLocale: {
      default: function _default7() {
        return getLocale;
      }
    },
    prefixClass: {
      default: "mx"
    }
  },
  props: {
    disabledCalendarChanger: {
      type: Function,
      default: function _default8() {
        return false;
      }
    },
    calendar: {
      type: Date,
      default: function _default9() {
        return /* @__PURE__ */ new Date();
      }
    },
    getCellClasses: {
      type: Function,
      default: function _default10() {
        return [];
      }
    }
  },
  computed: {
    calendarYear: function calendarYear() {
      return this.calendar.getFullYear();
    },
    months: function months() {
      var locale3 = this.getLocale();
      var monthsLocale = locale3.months || locale3.formatLocale.monthsShort;
      var months2 = monthsLocale.map(function(text3, month) {
        return {
          text: text3,
          month
        };
      });
      return chunk(months2, 3);
    }
  },
  methods: {
    isDisabledArrows: function isDisabledArrows2(type) {
      var date = new Date(this.calendar);
      switch (type) {
        case "last-year":
          date.setFullYear(date.getFullYear() - 1, 11, 31);
          date.setHours(23, 59, 59, 999);
          break;
        case "next-year":
          date.setFullYear(date.getFullYear() + 1, 0, 1);
          break;
      }
      return this.disabledCalendarChanger(date, type);
    },
    handleIconDoubleLeftClick: function handleIconDoubleLeftClick2() {
      this.$emit("changecalendar", setYear(this.calendar, function(v2) {
        return v2 - 1;
      }), "last-year");
    },
    handleIconDoubleRightClick: function handleIconDoubleRightClick2() {
      this.$emit("changecalendar", setYear(this.calendar, function(v2) {
        return v2 + 1;
      }), "next-year");
    },
    handlePanelChange: function handlePanelChange2() {
      this.$emit("changepanel", "year");
    },
    handleClick: function handleClick(evt) {
      var target = evt.target;
      if (target.tagName.toUpperCase() === "DIV") {
        target = target.parentNode;
      }
      var month = target.getAttribute("data-month");
      if (month && !target.classList.contains("disabled")) {
        this.$emit("select", parseInt(month, 10));
      }
    }
  }
};
var __vue_script__$3 = script$3;
var __vue_render__$6 = function __vue_render__8() {
  var _vm = this;
  var _h = _vm.$createElement;
  var _c = _vm._self._c || _h;
  return _c("div", {
    class: _vm.prefixClass + "-calendar " + _vm.prefixClass + "-calendar-panel-month"
  }, [_c("div", {
    class: _vm.prefixClass + "-calendar-header"
  }, [_c("icon-button", {
    attrs: {
      "type": "double-left",
      "disabled": _vm.isDisabledArrows("last-year")
    },
    on: {
      "click": _vm.handleIconDoubleLeftClick
    }
  }), _vm._v(" "), _c("icon-button", {
    attrs: {
      "type": "double-right",
      "disabled": _vm.isDisabledArrows("next-year")
    },
    on: {
      "click": _vm.handleIconDoubleRightClick
    }
  }), _vm._v(" "), _c("span", {
    class: _vm.prefixClass + "-calendar-header-label"
  }, [_c("button", {
    class: _vm.prefixClass + "-btn " + _vm.prefixClass + "-btn-text",
    attrs: {
      "type": "button"
    },
    on: {
      "click": _vm.handlePanelChange
    }
  }, [_vm._v("\n        " + _vm._s(_vm.calendarYear) + "\n      ")])])], 1), _vm._v(" "), _c("div", {
    class: _vm.prefixClass + "-calendar-content"
  }, [_c("table", {
    class: _vm.prefixClass + "-table " + _vm.prefixClass + "-table-month",
    on: {
      "click": _vm.handleClick
    }
  }, _vm._l(_vm.months, function(row, i) {
    return _c("tr", {
      key: i
    }, _vm._l(row, function(cell, j) {
      return _c("td", {
        key: j,
        staticClass: "cell",
        class: _vm.getCellClasses(cell.month),
        attrs: {
          "data-month": cell.month
        }
      }, [_c("div", [_vm._v(_vm._s(cell.text))])]);
    }), 0);
  }), 0)])]);
};
var __vue_staticRenderFns__$6 = [];
var __vue_inject_styles__$6 = void 0;
var __vue_component__$6 = normalizeComponent({
  render: __vue_render__$6,
  staticRenderFns: __vue_staticRenderFns__$6
}, __vue_inject_styles__$6, __vue_script__$3);
var script$4 = {
  name: "TableYear",
  components: {
    IconButton: __vue_component__$4
  },
  inject: {
    prefixClass: {
      default: "mx"
    }
  },
  props: {
    disabledCalendarChanger: {
      type: Function,
      default: function _default11() {
        return false;
      }
    },
    calendar: {
      type: Date,
      default: function _default12() {
        return /* @__PURE__ */ new Date();
      }
    },
    getCellClasses: {
      type: Function,
      default: function _default13() {
        return [];
      }
    },
    getYearPanel: {
      type: Function
    }
  },
  computed: {
    years: function years() {
      var calendar = new Date(this.calendar);
      if (typeof this.getYearPanel === "function") {
        return this.getYearPanel(calendar);
      }
      return this.getYears(calendar);
    },
    firstYear: function firstYear() {
      return this.years[0][0];
    },
    lastYear: function lastYear() {
      var last = function last2(arr) {
        return arr[arr.length - 1];
      };
      return last(last(this.years));
    }
  },
  methods: {
    isDisabledArrows: function isDisabledArrows3(type) {
      var date = new Date(this.calendar);
      switch (type) {
        case "last-decade":
          date.setFullYear(this.firstYear - 1, 11, 31);
          date.setHours(23, 59, 59, 999);
          break;
        case "next-decade":
          date.setFullYear(this.lastYear + 1, 0, 1);
          break;
      }
      return this.disabledCalendarChanger(date, type);
    },
    getYears: function getYears(calendar) {
      var firstYear2 = Math.floor(calendar.getFullYear() / 10) * 10;
      var years2 = [];
      for (var i = 0; i < 10; i++) {
        years2.push(firstYear2 + i);
      }
      return chunk(years2, 2);
    },
    handleIconDoubleLeftClick: function handleIconDoubleLeftClick3() {
      this.$emit("changecalendar", setYear(this.calendar, function(v2) {
        return v2 - 10;
      }), "last-decade");
    },
    handleIconDoubleRightClick: function handleIconDoubleRightClick3() {
      this.$emit("changecalendar", setYear(this.calendar, function(v2) {
        return v2 + 10;
      }), "next-decade");
    },
    handleClick: function handleClick2(evt) {
      var target = evt.target;
      if (target.tagName.toUpperCase() === "DIV") {
        target = target.parentNode;
      }
      var year = target.getAttribute("data-year");
      if (year && !target.classList.contains("disabled")) {
        this.$emit("select", parseInt(year, 10));
      }
    }
  }
};
var __vue_script__$4 = script$4;
var __vue_render__$7 = function __vue_render__9() {
  var _vm = this;
  var _h = _vm.$createElement;
  var _c = _vm._self._c || _h;
  return _c("div", {
    class: _vm.prefixClass + "-calendar " + _vm.prefixClass + "-calendar-panel-year"
  }, [_c("div", {
    class: _vm.prefixClass + "-calendar-header"
  }, [_c("icon-button", {
    attrs: {
      "type": "double-left",
      "disabled": _vm.isDisabledArrows("last-decade")
    },
    on: {
      "click": _vm.handleIconDoubleLeftClick
    }
  }), _vm._v(" "), _c("icon-button", {
    attrs: {
      "type": "double-right",
      "disabled": _vm.isDisabledArrows("next-decade")
    },
    on: {
      "click": _vm.handleIconDoubleRightClick
    }
  }), _vm._v(" "), _c("span", {
    class: _vm.prefixClass + "-calendar-header-label"
  }, [_c("span", [_vm._v(_vm._s(_vm.firstYear))]), _vm._v(" "), _c("span", {
    class: _vm.prefixClass + "-calendar-decade-separator"
  }), _vm._v(" "), _c("span", [_vm._v(_vm._s(_vm.lastYear))])])], 1), _vm._v(" "), _c("div", {
    class: _vm.prefixClass + "-calendar-content"
  }, [_c("table", {
    class: _vm.prefixClass + "-table " + _vm.prefixClass + "-table-year",
    on: {
      "click": _vm.handleClick
    }
  }, _vm._l(_vm.years, function(row, i) {
    return _c("tr", {
      key: i
    }, _vm._l(row, function(cell, j) {
      return _c("td", {
        key: j,
        staticClass: "cell",
        class: _vm.getCellClasses(cell),
        attrs: {
          "data-year": cell
        }
      }, [_c("div", [_vm._v(_vm._s(cell))])]);
    }), 0);
  }), 0)])]);
};
var __vue_staticRenderFns__$7 = [];
var __vue_inject_styles__$7 = void 0;
var __vue_component__$7 = normalizeComponent({
  render: __vue_render__$7,
  staticRenderFns: __vue_staticRenderFns__$7
}, __vue_inject_styles__$7, __vue_script__$4);
var CalendarPanel = {
  name: "CalendarPanel",
  inject: {
    prefixClass: {
      default: "mx"
    },
    dispatchDatePicker: {
      default: function _default14() {
        return function() {
        };
      }
    }
  },
  props: {
    value: {},
    defaultValue: {
      default: function _default15() {
        var date = /* @__PURE__ */ new Date();
        date.setHours(0, 0, 0, 0);
        return date;
      }
    },
    defaultPanel: {
      type: String
    },
    disabledCalendarChanger: {
      type: Function,
      default: function _default16() {
        return false;
      }
    },
    disabledDate: {
      type: Function,
      default: function _default17() {
        return false;
      }
    },
    type: {
      type: String,
      default: "date"
    },
    getClasses: {
      type: Function,
      default: function _default18() {
        return [];
      }
    },
    showWeekNumber: {
      type: Boolean,
      default: void 0
    },
    getYearPanel: {
      type: Function
    },
    titleFormat: {
      type: String,
      default: "YYYY-MM-DD"
    },
    calendar: Date,
    // update date when select year or month
    partialUpdate: {
      type: Boolean,
      default: false
    }
  },
  data: function data2() {
    var panels = ["date", "month", "year"];
    var index = Math.max(panels.indexOf(this.type), panels.indexOf(this.defaultPanel));
    var panel = index !== -1 ? panels[index] : "date";
    return {
      panel,
      innerCalendar: /* @__PURE__ */ new Date()
    };
  },
  computed: {
    innerValue: function innerValue() {
      var value3 = Array.isArray(this.value) ? this.value : [this.value];
      var map = {
        year: startOfYear,
        month: startOfMonth,
        date: startOfDay
      };
      var start = map[this.type] || map.date;
      return value3.filter(isValidDate).map(function(v2) {
        return start(v2);
      });
    },
    calendarYear: function calendarYear2() {
      return this.innerCalendar.getFullYear();
    },
    calendarMonth: function calendarMonth() {
      return this.innerCalendar.getMonth();
    }
  },
  watch: {
    value: {
      immediate: true,
      handler: "initCalendar"
    },
    calendar: {
      handler: "initCalendar"
    },
    defaultValue: {
      handler: "initCalendar"
    }
  },
  methods: {
    initCalendar: function initCalendar() {
      var calendarDate = this.calendar;
      if (!isValidDate(calendarDate)) {
        var length = this.innerValue.length;
        calendarDate = getValidDate(length > 0 ? this.innerValue[length - 1] : this.defaultValue);
      }
      this.innerCalendar = startOfMonth(calendarDate);
    },
    isDisabled: function isDisabled(date) {
      return this.disabledDate(new Date(date), this.innerValue);
    },
    emitDate: function emitDate(date, type) {
      if (!this.isDisabled(date)) {
        this.$emit("select", date, type, this.innerValue);
        this.dispatchDatePicker("pick", date, type);
      }
    },
    handleCalendarChange: function handleCalendarChange(calendar, type) {
      var oldCalendar = new Date(this.innerCalendar);
      this.innerCalendar = calendar;
      this.$emit("update:calendar", calendar);
      this.dispatchDatePicker("calendar-change", calendar, oldCalendar, type);
    },
    handelPanelChange: function handelPanelChange(panel) {
      var oldPanel = this.panel;
      this.panel = panel;
      this.dispatchDatePicker("panel-change", panel, oldPanel);
    },
    handleSelectYear: function handleSelectYear(year) {
      if (this.type === "year") {
        var date = this.getYearCellDate(year);
        this.emitDate(date, "year");
      } else {
        this.handleCalendarChange(createDate(year, this.calendarMonth), "year");
        this.handelPanelChange("month");
        if (this.partialUpdate && this.innerValue.length === 1) {
          var _date = new Date(this.innerValue[0]);
          _date.setFullYear(year);
          this.emitDate(_date, "year");
        }
      }
    },
    handleSelectMonth: function handleSelectMonth(month) {
      if (this.type === "month") {
        var date = this.getMonthCellDate(month);
        this.emitDate(date, "month");
      } else {
        this.handleCalendarChange(createDate(this.calendarYear, month), "month");
        this.handelPanelChange("date");
        if (this.partialUpdate && this.innerValue.length === 1) {
          var _date2 = new Date(this.innerValue[0]);
          _date2.setFullYear(this.calendarYear);
          this.emitDate(setMonth(_date2, month), "month");
        }
      }
    },
    handleSelectDate: function handleSelectDate(date) {
      this.emitDate(date, this.type === "week" ? "week" : "date");
    },
    getMonthCellDate: function getMonthCellDate(month) {
      return createDate(this.calendarYear, month);
    },
    getYearCellDate: function getYearCellDate(year) {
      return createDate(year, 0);
    },
    getDateClasses: function getDateClasses(cellDate) {
      var notCurrentMonth = cellDate.getMonth() !== this.calendarMonth;
      var classes = [];
      if (cellDate.getTime() === (/* @__PURE__ */ new Date()).setHours(0, 0, 0, 0)) {
        classes.push("today");
      }
      if (notCurrentMonth) {
        classes.push("not-current-month");
      }
      var state = this.getStateClass(cellDate);
      if (!(state === "active" && notCurrentMonth)) {
        classes.push(state);
      }
      return classes.concat(this.getClasses(cellDate, this.innerValue, classes.join(" ")));
    },
    getMonthClasses: function getMonthClasses(month) {
      var classes = [];
      if (this.type !== "month") {
        if (this.calendarMonth === month) {
          classes.push("active");
        }
        var _cellDate = this.getMonthCellDate(month);
        if (this.disabledCalendarChanger(_cellDate, "month")) {
          classes.push("disabled");
        }
        return classes;
      }
      var cellDate = this.getMonthCellDate(month);
      classes.push(this.getStateClass(cellDate));
      return classes.concat(this.getClasses(cellDate, this.innerValue, classes.join(" ")));
    },
    getYearClasses: function getYearClasses(year) {
      var classes = [];
      if (this.type !== "year") {
        if (this.calendarYear === year) {
          classes.push("active");
        }
        var _cellDate2 = this.getYearCellDate(year);
        if (this.disabledCalendarChanger(_cellDate2, "year")) {
          classes.push("disabled");
        }
        return classes;
      }
      var cellDate = this.getYearCellDate(year);
      classes.push(this.getStateClass(cellDate));
      return classes.concat(this.getClasses(cellDate, this.innerValue, classes.join(" ")));
    },
    getStateClass: function getStateClass(cellDate) {
      if (this.isDisabled(cellDate)) {
        return "disabled";
      }
      if (this.innerValue.some(function(v2) {
        return v2.getTime() === cellDate.getTime();
      })) {
        return "active";
      }
      return "";
    },
    getWeekState: function getWeekState(row) {
      if (this.type !== "week") return "";
      var start = row[0].getTime();
      var end = row[6].getTime();
      var active = this.innerValue.some(function(v2) {
        var time = v2.getTime();
        return time >= start && time <= end;
      });
      return active ? "".concat(this.prefixClass, "-active-week") : "";
    }
  },
  render: function render12() {
    var h3 = arguments[0];
    var panel = this.panel, innerCalendar = this.innerCalendar;
    if (panel === "year") {
      return h3(__vue_component__$7, {
        "attrs": {
          "disabledCalendarChanger": this.disabledCalendarChanger,
          "calendar": innerCalendar,
          "getCellClasses": this.getYearClasses,
          "getYearPanel": this.getYearPanel
        },
        "on": {
          "select": this.handleSelectYear,
          "changecalendar": this.handleCalendarChange
        }
      });
    }
    if (panel === "month") {
      return h3(__vue_component__$6, {
        "attrs": {
          "disabledCalendarChanger": this.disabledCalendarChanger,
          "calendar": innerCalendar,
          "getCellClasses": this.getMonthClasses
        },
        "on": {
          "select": this.handleSelectMonth,
          "changepanel": this.handelPanelChange,
          "changecalendar": this.handleCalendarChange
        }
      });
    }
    return h3(__vue_component__$5, {
      "attrs": {
        "disabledCalendarChanger": this.disabledCalendarChanger,
        "calendar": innerCalendar,
        "getCellClasses": this.getDateClasses,
        "getRowClasses": this.getWeekState,
        "titleFormat": this.titleFormat,
        "showWeekNumber": typeof this.showWeekNumber === "boolean" ? this.showWeekNumber : this.type === "week"
      },
      "class": _defineProperty({}, "".concat(this.prefixClass, "-calendar-week-mode"), this.type === "week"),
      "on": {
        "select": this.handleSelectDate,
        "changepanel": this.handelPanelChange,
        "changecalendar": this.handleCalendarChange
      }
    });
  }
};
var CalendarRange = {
  name: "CalendarRange",
  components: {
    CalendarPanel
  },
  provide: function provide() {
    return {
      onDateMouseEnter: this.onDateMouseEnter,
      onDateMouseLeave: this.onDateMouseLeave
    };
  },
  inject: {
    prefixClass: {
      default: "mx"
    }
  },
  props: _objectSpread2({}, CalendarPanel.props),
  data: function data3() {
    return {
      innerValue: [],
      calendars: [],
      hoveredValue: null
    };
  },
  computed: {
    // Minimum difference between start and end calendars
    calendarMinDiff: function calendarMinDiff() {
      var map = {
        date: 1,
        // type:date  min 1 month
        month: 1 * 12,
        // type:month min 1 year
        year: 10 * 12
        // type:year  min 10 year
      };
      return map[this.type] || map.date;
    },
    calendarMaxDiff: function calendarMaxDiff() {
      return Infinity;
    },
    defaultValues: function defaultValues() {
      return Array.isArray(this.defaultValue) ? this.defaultValue : [this.defaultValue, this.defaultValue];
    }
  },
  watch: {
    value: {
      immediate: true,
      handler: function handler2() {
        var _this = this;
        this.innerValue = isValidRangeDate(this.value) ? this.value : [/* @__PURE__ */ new Date(NaN), /* @__PURE__ */ new Date(NaN)];
        var calendars = this.innerValue.map(function(v2, i) {
          return startOfMonth(getValidDate(v2, _this.defaultValues[i]));
        });
        this.updateCalendars(calendars);
      }
    }
  },
  methods: {
    handleSelect: function handleSelect(date, type) {
      var _this$innerValue = _slicedToArray(this.innerValue, 2), startValue = _this$innerValue[0], endValue = _this$innerValue[1];
      if (isValidDate(startValue) && !isValidDate(endValue)) {
        if (startValue.getTime() > date.getTime()) {
          this.innerValue = [date, startValue];
        } else {
          this.innerValue = [startValue, date];
        }
        this.emitDate(this.innerValue, type);
      } else {
        this.innerValue = [date, /* @__PURE__ */ new Date(NaN)];
      }
    },
    onDateMouseEnter: function onDateMouseEnter(cell) {
      this.hoveredValue = cell;
    },
    onDateMouseLeave: function onDateMouseLeave() {
      this.hoveredValue = null;
    },
    emitDate: function emitDate2(dates2, type) {
      this.$emit("select", dates2, type);
    },
    updateStartCalendar: function updateStartCalendar(value3) {
      this.updateCalendars([value3, this.calendars[1]], 1);
    },
    updateEndCalendar: function updateEndCalendar(value3) {
      this.updateCalendars([this.calendars[0], value3], 0);
    },
    updateCalendars: function updateCalendars(calendars) {
      var adjustIndex = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 1;
      var gap = this.getCalendarGap(calendars);
      if (gap) {
        var calendar = new Date(calendars[adjustIndex]);
        calendar.setMonth(calendar.getMonth() + (adjustIndex === 0 ? -gap : gap));
        calendars[adjustIndex] = calendar;
      }
      this.calendars = calendars;
    },
    getCalendarGap: function getCalendarGap(calendars) {
      var _calendars = _slicedToArray(calendars, 2), calendarLeft = _calendars[0], calendarRight = _calendars[1];
      var yearDiff = calendarRight.getFullYear() - calendarLeft.getFullYear();
      var monthDiff = calendarRight.getMonth() - calendarLeft.getMonth();
      var diff = yearDiff * 12 + monthDiff;
      var min2 = this.calendarMinDiff;
      var max2 = this.calendarMaxDiff;
      if (diff < min2) {
        return min2 - diff;
      }
      if (diff > max2) {
        return max2 - diff;
      }
      return 0;
    },
    getRangeClasses: function getRangeClasses(cellDate, currentDates, classnames) {
      var classes = [].concat(this.getClasses(cellDate, currentDates, classnames));
      if (/disabled|active/.test(classnames)) return classes;
      var inRange = function inRange2(data11, range) {
        var fn = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : function(v2) {
          return v2.getTime();
        };
        var value3 = fn(data11);
        var _range$map = range.map(fn), _range$map2 = _slicedToArray(_range$map, 2), min2 = _range$map2[0], max2 = _range$map2[1];
        if (min2 > max2) {
          var _ref = [max2, min2];
          min2 = _ref[0];
          max2 = _ref[1];
        }
        return value3 > min2 && value3 < max2;
      };
      if (currentDates.length === 2 && inRange(cellDate, currentDates)) {
        return classes.concat("in-range");
      }
      if (currentDates.length === 1 && this.hoveredValue && inRange(cellDate, [currentDates[0], this.hoveredValue])) {
        return classes.concat("hover-in-range");
      }
      return classes;
    }
  },
  render: function render13() {
    var _this2 = this;
    var h3 = arguments[0];
    var calendarRange = this.calendars.map(function(calendar, index) {
      var props = _objectSpread2({}, _this2.$props, {
        calendar,
        value: _this2.innerValue,
        defaultValue: _this2.defaultValues[index],
        getClasses: _this2.getRangeClasses,
        // don't update when range is true
        partialUpdate: false
      });
      var on = {
        select: _this2.handleSelect,
        "update:calendar": index === 0 ? _this2.updateStartCalendar : _this2.updateEndCalendar
      };
      return h3("calendar-panel", {
        "props": _objectSpread2({}, props),
        "on": _objectSpread2({}, on)
      });
    });
    var prefixClass = this.prefixClass;
    return h3("div", {
      "class": "".concat(prefixClass, "-range-wrapper")
    }, [calendarRange]);
  }
};
var scrollBarWidth;
function getScrollbarWidth() {
  if (typeof window === "undefined") return 0;
  if (scrollBarWidth !== void 0) return scrollBarWidth;
  var outer = document.createElement("div");
  outer.style.visibility = "hidden";
  outer.style.overflow = "scroll";
  outer.style.width = "100px";
  outer.style.position = "absolute";
  outer.style.top = "-9999px";
  document.body.appendChild(outer);
  var inner = document.createElement("div");
  inner.style.width = "100%";
  outer.appendChild(inner);
  scrollBarWidth = outer.offsetWidth - inner.offsetWidth;
  outer.parentNode.removeChild(outer);
  return scrollBarWidth;
}
var script$5 = {
  inject: {
    prefixClass: {
      default: "mx"
    }
  },
  data: function data4() {
    return {
      scrollbarWidth: 0,
      thumbTop: "",
      thumbHeight: ""
    };
  },
  created: function created() {
    this.scrollbarWidth = getScrollbarWidth();
    document.addEventListener("mouseup", this.handleDragend);
  },
  beforeDestroy: function beforeDestroy2() {
    document.addEventListener("mouseup", this.handleDragend);
  },
  mounted: function mounted2() {
    this.$nextTick(this.getThumbSize);
  },
  methods: {
    getThumbSize: function getThumbSize() {
      var wrap = this.$refs.wrap;
      if (!wrap) return;
      var heightPercentage = wrap.clientHeight * 100 / wrap.scrollHeight;
      this.thumbHeight = heightPercentage < 100 ? "".concat(heightPercentage, "%") : "";
    },
    handleScroll: function handleScroll(evt) {
      var el = evt.currentTarget;
      var scrollHeight = el.scrollHeight, scrollTop = el.scrollTop;
      this.thumbTop = "".concat(scrollTop * 100 / scrollHeight, "%");
    },
    handleDragstart: function handleDragstart(evt) {
      evt.stopImmediatePropagation();
      this._draggable = true;
      var offsetTop = this.$refs.thumb.offsetTop;
      this._prevY = evt.clientY - offsetTop;
      document.addEventListener("mousemove", this.handleDraging);
    },
    handleDraging: function handleDraging(evt) {
      if (!this._draggable) return;
      var clientY = evt.clientY;
      var wrap = this.$refs.wrap;
      var scrollHeight = wrap.scrollHeight, clientHeight = wrap.clientHeight;
      var offsetY = clientY - this._prevY;
      var top = offsetY * scrollHeight / clientHeight;
      wrap.scrollTop = top;
    },
    handleDragend: function handleDragend() {
      if (this._draggable) {
        this._draggable = false;
        document.removeEventListener("mousemove", this.handleDraging);
      }
    }
  }
};
var __vue_script__$5 = script$5;
var __vue_render__$8 = function __vue_render__10() {
  var _vm = this;
  var _h = _vm.$createElement;
  var _c = _vm._self._c || _h;
  return _c("div", {
    class: _vm.prefixClass + "-scrollbar",
    style: {
      position: "relative",
      overflow: "hidden"
    }
  }, [_c("div", {
    ref: "wrap",
    class: _vm.prefixClass + "-scrollbar-wrap",
    style: {
      marginRight: "-" + _vm.scrollbarWidth + "px"
    },
    on: {
      "scroll": _vm.handleScroll
    }
  }, [_vm._t("default")], 2), _vm._v(" "), _c("div", {
    class: _vm.prefixClass + "-scrollbar-track"
  }, [_c("div", {
    ref: "thumb",
    class: _vm.prefixClass + "-scrollbar-thumb",
    style: {
      height: _vm.thumbHeight,
      top: _vm.thumbTop
    },
    on: {
      "mousedown": _vm.handleDragstart
    }
  })])]);
};
var __vue_staticRenderFns__$8 = [];
var __vue_inject_styles__$8 = void 0;
var __vue_component__$8 = normalizeComponent({
  render: __vue_render__$8,
  staticRenderFns: __vue_staticRenderFns__$8
}, __vue_inject_styles__$8, __vue_script__$5);
var padNumber = function padNumber2(value3) {
  value3 = parseInt(value3, 10);
  return value3 < 10 ? "0".concat(value3) : "".concat(value3);
};
var generateOptions = function generateOptions2(length, step, options2) {
  if (Array.isArray(options2)) {
    return options2.filter(function(v2) {
      return v2 >= 0 && v2 < length;
    });
  }
  if (step <= 0) {
    step = 1;
  }
  var arr = [];
  for (var i = 0; i < length; i += step) {
    arr.push(i);
  }
  return arr;
};
var scrollTo = function scrollTo2(element, to) {
  var duration = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 0;
  if (duration <= 0) {
    requestAnimationFrame(function() {
      element.scrollTop = to;
    });
    return;
  }
  var difference = to - element.scrollTop;
  var tick = difference / duration * 10;
  requestAnimationFrame(function() {
    var scrollTop = element.scrollTop + tick;
    if (scrollTop >= to) {
      element.scrollTop = to;
      return;
    }
    element.scrollTop = scrollTop;
    scrollTo2(element, to, duration - 10);
  });
};
var script$6 = {
  name: "ListColumns",
  components: {
    ScrollbarVertical: __vue_component__$8
  },
  inject: {
    prefixClass: {
      default: "mx"
    }
  },
  props: {
    date: Date,
    scrollDuration: {
      type: Number,
      default: 100
    },
    getClasses: {
      type: Function,
      default: function _default19() {
        return [];
      }
    },
    hourOptions: Array,
    minuteOptions: Array,
    secondOptions: Array,
    showHour: {
      type: Boolean,
      default: true
    },
    showMinute: {
      type: Boolean,
      default: true
    },
    showSecond: {
      type: Boolean,
      default: true
    },
    hourStep: {
      type: Number,
      default: 1
    },
    minuteStep: {
      type: Number,
      default: 1
    },
    secondStep: {
      type: Number,
      default: 1
    },
    use12h: {
      type: Boolean,
      default: false
    }
  },
  computed: {
    columns: function columns() {
      var cols = [];
      if (this.showHour) cols.push({
        type: "hour",
        list: this.getHoursList()
      });
      if (this.showMinute) cols.push({
        type: "minute",
        list: this.getMinutesList()
      });
      if (this.showSecond) cols.push({
        type: "second",
        list: this.getSecondsList()
      });
      if (this.use12h) cols.push({
        type: "ampm",
        list: this.getAMPMList()
      });
      return cols.filter(function(v2) {
        return v2.list.length > 0;
      });
    }
  },
  watch: {
    date: {
      handler: function handler3() {
        var _this = this;
        this.$nextTick(function() {
          _this.scrollToSelected(_this.scrollDuration);
        });
      }
    }
  },
  mounted: function mounted3() {
    this.scrollToSelected(0);
  },
  methods: {
    getHoursList: function getHoursList() {
      var _this2 = this;
      return generateOptions(this.use12h ? 12 : 24, this.hourStep, this.hourOptions).map(function(num) {
        var date = new Date(_this2.date);
        var text3 = padNumber(num);
        if (_this2.use12h) {
          if (num === 0) {
            text3 = "12";
          }
          if (date.getHours() >= 12) {
            num += 12;
          }
        }
        var value3 = date.setHours(num);
        return {
          value: value3,
          text: text3
        };
      });
    },
    getMinutesList: function getMinutesList() {
      var _this3 = this;
      return generateOptions(60, this.minuteStep, this.minuteOptions).map(function(num) {
        var value3 = new Date(_this3.date).setMinutes(num);
        return {
          value: value3,
          text: padNumber(num)
        };
      });
    },
    getSecondsList: function getSecondsList() {
      var _this4 = this;
      return generateOptions(60, this.secondStep, this.secondOptions).map(function(num) {
        var value3 = new Date(_this4.date).setSeconds(num);
        return {
          value: value3,
          text: padNumber(num)
        };
      });
    },
    getAMPMList: function getAMPMList() {
      var _this5 = this;
      return ["AM", "PM"].map(function(text3, i) {
        var date = new Date(_this5.date);
        var value3 = date.setHours(date.getHours() % 12 + i * 12);
        return {
          text: text3,
          value: value3
        };
      });
    },
    scrollToSelected: function scrollToSelected(duration) {
      var elements = this.$el.querySelectorAll(".active");
      for (var i = 0; i < elements.length; i++) {
        var element = elements[i];
        var scrollElement = getScrollParent(element, this.$el);
        if (scrollElement) {
          var to = element.offsetTop;
          scrollTo(scrollElement, to, duration);
        }
      }
    },
    handleSelect: function handleSelect2(evt) {
      var target = evt.target, currentTarget = evt.currentTarget;
      if (target.tagName.toUpperCase() !== "LI") return;
      var type = currentTarget.getAttribute("data-type");
      var colIndex = parseInt(currentTarget.getAttribute("data-index"), 10);
      var cellIndex = parseInt(target.getAttribute("data-index"), 10);
      var value3 = this.columns[colIndex].list[cellIndex].value;
      this.$emit("select", value3, type);
    }
  }
};
var __vue_script__$6 = script$6;
var __vue_render__$9 = function __vue_render__11() {
  var _vm = this;
  var _h = _vm.$createElement;
  var _c = _vm._self._c || _h;
  return _c("div", {
    class: _vm.prefixClass + "-time-columns"
  }, _vm._l(_vm.columns, function(col, i) {
    return _c("scrollbar-vertical", {
      key: i,
      class: _vm.prefixClass + "-time-column"
    }, [_c("ul", {
      class: _vm.prefixClass + "-time-list",
      attrs: {
        "data-type": col.type,
        "data-index": i
      },
      on: {
        "click": _vm.handleSelect
      }
    }, _vm._l(col.list, function(item, j) {
      return _c("li", {
        key: item.value,
        class: [_vm.prefixClass + "-time-item", _vm.getClasses(item.value, col.type)],
        attrs: {
          "data-index": j
        }
      }, [_vm._v("\n        " + _vm._s(item.text) + "\n      ")]);
    }), 0)]);
  }), 1);
};
var __vue_staticRenderFns__$9 = [];
var __vue_inject_styles__$9 = void 0;
var __vue_component__$9 = normalizeComponent({
  render: __vue_render__$9,
  staticRenderFns: __vue_staticRenderFns__$9
}, __vue_inject_styles__$9, __vue_script__$6);
function parseOption() {
  var time = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "";
  var values = time.split(":");
  if (values.length >= 2) {
    var hours = parseInt(values[0], 10);
    var minutes = parseInt(values[1], 10);
    return {
      hours,
      minutes
    };
  }
  return null;
}
var scrollTo$1 = function scrollTo3(element, to) {
  if (element) {
    element.scrollTop = to;
  }
};
var script$7 = {
  name: "ListOptions",
  components: {
    ScrollbarVertical: __vue_component__$8
  },
  inject: {
    getLocale: {
      default: function _default20() {
        return getLocale;
      }
    },
    prefixClass: {
      default: "mx"
    }
  },
  props: {
    date: Date,
    options: {
      type: [Object, Function],
      default: function _default21() {
        return [];
      }
    },
    format: {
      type: String,
      default: "HH:mm:ss"
    },
    getClasses: {
      type: Function,
      default: function _default22() {
        return [];
      }
    }
  },
  computed: {
    list: function list() {
      var result = [];
      var options2 = this.options;
      if (typeof options2 === "function") {
        return options2() || [];
      }
      var start = parseOption(options2.start);
      var end = parseOption(options2.end);
      var step = parseOption(options2.step);
      var fmt = options2.format || this.format;
      if (start && end && step) {
        var startMinutes = start.minutes + start.hours * 60;
        var endMinutes = end.minutes + end.hours * 60;
        var stepMinutes = step.minutes + step.hours * 60;
        var len = Math.floor((endMinutes - startMinutes) / stepMinutes);
        for (var i = 0; i <= len; i++) {
          var timeMinutes = startMinutes + i * stepMinutes;
          var hours = Math.floor(timeMinutes / 60);
          var minutes = timeMinutes % 60;
          var value3 = new Date(this.date).setHours(hours, minutes, 0);
          result.push({
            value: value3,
            text: this.formatDate(value3, fmt)
          });
        }
      }
      return result;
    }
  },
  mounted: function mounted4() {
    this.scrollToSelected();
  },
  methods: {
    formatDate: function formatDate2(date, fmt) {
      return format(date, fmt, {
        locale: this.getLocale().formatLocale
      });
    },
    scrollToSelected: function scrollToSelected2() {
      var element = this.$el.querySelector(".active");
      if (!element) return;
      var scrollElement = getScrollParent(element, this.$el);
      if (!scrollElement) return;
      var to = element.offsetTop;
      scrollTo$1(scrollElement, to);
    },
    handleSelect: function handleSelect3(value3) {
      this.$emit("select", value3, "time");
    }
  }
};
var __vue_script__$7 = script$7;
var __vue_render__$a = function __vue_render__12() {
  var _vm = this;
  var _h = _vm.$createElement;
  var _c = _vm._self._c || _h;
  return _c("scrollbar-vertical", _vm._l(_vm.list, function(item) {
    return _c("div", {
      key: item.value,
      class: [_vm.prefixClass + "-time-option", _vm.getClasses(item.value)],
      on: {
        "click": function click($event) {
          return _vm.handleSelect(item.value);
        }
      }
    }, [_vm._v("\n    " + _vm._s(item.text) + "\n  ")]);
  }), 0);
};
var __vue_staticRenderFns__$a = [];
var __vue_inject_styles__$a = void 0;
var __vue_component__$a = normalizeComponent({
  render: __vue_render__$a,
  staticRenderFns: __vue_staticRenderFns__$a
}, __vue_inject_styles__$a, __vue_script__$7);
var script$8 = {
  name: "TimePanel",
  components: {
    ListColumns: __vue_component__$9,
    ListOptions: __vue_component__$a
  },
  inject: {
    getLocale: {
      default: function _default23() {
        return getLocale;
      }
    },
    prefixClass: {
      default: "mx"
    }
  },
  props: {
    value: {},
    defaultValue: {
      default: function _default24() {
        var date = /* @__PURE__ */ new Date();
        date.setHours(0, 0, 0, 0);
        return date;
      }
    },
    format: {
      default: "HH:mm:ss"
    },
    timeTitleFormat: {
      type: String,
      default: "YYYY-MM-DD"
    },
    showTimeHeader: {
      type: Boolean,
      default: false
    },
    disabledTime: {
      type: Function,
      default: function _default25() {
        return false;
      }
    },
    timePickerOptions: {
      type: [Object, Function],
      default: function _default26() {
        return null;
      }
    },
    hourOptions: Array,
    minuteOptions: Array,
    secondOptions: Array,
    hourStep: {
      type: Number,
      default: 1
    },
    minuteStep: {
      type: Number,
      default: 1
    },
    secondStep: {
      type: Number,
      default: 1
    },
    showHour: {
      type: Boolean,
      default: void 0
    },
    showMinute: {
      type: Boolean,
      default: void 0
    },
    showSecond: {
      type: Boolean,
      default: void 0
    },
    use12h: {
      type: Boolean,
      default: void 0
    },
    scrollDuration: {
      type: Number,
      default: 100
    }
  },
  data: function data5() {
    return {
      innerValue: getValidDate(this.value, this.defaultValue)
    };
  },
  computed: {
    title: function title() {
      var titleFormat = this.timeTitleFormat;
      var date = new Date(this.innerValue);
      return this.formatDate(date, titleFormat);
    },
    innerForamt: function innerForamt() {
      return typeof this.format === "string" ? this.format : "HH:mm:ss";
    },
    ShowHourMinuteSecondAMPM: function ShowHourMinuteSecondAMPM() {
      var _this = this;
      var fmt = this.innerForamt;
      var defaultProps = {
        showHour: /[HhKk]/.test(fmt),
        showMinute: /m/.test(fmt),
        showSecond: /s/.test(fmt),
        use12h: /a/i.test(fmt)
      };
      var obj = {};
      Object.keys(defaultProps).forEach(function(key) {
        obj[key] = typeof _this[key] === "boolean" ? _this[key] : defaultProps[key];
      });
      return obj;
    }
  },
  watch: {
    value: {
      immediate: true,
      handler: function handler4() {
        this.innerValue = getValidDate(this.value, this.defaultValue);
      }
    }
  },
  methods: {
    formatDate: function formatDate3(date, fmt) {
      return format(date, fmt, {
        locale: this.getLocale().formatLocale
      });
    },
    isDisabledTime: function isDisabledTime(value3) {
      return this.disabledTime(new Date(value3));
    },
    isDisabledHour: function isDisabledHour(date) {
      var value3 = new Date(date);
      return this.isDisabledTime(value3) && this.isDisabledTime(value3.setMinutes(0, 0, 0)) && this.isDisabledTime(value3.setMinutes(59, 59, 999));
    },
    isDisabledMinute: function isDisabledMinute(date) {
      var value3 = new Date(date);
      return this.isDisabledTime(value3) && this.isDisabledTime(value3.setSeconds(0, 0)) && this.isDisabledTime(value3.setSeconds(59, 999));
    },
    isDisabledAMPM: function isDisabledAMPM(date) {
      var value3 = new Date(date);
      var minHour = value3.getHours() < 12 ? 0 : 12;
      var maxHour = minHour + 11;
      return this.isDisabledTime(value3) && this.isDisabledTime(value3.setHours(minHour, 0, 0, 0)) && this.isDisabledTime(value3.setHours(maxHour, 59, 59, 999));
    },
    isDisabled: function isDisabled2(date, type) {
      if (type === "hour") {
        return this.isDisabledHour(date);
      }
      if (type === "minute") {
        return this.isDisabledMinute(date);
      }
      if (type === "ampm") {
        return this.isDisabledAMPM(date);
      }
      return this.isDisabledTime(date);
    },
    handleSelect: function handleSelect4(value3, type) {
      var date = new Date(value3);
      if (!this.isDisabled(value3, type)) {
        this.innerValue = date;
        if (!this.isDisabledTime(date)) {
          this.$emit("select", date, type);
        }
      }
    },
    handleClickTitle: function handleClickTitle() {
      this.$emit("clicktitle");
    },
    getClasses: function getClasses(value3, type) {
      var cellDate = new Date(value3);
      if (this.isDisabled(value3, type)) {
        return "disabled";
      }
      if (cellDate.getTime() === this.innerValue.getTime()) {
        return "active";
      }
      return "";
    }
  }
};
var __vue_script__$8 = script$8;
var __vue_render__$b = function __vue_render__13() {
  var _vm = this;
  var _h = _vm.$createElement;
  var _c = _vm._self._c || _h;
  return _c("div", {
    class: _vm.prefixClass + "-time"
  }, [_vm.showTimeHeader ? _c("div", {
    class: _vm.prefixClass + "-time-header"
  }, [_c("button", {
    class: _vm.prefixClass + "-btn " + _vm.prefixClass + "-btn-text " + _vm.prefixClass + "-time-header-title",
    attrs: {
      "type": "button"
    },
    on: {
      "click": _vm.handleClickTitle
    }
  }, [_vm._v("\n      " + _vm._s(_vm.title) + "\n    ")])]) : _vm._e(), _vm._v(" "), _c("div", {
    class: _vm.prefixClass + "-time-content"
  }, [_vm.timePickerOptions ? _c("list-options", {
    attrs: {
      "date": _vm.innerValue,
      "get-classes": _vm.getClasses,
      "options": _vm.timePickerOptions,
      "format": _vm.innerForamt
    },
    on: {
      "select": _vm.handleSelect
    }
  }) : _c("list-columns", _vm._b({
    attrs: {
      "date": _vm.innerValue,
      "get-classes": _vm.getClasses,
      "hour-options": _vm.hourOptions,
      "minute-options": _vm.minuteOptions,
      "second-options": _vm.secondOptions,
      "hour-step": _vm.hourStep,
      "minute-step": _vm.minuteStep,
      "second-step": _vm.secondStep,
      "scroll-duration": _vm.scrollDuration
    },
    on: {
      "select": _vm.handleSelect
    }
  }, "list-columns", _vm.ShowHourMinuteSecondAMPM, false))], 1)]);
};
var __vue_staticRenderFns__$b = [];
var __vue_inject_styles__$b = void 0;
var __vue_component__$b = normalizeComponent({
  render: __vue_render__$b,
  staticRenderFns: __vue_staticRenderFns__$b
}, __vue_inject_styles__$b, __vue_script__$8);
var TimeRange = {
  name: "TimeRange",
  inject: {
    prefixClass: {
      default: "mx"
    }
  },
  props: _objectSpread2({}, __vue_component__$b.props),
  data: function data6() {
    return {
      startValue: /* @__PURE__ */ new Date(NaN),
      endValue: /* @__PURE__ */ new Date(NaN)
    };
  },
  watch: {
    value: {
      immediate: true,
      handler: function handler5() {
        if (isValidRangeDate(this.value)) {
          var _this$value = _slicedToArray(this.value, 2), startValue = _this$value[0], endValue = _this$value[1];
          this.startValue = startValue;
          this.endValue = endValue;
        } else {
          this.startValue = /* @__PURE__ */ new Date(NaN);
          this.endValue = /* @__PURE__ */ new Date(NaN);
        }
      }
    }
  },
  methods: {
    emitChange: function emitChange(type, index) {
      var date = [this.startValue, this.endValue];
      this.$emit("select", date, type === "time" ? "time-range" : type, index);
    },
    handleSelectStart: function handleSelectStart(date, type) {
      this.startValue = date;
      if (!(this.endValue.getTime() >= date.getTime())) {
        this.endValue = date;
      }
      this.emitChange(type, 0);
    },
    handleSelectEnd: function handleSelectEnd(date, type) {
      this.endValue = date;
      if (!(this.startValue.getTime() <= date.getTime())) {
        this.startValue = date;
      }
      this.emitChange(type, 1);
    },
    disabledStartTime: function disabledStartTime(date) {
      return this.disabledTime(date, 0);
    },
    disabledEndTime: function disabledEndTime(date) {
      return date.getTime() < this.startValue.getTime() || this.disabledTime(date, 1);
    }
  },
  render: function render14() {
    var h3 = arguments[0];
    var defaultValues2 = Array.isArray(this.defaultValue) ? this.defaultValue : [this.defaultValue, this.defaultValue];
    var prefixClass = this.prefixClass;
    return h3("div", {
      "class": "".concat(prefixClass, "-range-wrapper")
    }, [h3(__vue_component__$b, {
      "props": _objectSpread2({}, _objectSpread2({}, this.$props, {
        value: this.startValue,
        defaultValue: defaultValues2[0],
        disabledTime: this.disabledStartTime
      })),
      "on": _objectSpread2({}, _objectSpread2({}, this.$listeners, {
        select: this.handleSelectStart
      }))
    }), h3(__vue_component__$b, {
      "props": _objectSpread2({}, _objectSpread2({}, this.$props, {
        value: this.endValue,
        defaultValue: defaultValues2[1],
        disabledTime: this.disabledEndTime
      })),
      "on": _objectSpread2({}, _objectSpread2({}, this.$listeners, {
        select: this.handleSelectEnd
      }))
    })]);
  }
};
var DatetimePanel = {
  name: "DatetimePanel",
  inject: {
    prefixClass: {
      default: "mx"
    }
  },
  emits: ["select", "update:show-time-panel"],
  props: _objectSpread2({}, CalendarPanel.props, {}, __vue_component__$b.props, {
    showTimePanel: {
      type: Boolean,
      default: void 0
    }
  }),
  data: function data7() {
    return {
      defaultTimeVisible: false,
      currentValue: this.value
    };
  },
  computed: {
    timeVisible: function timeVisible() {
      return typeof this.showTimePanel === "boolean" ? this.showTimePanel : this.defaultTimeVisible;
    }
  },
  watch: {
    value: function value(val) {
      this.currentValue = val;
    }
  },
  methods: {
    closeTimePanel: function closeTimePanel() {
      this.defaultTimeVisible = false;
      this.$emit("update:show-time-panel", false);
    },
    openTimePanel: function openTimePanel() {
      this.defaultTimeVisible = true;
      this.$emit("update:show-time-panel", true);
    },
    emitDate: function emitDate3(date, type) {
      this.$emit("select", date, type);
    },
    handleSelect: function handleSelect5(date, type) {
      if (type === "date") {
        this.openTimePanel();
      }
      var datetime = assignTime(date, getValidDate(this.value, this.defaultValue));
      if (this.disabledTime(new Date(datetime))) {
        datetime = assignTime(date, this.defaultValue);
        if (this.disabledTime(new Date(datetime))) {
          this.currentValue = datetime;
          return;
        }
      }
      this.emitDate(datetime, type);
    }
  },
  render: function render15() {
    var h3 = arguments[0];
    var calendarProps = {
      props: _objectSpread2({}, pick(this.$props, Object.keys(CalendarPanel.props)), {
        type: "date",
        value: this.currentValue
      }),
      on: {
        select: this.handleSelect
      }
    };
    var timeProps = {
      props: _objectSpread2({}, pick(this.$props, Object.keys(__vue_component__$b.props)), {
        showTimeHeader: true,
        value: this.currentValue
      }),
      on: {
        select: this.emitDate,
        clicktitle: this.closeTimePanel
      }
    };
    var prefixClass = this.prefixClass;
    return h3("div", [h3(CalendarPanel, helper([{}, calendarProps])), this.timeVisible && h3(__vue_component__$b, helper([{
      "class": "".concat(prefixClass, "-calendar-time")
    }, timeProps]))]);
  }
};
var DatetimeRange = {
  name: "DatetimeRange",
  inject: {
    prefixClass: {
      default: "mx"
    }
  },
  emits: ["select", "update:show-time-panel"],
  props: _objectSpread2({}, CalendarRange.props, {}, TimeRange.props, {
    showTimePanel: {
      type: Boolean,
      default: void 0
    }
  }),
  data: function data8() {
    return {
      defaultTimeVisible: false,
      currentValue: this.value
    };
  },
  computed: {
    timeVisible: function timeVisible2() {
      return typeof this.showTimePanel === "boolean" ? this.showTimePanel : this.defaultTimeVisible;
    }
  },
  watch: {
    value: function value2(val) {
      this.currentValue = val;
    }
  },
  methods: {
    closeTimePanel: function closeTimePanel2() {
      this.defaultTimeVisible = false;
      this.$emit("update:show-time-panel", false);
    },
    openTimePanel: function openTimePanel2() {
      this.defaultTimeVisible = true;
      this.$emit("update:show-time-panel", true);
    },
    emitDate: function emitDate4(dates2, type) {
      this.$emit("select", dates2, type);
    },
    handleSelect: function handleSelect6(dates2, type) {
      var _this = this;
      if (type === "date") {
        this.openTimePanel();
      }
      var defaultValues2 = Array.isArray(this.defaultValue) ? this.defaultValue : [this.defaultValue, this.defaultValue];
      var datetimes = dates2.map(function(date, i) {
        var time = isValidRangeDate(_this.value) ? _this.value[i] : defaultValues2[i];
        return assignTime(date, time);
      });
      if (datetimes[1].getTime() < datetimes[0].getTime()) {
        datetimes = [datetimes[0], datetimes[0]];
      }
      if (datetimes.some(this.disabledTime)) {
        datetimes = dates2.map(function(date, i) {
          return assignTime(date, defaultValues2[i]);
        });
        if (datetimes.some(this.disabledTime)) {
          this.currentValue = datetimes;
          return;
        }
      }
      this.emitDate(datetimes, type);
    }
  },
  render: function render16() {
    var h3 = arguments[0];
    var calendarProps = {
      props: _objectSpread2({}, pick(this.$props, Object.keys(CalendarRange.props)), {
        type: "date",
        value: this.currentValue
      }),
      on: {
        select: this.handleSelect
      }
    };
    var timeProps = {
      props: _objectSpread2({}, pick(this.$props, Object.keys(TimeRange.props)), {
        value: this.currentValue,
        showTimeHeader: true
      }),
      on: {
        select: this.emitDate,
        clicktitle: this.closeTimePanel
      }
    };
    var prefixClass = this.prefixClass;
    return h3("div", [h3(CalendarRange, helper([{}, calendarProps])), this.timeVisible && h3(TimeRange, helper([{
      "class": "".concat(prefixClass, "-calendar-time")
    }, timeProps]))]);
  }
};
var componentMap = {
  default: CalendarPanel,
  time: __vue_component__$b,
  datetime: DatetimePanel
};
var componentRangeMap = {
  default: CalendarRange,
  time: TimeRange,
  datetime: DatetimeRange
};
var DatePicker = {
  name: "DatePicker",
  provide: function provide2() {
    var _this = this;
    return {
      // make locale reactive
      getLocale: function getLocale2() {
        return _this.locale;
      },
      getWeek: this.getWeek,
      prefixClass: this.prefixClass,
      dispatchDatePicker: this.$emit.bind(this)
    };
  },
  props: _objectSpread2({}, DatetimePanel.props, {
    value: {},
    valueType: {
      type: String,
      default: "date"
      // date, format, timestamp, or token like 'YYYY-MM-DD'
    },
    type: {
      type: String,
      // ['date', 'datetime', 'time', 'year', 'month', 'week']
      default: "date"
    },
    format: {
      type: String
    },
    formatter: {
      type: Object
    },
    range: {
      type: Boolean,
      default: false
    },
    multiple: {
      type: Boolean,
      default: false
    },
    rangeSeparator: {
      type: String
    },
    lang: {
      type: [String, Object]
    },
    placeholder: {
      type: String,
      default: ""
    },
    editable: {
      type: Boolean,
      default: true
    },
    disabled: {
      type: Boolean,
      default: false
    },
    clearable: {
      type: Boolean,
      default: true
    },
    prefixClass: {
      type: String,
      default: "mx"
    },
    inputClass: {},
    inputAttr: {
      type: Object,
      default: function _default27() {
        return {};
      }
    },
    appendToBody: {
      type: Boolean,
      default: true
    },
    open: {
      type: Boolean,
      default: void 0
    },
    popupClass: {},
    popupStyle: {
      type: Object,
      default: function _default28() {
        return {};
      }
    },
    inline: {
      type: Boolean,
      default: false
    },
    confirm: {
      type: Boolean,
      default: false
    },
    confirmText: {
      type: String,
      default: "OK"
    },
    renderInputText: {
      type: Function
    },
    shortcuts: {
      type: Array,
      validator: function validator(value3) {
        return Array.isArray(value3) && value3.every(function(v2) {
          return isObject(v2) && typeof v2.text === "string" && typeof v2.onClick === "function";
        });
      },
      default: function _default29() {
        return [];
      }
    }
  }),
  data: function data9() {
    return {
      // cache the innervalue, wait to confirm
      currentValue: null,
      userInput: null,
      defaultOpen: false,
      mouseInInput: false
    };
  },
  computed: {
    popupVisible: function popupVisible() {
      return !this.disabled && (typeof this.open === "boolean" ? this.open : this.defaultOpen);
    },
    innerRangeSeparator: function innerRangeSeparator() {
      return this.rangeSeparator || (this.multiple ? "," : " ~ ");
    },
    innerFormat: function innerFormat() {
      var map = {
        date: "YYYY-MM-DD",
        datetime: "YYYY-MM-DD HH:mm:ss",
        year: "YYYY",
        month: "YYYY-MM",
        time: "HH:mm:ss",
        week: "w"
      };
      return this.format || map[this.type] || map.date;
    },
    innerValue: function innerValue2() {
      var value3 = this.value;
      if (this.validMultipleType) {
        value3 = Array.isArray(value3) ? value3 : [];
        return value3.map(this.value2date);
      }
      if (this.range) {
        value3 = Array.isArray(value3) ? value3.slice(0, 2) : [null, null];
        return value3.map(this.value2date);
      }
      return this.value2date(value3);
    },
    text: function text() {
      var _this2 = this;
      if (this.userInput !== null) {
        return this.userInput;
      }
      if (typeof this.renderInputText === "function") {
        return this.renderInputText(this.innerValue);
      }
      if (!this.isValidValue(this.innerValue)) {
        return "";
      }
      if (Array.isArray(this.innerValue)) {
        return this.innerValue.map(function(v2) {
          return _this2.formatDate(v2);
        }).join(this.innerRangeSeparator);
      }
      return this.formatDate(this.innerValue);
    },
    showClearIcon: function showClearIcon() {
      return !this.disabled && this.clearable && this.text && this.mouseInInput;
    },
    locale: function locale2() {
      if (isObject(this.lang)) {
        return mergeDeep(getLocale(), this.lang);
      }
      return getLocale(this.lang);
    },
    validMultipleType: function validMultipleType() {
      var types = ["date", "month", "year"];
      return this.multiple && !this.range && types.indexOf(this.type) !== -1;
    }
  },
  watch: {
    innerValue: {
      immediate: true,
      handler: function handler6(val) {
        this.currentValue = val;
      }
    },
    popupVisible: {
      handler: function handler7(val) {
        if (val) {
          this.currentValue = this.innerValue;
        }
      }
    }
  },
  created: function created2() {
    if (_typeof$1(this.format) === "object") {
      console.warn("[vue2-datepicker]: The prop `format` don't support Object any more. You can use the new prop `formatter` to replace it");
    }
  },
  methods: {
    handleMouseEnter: function handleMouseEnter2() {
      this.mouseInInput = true;
    },
    handleMouseLeave: function handleMouseLeave2() {
      this.mouseInInput = false;
    },
    handleClickOutSide: function handleClickOutSide(evt) {
      var target = evt.target;
      if (!this.$el.contains(target)) {
        this.closePopup();
      }
    },
    getFormatter: function getFormatter(key) {
      return isObject(this.formatter) && this.formatter[key] || isObject(this.format) && this.format[key];
    },
    getWeek: function getWeek$1(date, options2) {
      if (typeof this.getFormatter("getWeek") === "function") {
        return this.getFormatter("getWeek")(date, options2);
      }
      return getWeek(date, options2);
    },
    parseDate: function parseDate(value3, fmt) {
      fmt = fmt || this.innerFormat;
      if (typeof this.getFormatter("parse") === "function") {
        return this.getFormatter("parse")(value3, fmt);
      }
      var backupDate = /* @__PURE__ */ new Date();
      return parse(value3, fmt, {
        locale: this.locale.formatLocale,
        backupDate
      });
    },
    formatDate: function formatDate4(date, fmt) {
      fmt = fmt || this.innerFormat;
      if (typeof this.getFormatter("stringify") === "function") {
        return this.getFormatter("stringify")(date, fmt);
      }
      return format(date, fmt, {
        locale: this.locale.formatLocale
      });
    },
    // transform the outer value to inner date
    value2date: function value2date(value3) {
      switch (this.valueType) {
        case "date":
          return value3 instanceof Date ? new Date(value3.getTime()) : /* @__PURE__ */ new Date(NaN);
        case "timestamp":
          return typeof value3 === "number" ? new Date(value3) : /* @__PURE__ */ new Date(NaN);
        case "format":
          return typeof value3 === "string" ? this.parseDate(value3) : /* @__PURE__ */ new Date(NaN);
        default:
          return typeof value3 === "string" ? this.parseDate(value3, this.valueType) : /* @__PURE__ */ new Date(NaN);
      }
    },
    // transform the inner date to outer value
    date2value: function date2value(date) {
      if (!isValidDate(date)) return null;
      switch (this.valueType) {
        case "date":
          return date;
        case "timestamp":
          return date.getTime();
        case "format":
          return this.formatDate(date);
        default:
          return this.formatDate(date, this.valueType);
      }
    },
    emitValue: function emitValue(date, type) {
      var close = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : true;
      this.userInput = null;
      var value3 = Array.isArray(date) ? date.map(this.date2value) : this.date2value(date);
      this.$emit("input", value3);
      this.$emit("change", value3, type);
      if (close) {
        this.closePopup();
      }
      return value3;
    },
    isValidValue: function isValidValue(value3) {
      if (this.validMultipleType) {
        return isValidDates(value3);
      }
      if (this.range) {
        return isValidRangeDate(value3);
      }
      return isValidDate(value3);
    },
    isValidValueAndNotDisabled: function isValidValueAndNotDisabled(value3) {
      if (!this.isValidValue(value3)) {
        return false;
      }
      var disabledDate = typeof this.disabledDate === "function" ? this.disabledDate : function() {
        return false;
      };
      var disabledTime = typeof this.disabledTime === "function" ? this.disabledTime : function() {
        return false;
      };
      if (!Array.isArray(value3)) {
        value3 = [value3];
      }
      return value3.every(function(v2) {
        return !disabledDate(v2) && !disabledTime(v2);
      });
    },
    handleMultipleDates: function handleMultipleDates(date, dates2) {
      if (this.validMultipleType && dates2) {
        var nextDates = dates2.filter(function(v2) {
          return v2.getTime() !== date.getTime();
        });
        if (nextDates.length === dates2.length) {
          nextDates.push(date);
        }
        return nextDates;
      }
      return date;
    },
    handleSelectDate: function handleSelectDate2(val, type, dates2) {
      val = this.handleMultipleDates(val, dates2);
      if (this.confirm) {
        this.currentValue = val;
      } else {
        this.emitValue(
          val,
          type,
          // this.type === 'datetime', click the time should close popup
          !this.validMultipleType && (type === this.type || type === "time")
        );
      }
    },
    clear: function clear() {
      this.emitValue(this.range ? [null, null] : null);
      this.$emit("clear");
    },
    handleClear: function handleClear(evt) {
      evt.stopPropagation();
      this.clear();
    },
    handleConfirmDate: function handleConfirmDate() {
      var value3 = this.emitValue(this.currentValue);
      this.$emit("confirm", value3);
    },
    handleSelectShortcut: function handleSelectShortcut(evt) {
      var index = evt.currentTarget.getAttribute("data-index");
      var item = this.shortcuts[parseInt(index, 10)];
      if (isObject(item) && typeof item.onClick === "function") {
        var date = item.onClick(this);
        if (date) {
          this.emitValue(date);
        }
      }
    },
    openPopup: function openPopup(evt) {
      if (this.popupVisible || this.disabled) return;
      this.defaultOpen = true;
      this.$emit("open", evt);
      this.$emit("update:open", true);
    },
    closePopup: function closePopup() {
      if (!this.popupVisible) return;
      this.defaultOpen = false;
      this.$emit("close");
      this.$emit("update:open", false);
    },
    blur: function blur() {
      if (this.$refs.input) {
        this.$refs.input.blur();
      }
    },
    focus: function focus() {
      if (this.$refs.input) {
        this.$refs.input.focus();
      }
    },
    handleInputChange: function handleInputChange() {
      var _this3 = this;
      if (!this.editable || this.userInput === null) return;
      var text3 = this.userInput.trim();
      this.userInput = null;
      if (text3 === "") {
        this.clear();
        return;
      }
      var date;
      if (this.validMultipleType) {
        date = text3.split(this.innerRangeSeparator).map(function(v2) {
          return _this3.parseDate(v2.trim());
        });
      } else if (this.range) {
        var arr = text3.split(this.innerRangeSeparator);
        if (arr.length !== 2) {
          arr = text3.split(this.innerRangeSeparator.trim());
        }
        date = arr.map(function(v2) {
          return _this3.parseDate(v2.trim());
        });
      } else {
        date = this.parseDate(text3);
      }
      if (this.isValidValueAndNotDisabled(date)) {
        this.emitValue(date);
        this.blur();
      } else {
        this.$emit("input-error", text3);
      }
    },
    handleInputInput: function handleInputInput(evt) {
      this.userInput = typeof evt === "string" ? evt : evt.target.value;
    },
    handleInputKeydown: function handleInputKeydown(evt) {
      var keyCode = evt.keyCode;
      if (keyCode === 9) {
        this.closePopup();
      } else if (keyCode === 13) {
        this.handleInputChange();
      }
    },
    handleInputBlur: function handleInputBlur(evt) {
      this.$emit("blur", evt);
    },
    handleInputFocus: function handleInputFocus(evt) {
      this.openPopup(evt);
      this.$emit("focus", evt);
    },
    hasSlot: function hasSlot(name) {
      return !!(this.$slots[name] || this.$scopedSlots[name]);
    },
    renderSlot: function renderSlot(name, fallback, props) {
      var slotFn = this.$scopedSlots[name];
      if (slotFn) {
        return slotFn(props) || fallback;
      }
      return this.$slots[name] || fallback;
    },
    renderInput: function renderInput() {
      var h3 = this.$createElement;
      var prefixClass = this.prefixClass;
      var props = _objectSpread2({
        name: "date",
        type: "text",
        autocomplete: "off",
        value: this.text,
        class: this.inputClass || "".concat(this.prefixClass, "-input"),
        readonly: !this.editable,
        disabled: this.disabled,
        placeholder: this.placeholder
      }, this.inputAttr);
      var value3 = props.value, className = props.class, attrs = _objectWithoutProperties(props, ["value", "class"]);
      var events = {
        keydown: this.handleInputKeydown,
        focus: this.handleInputFocus,
        blur: this.handleInputBlur,
        input: this.handleInputInput,
        change: this.handleInputChange
      };
      var input = this.renderSlot("input", h3("input", {
        "domProps": {
          "value": value3
        },
        "class": className,
        "attrs": _objectSpread2({}, attrs),
        "on": _objectSpread2({}, events),
        "ref": "input"
      }), {
        props,
        events
      });
      var calendarIcon = this.type === "time" ? h3(__vue_component__$2) : h3(__vue_component__$1);
      return h3("div", {
        "class": "".concat(prefixClass, "-input-wrapper"),
        "on": {
          "mouseenter": this.handleMouseEnter,
          "mouseleave": this.handleMouseLeave,
          "click": this.openPopup
        },
        "ref": "inputWrapper"
      }, [input, this.showClearIcon ? h3("i", {
        "class": "".concat(prefixClass, "-icon-clear"),
        "on": {
          "click": this.handleClear
        }
      }, [this.renderSlot("icon-clear", h3(__vue_component__$3))]) : h3("i", {
        "class": "".concat(prefixClass, "-icon-calendar")
      }, [this.renderSlot("icon-calendar", calendarIcon)])]);
    },
    renderContent: function renderContent() {
      var h3 = this.$createElement;
      var map = this.range ? componentRangeMap : componentMap;
      var Component2 = map[this.type] || map.default;
      var props = _objectSpread2({}, pick(this.$props, Object.keys(Component2.props)), {
        value: this.currentValue
      });
      var on = _objectSpread2({}, pick(this.$listeners, Component2.emits || []), {
        select: this.handleSelectDate
      });
      var content = h3(Component2, helper([{}, {
        props,
        on,
        ref: "picker"
      }]));
      return h3("div", {
        "class": "".concat(this.prefixClass, "-datepicker-body")
      }, [this.renderSlot("content", content, {
        value: this.currentValue,
        emit: this.handleSelectDate
      })]);
    },
    renderSidebar: function renderSidebar() {
      var _this4 = this;
      var h3 = this.$createElement;
      var prefixClass = this.prefixClass;
      return h3("div", {
        "class": "".concat(prefixClass, "-datepicker-sidebar")
      }, [this.renderSlot("sidebar", null, {
        value: this.currentValue,
        emit: this.handleSelectDate
      }), this.shortcuts.map(function(v2, i) {
        return h3("button", {
          "key": i,
          "attrs": {
            "data-index": i,
            "type": "button"
          },
          "class": "".concat(prefixClass, "-btn ").concat(prefixClass, "-btn-text ").concat(prefixClass, "-btn-shortcut"),
          "on": {
            "click": _this4.handleSelectShortcut
          }
        }, [v2.text]);
      })]);
    },
    renderHeader: function renderHeader() {
      var h3 = this.$createElement;
      return h3("div", {
        "class": "".concat(this.prefixClass, "-datepicker-header")
      }, [this.renderSlot("header", null, {
        value: this.currentValue,
        emit: this.handleSelectDate
      })]);
    },
    renderFooter: function renderFooter() {
      var h3 = this.$createElement;
      var prefixClass = this.prefixClass;
      return h3("div", {
        "class": "".concat(prefixClass, "-datepicker-footer")
      }, [this.renderSlot("footer", null, {
        value: this.currentValue,
        emit: this.handleSelectDate
      }), this.confirm ? h3("button", {
        "attrs": {
          "type": "button"
        },
        "class": "".concat(prefixClass, "-btn ").concat(prefixClass, "-datepicker-btn-confirm"),
        "on": {
          "click": this.handleConfirmDate
        }
      }, [this.confirmText]) : null]);
    }
  },
  render: function render17() {
    var _class;
    var h3 = arguments[0];
    var prefixClass = this.prefixClass, inline = this.inline, disabled = this.disabled;
    var sidedar = this.hasSlot("sidebar") || this.shortcuts.length ? this.renderSidebar() : null;
    var content = h3("div", {
      "class": "".concat(prefixClass, "-datepicker-content")
    }, [this.hasSlot("header") ? this.renderHeader() : null, this.renderContent(), this.hasSlot("footer") || this.confirm ? this.renderFooter() : null]);
    return h3("div", {
      "class": (_class = {}, _defineProperty(_class, "".concat(prefixClass, "-datepicker"), true), _defineProperty(_class, "".concat(prefixClass, "-datepicker-range"), this.range), _defineProperty(_class, "".concat(prefixClass, "-datepicker-inline"), inline), _defineProperty(_class, "disabled", disabled), _class)
    }, [!inline ? this.renderInput() : null, !inline ? h3(__vue_component__, {
      "ref": "popup",
      "class": this.popupClass,
      "style": this.popupStyle,
      "attrs": {
        "visible": this.popupVisible,
        "appendToBody": this.appendToBody
      },
      "on": {
        "clickoutside": this.handleClickOutSide
      }
    }, [sidedar, content]) : h3("div", {
      "class": "".concat(prefixClass, "-datepicker-main")
    }, [sidedar, content])]);
  }
};
DatePicker.locale = locale;
DatePicker.install = function install(Vue2) {
  Vue2.component(DatePicker.name, DatePicker);
};
if (typeof window !== "undefined" && window.Vue) {
  DatePicker.install(window.Vue);
}
_extends(DatePicker, {
  CalendarPanel,
  CalendarRange,
  TimePanel: __vue_component__$b,
  TimeRange,
  DatetimePanel,
  DatetimeRange
});
register(t37);
const _sfc_main$2$1 = {
  name: "CalendarBlankIcon",
  emits: ["click"],
  props: {
    title: {
      type: String
    },
    fillColor: {
      type: String,
      default: "currentColor"
    },
    size: {
      type: Number,
      default: 24
    }
  }
};
var _sfc_render$2$1 = function render18() {
  var _vm = this, _c = _vm._self._c;
  return _c("span", _vm._b({ staticClass: "material-design-icon calendar-blank-icon", attrs: { "aria-hidden": _vm.title ? null : "true", "aria-label": _vm.title, "role": "img" }, on: { "click": function($event) {
    return _vm.$emit("click", $event);
  } } }, "span", _vm.$attrs, false), [_c("svg", { staticClass: "material-design-icon__svg", attrs: { "fill": _vm.fillColor, "width": _vm.size, "height": _vm.size, "viewBox": "0 0 24 24" } }, [_c("path", { attrs: { "d": "M19,19H5V8H19M16,1V3H8V1H6V3H5C3.89,3 3,3.89 3,5V19A2,2 0 0,0 5,21H19A2,2 0 0,0 21,19V5C21,3.89 20.1,3 19,3H18V1" } }, [_vm.title ? _c("title", [_vm._v(_vm._s(_vm.title))]) : _vm._e()])])]);
};
var _sfc_staticRenderFns$2$1 = [];
var __component__$2$1 = /* @__PURE__ */ normalizeComponent$1(
  _sfc_main$2$1,
  _sfc_render$2$1,
  _sfc_staticRenderFns$2$1,
  false,
  null,
  null
);
const CalendarBlank = __component__$2$1.exports;
const _sfc_main$1$2 = {
  name: "WebIcon",
  emits: ["click"],
  props: {
    title: {
      type: String
    },
    fillColor: {
      type: String,
      default: "currentColor"
    },
    size: {
      type: Number,
      default: 24
    }
  }
};
var _sfc_render$1$2 = function render22() {
  var _vm = this, _c = _vm._self._c;
  return _c("span", _vm._b({ staticClass: "material-design-icon web-icon", attrs: { "aria-hidden": _vm.title ? null : "true", "aria-label": _vm.title, "role": "img" }, on: { "click": function($event) {
    return _vm.$emit("click", $event);
  } } }, "span", _vm.$attrs, false), [_c("svg", { staticClass: "material-design-icon__svg", attrs: { "fill": _vm.fillColor, "width": _vm.size, "height": _vm.size, "viewBox": "0 0 24 24" } }, [_c("path", { attrs: { "d": "M16.36,14C16.44,13.34 16.5,12.68 16.5,12C16.5,11.32 16.44,10.66 16.36,10H19.74C19.9,10.64 20,11.31 20,12C20,12.69 19.9,13.36 19.74,14M14.59,19.56C15.19,18.45 15.65,17.25 15.97,16H18.92C17.96,17.65 16.43,18.93 14.59,19.56M14.34,14H9.66C9.56,13.34 9.5,12.68 9.5,12C9.5,11.32 9.56,10.65 9.66,10H14.34C14.43,10.65 14.5,11.32 14.5,12C14.5,12.68 14.43,13.34 14.34,14M12,19.96C11.17,18.76 10.5,17.43 10.09,16H13.91C13.5,17.43 12.83,18.76 12,19.96M8,8H5.08C6.03,6.34 7.57,5.06 9.4,4.44C8.8,5.55 8.35,6.75 8,8M5.08,16H8C8.35,17.25 8.8,18.45 9.4,19.56C7.57,18.93 6.03,17.65 5.08,16M4.26,14C4.1,13.36 4,12.69 4,12C4,11.31 4.1,10.64 4.26,10H7.64C7.56,10.66 7.5,11.32 7.5,12C7.5,12.68 7.56,13.34 7.64,14M12,4.03C12.83,5.23 13.5,6.57 13.91,8H10.09C10.5,6.57 11.17,5.23 12,4.03M18.92,8H15.97C15.65,6.75 15.19,5.55 14.59,4.44C16.43,5.07 17.96,6.34 18.92,8M12,2C6.47,2 2,6.5 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2Z" } }, [_vm.title ? _c("title", [_vm._v(_vm._s(_vm.title))]) : _vm._e()])])]);
};
var _sfc_staticRenderFns$1$2 = [];
var __component__$1$2 = /* @__PURE__ */ normalizeComponent$1(
  _sfc_main$1$2,
  _sfc_render$1$2,
  _sfc_staticRenderFns$1$2,
  false,
  null,
  null
);
const Web = __component__$1$2.exports;
const formatMap = {
  date: "YYYY-MM-DD",
  datetime: "YYYY-MM-DD H:mm:ss",
  year: "YYYY",
  month: "YYYY-MM",
  time: "H:mm:ss",
  week: "w"
};
const _sfc_main$7 = {
  name: "NcDateTimePicker",
  components: {
    CalendarBlank,
    DatePicker,
    NcPopover,
    NcTimezonePicker,
    Web
  },
  inheritAttrs: false,
  model: {
    prop: "modelValue",
    event: "update:modelValue"
  },
  props: {
    clearable: {
      type: Boolean,
      default: false
    },
    minuteStep: {
      type: Number,
      default: 10
    },
    /**
     * Since 8.25.0: Support 'date-range', 'time-range' and 'datetime-range' values.
     */
    type: {
      type: String,
      default: "date",
      validator: (type) => ["date", "time", "datetime", "week", "month", "year", "date-range", "time-range", "datetime-range"].includes(type)
    },
    /**
     * Either `moment.js` formatting tokens or a function taking a Date object and returning a string.
     * Warning: In v9 this will change the accepted token format to standardized Unicode tokens instead!
     */
    format: {
      type: [String, Function],
      default: null
    },
    /**
     * @deprecated use `format` instead
     */
    formatter: {
      type: Object,
      default: null
    },
    lang: {
      type: Object,
      default: null
    },
    /**
     * Removed in v9 - use `modelValue` (`v-model`) instead
     * @deprecated
     */
    // eslint-disable-next-line
    value: {
      default: void 0
    },
    /**
     * The value to initialize, but also two-way bind the selected date. The date is – like the `Date` object in
     * JavaScript – tied to UTC. The selected time zone does not have an influence of the selected time and date
     * value. You have to translate the time yourself when you want to factor in time zones.
     */
    // eslint-disable-next-line
    modelValue: {
      default: () => /* @__PURE__ */ new Date()
    },
    /**
     * The preselected IANA time zone ID for the time zone picker, only relevant in combination with `:show-timezone-select="true"`. Example: `Europe/Berlin`. The prop supports two-way binding through the .sync modifier.
     */
    timezoneId: {
      type: String,
      default: "UTC"
    },
    showTimezoneSelect: {
      type: Boolean,
      default: false
    },
    highlightTimezone: {
      type: Boolean,
      default: false
    },
    appendToBody: {
      type: Boolean,
      default: false
    },
    showWeekNumber: {
      type: Boolean,
      default: false
    },
    placeholder: {
      type: String,
      default: null
    },
    /**
     * @deprecated use the 'date-range' or 'datetime-range' type instead.
     */
    range: {
      type: Boolean,
      default: false
    }
  },
  emits: [
    /**
     * Removed in v9 - use `update:modelValue` (`v-model`) instead
     * @deprecated
     */
    "update:value",
    "update:modelValue",
    /** Same as update:modelValue for Vue 2 compatibility */
    "update:model-value",
    "update:timezone-id"
  ],
  setup() {
    const model = useModelMigration("value", "update:value");
    return {
      model,
      timezoneDialogHeaderId: `timezone-dialog-header-${GenRandomId()}`
    };
  },
  data() {
    return {
      showTimezonePopover: false,
      tzVal: this.timezoneId
    };
  },
  computed: {
    realType() {
      return this.type.split("-")[0];
    },
    /**
     * Datepicker language
     * https://github.com/mengxiong10/vue2-datepicker/blob/master/locale.md
     *
     * @return {object}
     */
    defaultLang() {
      return {
        formatLocale: {
          months: getMonthNames(),
          monthsShort: getMonthNamesShort(),
          weekdays: getDayNames(),
          weekdaysShort: getDayNamesShort(),
          weekdaysMin: getDayNamesMin(),
          // 0 = sunday, 1 = monday
          firstDayOfWeek: getFirstDay()
        },
        monthFormat: "MMMM"
      };
    },
    /**
     * Translated placeholder
     *
     * @return {string}
     */
    defaultPlaceholder() {
      if (this.realType === "time") {
        return t("Pick a time");
      }
      if (this.realType === "month") {
        return t("Pick a month");
      }
      if (this.realType === "year") {
        return t("Pick a year");
      }
      if (this.realType === "week") {
        return t("Pick a week");
      }
      if (this.realType === "date") {
        return t("Pick a date");
      }
      return t("Pick a date and a time");
    },
    /**
     * Is the range picker enabled
     */
    internalRange() {
      return this.range || this.type.endsWith("-range");
    },
    internalFormat() {
      if (this.format && typeof this.format === "string") {
        return this.format;
      }
      return formatMap[this.realType] || formatMap.date;
    },
    /**
     * The formatter used for the vue-datepicker to fix nextcloud-libraries/nextcloud-vue#5044
     */
    internalFormatter() {
      const getWeek2 = (date) => {
        const firstThursday = new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate()));
        firstThursday.setUTCDate(firstThursday.getUTCDate() + 4 - (firstThursday.getUTCDay() || 7));
        const yearStart = new Date(Date.UTC(firstThursday.getUTCFullYear(), 0, 1));
        return Math.ceil(((firstThursday - yearStart) / 864e5 + 1) / 7);
      };
      return {
        getWeek: getWeek2,
        // wrape the format if it is a function
        ...typeof this.format === "function" ? { stringify: this.format } : {},
        // allow to override it by users using the `formatter` prop
        ...this.formatter ?? {}
      };
    }
  },
  methods: {
    t,
    handleSelectYear(year) {
      const value3 = this.$refs.datepicker.currentValue;
      if (value3) {
        try {
          const date = new Date(new Date(value3).setFullYear(year));
          this.$refs.datepicker.selectDate(date);
        } catch (error) {
          console.error("Invalid value", value3, year);
        }
      }
    },
    handleSelectMonth(month) {
      const value3 = this.$refs.datepicker.currentValue;
      if (value3) {
        try {
          const date = new Date(new Date(value3).setMonth(month));
          this.$refs.datepicker.selectDate(date);
        } catch (error) {
          console.error("Invalid value", value3, month);
        }
      }
    },
    /**
     * Toggles the visibility of the time zone popover
     */
    toggleTimezonePopover() {
      if (!this.showTimezoneSelect) {
        return;
      }
      this.showTimezonePopover = !this.showTimezonePopover;
    }
  }
};
var _sfc_render$7 = function render32() {
  var _vm = this, _c = _vm._self._c;
  return _c("DatePicker", _vm._g(_vm._b({ ref: "datepicker", attrs: { "append-to-body": _vm.appendToBody, "clearable": _vm.clearable, "format": _vm.internalFormat, "formatter": _vm.internalFormatter, "lang": _vm.lang ? _vm.lang : _vm.defaultLang, "minute-step": _vm.minuteStep, "placeholder": _vm.placeholder ? _vm.placeholder : _vm.defaultPlaceholder, "popup-class": { "show-week-number": _vm.showWeekNumber }, "range": _vm.internalRange, "show-week-number": _vm.showWeekNumber, "type": _vm.realType, "value": _vm.model }, on: { "select-year": _vm.handleSelectYear, "select-month": _vm.handleSelectMonth, "input": function($event) {
    _vm.model = $event;
  } }, scopedSlots: _vm._u([{ key: "icon-calendar", fn: function() {
    return [_vm.showTimezoneSelect ? _c("NcPopover", { attrs: { "popup-role": "dialog", "shown": _vm.showTimezonePopover, "popover-base-class": "timezone-select__popper" }, on: { "update:shown": function($event) {
      _vm.showTimezonePopover = $event;
    } }, scopedSlots: _vm._u([{ key: "trigger", fn: function({ attrs }) {
      return [_c("button", _vm._b({ staticClass: "datetime-picker-inline-icon", class: { "datetime-picker-inline-icon--highlighted": _vm.highlightTimezone }, on: { "mousedown": function($event) {
        $event.stopPropagation();
        $event.preventDefault();
        return (() => {
        }).apply(null, arguments);
      } } }, "button", attrs, false), [_c("Web", { attrs: { "size": 20 } })], 1)];
    } }], null, false, 270852355) }, [_c("div", { attrs: { "role": "dialog", "aria-labelledby": _vm.timezoneDialogHeaderId } }, [_c("div", { staticClass: "timezone-popover-wrapper__label" }, [_c("strong", { attrs: { "id": _vm.timezoneDialogHeaderId } }, [_vm._v(" " + _vm._s(_vm.t("Please select a time zone:")) + " ")])]), _c("NcTimezonePicker", { staticClass: "timezone-popover-wrapper__timezone-select", on: { "input": function($event) {
      return _vm.$emit("update:timezone-id", arguments[0]);
    } }, model: { value: _vm.tzVal, callback: function($$v) {
      _vm.tzVal = $$v;
    }, expression: "tzVal" } })], 1)]) : _c("CalendarBlank", { attrs: { "size": 20 } })];
  }, proxy: true }, _vm._l(_vm.$scopedSlots, function(_2, slot) {
    return { key: slot, fn: function(scope) {
      return [_vm._t(slot, null, null, scope)];
    } };
  })], null, true) }, "DatePicker", _vm.$attrs, false), _vm.$listeners));
};
var _sfc_staticRenderFns$7 = [];
var __component__$7 = /* @__PURE__ */ normalizeComponent$1(
  _sfc_main$7,
  _sfc_render$7,
  _sfc_staticRenderFns$7,
  false,
  null,
  "9cec8c69"
);
const NcDateTimePicker = __component__$7.exports;
ScopeComponent(NcDateTimePicker);
const inputDateTypes = ["date", "datetime-local", "month", "time", "week"];
const _sfc_main$6 = {
  name: "NcDateTimePickerNative",
  inheritAttrs: false,
  model: {
    prop: "modelValue",
    event: "update:modelValue"
  },
  props: {
    /**
     * Removed in v9 - use `modelValue` (`v-model`) instead
     * @deprecated
     */
    value: {
      type: Date,
      default: void 0
    },
    /**
     * The date is – like the `Date` object in JavaScript – tied to UTC.
     * The selected time zone does not have an influence of the selected time and date value.
     * You have to translate the time yourself when you want to factor in time zones.
     * Pass null to clear the input field.
     */
    modelValue: {
      type: Date,
      default: null
    },
    /**
     * id attribute of the input field
     */
    id: {
      type: String,
      default: () => "date-time-picker-" + GenRandomId(),
      validator: (id) => id.trim() !== ""
    },
    /**
     * type attribute of the input field
     * default type: String
     * The type of the input element, it can be `date`, `datetime-local`, `month`, `time`, `week`
     */
    type: {
      type: String,
      default: "date",
      validate: (name) => inputDateTypes.includes(name)
    },
    /**
     * text inside the label element
     * default type: String
     */
    label: {
      type: String,
      default: "Please choose a date"
    },
    /**
     * min attribute of the input field
     * default type: null
     */
    min: {
      type: [Date, Boolean],
      default: null
    },
    /**
     * max attribute of the input field
     * default type: null
     */
    max: {
      type: [Date, Boolean],
      default: null
    },
    /**
     * Flag to hide the label
     * default type: String
     * The hidden input label for accessibility purposes.
     */
    hideLabel: {
      type: Boolean,
      default: false
    },
    /**
     * Class to add to the input field.
     * Necessary to use NcDateTimePickerNative in the NcActionInput component.
     */
    inputClass: {
      type: [Object, String],
      default: ""
    }
  },
  emits: [
    /**
     * Removed in v9 - use `update:modelValue` (`v-model`) instead
     * @deprecated
     */
    "input",
    /**
     * Emitted when the input value changes
     *
     * @return {Date} new chosen Date()
     */
    "update:modelValue",
    /** Same as update:modelValue for Vue 2 compatibility */
    "update:model-value"
  ],
  setup() {
    const model = useModelMigration("value", "input");
    return {
      model
    };
  },
  computed: {
    formattedValue() {
      return this.formatValue(this.model);
    },
    formattedMin() {
      if (this.min) {
        return this.formatValue(this.min);
      }
      return false;
    },
    formattedMax() {
      if (this.max) {
        return this.formatValue(this.max);
      }
      return false;
    },
    listeners() {
      return {
        ...this.$listeners,
        /**
         * Handle the input event
         *
         * @param {InputEvent} $event input event payload
         * @return {Date|string} new chosen Date() or an empty string
         */
        input: ($event) => {
          if (isNaN($event.target.valueAsNumber)) {
            this.model = null;
          } else if (this.type === "time") {
            const time = $event.target.value;
            if (this.model === "") {
              const { yyyy, MM: MM2, dd: dd2 } = this.getReadableDate(/* @__PURE__ */ new Date());
              this.model = /* @__PURE__ */ new Date(`${yyyy}-${MM2}-${dd2}T${time}`);
            } else {
              const { yyyy, MM: MM2, dd: dd2 } = this.getReadableDate(this.model);
              this.model = /* @__PURE__ */ new Date(`${yyyy}-${MM2}-${dd2}T${time}`);
            }
          } else if (this.type === "month") {
            const MM2 = (new Date($event.target.value).getMonth() + 1).toString().padStart(2, "0");
            if (this.model === "") {
              const { yyyy, dd: dd2, hh: hh2, mm: mm2 } = this.getReadableDate(/* @__PURE__ */ new Date());
              this.model = /* @__PURE__ */ new Date(`${yyyy}-${MM2}-${dd2}T${hh2}:${mm2}`);
            } else {
              const { yyyy, dd: dd2, hh: hh2, mm: mm2 } = this.getReadableDate(this.model);
              this.model = /* @__PURE__ */ new Date(`${yyyy}-${MM2}-${dd2}T${hh2}:${mm2}`);
            }
          } else {
            const timezoneOffsetSeconds = new Date($event.target.valueAsNumber).getTimezoneOffset() * 1e3 * 60;
            const inputDateWithTimezone = $event.target.valueAsNumber + timezoneOffsetSeconds;
            this.model = new Date(inputDateWithTimezone);
          }
        }
      };
    }
  },
  methods: {
    /**
     * Returns Object with string values of a Date
     *
     * @param {Date} value The selected value
     * @return {object|undefined}
     */
    getReadableDate(value3) {
      if (value3 instanceof Date) {
        const yyyy = value3.getFullYear().toString().padStart(4, "0");
        const MM2 = (value3.getMonth() + 1).toString().padStart(2, "0");
        const dd2 = value3.getDate().toString().padStart(2, "0");
        const hh2 = value3.getHours().toString().padStart(2, "0");
        const mm2 = value3.getMinutes().toString().padStart(2, "0");
        return { yyyy, MM: MM2, dd: dd2, hh: hh2, mm: mm2 };
      }
    },
    /**
     * Returns preformatted value for the input field
     *
     * @param {Date} value The selected value
     * @return {string|undefined}
     */
    formatValue(value3) {
      if (value3 instanceof Date) {
        const { yyyy, MM: MM2, dd: dd2, hh: hh2, mm: mm2 } = this.getReadableDate(value3);
        if (this.type === "datetime-local") {
          return `${yyyy}-${MM2}-${dd2}T${hh2}:${mm2}`;
        } else if (this.type === "date") {
          return `${yyyy}-${MM2}-${dd2}`;
        } else if (this.type === "month") {
          return `${yyyy}-${MM2}`;
        } else if (this.type === "time") {
          return `${hh2}:${mm2}`;
        } else if (this.type === "week") {
          const startDate = new Date(yyyy, 0, 1);
          const daysSinceBeginningOfYear = Math.floor((value3 - startDate) / (24 * 60 * 60 * 1e3));
          const weekNumber = Math.ceil(daysSinceBeginningOfYear / 7);
          return `${yyyy}-W${weekNumber}`;
        }
      } else {
        return "";
      }
    }
  }
};
var _sfc_render$6 = function render19() {
  var _vm = this, _c = _vm._self._c;
  return _c("div", { staticClass: "native-datetime-picker" }, [_c("label", { staticClass: "native-datetime-picker--label", class: { "hidden-visually": _vm.hideLabel }, attrs: { "for": _vm.id } }, [_vm._v(" " + _vm._s(_vm.label) + " ")]), _c("input", _vm._g(_vm._b({ staticClass: "native-datetime-picker--input", class: _vm.inputClass, attrs: { "id": _vm.id, "type": _vm.type, "min": _vm.formattedMin, "max": _vm.formattedMax }, domProps: { "value": _vm.formattedValue } }, "input", _vm.$attrs, false), _vm.listeners))]);
};
var _sfc_staticRenderFns$6 = [];
var __component__$6 = /* @__PURE__ */ normalizeComponent$1(
  _sfc_main$6,
  _sfc_render$6,
  _sfc_staticRenderFns$6,
  false,
  null,
  "a606e088"
);
const NcDateTimePickerNative = __component__$6.exports;
ScopeComponent(NcDateTimePickerNative);
var debounce$2 = { exports: {} };
function debounce(function_, wait = 100, options2 = {}) {
  if (typeof function_ !== "function") {
    throw new TypeError(`Expected the first parameter to be a function, got \`${typeof function_}\`.`);
  }
  if (wait < 0) {
    throw new RangeError("`wait` must not be negative.");
  }
  const { immediate } = typeof options2 === "boolean" ? { immediate: options2 } : options2;
  let storedContext;
  let storedArguments;
  let timeoutId;
  let timestamp;
  let result;
  function run2() {
    const callContext = storedContext;
    const callArguments = storedArguments;
    storedContext = void 0;
    storedArguments = void 0;
    result = function_.apply(callContext, callArguments);
    return result;
  }
  function later() {
    const last = Date.now() - timestamp;
    if (last < wait && last >= 0) {
      timeoutId = setTimeout(later, wait - last);
    } else {
      timeoutId = void 0;
      if (!immediate) {
        result = run2();
      }
    }
  }
  const debounced = function(...arguments_) {
    if (storedContext && this !== storedContext && Object.getPrototypeOf(this) === Object.getPrototypeOf(storedContext)) {
      throw new Error("Debounced method called with different contexts of the same prototype.");
    }
    storedContext = this;
    storedArguments = arguments_;
    timestamp = Date.now();
    const callNow = immediate && !timeoutId;
    if (!timeoutId) {
      timeoutId = setTimeout(later, wait);
    }
    if (callNow) {
      result = run2();
    }
    return result;
  };
  Object.defineProperty(debounced, "isPending", {
    get() {
      return timeoutId !== void 0;
    }
  });
  debounced.clear = () => {
    if (!timeoutId) {
      return;
    }
    clearTimeout(timeoutId);
    timeoutId = void 0;
  };
  debounced.flush = () => {
    if (!timeoutId) {
      return;
    }
    debounced.trigger();
  };
  debounced.trigger = () => {
    result = run2();
    debounced.clear();
  };
  return debounced;
}
debounce$2.exports.debounce = debounce;
debounce$2.exports = debounce;
var debounceExports = debounce$2.exports;
const debounce$1 = /* @__PURE__ */ getDefaultExportFromCjs(debounceExports);
const _sfc_main$5 = {
  name: "AlertCircleOutlineIcon",
  emits: ["click"],
  props: {
    title: {
      type: String
    },
    fillColor: {
      type: String,
      default: "currentColor"
    },
    size: {
      type: Number,
      default: 24
    }
  }
};
var _sfc_render$5 = function render20() {
  var _vm = this, _c = _vm._self._c;
  return _c("span", _vm._b({ staticClass: "material-design-icon alert-circle-outline-icon", attrs: { "aria-hidden": _vm.title ? null : "true", "aria-label": _vm.title, "role": "img" }, on: { "click": function($event) {
    return _vm.$emit("click", $event);
  } } }, "span", _vm.$attrs, false), [_c("svg", { staticClass: "material-design-icon__svg", attrs: { "fill": _vm.fillColor, "width": _vm.size, "height": _vm.size, "viewBox": "0 0 24 24" } }, [_c("path", { attrs: { "d": "M11,15H13V17H11V15M11,7H13V13H11V7M12,2C6.47,2 2,6.5 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2M12,20A8,8 0 0,1 4,12A8,8 0 0,1 12,4A8,8 0 0,1 20,12A8,8 0 0,1 12,20Z" } }, [_vm.title ? _c("title", [_vm._v(_vm._s(_vm.title))]) : _vm._e()])])]);
};
var _sfc_staticRenderFns$5 = [];
var __component__$5 = /* @__PURE__ */ normalizeComponent$1(
  _sfc_main$5,
  _sfc_render$5,
  _sfc_staticRenderFns$5,
  false,
  null,
  null
);
const AlertCircle = __component__$5.exports;
const _sfc_main$4 = {
  name: "NcInputField",
  components: {
    NcButton,
    AlertCircle,
    Check
  },
  inheritAttrs: false,
  model: {
    prop: "modelValue",
    event: "update:modelValue"
  },
  props: {
    /**
     * Removed in v9 - use `modelValue` (`v-model`) instead
     * @deprecated
     */
    value: {
      type: [String, Number],
      default: void 0
    },
    /**
     * The value of the input field
     * If type is 'number' and a number is passed as value than the type of `update:modelValue` will also be 'number'
     */
    modelValue: {
      type: [String, Number],
      default: void 0
    },
    /**
     * The type of the input element
     */
    type: {
      type: String,
      default: "text",
      validator: (value3) => [
        "text",
        "password",
        "email",
        "tel",
        "url",
        "search",
        "number"
      ].includes(value3)
    },
    /**
     * The input label, always provide one for accessibility purposes.
     * This will also be used as a placeholder unless the placeholder
     * prop is populated with a different string.
     *
     * Note: If the background color is not `--color-main-background` consider using an external label instead (see `labelOutside`).
     */
    label: {
      type: String,
      default: void 0
    },
    /**
     * Pass in true if you want to use an external label. This is useful
     * if you need a label that looks different from the one provided by
     * this component
     */
    labelOutside: {
      type: Boolean,
      default: false
    },
    /**
     * The placeholder of the input. This defaults as the string that's
     * passed into the label prop. In order to remove the placeholder,
     * pass in an empty string.
     */
    placeholder: {
      type: String,
      default: void 0
    },
    /**
     * Controls whether to display the trailing button.
     */
    showTrailingButton: {
      type: Boolean,
      default: false
    },
    /**
     * Label of the trailing button
     *
     * Required when showTrailingButton is set
     */
    trailingButtonLabel: {
      type: String,
      default: ""
    },
    /**
     * Toggles the success state of the component. Adds a checkmark icon.
     * this cannot be used together with canClear.
     */
    success: {
      type: Boolean,
      default: false
    },
    /**
     * Toggles the error state of the component. Adds an error icon.
     * this cannot be used together with canClear.
     */
    error: {
      type: Boolean,
      default: false
    },
    /**
     * Additional helper text message
     *
     * This will be displayed beneath the input field. In case the field is
     * also marked as having an error, the text will be displayed in red.
     */
    helperText: {
      type: String,
      default: ""
    },
    /**
     * Disable the input field
     */
    disabled: {
      type: Boolean,
      default: false
    },
    /**
     * Specifies whether the input should have a pill form.
     * By default, input has rounded corners.
     */
    pill: {
      type: Boolean,
      default: false
    },
    /**
     * Class to add to the input field.
     * Necessary to use NcInputField in the NcActionInput component.
     */
    inputClass: {
      type: [Object, String],
      default: ""
    }
  },
  emits: [
    /**
     * Removed in v9 - use `update:modelValue` (`v-model`) instead
     * @deprecated
     */
    "update:value",
    "update:modelValue",
    /** Same as update:modelValue for Vue 2 compatibility */
    "update:model-value",
    "trailing-button-click"
  ],
  setup() {
    const model = useModelMigration("value", "update:value", true);
    return {
      model
    };
  },
  computed: {
    computedId() {
      return this.$attrs.id && this.$attrs.id !== "" ? this.$attrs.id : this.inputName;
    },
    inputName() {
      return "input" + GenRandomId();
    },
    hasTrailingIcon() {
      return this.success;
    },
    hasPlaceholder() {
      return this.placeholder !== "" && this.placeholder !== void 0;
    },
    computedPlaceholder() {
      return this.hasPlaceholder ? this.placeholder : this.label;
    },
    isValidLabel() {
      const isValidLabel = this.label || this.labelOutside;
      if (!isValidLabel) {
        console.warn("You need to add a label to the NcInputField component. Either use the prop label or use an external one, as per the example in the documentation.");
      }
      return isValidLabel;
    },
    ariaDescribedby() {
      const ariaDescribedby = [];
      if (this.helperText.length > 0) {
        ariaDescribedby.push(`${this.inputName}-helper-text`);
      }
      if (this.$attrs["aria-describedby"]) {
        ariaDescribedby.push(this.$attrs["aria-describedby"]);
      }
      return ariaDescribedby.join(" ") || null;
    }
  },
  methods: {
    /**
     * Focus the input element
     *
     * @public
     */
    focus() {
      this.$refs.input.focus();
    },
    /**
     * Select all the text in the input
     *
     * @public
     */
    select() {
      this.$refs.input.select();
    },
    handleInput(event) {
      const newValue = this.type === "number" && typeof this.model === "number" ? parseFloat(event.target.value, 10) : event.target.value;
      this.model = newValue;
    },
    handleTrailingButtonClick(event) {
      this.$emit("trailing-button-click", event);
    }
  }
};
var _sfc_render$4 = function render21() {
  var _vm = this, _c = _vm._self._c;
  return _c("div", { staticClass: "input-field", class: {
    "input-field--disabled": _vm.disabled,
    "input-field--label-outside": _vm.labelOutside || !_vm.isValidLabel,
    "input-field--leading-icon": !!_vm.$scopedSlots.icon || !!_vm.$scopedSlots.default || !!_vm.$slots.default,
    "input-field--trailing-icon": _vm.showTrailingButton || _vm.hasTrailingIcon,
    "input-field--pill": _vm.pill
  } }, [_c("div", { staticClass: "input-field__main-wrapper" }, [_c("input", _vm._g(_vm._b({ ref: "input", staticClass: "input-field__input", class: [
    _vm.inputClass,
    {
      "input-field__input--success": _vm.success,
      "input-field__input--error": _vm.error
    }
  ], attrs: { "id": _vm.computedId, "type": _vm.type, "disabled": _vm.disabled, "placeholder": _vm.computedPlaceholder, "aria-describedby": _vm.ariaDescribedby, "aria-live": "polite" }, domProps: { "value": _vm.model?.toString() }, on: { "input": _vm.handleInput } }, "input", _vm.$attrs, false), _vm.$listeners)), !_vm.labelOutside && _vm.isValidLabel ? _c("label", { staticClass: "input-field__label", attrs: { "for": _vm.computedId } }, [_vm._v(" " + _vm._s(_vm.label) + " ")]) : _vm._e(), _c("div", { directives: [{ name: "show", rawName: "v-show", value: !!_vm.$scopedSlots.icon || !!_vm.$scopedSlots.default || !!_vm.$slots.default, expression: "!!$scopedSlots.icon || !!$scopedSlots.default || !!$slots.default" }], staticClass: "input-field__icon input-field__icon--leading" }, [_vm._t("icon", function() {
    return [_vm._t("default")];
  })], 2), _vm.showTrailingButton ? _c("NcButton", { staticClass: "input-field__trailing-button", attrs: { "aria-label": _vm.trailingButtonLabel, "disabled": _vm.disabled, "variant": "tertiary-no-background" }, on: { "click": _vm.handleTrailingButtonClick }, scopedSlots: _vm._u([{ key: "icon", fn: function() {
    return [_vm._t("trailing-button-icon")];
  }, proxy: true }], null, true) }) : _vm.success || _vm.error ? _c("div", { staticClass: "input-field__icon input-field__icon--trailing" }, [_vm.success ? _c("Check", { staticStyle: { "color": "var(--color-success-text)" }, attrs: { "size": 20 } }) : _vm.error ? _c("AlertCircle", { staticStyle: { "color": "var(--color-error-text)" }, attrs: { "size": 20 } }) : _vm._e()], 1) : _vm._e()], 1), _vm.helperText.length > 0 ? _c("p", { staticClass: "input-field__helper-text-message", class: {
    "input-field__helper-text-message--error": _vm.error,
    "input-field__helper-text-message--success": _vm.success
  }, attrs: { "id": `${_vm.inputName}-helper-text` } }, [_vm.success ? _c("Check", { staticClass: "input-field__helper-text-message__icon", attrs: { "size": 18 } }) : _vm.error ? _c("AlertCircle", { staticClass: "input-field__helper-text-message__icon", attrs: { "size": 18 } }) : _vm._e(), _vm._v(" " + _vm._s(_vm.helperText) + " ")], 1) : _vm._e()]);
};
var _sfc_staticRenderFns$4 = [];
var __component__$4 = /* @__PURE__ */ normalizeComponent$1(
  _sfc_main$4,
  _sfc_render$4,
  _sfc_staticRenderFns$4,
  false,
  null,
  "8f3abf17"
);
const NcInputField = __component__$4.exports;
register(t27);
loadState("core", "capabilities", {}).password_policy || null;
new Set(Object.keys(NcInputField.props));
({
  props: {
    // Reuse all the props from NcInputField for better typing and documentation
    ...NcInputField.props
  },
  methods: {
    checkPassword: debounce$1(async function(password) {
      try {
        const { data: data11 } = await cancelableClient.post(v("apps/password_policy/api/v1/validate"), { password });
        this.isValid = data11.ocs.data.passed;
        if (data11.ocs.data.passed) {
          this.internalHelpMessage = t("Password is secure");
          this.$emit("valid");
          return;
        }
        this.internalHelpMessage = data11.ocs.data.reason;
        this.$emit("invalid");
      } catch (e2) {
        logger.error("Password policy returned an error", e2);
      }
    }, 500)
  }
});
register(t16, t49);
new Set(Object.keys(NcInputField.props));
({
  props: {
    // Reuse all the props from NcInputField for better typing and documentation
    ...NcInputField.props
  }
});
register(t47);
({
  props: {
    /**
     * Trailing button label forwarded to the underlying NcTextField
     */
    trailingButtonLabel: {
      default: t("Submit")
    }
  }
});
register(t25);
getBuilder_1("nextcloud").persist().build();
const { name: productName } = loadState("theming", "data", { name: "Nextcloud" });
const activeApp = loadState("core", "active-app", appName);
loadState("core", "apps", {})[activeApp]?.name ?? appName;
window.OCP?.Accessibility?.disableKeyboardShortcuts?.();
register(t18);
window.OCP?.Accessibility?.disableKeyboardShortcuts?.();
register(t12);
register(t19);
register(t20, t49);
register(t14, t42);
const __default__$1 = {
  name: "NcAppNavigationSearch",
  model: {
    event: "update:modelValue",
    prop: "modelValue"
  }
};
/* @__PURE__ */ Object.assign(__default__$1, {
  props: {
    /**
     * Current search input
     */
    modelValue: {
      type: String,
      default: ""
    },
    /**
     * Text used to label the search input
     */
    label: {
      type: String,
      default: t("Search…")
    },
    /**
     * Placeholder of the search input
     * By default the value of `label` is used.
     */
    placeholder: {
      type: String,
      default: null
    }
  },
  emits: ["update:modelValue"],
  setup(__props, { emit }) {
    const slots = useSlots();
    const inputElement = ref$1();
    const { focused: inputHasFocus } = useFocusWithin(inputElement);
    const transitionTimeout = Number.parseInt(window.getComputedStyle(window.document.body).getPropertyValue("--animation-quick")) || 100;
    const actionsContainer = ref$1();
    const hasActions = () => !!slots.actions;
    const showActions = ref$1(true);
    const timeoutId = ref$1();
    const hideActions = ref$1(false);
    watch(inputHasFocus, () => {
      showActions.value = !inputHasFocus.value;
    });
    watch(showActions, (show) => {
      window.clearTimeout(timeoutId.value);
      if (show) {
        hideActions.value = false;
      } else {
        window.setTimeout(() => {
          hideActions.value = !show;
        }, transitionTimeout);
      }
    });
    function onCloseSearch() {
      emit("update:modelValue", "");
      if (hasActions()) {
        showActions.value = true;
        nextTick(() => actionsContainer.value.querySelector("button")?.focus());
      }
    }
    return { __sfc: true, emit, slots, inputElement, inputHasFocus, transitionTimeout, actionsContainer, hasActions, showActions, timeoutId, hideActions, onCloseSearch, t, IconClose: Close, NcInputField };
  }
});
register(t45);
({
  props: {
    name: {
      default: t("Settings")
    }
  }
});
register(t46);
({
  methods: {
    // Remove selected section once the user starts scrolling
    unfocusNavigationItem: debounce$1(function() {
      this.selectedSection = "";
      if (document.activeElement.className.includes("navigation-list__link")) {
        document.activeElement.blur();
      }
    }, 300)
  }
});
let urlAlphabet = "useandom-26T198340PX75pxJACKVERYMINDBUSHWOLF_GQZbfghjklqvwyzrict";
let nanoid = (size = 21) => {
  let id = "";
  let i = size | 0;
  while (i--) {
    id += urlAlphabet[Math.random() * 64 | 0];
  }
  return id;
};
function _typeof(obj) {
  "@babel/helpers - typeof";
  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    _typeof = function(obj2) {
      return typeof obj2;
    };
  } else {
    _typeof = function(obj2) {
      return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    };
  }
  return _typeof(obj);
}
var config = {
  selector: "vue-portal-target-".concat(nanoid())
};
var setSelector = function setSelector2(selector) {
  return config.selector = selector;
};
var isBrowser = typeof window !== "undefined" && (typeof document === "undefined" ? "undefined" : _typeof(document)) !== void 0;
var TargetContainer = Vue.extend({
  // as an abstract component, it doesn't appear in
  // the $parent chain of components.
  // which means the next parent of any component rendered inside of this oen
  // will be the parent from which is was sent
  // @ts-expect-error
  abstract: true,
  name: "PortalOutlet",
  props: ["nodes", "tag"],
  data: function data10(vm) {
    return {
      updatedNodes: vm.nodes
    };
  },
  render: function render23(h3) {
    var nodes = this.updatedNodes && this.updatedNodes();
    if (!nodes) return h3();
    return nodes.length === 1 && !nodes[0].text ? nodes : h3(this.tag || "DIV", nodes);
  },
  destroyed: function destroyed() {
    var el = this.$el;
    el && el.parentNode.removeChild(el);
  }
});
var Portal = Vue.extend({
  name: "VueSimplePortal",
  props: {
    disabled: {
      type: Boolean
    },
    prepend: {
      type: Boolean
    },
    selector: {
      type: String,
      default: function _default30() {
        return "#".concat(config.selector);
      }
    },
    tag: {
      type: String,
      default: "DIV"
    }
  },
  render: function render24(h3) {
    if (this.disabled) {
      var nodes = this.$scopedSlots && this.$scopedSlots.default();
      if (!nodes) return h3();
      return nodes.length < 2 && !nodes[0].text ? nodes : h3(this.tag, nodes);
    }
    return h3();
  },
  created: function created3() {
    if (!this.getTargetEl()) {
      this.insertTargetEl();
    }
  },
  updated: function updated() {
    var _this = this;
    this.$nextTick(function() {
      if (!_this.disabled && _this.slotFn !== _this.$scopedSlots.default) {
        _this.container.updatedNodes = _this.$scopedSlots.default;
      }
      _this.slotFn = _this.$scopedSlots.default;
    });
  },
  beforeDestroy: function beforeDestroy3() {
    this.unmount();
  },
  watch: {
    disabled: {
      immediate: true,
      handler: function handler8(disabled) {
        disabled ? this.unmount() : this.$nextTick(this.mount);
      }
    }
  },
  methods: {
    // This returns the element into which the content should be mounted.
    getTargetEl: function getTargetEl() {
      if (!isBrowser) return;
      return document.querySelector(this.selector);
    },
    insertTargetEl: function insertTargetEl() {
      if (!isBrowser) return;
      var parent = document.querySelector("body");
      var child = document.createElement(this.tag);
      child.id = this.selector.substring(1);
      parent.appendChild(child);
    },
    mount: function mount() {
      if (!isBrowser) return;
      var targetEl = this.getTargetEl();
      var el = document.createElement("DIV");
      if (this.prepend && targetEl.firstChild) {
        targetEl.insertBefore(el, targetEl.firstChild);
      } else {
        targetEl.appendChild(el);
      }
      this.container = new TargetContainer({
        el,
        parent: this,
        propsData: {
          tag: this.tag,
          nodes: this.$scopedSlots.default
        }
      });
    },
    unmount: function unmount() {
      if (this.container) {
        this.container.$destroy();
        delete this.container;
      }
    }
  }
});
function install2(_Vue) {
  var options2 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
  _Vue.component(options2.name || "portal", Portal);
  if (options2.defaultSelector) {
    setSelector(options2.defaultSelector);
  }
}
if (typeof window !== "undefined" && window.Vue && window.Vue === Vue) {
  Vue.use(install2);
}
register();
const encodedTlds = "aaa1rp3bb0ott3vie4c1le2ogado5udhabi7c0ademy5centure6ountant0s9o1tor4d0s1ult4e0g1ro2tna4f0l1rica5g0akhan5ency5i0g1rbus3force5tel5kdn3l0ibaba4pay4lfinanz6state5y2sace3tom5m0azon4ericanexpress7family11x2fam3ica3sterdam8nalytics7droid5quan4z2o0l2partments8p0le4q0uarelle8r0ab1mco4chi3my2pa2t0e3s0da2ia2sociates9t0hleta5torney7u0ction5di0ble3o3spost5thor3o0s4w0s2x0a2z0ure5ba0by2idu3namex4d1k2r0celona5laycard4s5efoot5gains6seball5ketball8uhaus5yern5b0c1t1va3cg1n2d1e0ats2uty4er2ntley5rlin4st0buy5t2f1g1h0arti5i0ble3d1ke2ng0o3o1z2j1lack0friday9ockbuster8g1omberg7ue3m0s1w2n0pparibas9o0ats3ehringer8fa2m1nd2o0k0ing5sch2tik2on4t1utique6x2r0adesco6idgestone9oadway5ker3ther5ussels7s1t1uild0ers6siness6y1zz3v1w1y1z0h3ca0b1fe2l0l1vinklein9m0era3p2non3petown5ital0one8r0avan4ds2e0er0s4s2sa1e1h1ino4t0ering5holic7ba1n1re3c1d1enter4o1rn3f0a1d2g1h0anel2nel4rity4se2t2eap3intai5ristmas6ome4urch5i0priani6rcle4sco3tadel4i0c2y3k1l0aims4eaning6ick2nic1que6othing5ud3ub0med6m1n1o0ach3des3ffee4llege4ogne5m0mbank4unity6pany2re3uter5sec4ndos3struction8ulting7tact3ractors9oking4l1p2rsica5untry4pon0s4rses6pa2r0edit0card4union9icket5own3s1uise0s6u0isinella9v1w1x1y0mru3ou3z2dad1nce3ta1e1ing3sun4y2clk3ds2e0al0er2s3gree4livery5l1oitte5ta3mocrat6ntal2ist5si0gn4v2hl2iamonds6et2gital5rect0ory7scount3ver5h2y2j1k1m1np2o0cs1tor4g1mains5t1wnload7rive4tv2ubai3nlop4pont4rban5vag2r2z2earth3t2c0o2deka3u0cation8e1g1mail3erck5nergy4gineer0ing9terprises10pson4quipment8r0icsson6ni3s0q1tate5t1u0rovision8s2vents5xchange6pert3osed4ress5traspace10fage2il1rwinds6th3mily4n0s2rm0ers5shion4t3edex3edback6rrari3ero6i0delity5o2lm2nal1nce1ial7re0stone6mdale6sh0ing5t0ness6j1k1lickr3ghts4r2orist4wers5y2m1o0o0d1tball6rd1ex2sale4um3undation8x2r0ee1senius7l1ogans4ntier7tr2ujitsu5n0d2rniture7tbol5yi3ga0l0lery3o1up4me0s3p1rden4y2b0iz3d0n2e0a1nt0ing5orge5f1g0ee3h1i0ft0s3ves2ing5l0ass3e1obal2o4m0ail3bh2o1x2n1odaddy5ld0point6f2o0dyear5g0le4p1t1v2p1q1r0ainger5phics5tis4een3ipe3ocery4up4s1t1u0cci3ge2ide2tars5ru3w1y2hair2mburg5ngout5us3bo2dfc0bank7ealth0care8lp1sinki6re1mes5iphop4samitsu7tachi5v2k0t2m1n1ockey4ldings5iday5medepot5goods5s0ense7nda3rse3spital5t0ing5t0els3mail5use3w2r1sbc3t1u0ghes5yatt3undai7ibm2cbc2e1u2d1e0ee3fm2kano4l1m0amat4db2mo0bilien9n0c1dustries8finiti5o2g1k1stitute6urance4e4t0ernational10uit4vestments10o1piranga7q1r0ish4s0maili5t0anbul7t0au2v3jaguar4va3cb2e0ep2tzt3welry6io2ll2m0p2nj2o0bs1urg4t1y2p0morgan6rs3uegos4niper7kaufen5ddi3e0rryhotels6logistics9properties14fh2g1h1i0a1ds2m1ndle4tchen5wi3m1n1oeln3matsu5sher5p0mg2n2r0d1ed3uokgroup8w1y0oto4z2la0caixa5mborghini8er3ncaster6d0rover6xess5salle5t0ino3robe5w0yer5b1c1ds2ease3clerc5frak4gal2o2xus4gbt3i0dl2fe0insurance9style7ghting6ke2lly3mited4o2ncoln4k2psy3ve1ing5k1lc1p2oan0s3cker3us3l1ndon4tte1o3ve3pl0financial11r1s1t0d0a3u0ndbeck6xe1ury5v1y2ma0drid4if1son4keup4n0agement7go3p1rket0ing3s4riott5shalls7ttel5ba2c0kinsey7d1e0d0ia3et2lbourne7me1orial6n0u2rckmsd7g1h1iami3crosoft7l1ni1t2t0subishi9k1l0b1s2m0a2n1o0bi0le4da2e1i1m1nash3ey2ster5rmon3tgage6scow4to0rcycles9v0ie4p1q1r1s0d2t0n1r2u0seum3ic4v1w1x1y1z2na0b1goya4me2vy3ba2c1e0c1t0bank4flix4work5ustar5w0s2xt0direct7us4f0l2g0o2hk2i0co2ke1on3nja3ssan1y5l1o0kia3rton4w0ruz3tv4p1r0a1w2tt2u1yc2z2obi1server7ffice5kinawa6layan0group9lo3m0ega4ne1g1l0ine5oo2pen3racle3nge4g0anic5igins6saka4tsuka4t2vh3pa0ge2nasonic7ris2s1tners4s1y3y2ccw3e0t2f0izer5g1h0armacy6d1ilips5one2to0graphy6s4ysio5ics1tet2ures6d1n0g1k2oneer5zza4k1l0ace2y0station9umbing5s3m1n0c2ohl2ker3litie5rn2st3r0america6xi3ess3ime3o0d0uctions8f1gressive8mo2perties3y5tection8u0dential9s1t1ub2w0c2y2qa1pon3uebec3st5racing4dio4e0ad1lestate6tor2y4cipes5d0stone5umbrella9hab3ise0n3t2liance6n0t0als5pair3ort3ublican8st0aurant8view0s5xroth6ich0ardli6oh3l1o1p2o0cks3deo3gers4om3s0vp3u0gby3hr2n2w0e2yukyu6sa0arland6fe0ty4kura4le1on3msclub4ung5ndvik0coromant12ofi4p1rl2s1ve2xo3b0i1s2c0b1haeffler7midt4olarships8ol3ule3warz5ience5ot3d1e0arch3t2cure1ity6ek2lect4ner3rvices6ven3w1x0y3fr2g1h0angrila6rp3ell3ia1ksha5oes2p0ping5uji3w3i0lk2na1gles5te3j1k0i0n2y0pe4l0ing4m0art3ile4n0cf3o0ccer3ial4ftbank4ware6hu2lar2utions7ng1y2y2pa0ce3ort2t3r0l2s1t0ada2ples4r1tebank4farm7c0group6ockholm6rage3e3ream4udio2y3yle4u0cks3pplies3y2ort5rf1gery5zuki5v1watch4iss4x1y0dney4stems6z2tab1ipei4lk2obao4rget4tamotors6r2too4x0i3c0i2d0k2eam2ch0nology8l1masek5nnis4va3f1g1h0d1eater2re6iaa2ckets5enda4ps2res2ol4j0maxx4x2k0maxx5l1m0all4n1o0day3kyo3ols3p1ray3shiba5tal3urs3wn2yota3s3r0ade1ing4ining5vel0ers0insurance16ust3v2t1ube2i1nes3shu4v0s2w1z2ua1bank3s2g1k1nicom3versity8o2ol2ps2s1y1z2va0cations7na1guard7c1e0gas3ntures6risign5mögensberater2ung14sicherung10t2g1i0ajes4deo3g1king4llas4n1p1rgin4sa1ion4va1o3laanderen9n1odka3lvo3te1ing3o2yage5u2wales2mart4ter4ng0gou5tch0es6eather0channel12bcam3er2site5d0ding5ibo2r3f1hoswho6ien2ki2lliamhill9n0dows4e1ners6me2olterskluwer11odside6rk0s2ld3w2s1tc1f3xbox3erox4ihuan4n2xx2yz3yachts4hoo3maxun5ndex5e1odobashi7ga2kohama6u0tube6t1un3za0ppos4ra3ero3ip2m1one3uerich6w2";
const encodedUtlds = "ελ1υ2бг1ел3дети4ею2католик6ом3мкд2он1сква6онлайн5рг3рус2ф2сайт3рб3укр3қаз3հայ3ישראל5קום3ابوظبي5رامكو5لاردن4بحرين5جزائر5سعودية6عليان5مغرب5مارات5یران5بارت2زار4يتك3ھارت5تونس4سودان3رية5شبكة4عراق2ب2مان4فلسطين6قطر3كاثوليك6وم3مصر2ليسيا5وريتانيا7قع4همراه5پاکستان7ڀارت4कॉम3नेट3भारत0म्3ोत5संगठन5বাংলা5ভারত2ৰত4ਭਾਰਤ4ભારત4ଭାରତ4இந்தியா6லங்கை6சிங்கப்பூர்11భారత్5ಭಾರತ4ഭാരതം5ලංකා4คอม3ไทย3ລາວ3გე2みんな3アマゾン4クラウド4グーグル4コム2ストア3セール3ファッション6ポイント4世界2中信1国1國1文网3亚马逊3企业2佛山2信息2健康2八卦2公司1益2台湾1灣2商城1店1标2嘉里0大酒店5在线2大拿2天主教3娱乐2家電2广东2微博2慈善2我爱你3手机2招聘2政务1府2新加坡2闻2时尚2書籍2机构2淡马锡3游戏2澳門2点看2移动2组织机构4网址1店1站1络2联通2谷歌2购物2通販2集团2電訊盈科4飞利浦3食品2餐厅2香格里拉3港2닷넷1컴2삼성2한국2";
const assign = (target, properties) => {
  for (const key in properties) {
    target[key] = properties[key];
  }
  return target;
};
const numeric = "numeric";
const ascii = "ascii";
const alpha = "alpha";
const asciinumeric = "asciinumeric";
const alphanumeric = "alphanumeric";
const domain$1 = "domain";
const emoji = "emoji";
const scheme = "scheme";
const slashscheme = "slashscheme";
const whitespace = "whitespace";
function registerGroup(name, groups) {
  if (!(name in groups)) {
    groups[name] = [];
  }
  return groups[name];
}
function addToGroups(t4, flags, groups) {
  if (flags[numeric]) {
    flags[asciinumeric] = true;
    flags[alphanumeric] = true;
  }
  if (flags[ascii]) {
    flags[asciinumeric] = true;
    flags[alpha] = true;
  }
  if (flags[asciinumeric]) {
    flags[alphanumeric] = true;
  }
  if (flags[alpha]) {
    flags[alphanumeric] = true;
  }
  if (flags[alphanumeric]) {
    flags[domain$1] = true;
  }
  if (flags[emoji]) {
    flags[domain$1] = true;
  }
  for (const k in flags) {
    const group = registerGroup(k, groups);
    if (group.indexOf(t4) < 0) {
      group.push(t4);
    }
  }
}
function flagsForToken(t4, groups) {
  const result = {};
  for (const c in groups) {
    if (groups[c].indexOf(t4) >= 0) {
      result[c] = true;
    }
  }
  return result;
}
function State(token = null) {
  this.j = {};
  this.jr = [];
  this.jd = null;
  this.t = token;
}
State.groups = {};
State.prototype = {
  accepts() {
    return !!this.t;
  },
  /**
   * Follow an existing transition from the given input to the next state.
   * Does not mutate.
   * @param {string} input character or token type to transition on
   * @returns {?State<T>} the next state, if any
   */
  go(input) {
    const state = this;
    const nextState = state.j[input];
    if (nextState) {
      return nextState;
    }
    for (let i = 0; i < state.jr.length; i++) {
      const regex = state.jr[i][0];
      const nextState2 = state.jr[i][1];
      if (nextState2 && regex.test(input)) {
        return nextState2;
      }
    }
    return state.jd;
  },
  /**
   * Whether the state has a transition for the given input. Set the second
   * argument to true to only look for an exact match (and not a default or
   * regular-expression-based transition)
   * @param {string} input
   * @param {boolean} exactOnly
   */
  has(input, exactOnly = false) {
    return exactOnly ? input in this.j : !!this.go(input);
  },
  /**
   * Short for "transition all"; create a transition from the array of items
   * in the given list to the same final resulting state.
   * @param {string | string[]} inputs Group of inputs to transition on
   * @param {Transition<T> | State<T>} [next] Transition options
   * @param {Flags} [flags] Collections flags to add token to
   * @param {Collections<T>} [groups] Master list of token groups
   */
  ta(inputs, next, flags, groups) {
    for (let i = 0; i < inputs.length; i++) {
      this.tt(inputs[i], next, flags, groups);
    }
  },
  /**
   * Short for "take regexp transition"; defines a transition for this state
   * when it encounters a token which matches the given regular expression
   * @param {RegExp} regexp Regular expression transition (populate first)
   * @param {T | State<T>} [next] Transition options
   * @param {Flags} [flags] Collections flags to add token to
   * @param {Collections<T>} [groups] Master list of token groups
   * @returns {State<T>} taken after the given input
   */
  tr(regexp, next, flags, groups) {
    groups = groups || State.groups;
    let nextState;
    if (next && next.j) {
      nextState = next;
    } else {
      nextState = new State(next);
      if (flags && groups) {
        addToGroups(next, flags, groups);
      }
    }
    this.jr.push([regexp, nextState]);
    return nextState;
  },
  /**
   * Short for "take transitions", will take as many sequential transitions as
   * the length of the given input and returns the
   * resulting final state.
   * @param {string | string[]} input
   * @param {T | State<T>} [next] Transition options
   * @param {Flags} [flags] Collections flags to add token to
   * @param {Collections<T>} [groups] Master list of token groups
   * @returns {State<T>} taken after the given input
   */
  ts(input, next, flags, groups) {
    let state = this;
    const len = input.length;
    if (!len) {
      return state;
    }
    for (let i = 0; i < len - 1; i++) {
      state = state.tt(input[i]);
    }
    return state.tt(input[len - 1], next, flags, groups);
  },
  /**
   * Short for "take transition", this is a method for building/working with
   * state machines.
   *
   * If a state already exists for the given input, returns it.
   *
   * If a token is specified, that state will emit that token when reached by
   * the linkify engine.
   *
   * If no state exists, it will be initialized with some default transitions
   * that resemble existing default transitions.
   *
   * If a state is given for the second argument, that state will be
   * transitioned to on the given input regardless of what that input
   * previously did.
   *
   * Specify a token group flags to define groups that this token belongs to.
   * The token will be added to corresponding entires in the given groups
   * object.
   *
   * @param {string} input character, token type to transition on
   * @param {T | State<T>} [next] Transition options
   * @param {Flags} [flags] Collections flags to add token to
   * @param {Collections<T>} [groups] Master list of groups
   * @returns {State<T>} taken after the given input
   */
  tt(input, next, flags, groups) {
    groups = groups || State.groups;
    const state = this;
    if (next && next.j) {
      state.j[input] = next;
      return next;
    }
    const t4 = next;
    let nextState, templateState = state.go(input);
    if (templateState) {
      nextState = new State();
      assign(nextState.j, templateState.j);
      nextState.jr.push.apply(nextState.jr, templateState.jr);
      nextState.jd = templateState.jd;
      nextState.t = templateState.t;
    } else {
      nextState = new State();
    }
    if (t4) {
      if (groups) {
        if (nextState.t && typeof nextState.t === "string") {
          const allFlags = assign(flagsForToken(nextState.t, groups), flags);
          addToGroups(t4, allFlags, groups);
        } else if (flags) {
          addToGroups(t4, flags, groups);
        }
      }
      nextState.t = t4;
    }
    state.j[input] = nextState;
    return nextState;
  }
};
const ta = (state, input, next, flags, groups) => state.ta(input, next, flags, groups);
const tr = (state, regexp, next, flags, groups) => state.tr(regexp, next, flags, groups);
const ts = (state, input, next, flags, groups) => state.ts(input, next, flags, groups);
const tt = (state, input, next, flags, groups) => state.tt(input, next, flags, groups);
const WORD = "WORD";
const UWORD = "UWORD";
const ASCIINUMERICAL = "ASCIINUMERICAL";
const ALPHANUMERICAL = "ALPHANUMERICAL";
const LOCALHOST = "LOCALHOST";
const TLD = "TLD";
const UTLD = "UTLD";
const SCHEME = "SCHEME";
const SLASH_SCHEME = "SLASH_SCHEME";
const NUM = "NUM";
const WS = "WS";
const NL = "NL";
const OPENBRACE = "OPENBRACE";
const CLOSEBRACE = "CLOSEBRACE";
const OPENBRACKET = "OPENBRACKET";
const CLOSEBRACKET = "CLOSEBRACKET";
const OPENPAREN = "OPENPAREN";
const CLOSEPAREN = "CLOSEPAREN";
const OPENANGLEBRACKET = "OPENANGLEBRACKET";
const CLOSEANGLEBRACKET = "CLOSEANGLEBRACKET";
const FULLWIDTHLEFTPAREN = "FULLWIDTHLEFTPAREN";
const FULLWIDTHRIGHTPAREN = "FULLWIDTHRIGHTPAREN";
const LEFTCORNERBRACKET = "LEFTCORNERBRACKET";
const RIGHTCORNERBRACKET = "RIGHTCORNERBRACKET";
const LEFTWHITECORNERBRACKET = "LEFTWHITECORNERBRACKET";
const RIGHTWHITECORNERBRACKET = "RIGHTWHITECORNERBRACKET";
const FULLWIDTHLESSTHAN = "FULLWIDTHLESSTHAN";
const FULLWIDTHGREATERTHAN = "FULLWIDTHGREATERTHAN";
const AMPERSAND = "AMPERSAND";
const APOSTROPHE = "APOSTROPHE";
const ASTERISK = "ASTERISK";
const AT = "AT";
const BACKSLASH = "BACKSLASH";
const BACKTICK = "BACKTICK";
const CARET = "CARET";
const COLON = "COLON";
const COMMA = "COMMA";
const DOLLAR = "DOLLAR";
const DOT = "DOT";
const EQUALS = "EQUALS";
const EXCLAMATION = "EXCLAMATION";
const HYPHEN = "HYPHEN";
const PERCENT = "PERCENT";
const PIPE = "PIPE";
const PLUS = "PLUS";
const POUND = "POUND";
const QUERY = "QUERY";
const QUOTE = "QUOTE";
const FULLWIDTHMIDDLEDOT = "FULLWIDTHMIDDLEDOT";
const SEMI = "SEMI";
const SLASH = "SLASH";
const TILDE = "TILDE";
const UNDERSCORE = "UNDERSCORE";
const EMOJI$1 = "EMOJI";
const SYM = "SYM";
var tk = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  WORD,
  UWORD,
  ASCIINUMERICAL,
  ALPHANUMERICAL,
  LOCALHOST,
  TLD,
  UTLD,
  SCHEME,
  SLASH_SCHEME,
  NUM,
  WS,
  NL,
  OPENBRACE,
  CLOSEBRACE,
  OPENBRACKET,
  CLOSEBRACKET,
  OPENPAREN,
  CLOSEPAREN,
  OPENANGLEBRACKET,
  CLOSEANGLEBRACKET,
  FULLWIDTHLEFTPAREN,
  FULLWIDTHRIGHTPAREN,
  LEFTCORNERBRACKET,
  RIGHTCORNERBRACKET,
  LEFTWHITECORNERBRACKET,
  RIGHTWHITECORNERBRACKET,
  FULLWIDTHLESSTHAN,
  FULLWIDTHGREATERTHAN,
  AMPERSAND,
  APOSTROPHE,
  ASTERISK,
  AT,
  BACKSLASH,
  BACKTICK,
  CARET,
  COLON,
  COMMA,
  DOLLAR,
  DOT,
  EQUALS,
  EXCLAMATION,
  HYPHEN,
  PERCENT,
  PIPE,
  PLUS,
  POUND,
  QUERY,
  QUOTE,
  FULLWIDTHMIDDLEDOT,
  SEMI,
  SLASH,
  TILDE,
  UNDERSCORE,
  EMOJI: EMOJI$1,
  SYM
});
const ASCII_LETTER = /[a-z]/;
const LETTER = new RegExp("\\p{L}", "u");
const EMOJI = new RegExp("\\p{Emoji}", "u");
const DIGIT = /\d/;
const SPACE = /\s/;
const CR = "\r";
const LF = "\n";
const EMOJI_VARIATION = "️";
const EMOJI_JOINER = "‍";
const OBJECT_REPLACEMENT = "￼";
let tlds = null, utlds = null;
function init$2(customSchemes = []) {
  const groups = {};
  State.groups = groups;
  const Start = new State();
  if (tlds == null) {
    tlds = decodeTlds(encodedTlds);
  }
  if (utlds == null) {
    utlds = decodeTlds(encodedUtlds);
  }
  tt(Start, "'", APOSTROPHE);
  tt(Start, "{", OPENBRACE);
  tt(Start, "}", CLOSEBRACE);
  tt(Start, "[", OPENBRACKET);
  tt(Start, "]", CLOSEBRACKET);
  tt(Start, "(", OPENPAREN);
  tt(Start, ")", CLOSEPAREN);
  tt(Start, "<", OPENANGLEBRACKET);
  tt(Start, ">", CLOSEANGLEBRACKET);
  tt(Start, "（", FULLWIDTHLEFTPAREN);
  tt(Start, "）", FULLWIDTHRIGHTPAREN);
  tt(Start, "「", LEFTCORNERBRACKET);
  tt(Start, "」", RIGHTCORNERBRACKET);
  tt(Start, "『", LEFTWHITECORNERBRACKET);
  tt(Start, "』", RIGHTWHITECORNERBRACKET);
  tt(Start, "＜", FULLWIDTHLESSTHAN);
  tt(Start, "＞", FULLWIDTHGREATERTHAN);
  tt(Start, "&", AMPERSAND);
  tt(Start, "*", ASTERISK);
  tt(Start, "@", AT);
  tt(Start, "`", BACKTICK);
  tt(Start, "^", CARET);
  tt(Start, ":", COLON);
  tt(Start, ",", COMMA);
  tt(Start, "$", DOLLAR);
  tt(Start, ".", DOT);
  tt(Start, "=", EQUALS);
  tt(Start, "!", EXCLAMATION);
  tt(Start, "-", HYPHEN);
  tt(Start, "%", PERCENT);
  tt(Start, "|", PIPE);
  tt(Start, "+", PLUS);
  tt(Start, "#", POUND);
  tt(Start, "?", QUERY);
  tt(Start, '"', QUOTE);
  tt(Start, "/", SLASH);
  tt(Start, ";", SEMI);
  tt(Start, "~", TILDE);
  tt(Start, "_", UNDERSCORE);
  tt(Start, "\\", BACKSLASH);
  tt(Start, "・", FULLWIDTHMIDDLEDOT);
  const Num = tr(Start, DIGIT, NUM, {
    [numeric]: true
  });
  tr(Num, DIGIT, Num);
  const Asciinumeric = tr(Num, ASCII_LETTER, ASCIINUMERICAL, {
    [asciinumeric]: true
  });
  const Alphanumeric = tr(Num, LETTER, ALPHANUMERICAL, {
    [alphanumeric]: true
  });
  const Word = tr(Start, ASCII_LETTER, WORD, {
    [ascii]: true
  });
  tr(Word, DIGIT, Asciinumeric);
  tr(Word, ASCII_LETTER, Word);
  tr(Asciinumeric, DIGIT, Asciinumeric);
  tr(Asciinumeric, ASCII_LETTER, Asciinumeric);
  const UWord = tr(Start, LETTER, UWORD, {
    [alpha]: true
  });
  tr(UWord, ASCII_LETTER);
  tr(UWord, DIGIT, Alphanumeric);
  tr(UWord, LETTER, UWord);
  tr(Alphanumeric, DIGIT, Alphanumeric);
  tr(Alphanumeric, ASCII_LETTER);
  tr(Alphanumeric, LETTER, Alphanumeric);
  const Nl2 = tt(Start, LF, NL, {
    [whitespace]: true
  });
  const Cr = tt(Start, CR, WS, {
    [whitespace]: true
  });
  const Ws = tr(Start, SPACE, WS, {
    [whitespace]: true
  });
  tt(Start, OBJECT_REPLACEMENT, Ws);
  tt(Cr, LF, Nl2);
  tt(Cr, OBJECT_REPLACEMENT, Ws);
  tr(Cr, SPACE, Ws);
  tt(Ws, CR);
  tt(Ws, LF);
  tr(Ws, SPACE, Ws);
  tt(Ws, OBJECT_REPLACEMENT, Ws);
  const Emoji = tr(Start, EMOJI, EMOJI$1, {
    [emoji]: true
  });
  tt(Emoji, "#");
  tr(Emoji, EMOJI, Emoji);
  tt(Emoji, EMOJI_VARIATION, Emoji);
  const EmojiJoiner = tt(Emoji, EMOJI_JOINER);
  tt(EmojiJoiner, "#");
  tr(EmojiJoiner, EMOJI, Emoji);
  const wordjr = [[ASCII_LETTER, Word], [DIGIT, Asciinumeric]];
  const uwordjr = [[ASCII_LETTER, null], [LETTER, UWord], [DIGIT, Alphanumeric]];
  for (let i = 0; i < tlds.length; i++) {
    fastts(Start, tlds[i], TLD, WORD, wordjr);
  }
  for (let i = 0; i < utlds.length; i++) {
    fastts(Start, utlds[i], UTLD, UWORD, uwordjr);
  }
  addToGroups(TLD, {
    tld: true,
    ascii: true
  }, groups);
  addToGroups(UTLD, {
    utld: true,
    alpha: true
  }, groups);
  fastts(Start, "file", SCHEME, WORD, wordjr);
  fastts(Start, "mailto", SCHEME, WORD, wordjr);
  fastts(Start, "http", SLASH_SCHEME, WORD, wordjr);
  fastts(Start, "https", SLASH_SCHEME, WORD, wordjr);
  fastts(Start, "ftp", SLASH_SCHEME, WORD, wordjr);
  fastts(Start, "ftps", SLASH_SCHEME, WORD, wordjr);
  addToGroups(SCHEME, {
    scheme: true,
    ascii: true
  }, groups);
  addToGroups(SLASH_SCHEME, {
    slashscheme: true,
    ascii: true
  }, groups);
  customSchemes = customSchemes.sort((a2, b) => a2[0] > b[0] ? 1 : -1);
  for (let i = 0; i < customSchemes.length; i++) {
    const sch = customSchemes[i][0];
    const optionalSlashSlash = customSchemes[i][1];
    const flags = optionalSlashSlash ? {
      [scheme]: true
    } : {
      [slashscheme]: true
    };
    if (sch.indexOf("-") >= 0) {
      flags[domain$1] = true;
    } else if (!ASCII_LETTER.test(sch)) {
      flags[numeric] = true;
    } else if (DIGIT.test(sch)) {
      flags[asciinumeric] = true;
    } else {
      flags[ascii] = true;
    }
    ts(Start, sch, sch, flags);
  }
  ts(Start, "localhost", LOCALHOST, {
    ascii: true
  });
  Start.jd = new State(SYM);
  return {
    start: Start,
    tokens: assign({
      groups
    }, tk)
  };
}
function run$1(start, str) {
  const iterable = stringToArray(str.replace(/[A-Z]/g, (c) => c.toLowerCase()));
  const charCount = iterable.length;
  const tokens = [];
  let cursor = 0;
  let charCursor = 0;
  while (charCursor < charCount) {
    let state = start;
    let nextState = null;
    let tokenLength = 0;
    let latestAccepting = null;
    let sinceAccepts = -1;
    let charsSinceAccepts = -1;
    while (charCursor < charCount && (nextState = state.go(iterable[charCursor]))) {
      state = nextState;
      if (state.accepts()) {
        sinceAccepts = 0;
        charsSinceAccepts = 0;
        latestAccepting = state;
      } else if (sinceAccepts >= 0) {
        sinceAccepts += iterable[charCursor].length;
        charsSinceAccepts++;
      }
      tokenLength += iterable[charCursor].length;
      cursor += iterable[charCursor].length;
      charCursor++;
    }
    cursor -= sinceAccepts;
    charCursor -= charsSinceAccepts;
    tokenLength -= sinceAccepts;
    tokens.push({
      t: latestAccepting.t,
      // token type/name
      v: str.slice(cursor - tokenLength, cursor),
      // string value
      s: cursor - tokenLength,
      // start index
      e: cursor
      // end index (excluding)
    });
  }
  return tokens;
}
function stringToArray(str) {
  const result = [];
  const len = str.length;
  let index = 0;
  while (index < len) {
    let first = str.charCodeAt(index);
    let second;
    let char = first < 55296 || first > 56319 || index + 1 === len || (second = str.charCodeAt(index + 1)) < 56320 || second > 57343 ? str[index] : str.slice(index, index + 2);
    result.push(char);
    index += char.length;
  }
  return result;
}
function fastts(state, input, t4, defaultt, jr) {
  let next;
  const len = input.length;
  for (let i = 0; i < len - 1; i++) {
    const char = input[i];
    if (state.j[char]) {
      next = state.j[char];
    } else {
      next = new State(defaultt);
      next.jr = jr.slice();
      state.j[char] = next;
    }
    state = next;
  }
  next = new State(t4);
  next.jr = jr.slice();
  state.j[input[len - 1]] = next;
  return next;
}
function decodeTlds(encoded) {
  const words = [];
  const stack = [];
  let i = 0;
  let digits = "0123456789";
  while (i < encoded.length) {
    let popDigitCount = 0;
    while (digits.indexOf(encoded[i + popDigitCount]) >= 0) {
      popDigitCount++;
    }
    if (popDigitCount > 0) {
      words.push(stack.join(""));
      for (let popCount = parseInt(encoded.substring(i, i + popDigitCount), 10); popCount > 0; popCount--) {
        stack.pop();
      }
      i += popDigitCount;
    } else {
      stack.push(encoded[i]);
      i++;
    }
  }
  return words;
}
const defaults = {
  defaultProtocol: "http",
  events: null,
  format: noop,
  formatHref: noop,
  nl2br: false,
  tagName: "a",
  target: null,
  rel: null,
  validate: true,
  truncate: Infinity,
  className: null,
  attributes: null,
  ignoreTags: [],
  render: null
};
function Options(opts, defaultRender2 = null) {
  let o = assign({}, defaults);
  if (opts) {
    o = assign(o, opts instanceof Options ? opts.o : opts);
  }
  const ignoredTags = o.ignoreTags;
  const uppercaseIgnoredTags = [];
  for (let i = 0; i < ignoredTags.length; i++) {
    uppercaseIgnoredTags.push(ignoredTags[i].toUpperCase());
  }
  this.o = o;
  if (defaultRender2) {
    this.defaultRender = defaultRender2;
  }
  this.ignoreTags = uppercaseIgnoredTags;
}
Options.prototype = {
  o: defaults,
  /**
   * @type string[]
   */
  ignoreTags: [],
  /**
   * @param {IntermediateRepresentation} ir
   * @returns {any}
   */
  defaultRender(ir) {
    return ir;
  },
  /**
   * Returns true or false based on whether a token should be displayed as a
   * link based on the user options.
   * @param {MultiToken} token
   * @returns {boolean}
   */
  check(token) {
    return this.get("validate", token.toString(), token);
  },
  // Private methods
  /**
   * Resolve an option's value based on the value of the option and the given
   * params. If operator and token are specified and the target option is
   * callable, automatically calls the function with the given argument.
   * @template {keyof Opts} K
   * @param {K} key Name of option to use
   * @param {string} [operator] will be passed to the target option if it's a
   * function. If not specified, RAW function value gets returned
   * @param {MultiToken} [token] The token from linkify.tokenize
   * @returns {Opts[K] | any}
   */
  get(key, operator, token) {
    const isCallable = operator != null;
    let option = this.o[key];
    if (!option) {
      return option;
    }
    if (typeof option === "object") {
      option = token.t in option ? option[token.t] : defaults[key];
      if (typeof option === "function" && isCallable) {
        option = option(operator, token);
      }
    } else if (typeof option === "function" && isCallable) {
      option = option(operator, token.t, token);
    }
    return option;
  },
  /**
   * @template {keyof Opts} L
   * @param {L} key Name of options object to use
   * @param {string} [operator]
   * @param {MultiToken} [token]
   * @returns {Opts[L] | any}
   */
  getObj(key, operator, token) {
    let obj = this.o[key];
    if (typeof obj === "function" && operator != null) {
      obj = obj(operator, token.t, token);
    }
    return obj;
  },
  /**
   * Convert the given token to a rendered element that may be added to the
   * calling-interface's DOM
   * @param {MultiToken} token Token to render to an HTML element
   * @returns {any} Render result; e.g., HTML string, DOM element, React
   *   Component, etc.
   */
  render(token) {
    const ir = token.render(this);
    const renderFn = this.get("render", null, token) || this.defaultRender;
    return renderFn(ir, token.t, token);
  }
};
function noop(val) {
  return val;
}
function MultiToken(value3, tokens) {
  this.t = "token";
  this.v = value3;
  this.tk = tokens;
}
MultiToken.prototype = {
  isLink: false,
  /**
   * Return the string this token represents.
   * @return {string}
   */
  toString() {
    return this.v;
  },
  /**
   * What should the value for this token be in the `href` HTML attribute?
   * Returns the `.toString` value by default.
   * @param {string} [scheme]
   * @return {string}
   */
  toHref(scheme2) {
    return this.toString();
  },
  /**
   * @param {Options} options Formatting options
   * @returns {string}
   */
  toFormattedString(options2) {
    const val = this.toString();
    const truncate = options2.get("truncate", val, this);
    const formatted = options2.get("format", val, this);
    return truncate && formatted.length > truncate ? formatted.substring(0, truncate) + "…" : formatted;
  },
  /**
   *
   * @param {Options} options
   * @returns {string}
   */
  toFormattedHref(options2) {
    return options2.get("formatHref", this.toHref(options2.get("defaultProtocol")), this);
  },
  /**
   * The start index of this token in the original input string
   * @returns {number}
   */
  startIndex() {
    return this.tk[0].s;
  },
  /**
   * The end index of this token in the original input string (up to this
   * index but not including it)
   * @returns {number}
   */
  endIndex() {
    return this.tk[this.tk.length - 1].e;
  },
  /**
  	Returns an object  of relevant values for this token, which includes keys
  	* type - Kind of token ('url', 'email', etc.)
  	* value - Original text
  	* href - The value that should be added to the anchor tag's href
  		attribute
  		@method toObject
  	@param {string} [protocol] `'http'` by default
  */
  toObject(protocol = defaults.defaultProtocol) {
    return {
      type: this.t,
      value: this.toString(),
      isLink: this.isLink,
      href: this.toHref(protocol),
      start: this.startIndex(),
      end: this.endIndex()
    };
  },
  /**
   *
   * @param {Options} options Formatting option
   */
  toFormattedObject(options2) {
    return {
      type: this.t,
      value: this.toFormattedString(options2),
      isLink: this.isLink,
      href: this.toFormattedHref(options2),
      start: this.startIndex(),
      end: this.endIndex()
    };
  },
  /**
   * Whether this token should be rendered as a link according to the given options
   * @param {Options} options
   * @returns {boolean}
   */
  validate(options2) {
    return options2.get("validate", this.toString(), this);
  },
  /**
   * Return an object that represents how this link should be rendered.
   * @param {Options} options Formattinng options
   */
  render(options2) {
    const token = this;
    const href = this.toHref(options2.get("defaultProtocol"));
    const formattedHref = options2.get("formatHref", href, this);
    const tagName = options2.get("tagName", href, token);
    const content = this.toFormattedString(options2);
    const attributes = {};
    const className = options2.get("className", href, token);
    const target = options2.get("target", href, token);
    const rel = options2.get("rel", href, token);
    const attrs = options2.getObj("attributes", href, token);
    const eventListeners = options2.getObj("events", href, token);
    attributes.href = formattedHref;
    if (className) {
      attributes.class = className;
    }
    if (target) {
      attributes.target = target;
    }
    if (rel) {
      attributes.rel = rel;
    }
    if (attrs) {
      assign(attributes, attrs);
    }
    return {
      tagName,
      attributes,
      content,
      eventListeners
    };
  }
};
function createTokenClass(type, props) {
  class Token extends MultiToken {
    constructor(value3, tokens) {
      super(value3, tokens);
      this.t = type;
    }
  }
  for (const p in props) {
    Token.prototype[p] = props[p];
  }
  Token.t = type;
  return Token;
}
const Email = createTokenClass("email", {
  isLink: true,
  toHref() {
    return "mailto:" + this.toString();
  }
});
const Text = createTokenClass("text");
const Nl = createTokenClass("nl");
const Url = createTokenClass("url", {
  isLink: true,
  /**
  	Lowercases relevant parts of the domain and adds the protocol if
  	required. Note that this will not escape unsafe HTML characters in the
  	URL.
  		@param {string} [scheme] default scheme (e.g., 'https')
  	@return {string} the full href
  */
  toHref(scheme2 = defaults.defaultProtocol) {
    return this.hasProtocol() ? this.v : `${scheme2}://${this.v}`;
  },
  /**
   * Check whether this URL token has a protocol
   * @return {boolean}
   */
  hasProtocol() {
    const tokens = this.tk;
    return tokens.length >= 2 && tokens[0].t !== LOCALHOST && tokens[1].t === COLON;
  }
});
const makeState = (arg) => new State(arg);
function init$1({
  groups
}) {
  const qsAccepting = groups.domain.concat([AMPERSAND, ASTERISK, AT, BACKSLASH, BACKTICK, CARET, DOLLAR, EQUALS, HYPHEN, NUM, PERCENT, PIPE, PLUS, POUND, SLASH, SYM, TILDE, UNDERSCORE]);
  const qsNonAccepting = [COLON, COMMA, DOT, EXCLAMATION, PERCENT, QUERY, QUOTE, SEMI, OPENANGLEBRACKET, CLOSEANGLEBRACKET, OPENBRACE, CLOSEBRACE, CLOSEBRACKET, OPENBRACKET, OPENPAREN, CLOSEPAREN, FULLWIDTHLEFTPAREN, FULLWIDTHRIGHTPAREN, LEFTCORNERBRACKET, RIGHTCORNERBRACKET, LEFTWHITECORNERBRACKET, RIGHTWHITECORNERBRACKET, FULLWIDTHLESSTHAN, FULLWIDTHGREATERTHAN];
  const localpartAccepting = [AMPERSAND, APOSTROPHE, ASTERISK, BACKSLASH, BACKTICK, CARET, DOLLAR, EQUALS, HYPHEN, OPENBRACE, CLOSEBRACE, PERCENT, PIPE, PLUS, POUND, QUERY, SLASH, SYM, TILDE, UNDERSCORE];
  const Start = makeState();
  const Localpart = tt(Start, TILDE);
  ta(Localpart, localpartAccepting, Localpart);
  ta(Localpart, groups.domain, Localpart);
  const Domain = makeState(), Scheme = makeState(), SlashScheme = makeState();
  ta(Start, groups.domain, Domain);
  ta(Start, groups.scheme, Scheme);
  ta(Start, groups.slashscheme, SlashScheme);
  ta(Domain, localpartAccepting, Localpart);
  ta(Domain, groups.domain, Domain);
  const LocalpartAt = tt(Domain, AT);
  tt(Localpart, AT, LocalpartAt);
  tt(Scheme, AT, LocalpartAt);
  tt(SlashScheme, AT, LocalpartAt);
  const LocalpartDot = tt(Localpart, DOT);
  ta(LocalpartDot, localpartAccepting, Localpart);
  ta(LocalpartDot, groups.domain, Localpart);
  const EmailDomain = makeState();
  ta(LocalpartAt, groups.domain, EmailDomain);
  ta(EmailDomain, groups.domain, EmailDomain);
  const EmailDomainDot = tt(EmailDomain, DOT);
  ta(EmailDomainDot, groups.domain, EmailDomain);
  const Email$1 = makeState(Email);
  ta(EmailDomainDot, groups.tld, Email$1);
  ta(EmailDomainDot, groups.utld, Email$1);
  tt(LocalpartAt, LOCALHOST, Email$1);
  const EmailDomainHyphen = tt(EmailDomain, HYPHEN);
  tt(EmailDomainHyphen, HYPHEN, EmailDomainHyphen);
  ta(EmailDomainHyphen, groups.domain, EmailDomain);
  ta(Email$1, groups.domain, EmailDomain);
  tt(Email$1, DOT, EmailDomainDot);
  tt(Email$1, HYPHEN, EmailDomainHyphen);
  const EmailColon = tt(Email$1, COLON);
  ta(EmailColon, groups.numeric, Email);
  const DomainHyphen = tt(Domain, HYPHEN);
  const DomainDot = tt(Domain, DOT);
  tt(DomainHyphen, HYPHEN, DomainHyphen);
  ta(DomainHyphen, groups.domain, Domain);
  ta(DomainDot, localpartAccepting, Localpart);
  ta(DomainDot, groups.domain, Domain);
  const DomainDotTld = makeState(Url);
  ta(DomainDot, groups.tld, DomainDotTld);
  ta(DomainDot, groups.utld, DomainDotTld);
  ta(DomainDotTld, groups.domain, Domain);
  ta(DomainDotTld, localpartAccepting, Localpart);
  tt(DomainDotTld, DOT, DomainDot);
  tt(DomainDotTld, HYPHEN, DomainHyphen);
  tt(DomainDotTld, AT, LocalpartAt);
  const DomainDotTldColon = tt(DomainDotTld, COLON);
  const DomainDotTldColonPort = makeState(Url);
  ta(DomainDotTldColon, groups.numeric, DomainDotTldColonPort);
  const Url$1 = makeState(Url);
  const UrlNonaccept = makeState();
  ta(Url$1, qsAccepting, Url$1);
  ta(Url$1, qsNonAccepting, UrlNonaccept);
  ta(UrlNonaccept, qsAccepting, Url$1);
  ta(UrlNonaccept, qsNonAccepting, UrlNonaccept);
  tt(DomainDotTld, SLASH, Url$1);
  tt(DomainDotTldColonPort, SLASH, Url$1);
  const SchemeColon = tt(Scheme, COLON);
  const SlashSchemeColon = tt(SlashScheme, COLON);
  const SlashSchemeColonSlash = tt(SlashSchemeColon, SLASH);
  const UriPrefix = tt(SlashSchemeColonSlash, SLASH);
  ta(Scheme, groups.domain, Domain);
  tt(Scheme, DOT, DomainDot);
  tt(Scheme, HYPHEN, DomainHyphen);
  ta(SlashScheme, groups.domain, Domain);
  tt(SlashScheme, DOT, DomainDot);
  tt(SlashScheme, HYPHEN, DomainHyphen);
  ta(SchemeColon, groups.domain, Url$1);
  tt(SchemeColon, SLASH, Url$1);
  tt(SchemeColon, QUERY, Url$1);
  ta(UriPrefix, groups.domain, Url$1);
  ta(UriPrefix, qsAccepting, Url$1);
  tt(UriPrefix, SLASH, Url$1);
  const bracketPairs = [
    [OPENBRACE, CLOSEBRACE],
    // {}
    [OPENBRACKET, CLOSEBRACKET],
    // []
    [OPENPAREN, CLOSEPAREN],
    // ()
    [OPENANGLEBRACKET, CLOSEANGLEBRACKET],
    // <>
    [FULLWIDTHLEFTPAREN, FULLWIDTHRIGHTPAREN],
    // （）
    [LEFTCORNERBRACKET, RIGHTCORNERBRACKET],
    // 「」
    [LEFTWHITECORNERBRACKET, RIGHTWHITECORNERBRACKET],
    // 『』
    [FULLWIDTHLESSTHAN, FULLWIDTHGREATERTHAN]
    // ＜＞
  ];
  for (let i = 0; i < bracketPairs.length; i++) {
    const [OPEN, CLOSE] = bracketPairs[i];
    const UrlOpen = tt(Url$1, OPEN);
    tt(UrlNonaccept, OPEN, UrlOpen);
    tt(UrlOpen, CLOSE, Url$1);
    const UrlOpenQ = makeState(Url);
    ta(UrlOpen, qsAccepting, UrlOpenQ);
    const UrlOpenSyms = makeState();
    ta(UrlOpen, qsNonAccepting);
    ta(UrlOpenQ, qsAccepting, UrlOpenQ);
    ta(UrlOpenQ, qsNonAccepting, UrlOpenSyms);
    ta(UrlOpenSyms, qsAccepting, UrlOpenQ);
    ta(UrlOpenSyms, qsNonAccepting, UrlOpenSyms);
    tt(UrlOpenQ, CLOSE, Url$1);
    tt(UrlOpenSyms, CLOSE, Url$1);
  }
  tt(Start, LOCALHOST, DomainDotTld);
  tt(Start, NL, Nl);
  return {
    start: Start,
    tokens: tk
  };
}
function run(start, input, tokens) {
  let len = tokens.length;
  let cursor = 0;
  let multis = [];
  let textTokens = [];
  while (cursor < len) {
    let state = start;
    let secondState = null;
    let nextState = null;
    let multiLength = 0;
    let latestAccepting = null;
    let sinceAccepts = -1;
    while (cursor < len && !(secondState = state.go(tokens[cursor].t))) {
      textTokens.push(tokens[cursor++]);
    }
    while (cursor < len && (nextState = secondState || state.go(tokens[cursor].t))) {
      secondState = null;
      state = nextState;
      if (state.accepts()) {
        sinceAccepts = 0;
        latestAccepting = state;
      } else if (sinceAccepts >= 0) {
        sinceAccepts++;
      }
      cursor++;
      multiLength++;
    }
    if (sinceAccepts < 0) {
      cursor -= multiLength;
      if (cursor < len) {
        textTokens.push(tokens[cursor]);
        cursor++;
      }
    } else {
      if (textTokens.length > 0) {
        multis.push(initMultiToken(Text, input, textTokens));
        textTokens = [];
      }
      cursor -= sinceAccepts;
      multiLength -= sinceAccepts;
      const Multi = latestAccepting.t;
      const subtokens = tokens.slice(cursor - multiLength, cursor);
      multis.push(initMultiToken(Multi, input, subtokens));
    }
  }
  if (textTokens.length > 0) {
    multis.push(initMultiToken(Text, input, textTokens));
  }
  return multis;
}
function initMultiToken(Multi, input, tokens) {
  const startIdx = tokens[0].s;
  const endIdx = tokens[tokens.length - 1].e;
  const value3 = input.slice(startIdx, endIdx);
  return new Multi(value3, tokens);
}
const INIT = {
  scanner: null,
  parser: null,
  tokenQueue: [],
  pluginQueue: [],
  customSchemes: [],
  initialized: false
};
function init() {
  INIT.scanner = init$2(INIT.customSchemes);
  for (let i = 0; i < INIT.tokenQueue.length; i++) {
    INIT.tokenQueue[i][1]({
      scanner: INIT.scanner
    });
  }
  INIT.parser = init$1(INIT.scanner.tokens);
  for (let i = 0; i < INIT.pluginQueue.length; i++) {
    INIT.pluginQueue[i][1]({
      scanner: INIT.scanner,
      parser: INIT.parser
    });
  }
  INIT.initialized = true;
  return INIT;
}
function tokenize(str) {
  if (!INIT.initialized) {
    init();
  }
  return run(INIT.parser.start, str, run$1(INIT.scanner.start, str));
}
tokenize.scan = run$1;
function escapeText(text3) {
  return text3.replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;");
}
function escapeAttr(href) {
  return href.replace(/"/g, "&quot;");
}
function attributesToString(attributes) {
  const result = [];
  for (const attr in attributes) {
    let val = attributes[attr] + "";
    result.push(`${attr}="${escapeAttr(val)}"`);
  }
  return result.join(" ");
}
function defaultRender({
  tagName,
  attributes,
  content
}) {
  return `<${tagName} ${attributesToString(attributes)}>${escapeText(content)}</${tagName}>`;
}
function linkifyStr(str, opts = {}) {
  opts = new Options(opts, defaultRender);
  const tokens = tokenize(str);
  const result = [];
  for (let i = 0; i < tokens.length; i++) {
    const token = tokens[i];
    if (token.t === "nl" && opts.get("nl2br")) {
      result.push("<br>\n");
    } else if (!token.isLink || !opts.check(token)) {
      result.push(escapeText(token.toString()));
    } else {
      result.push(opts.render(token));
    }
  }
  return result.join("");
}
if (!String.prototype.linkify) {
  Object.defineProperty(String.prototype, "linkify", {
    writable: false,
    value: function linkify(options2) {
      return linkifyStr(this, options2);
    }
  });
}
register(t13);
var eventemitter3 = { exports: {} };
(function(module) {
  var has = Object.prototype.hasOwnProperty, prefix = "~";
  function Events() {
  }
  if (Object.create) {
    Events.prototype = /* @__PURE__ */ Object.create(null);
    if (!new Events().__proto__) prefix = false;
  }
  function EE(fn, context, once) {
    this.fn = fn;
    this.context = context;
    this.once = once || false;
  }
  function addListener(emitter, event, fn, context, once) {
    if (typeof fn !== "function") {
      throw new TypeError("The listener must be a function");
    }
    var listener = new EE(fn, context || emitter, once), evt = prefix ? prefix + event : event;
    if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;
    else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);
    else emitter._events[evt] = [emitter._events[evt], listener];
    return emitter;
  }
  function clearEvent(emitter, evt) {
    if (--emitter._eventsCount === 0) emitter._events = new Events();
    else delete emitter._events[evt];
  }
  function EventEmitter2() {
    this._events = new Events();
    this._eventsCount = 0;
  }
  EventEmitter2.prototype.eventNames = function eventNames() {
    var names = [], events, name;
    if (this._eventsCount === 0) return names;
    for (name in events = this._events) {
      if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);
    }
    if (Object.getOwnPropertySymbols) {
      return names.concat(Object.getOwnPropertySymbols(events));
    }
    return names;
  };
  EventEmitter2.prototype.listeners = function listeners(event) {
    var evt = prefix ? prefix + event : event, handlers = this._events[evt];
    if (!handlers) return [];
    if (handlers.fn) return [handlers.fn];
    for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {
      ee[i] = handlers[i].fn;
    }
    return ee;
  };
  EventEmitter2.prototype.listenerCount = function listenerCount(event) {
    var evt = prefix ? prefix + event : event, listeners = this._events[evt];
    if (!listeners) return 0;
    if (listeners.fn) return 1;
    return listeners.length;
  };
  EventEmitter2.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {
    var evt = prefix ? prefix + event : event;
    if (!this._events[evt]) return false;
    var listeners = this._events[evt], len = arguments.length, args, i;
    if (listeners.fn) {
      if (listeners.once) this.removeListener(event, listeners.fn, void 0, true);
      switch (len) {
        case 1:
          return listeners.fn.call(listeners.context), true;
        case 2:
          return listeners.fn.call(listeners.context, a1), true;
        case 3:
          return listeners.fn.call(listeners.context, a1, a2), true;
        case 4:
          return listeners.fn.call(listeners.context, a1, a2, a3), true;
        case 5:
          return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;
        case 6:
          return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;
      }
      for (i = 1, args = new Array(len - 1); i < len; i++) {
        args[i - 1] = arguments[i];
      }
      listeners.fn.apply(listeners.context, args);
    } else {
      var length = listeners.length, j;
      for (i = 0; i < length; i++) {
        if (listeners[i].once) this.removeListener(event, listeners[i].fn, void 0, true);
        switch (len) {
          case 1:
            listeners[i].fn.call(listeners[i].context);
            break;
          case 2:
            listeners[i].fn.call(listeners[i].context, a1);
            break;
          case 3:
            listeners[i].fn.call(listeners[i].context, a1, a2);
            break;
          case 4:
            listeners[i].fn.call(listeners[i].context, a1, a2, a3);
            break;
          default:
            if (!args) for (j = 1, args = new Array(len - 1); j < len; j++) {
              args[j - 1] = arguments[j];
            }
            listeners[i].fn.apply(listeners[i].context, args);
        }
      }
    }
    return true;
  };
  EventEmitter2.prototype.on = function on(event, fn, context) {
    return addListener(this, event, fn, context, false);
  };
  EventEmitter2.prototype.once = function once(event, fn, context) {
    return addListener(this, event, fn, context, true);
  };
  EventEmitter2.prototype.removeListener = function removeListener(event, fn, context, once) {
    var evt = prefix ? prefix + event : event;
    if (!this._events[evt]) return this;
    if (!fn) {
      clearEvent(this, evt);
      return this;
    }
    var listeners = this._events[evt];
    if (listeners.fn) {
      if (listeners.fn === fn && (!once || listeners.once) && (!context || listeners.context === context)) {
        clearEvent(this, evt);
      }
    } else {
      for (var i = 0, events = [], length = listeners.length; i < length; i++) {
        if (listeners[i].fn !== fn || once && !listeners[i].once || context && listeners[i].context !== context) {
          events.push(listeners[i]);
        }
      }
      if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;
      else clearEvent(this, evt);
    }
    return this;
  };
  EventEmitter2.prototype.removeAllListeners = function removeAllListeners(event) {
    var evt;
    if (event) {
      evt = prefix ? prefix + event : event;
      if (this._events[evt]) clearEvent(this, evt);
    } else {
      this._events = new Events();
      this._eventsCount = 0;
    }
    return this;
  };
  EventEmitter2.prototype.off = EventEmitter2.prototype.removeListener;
  EventEmitter2.prototype.addListener = EventEmitter2.prototype.on;
  EventEmitter2.prefixed = prefix;
  EventEmitter2.EventEmitter = EventEmitter2;
  {
    module.exports = EventEmitter2;
  }
})(eventemitter3);
var eventemitter3Exports = eventemitter3.exports;
const EventEmitter = /* @__PURE__ */ getDefaultExportFromCjs(eventemitter3Exports);
class TimeoutError extends Error {
  constructor(message) {
    super(message);
    this.name = "TimeoutError";
  }
}
class AbortError extends Error {
  constructor(message) {
    super();
    this.name = "AbortError";
    this.message = message;
  }
}
const getDOMException = (errorMessage) => globalThis.DOMException === void 0 ? new AbortError(errorMessage) : new DOMException(errorMessage);
const getAbortedReason = (signal) => {
  const reason = signal.reason === void 0 ? getDOMException("This operation was aborted.") : signal.reason;
  return reason instanceof Error ? reason : getDOMException(reason);
};
function pTimeout(promise, options2) {
  const {
    milliseconds,
    fallback,
    message,
    customTimers = { setTimeout, clearTimeout }
  } = options2;
  let timer;
  let abortHandler;
  const wrappedPromise = new Promise((resolve, reject) => {
    if (typeof milliseconds !== "number" || Math.sign(milliseconds) !== 1) {
      throw new TypeError(`Expected \`milliseconds\` to be a positive number, got \`${milliseconds}\``);
    }
    if (options2.signal) {
      const { signal } = options2;
      if (signal.aborted) {
        reject(getAbortedReason(signal));
      }
      abortHandler = () => {
        reject(getAbortedReason(signal));
      };
      signal.addEventListener("abort", abortHandler, { once: true });
    }
    if (milliseconds === Number.POSITIVE_INFINITY) {
      promise.then(resolve, reject);
      return;
    }
    const timeoutError = new TimeoutError();
    timer = customTimers.setTimeout.call(void 0, () => {
      if (fallback) {
        try {
          resolve(fallback());
        } catch (error) {
          reject(error);
        }
        return;
      }
      if (typeof promise.cancel === "function") {
        promise.cancel();
      }
      if (message === false) {
        resolve();
      } else if (message instanceof Error) {
        reject(message);
      } else {
        timeoutError.message = message ?? `Promise timed out after ${milliseconds} milliseconds`;
        reject(timeoutError);
      }
    }, milliseconds);
    (async () => {
      try {
        resolve(await promise);
      } catch (error) {
        reject(error);
      }
    })();
  });
  const cancelablePromise = wrappedPromise.finally(() => {
    cancelablePromise.clear();
    if (abortHandler && options2.signal) {
      options2.signal.removeEventListener("abort", abortHandler);
    }
  });
  cancelablePromise.clear = () => {
    customTimers.clearTimeout.call(void 0, timer);
    timer = void 0;
  };
  return cancelablePromise;
}
function lowerBound(array, value3, comparator) {
  let first = 0;
  let count = array.length;
  while (count > 0) {
    const step = Math.trunc(count / 2);
    let it = first + step;
    if (comparator(array[it], value3) <= 0) {
      first = ++it;
      count -= step + 1;
    } else {
      count = step;
    }
  }
  return first;
}
class PriorityQueue {
  #queue = [];
  enqueue(run2, options2) {
    options2 = {
      priority: 0,
      ...options2
    };
    const element = {
      priority: options2.priority,
      id: options2.id,
      run: run2
    };
    if (this.size === 0 || this.#queue[this.size - 1].priority >= options2.priority) {
      this.#queue.push(element);
      return;
    }
    const index = lowerBound(this.#queue, element, (a2, b) => b.priority - a2.priority);
    this.#queue.splice(index, 0, element);
  }
  setPriority(id, priority) {
    const index = this.#queue.findIndex((element) => element.id === id);
    if (index === -1) {
      throw new ReferenceError(`No promise function with the id "${id}" exists in the queue.`);
    }
    const [item] = this.#queue.splice(index, 1);
    this.enqueue(item.run, { priority, id });
  }
  dequeue() {
    const item = this.#queue.shift();
    return item?.run;
  }
  filter(options2) {
    return this.#queue.filter((element) => element.priority === options2.priority).map((element) => element.run);
  }
  get size() {
    return this.#queue.length;
  }
}
class PQueue extends EventEmitter {
  #carryoverConcurrencyCount;
  #isIntervalIgnored;
  #intervalCount = 0;
  #intervalCap;
  #interval;
  #intervalEnd = 0;
  #intervalId;
  #timeoutId;
  #queue;
  #queueClass;
  #pending = 0;
  // The `!` is needed because of https://github.com/microsoft/TypeScript/issues/32194
  #concurrency;
  #isPaused;
  #throwOnTimeout;
  // Use to assign a unique identifier to a promise function, if not explicitly specified
  #idAssigner = 1n;
  /**
      Per-operation timeout in milliseconds. Operations fulfill once `timeout` elapses if they haven't already.
  
      Applies to each future operation.
      */
  timeout;
  // TODO: The `throwOnTimeout` option should affect the return types of `add()` and `addAll()`
  constructor(options2) {
    super();
    options2 = {
      carryoverConcurrencyCount: false,
      intervalCap: Number.POSITIVE_INFINITY,
      interval: 0,
      concurrency: Number.POSITIVE_INFINITY,
      autoStart: true,
      queueClass: PriorityQueue,
      ...options2
    };
    if (!(typeof options2.intervalCap === "number" && options2.intervalCap >= 1)) {
      throw new TypeError(`Expected \`intervalCap\` to be a number from 1 and up, got \`${options2.intervalCap?.toString() ?? ""}\` (${typeof options2.intervalCap})`);
    }
    if (options2.interval === void 0 || !(Number.isFinite(options2.interval) && options2.interval >= 0)) {
      throw new TypeError(`Expected \`interval\` to be a finite number >= 0, got \`${options2.interval?.toString() ?? ""}\` (${typeof options2.interval})`);
    }
    this.#carryoverConcurrencyCount = options2.carryoverConcurrencyCount;
    this.#isIntervalIgnored = options2.intervalCap === Number.POSITIVE_INFINITY || options2.interval === 0;
    this.#intervalCap = options2.intervalCap;
    this.#interval = options2.interval;
    this.#queue = new options2.queueClass();
    this.#queueClass = options2.queueClass;
    this.concurrency = options2.concurrency;
    this.timeout = options2.timeout;
    this.#throwOnTimeout = options2.throwOnTimeout === true;
    this.#isPaused = options2.autoStart === false;
  }
  get #doesIntervalAllowAnother() {
    return this.#isIntervalIgnored || this.#intervalCount < this.#intervalCap;
  }
  get #doesConcurrentAllowAnother() {
    return this.#pending < this.#concurrency;
  }
  #next() {
    this.#pending--;
    this.#tryToStartAnother();
    this.emit("next");
  }
  #onResumeInterval() {
    this.#onInterval();
    this.#initializeIntervalIfNeeded();
    this.#timeoutId = void 0;
  }
  get #isIntervalPaused() {
    const now = Date.now();
    if (this.#intervalId === void 0) {
      const delay = this.#intervalEnd - now;
      if (delay < 0) {
        this.#intervalCount = this.#carryoverConcurrencyCount ? this.#pending : 0;
      } else {
        if (this.#timeoutId === void 0) {
          this.#timeoutId = setTimeout(() => {
            this.#onResumeInterval();
          }, delay);
        }
        return true;
      }
    }
    return false;
  }
  #tryToStartAnother() {
    if (this.#queue.size === 0) {
      if (this.#intervalId) {
        clearInterval(this.#intervalId);
      }
      this.#intervalId = void 0;
      this.emit("empty");
      if (this.#pending === 0) {
        this.emit("idle");
      }
      return false;
    }
    if (!this.#isPaused) {
      const canInitializeInterval = !this.#isIntervalPaused;
      if (this.#doesIntervalAllowAnother && this.#doesConcurrentAllowAnother) {
        const job = this.#queue.dequeue();
        if (!job) {
          return false;
        }
        this.emit("active");
        job();
        if (canInitializeInterval) {
          this.#initializeIntervalIfNeeded();
        }
        return true;
      }
    }
    return false;
  }
  #initializeIntervalIfNeeded() {
    if (this.#isIntervalIgnored || this.#intervalId !== void 0) {
      return;
    }
    this.#intervalId = setInterval(() => {
      this.#onInterval();
    }, this.#interval);
    this.#intervalEnd = Date.now() + this.#interval;
  }
  #onInterval() {
    if (this.#intervalCount === 0 && this.#pending === 0 && this.#intervalId) {
      clearInterval(this.#intervalId);
      this.#intervalId = void 0;
    }
    this.#intervalCount = this.#carryoverConcurrencyCount ? this.#pending : 0;
    this.#processQueue();
  }
  /**
  Executes all queued functions until it reaches the limit.
  */
  #processQueue() {
    while (this.#tryToStartAnother()) {
    }
  }
  get concurrency() {
    return this.#concurrency;
  }
  set concurrency(newConcurrency) {
    if (!(typeof newConcurrency === "number" && newConcurrency >= 1)) {
      throw new TypeError(`Expected \`concurrency\` to be a number from 1 and up, got \`${newConcurrency}\` (${typeof newConcurrency})`);
    }
    this.#concurrency = newConcurrency;
    this.#processQueue();
  }
  async #throwOnAbort(signal) {
    return new Promise((_resolve, reject) => {
      signal.addEventListener("abort", () => {
        reject(signal.reason);
      }, { once: true });
    });
  }
  /**
      Updates the priority of a promise function by its id, affecting its execution order. Requires a defined concurrency limit to take effect.
  
      For example, this can be used to prioritize a promise function to run earlier.
  
      ```js
      import PQueue from 'p-queue';
  
      const queue = new PQueue({concurrency: 1});
  
      queue.add(async () => '🦄', {priority: 1});
      queue.add(async () => '🦀', {priority: 0, id: '🦀'});
      queue.add(async () => '🦄', {priority: 1});
      queue.add(async () => '🦄', {priority: 1});
  
      queue.setPriority('🦀', 2);
      ```
  
      In this case, the promise function with `id: '🦀'` runs second.
  
      You can also deprioritize a promise function to delay its execution:
  
      ```js
      import PQueue from 'p-queue';
  
      const queue = new PQueue({concurrency: 1});
  
      queue.add(async () => '🦄', {priority: 1});
      queue.add(async () => '🦀', {priority: 1, id: '🦀'});
      queue.add(async () => '🦄');
      queue.add(async () => '🦄', {priority: 0});
  
      queue.setPriority('🦀', -1);
      ```
      Here, the promise function with `id: '🦀'` executes last.
      */
  setPriority(id, priority) {
    this.#queue.setPriority(id, priority);
  }
  async add(function_, options2 = {}) {
    options2.id ??= (this.#idAssigner++).toString();
    options2 = {
      timeout: this.timeout,
      throwOnTimeout: this.#throwOnTimeout,
      ...options2
    };
    return new Promise((resolve, reject) => {
      this.#queue.enqueue(async () => {
        this.#pending++;
        this.#intervalCount++;
        try {
          options2.signal?.throwIfAborted();
          let operation = function_({ signal: options2.signal });
          if (options2.timeout) {
            operation = pTimeout(Promise.resolve(operation), { milliseconds: options2.timeout });
          }
          if (options2.signal) {
            operation = Promise.race([operation, this.#throwOnAbort(options2.signal)]);
          }
          const result = await operation;
          resolve(result);
          this.emit("completed", result);
        } catch (error) {
          if (error instanceof TimeoutError && !options2.throwOnTimeout) {
            resolve();
            return;
          }
          reject(error);
          this.emit("error", error);
        } finally {
          this.#next();
        }
      }, options2);
      this.emit("add");
      this.#tryToStartAnother();
    });
  }
  async addAll(functions, options2) {
    return Promise.all(functions.map(async (function_) => this.add(function_, options2)));
  }
  /**
  Start (or resume) executing enqueued tasks within concurrency limit. No need to call this if queue is not paused (via `options.autoStart = false` or by `.pause()` method.)
  */
  start() {
    if (!this.#isPaused) {
      return this;
    }
    this.#isPaused = false;
    this.#processQueue();
    return this;
  }
  /**
  Put queue execution on hold.
  */
  pause() {
    this.#isPaused = true;
  }
  /**
  Clear the queue.
  */
  clear() {
    this.#queue = new this.#queueClass();
  }
  /**
      Can be called multiple times. Useful if you for example add additional items at a later time.
  
      @returns A promise that settles when the queue becomes empty.
      */
  async onEmpty() {
    if (this.#queue.size === 0) {
      return;
    }
    await this.#onEvent("empty");
  }
  /**
      @returns A promise that settles when the queue size is less than the given limit: `queue.size < limit`.
  
      If you want to avoid having the queue grow beyond a certain size you can `await queue.onSizeLessThan()` before adding a new item.
  
      Note that this only limits the number of items waiting to start. There could still be up to `concurrency` jobs already running that this call does not include in its calculation.
      */
  async onSizeLessThan(limit) {
    if (this.#queue.size < limit) {
      return;
    }
    await this.#onEvent("next", () => this.#queue.size < limit);
  }
  /**
      The difference with `.onEmpty` is that `.onIdle` guarantees that all work from the queue has finished. `.onEmpty` merely signals that the queue is empty, but it could mean that some promises haven't completed yet.
  
      @returns A promise that settles when the queue becomes empty, and all promises have completed; `queue.size === 0 && queue.pending === 0`.
      */
  async onIdle() {
    if (this.#pending === 0 && this.#queue.size === 0) {
      return;
    }
    await this.#onEvent("idle");
  }
  async #onEvent(event, filter) {
    return new Promise((resolve) => {
      const listener = () => {
        if (filter && !filter()) {
          return;
        }
        this.off(event, listener);
        resolve();
      };
      this.on(event, listener);
    });
  }
  /**
  Size of the queue, the number of queued items waiting to run.
  */
  get size() {
    return this.#queue.size;
  }
  /**
      Size of the queue, filtered by the given options.
  
      For example, this can be used to find the number of items remaining in the queue with a specific priority level.
      */
  sizeBy(options2) {
    return this.#queue.filter(options2).length;
  }
  /**
  Number of running items (no longer in the queue).
  */
  get pending() {
    return this.#pending;
  }
  /**
  Whether the queue is currently paused.
  */
  get isPaused() {
    return this.#isPaused;
  }
}
new PQueue({ concurrency: 5 });
register(t6);
register(t26);
var vueColor_min = { exports: {} };
(function(module, exports) {
  !function(e2, t4) {
    module.exports = t4();
  }("undefined" != typeof self ? self : commonjsGlobal, function() {
    return function(e2) {
      function t4(r) {
        if (n[r]) return n[r].exports;
        var i = n[r] = { i: r, l: false, exports: {} };
        return e2[r].call(i.exports, i, i.exports, t4), i.l = true, i.exports;
      }
      var n = {};
      return t4.m = e2, t4.c = n, t4.d = function(e3, n2, r) {
        t4.o(e3, n2) || Object.defineProperty(e3, n2, { configurable: false, enumerable: true, get: r });
      }, t4.n = function(e3) {
        var n2 = e3 && e3.__esModule ? function() {
          return e3.default;
        } : function() {
          return e3;
        };
        return t4.d(n2, "a", n2), n2;
      }, t4.o = function(e3, t30) {
        return Object.prototype.hasOwnProperty.call(e3, t30);
      }, t4.p = "", t4(t4.s = 59);
    }([function(e2, t4) {
      function n(e3, t30) {
        var n2 = e3[1] || "", i = e3[3];
        if (!i) return n2;
        if (t30 && "function" == typeof btoa) {
          var o = r(i);
          return [n2].concat(i.sources.map(function(e4) {
            return "/*# sourceURL=" + i.sourceRoot + e4 + " */";
          })).concat([o]).join("\n");
        }
        return [n2].join("\n");
      }
      function r(e3) {
        return "/*# sourceMappingURL=data:application/json;charset=utf-8;base64," + btoa(unescape(encodeURIComponent(JSON.stringify(e3)))) + " */";
      }
      e2.exports = function(e3) {
        var t30 = [];
        return t30.toString = function() {
          return this.map(function(t33) {
            var r2 = n(t33, e3);
            return t33[2] ? "@media " + t33[2] + "{" + r2 + "}" : r2;
          }).join("");
        }, t30.i = function(e4, n2) {
          "string" == typeof e4 && (e4 = [[null, e4, ""]]);
          for (var r2 = {}, i = 0; i < this.length; i++) {
            var o = this[i][0];
            "number" == typeof o && (r2[o] = true);
          }
          for (i = 0; i < e4.length; i++) {
            var a2 = e4[i];
            "number" == typeof a2[0] && r2[a2[0]] || (n2 && !a2[2] ? a2[2] = n2 : n2 && (a2[2] = "(" + a2[2] + ") and (" + n2 + ")"), t30.push(a2));
          }
        }, t30;
      };
    }, function(e2, t4, n) {
      function r(e3) {
        for (var t30 = 0; t30 < e3.length; t30++) {
          var n2 = e3[t30], r2 = u[n2.id];
          if (r2) {
            r2.refs++;
            for (var i2 = 0; i2 < r2.parts.length; i2++) r2.parts[i2](n2.parts[i2]);
            for (; i2 < n2.parts.length; i2++) r2.parts.push(o(n2.parts[i2]));
            r2.parts.length > n2.parts.length && (r2.parts.length = n2.parts.length);
          } else {
            for (var a3 = [], i2 = 0; i2 < n2.parts.length; i2++) a3.push(o(n2.parts[i2]));
            u[n2.id] = { id: n2.id, refs: 1, parts: a3 };
          }
        }
      }
      function i() {
        var e3 = document.createElement("style");
        return e3.type = "text/css", f2.appendChild(e3), e3;
      }
      function o(e3) {
        var t30, n2, r2 = document.querySelector("style[" + b + '~="' + e3.id + '"]');
        if (r2) {
          if (p) return v2;
          r2.parentNode.removeChild(r2);
        }
        if (x2) {
          var o2 = h3++;
          r2 = d2 || (d2 = i()), t30 = a2.bind(null, r2, o2, false), n2 = a2.bind(null, r2, o2, true);
        } else r2 = i(), t30 = s2.bind(null, r2), n2 = function() {
          r2.parentNode.removeChild(r2);
        };
        return t30(e3), function(r3) {
          if (r3) {
            if (r3.css === e3.css && r3.media === e3.media && r3.sourceMap === e3.sourceMap) return;
            t30(e3 = r3);
          } else n2();
        };
      }
      function a2(e3, t30, n2, r2) {
        var i2 = n2 ? "" : r2.css;
        if (e3.styleSheet) e3.styleSheet.cssText = m2(t30, i2);
        else {
          var o2 = document.createTextNode(i2), a3 = e3.childNodes;
          a3[t30] && e3.removeChild(a3[t30]), a3.length ? e3.insertBefore(o2, a3[t30]) : e3.appendChild(o2);
        }
      }
      function s2(e3, t30) {
        var n2 = t30.css, r2 = t30.media, i2 = t30.sourceMap;
        if (r2 && e3.setAttribute("media", r2), g.ssrId && e3.setAttribute(b, t30.id), i2 && (n2 += "\n/*# sourceURL=" + i2.sources[0] + " */", n2 += "\n/*# sourceMappingURL=data:application/json;base64," + btoa(unescape(encodeURIComponent(JSON.stringify(i2)))) + " */"), e3.styleSheet) e3.styleSheet.cssText = n2;
        else {
          for (; e3.firstChild; ) e3.removeChild(e3.firstChild);
          e3.appendChild(document.createTextNode(n2));
        }
      }
      var c = "undefined" != typeof document;
      if ("undefined" != typeof DEBUG && DEBUG && !c) throw new Error("vue-style-loader cannot be used in a non-browser environment. Use { target: 'node' } in your Webpack config to indicate a server-rendering environment.");
      var l = n(63), u = {}, f2 = c && (document.head || document.getElementsByTagName("head")[0]), d2 = null, h3 = 0, p = false, v2 = function() {
      }, g = null, b = "data-vue-ssr-id", x2 = "undefined" != typeof navigator && /msie [6-9]\b/.test(navigator.userAgent.toLowerCase());
      e2.exports = function(e3, t30, n2, i2) {
        p = n2, g = i2 || {};
        var o2 = l(e3, t30);
        return r(o2), function(t33) {
          for (var n3 = [], i3 = 0; i3 < o2.length; i3++) {
            var a3 = o2[i3], s3 = u[a3.id];
            s3.refs--, n3.push(s3);
          }
          t33 ? (o2 = l(e3, t33), r(o2)) : o2 = [];
          for (var i3 = 0; i3 < n3.length; i3++) {
            var s3 = n3[i3];
            if (0 === s3.refs) {
              for (var c2 = 0; c2 < s3.parts.length; c2++) s3.parts[c2]();
              delete u[s3.id];
            }
          }
        };
      };
      var m2 = /* @__PURE__ */ function() {
        var e3 = [];
        return function(t30, n2) {
          return e3[t30] = n2, e3.filter(Boolean).join("\n");
        };
      }();
    }, function(e2, t4) {
      e2.exports = function(e3, t30, n, r, i, o) {
        var a2, s2 = e3 = e3 || {}, c = typeof e3.default;
        "object" !== c && "function" !== c || (a2 = e3, s2 = e3.default);
        var l = "function" == typeof s2 ? s2.options : s2;
        t30 && (l.render = t30.render, l.staticRenderFns = t30.staticRenderFns, l._compiled = true), n && (l.functional = true), i && (l._scopeId = i);
        var u;
        if (o ? (u = function(e4) {
          e4 = e4 || this.$vnode && this.$vnode.ssrContext || this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext, e4 || "undefined" == typeof __VUE_SSR_CONTEXT__ || (e4 = __VUE_SSR_CONTEXT__), r && r.call(this, e4), e4 && e4._registeredComponents && e4._registeredComponents.add(o);
        }, l._ssrRegister = u) : r && (u = r), u) {
          var f2 = l.functional, d2 = f2 ? l.render : l.beforeCreate;
          f2 ? (l._injectStyles = u, l.render = function(e4, t33) {
            return u.call(t33), d2(e4, t33);
          }) : l.beforeCreate = d2 ? [].concat(d2, u) : [u];
        }
        return { esModule: a2, exports: s2, options: l };
      };
    }, function(e2, t4, n) {
      function r(e3, t30) {
        var n2, r2 = e3 && e3.a;
        !(n2 = e3 && e3.hsl ? (0, o.default)(e3.hsl) : e3 && e3.hex && e3.hex.length > 0 ? (0, o.default)(e3.hex) : e3 && e3.hsv ? (0, o.default)(e3.hsv) : e3 && e3.rgba ? (0, o.default)(e3.rgba) : e3 && e3.rgb ? (0, o.default)(e3.rgb) : (0, o.default)(e3)) || void 0 !== n2._a && null !== n2._a || n2.setAlpha(r2 || 1);
        var i2 = n2.toHsl(), a2 = n2.toHsv();
        return 0 === i2.s && (a2.h = i2.h = e3.h || e3.hsl && e3.hsl.h || t30 || 0), { hsl: i2, hex: n2.toHexString().toUpperCase(), hex8: n2.toHex8String().toUpperCase(), rgba: n2.toRgb(), hsv: a2, oldHue: e3.h || t30 || i2.h, source: e3.source, a: e3.a || n2.getAlpha() };
      }
      Object.defineProperty(t4, "__esModule", { value: true });
      var i = n(64), o = function(e3) {
        return e3 && e3.__esModule ? e3 : { default: e3 };
      }(i);
      t4.default = { props: ["value"], data: function() {
        return { val: r(this.value) };
      }, computed: { colors: { get: function() {
        return this.val;
      }, set: function(e3) {
        this.val = e3, this.$emit("input", e3);
      } } }, watch: { value: function(e3) {
        this.val = r(e3);
      } }, methods: { colorChange: function(e3, t30) {
        this.oldHue = this.colors.hsl.h, this.colors = r(e3, t30 || this.oldHue);
      }, isValidHex: function(e3) {
        return (0, o.default)(e3).isValid();
      }, simpleCheckForValidColor: function(e3) {
        for (var t30 = ["r", "g", "b", "a", "h", "s", "l", "v"], n2 = 0, r2 = 0, i2 = 0; i2 < t30.length; i2++) {
          var o2 = t30[i2];
          e3[o2] && (n2++, isNaN(e3[o2]) || r2++);
        }
        if (n2 === r2) return e3;
      }, paletteUpperCase: function(e3) {
        return e3.map(function(e4) {
          return e4.toUpperCase();
        });
      }, isTransparent: function(e3) {
        return 0 === (0, o.default)(e3).getAlpha();
      } } };
    }, function(e2, t4) {
      var n = e2.exports = "undefined" != typeof window && window.Math == Math ? window : "undefined" != typeof self && self.Math == Math ? self : Function("return this")();
      "number" == typeof __g && (__g = n);
    }, function(e2, t4, n) {
      function r(e3) {
        n(65);
      }
      Object.defineProperty(t4, "__esModule", { value: true });
      var i = n(36), o = n.n(i);
      for (var a2 in i) "default" !== a2 && function(e3) {
        n.d(t4, e3, function() {
          return i[e3];
        });
      }(a2);
      var s2 = n(67), l = n(2), u = r, f2 = l(o.a, s2.a, false, u, null, null);
      f2.options.__file = "src/components/common/EditableInput.vue", t4.default = f2.exports;
    }, function(e2, t4) {
      var n = {}.hasOwnProperty;
      e2.exports = function(e3, t30) {
        return n.call(e3, t30);
      };
    }, function(e2, t4, n) {
      var r = n(8), i = n(16);
      e2.exports = n(9) ? function(e3, t30, n2) {
        return r.f(e3, t30, i(1, n2));
      } : function(e3, t30, n2) {
        return e3[t30] = n2, e3;
      };
    }, function(e2, t4, n) {
      var r = n(13), i = n(42), o = n(25), a2 = Object.defineProperty;
      t4.f = n(9) ? Object.defineProperty : function(e3, t30, n2) {
        if (r(e3), t30 = o(t30, true), r(n2), i) try {
          return a2(e3, t30, n2);
        } catch (e4) {
        }
        if ("get" in n2 || "set" in n2) throw TypeError("Accessors not supported!");
        return "value" in n2 && (e3[t30] = n2.value), e3;
      };
    }, function(e2, t4, n) {
      e2.exports = !n(15)(function() {
        return 7 != Object.defineProperty({}, "a", { get: function() {
          return 7;
        } }).a;
      });
    }, function(e2, t4, n) {
      var r = n(89), i = n(22);
      e2.exports = function(e3) {
        return r(i(e3));
      };
    }, function(e2, t4, n) {
      var r = n(29)("wks"), i = n(17), o = n(4).Symbol, a2 = "function" == typeof o;
      (e2.exports = function(e3) {
        return r[e3] || (r[e3] = a2 && o[e3] || (a2 ? o : i)("Symbol." + e3));
      }).store = r;
    }, function(e2, t4, n) {
      function r(e3) {
        n(111);
      }
      Object.defineProperty(t4, "__esModule", { value: true });
      var i = n(50), o = n.n(i);
      for (var a2 in i) "default" !== a2 && function(e3) {
        n.d(t4, e3, function() {
          return i[e3];
        });
      }(a2);
      var s2 = n(113), l = n(2), u = r, f2 = l(o.a, s2.a, false, u, null, null);
      f2.options.__file = "src/components/common/Hue.vue", t4.default = f2.exports;
    }, function(e2, t4, n) {
      var r = n(14);
      e2.exports = function(e3) {
        if (!r(e3)) throw TypeError(e3 + " is not an object!");
        return e3;
      };
    }, function(e2, t4) {
      e2.exports = function(e3) {
        return "object" == typeof e3 ? null !== e3 : "function" == typeof e3;
      };
    }, function(e2, t4) {
      e2.exports = function(e3) {
        try {
          return !!e3();
        } catch (e4) {
          return true;
        }
      };
    }, function(e2, t4) {
      e2.exports = function(e3, t30) {
        return { enumerable: !(1 & e3), configurable: !(2 & e3), writable: !(4 & e3), value: t30 };
      };
    }, function(e2, t4) {
      var n = 0, r = Math.random();
      e2.exports = function(e3) {
        return "Symbol(".concat(void 0 === e3 ? "" : e3, ")_", (++n + r).toString(36));
      };
    }, function(e2, t4, n) {
      function r(e3) {
        n(123);
      }
      Object.defineProperty(t4, "__esModule", { value: true });
      var i = n(53), o = n.n(i);
      for (var a2 in i) "default" !== a2 && function(e3) {
        n.d(t4, e3, function() {
          return i[e3];
        });
      }(a2);
      var s2 = n(127), l = n(2), u = r, f2 = l(o.a, s2.a, false, u, null, null);
      f2.options.__file = "src/components/common/Saturation.vue", t4.default = f2.exports;
    }, function(e2, t4, n) {
      function r(e3) {
        n(128);
      }
      Object.defineProperty(t4, "__esModule", { value: true });
      var i = n(54), o = n.n(i);
      for (var a2 in i) "default" !== a2 && function(e3) {
        n.d(t4, e3, function() {
          return i[e3];
        });
      }(a2);
      var s2 = n(133), l = n(2), u = r, f2 = l(o.a, s2.a, false, u, null, null);
      f2.options.__file = "src/components/common/Alpha.vue", t4.default = f2.exports;
    }, function(e2, t4, n) {
      function r(e3) {
        n(130);
      }
      Object.defineProperty(t4, "__esModule", { value: true });
      var i = n(55), o = n.n(i);
      for (var a2 in i) "default" !== a2 && function(e3) {
        n.d(t4, e3, function() {
          return i[e3];
        });
      }(a2);
      var s2 = n(132), l = n(2), u = r, f2 = l(o.a, s2.a, false, u, null, null);
      f2.options.__file = "src/components/common/Checkboard.vue", t4.default = f2.exports;
    }, function(e2, t4) {
      var n = Math.ceil, r = Math.floor;
      e2.exports = function(e3) {
        return isNaN(e3 = +e3) ? 0 : (e3 > 0 ? r : n)(e3);
      };
    }, function(e2, t4) {
      e2.exports = function(e3) {
        if (void 0 == e3) throw TypeError("Can't call method on  " + e3);
        return e3;
      };
    }, function(e2, t4) {
      e2.exports = true;
    }, function(e2, t4) {
      var n = e2.exports = { version: "2.5.1" };
      "number" == typeof __e && (__e = n);
    }, function(e2, t4, n) {
      var r = n(14);
      e2.exports = function(e3, t30) {
        if (!r(e3)) return e3;
        var n2, i;
        if (t30 && "function" == typeof (n2 = e3.toString) && !r(i = n2.call(e3))) return i;
        if ("function" == typeof (n2 = e3.valueOf) && !r(i = n2.call(e3))) return i;
        if (!t30 && "function" == typeof (n2 = e3.toString) && !r(i = n2.call(e3))) return i;
        throw TypeError("Can't convert object to primitive value");
      };
    }, function(e2, t4) {
      e2.exports = {};
    }, function(e2, t4, n) {
      var r = n(46), i = n(30);
      e2.exports = Object.keys || function(e3) {
        return r(e3, i);
      };
    }, function(e2, t4, n) {
      var r = n(29)("keys"), i = n(17);
      e2.exports = function(e3) {
        return r[e3] || (r[e3] = i(e3));
      };
    }, function(e2, t4, n) {
      var r = n(4), i = r["__core-js_shared__"] || (r["__core-js_shared__"] = {});
      e2.exports = function(e3) {
        return i[e3] || (i[e3] = {});
      };
    }, function(e2, t4) {
      e2.exports = "constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf".split(",");
    }, function(e2, t4, n) {
      var r = n(8).f, i = n(6), o = n(11)("toStringTag");
      e2.exports = function(e3, t30, n2) {
        e3 && !i(e3 = n2 ? e3 : e3.prototype, o) && r(e3, o, { configurable: true, value: t30 });
      };
    }, function(e2, t4, n) {
      t4.f = n(11);
    }, function(e2, t4, n) {
      var r = n(4), i = n(24), o = n(23), a2 = n(32), s2 = n(8).f;
      e2.exports = function(e3) {
        var t30 = i.Symbol || (i.Symbol = o ? {} : r.Symbol || {});
        "_" == e3.charAt(0) || e3 in t30 || s2(t30, e3, { value: a2.f(e3) });
      };
    }, function(e2, t4) {
      t4.f = {}.propertyIsEnumerable;
    }, function(e2, t4, n) {
      function r(e3) {
        return e3 && e3.__esModule ? e3 : { default: e3 };
      }
      Object.defineProperty(t4, "__esModule", { value: true });
      var i = n(3), o = r(i), a2 = n(5), s2 = r(a2), c = ["#4D4D4D", "#999999", "#FFFFFF", "#F44E3B", "#FE9200", "#FCDC00", "#DBDF00", "#A4DD00", "#68CCCA", "#73D8FF", "#AEA1FF", "#FDA1FF", "#333333", "#808080", "#CCCCCC", "#D33115", "#E27300", "#FCC400", "#B0BC00", "#68BC00", "#16A5A5", "#009CE0", "#7B64FF", "#FA28FF", "#000000", "#666666", "#B3B3B3", "#9F0500", "#C45100", "#FB9E00", "#808900", "#194D33", "#0C797D", "#0062B1", "#653294", "#AB149E"];
      t4.default = { name: "Compact", mixins: [o.default], props: { palette: { type: Array, default: function() {
        return c;
      } } }, components: { "ed-in": s2.default }, computed: { pick: function() {
        return this.colors.hex.toUpperCase();
      } }, methods: { handlerClick: function(e3) {
        this.colorChange({ hex: e3, source: "hex" });
      } } };
    }, function(e2, t4, n) {
      Object.defineProperty(t4, "__esModule", { value: true }), t4.default = { name: "editableInput", props: { label: String, labelText: String, desc: String, value: [String, Number], max: Number, min: Number, arrowOffset: { type: Number, default: 1 } }, computed: { val: { get: function() {
        return this.value;
      }, set: function(e3) {
        if (!(void 0 !== this.max && +e3 > this.max)) return e3;
        this.$refs.input.value = this.max;
      } }, labelId: function() {
        return "input__label__" + this.label + "__" + Math.random().toString().slice(2, 5);
      }, labelSpanText: function() {
        return this.labelText || this.label;
      } }, methods: { update: function(e3) {
        this.handleChange(e3.target.value);
      }, handleChange: function(e3) {
        var t30 = {};
        t30[this.label] = e3, void 0 === t30.hex && void 0 === t30["#"] ? this.$emit("change", t30) : e3.length > 5 && this.$emit("change", t30);
      }, handleKeyDown: function(e3) {
        var t30 = this.val, n2 = Number(t30);
        if (n2) {
          var r = this.arrowOffset || 1;
          38 === e3.keyCode && (t30 = n2 + r, this.handleChange(t30), e3.preventDefault()), 40 === e3.keyCode && (t30 = n2 - r, this.handleChange(t30), e3.preventDefault());
        }
      } } };
    }, function(e2, t4, n) {
      Object.defineProperty(t4, "__esModule", { value: true });
      var r = n(3), i = function(e3) {
        return e3 && e3.__esModule ? e3 : { default: e3 };
      }(r), o = ["#FFFFFF", "#F2F2F2", "#E6E6E6", "#D9D9D9", "#CCCCCC", "#BFBFBF", "#B3B3B3", "#A6A6A6", "#999999", "#8C8C8C", "#808080", "#737373", "#666666", "#595959", "#4D4D4D", "#404040", "#333333", "#262626", "#0D0D0D", "#000000"];
      t4.default = { name: "Grayscale", mixins: [i.default], props: { palette: { type: Array, default: function() {
        return o;
      } } }, components: {}, computed: { pick: function() {
        return this.colors.hex.toUpperCase();
      } }, methods: { handlerClick: function(e3) {
        this.colorChange({ hex: e3, source: "hex" });
      } } };
    }, function(e2, t4, n) {
      function r(e3) {
        return e3 && e3.__esModule ? e3 : { default: e3 };
      }
      Object.defineProperty(t4, "__esModule", { value: true });
      var i = n(5), o = r(i), a2 = n(3), s2 = r(a2);
      t4.default = { name: "Material", mixins: [s2.default], components: { "ed-in": o.default }, methods: { onChange: function(e3) {
        e3 && (e3.hex ? this.isValidHex(e3.hex) && this.colorChange({ hex: e3.hex, source: "hex" }) : (e3.r || e3.g || e3.b) && this.colorChange({ r: e3.r || this.colors.rgba.r, g: e3.g || this.colors.rgba.g, b: e3.b || this.colors.rgba.b, a: e3.a || this.colors.rgba.a, source: "rgba" }));
      } } };
    }, function(e2, t4, n) {
      function r(e3) {
        return e3 && e3.__esModule ? e3 : { default: e3 };
      }
      Object.defineProperty(t4, "__esModule", { value: true });
      var i = n(80), o = r(i), a2 = n(3), s2 = r(a2), c = n(12), l = r(c);
      t4.default = { name: "Slider", mixins: [s2.default], props: { swatches: { type: Array, default: function() {
        return [{ s: 0.5, l: 0.8 }, { s: 0.5, l: 0.65 }, { s: 0.5, l: 0.5 }, { s: 0.5, l: 0.35 }, { s: 0.5, l: 0.2 }];
      } } }, components: { hue: l.default }, computed: { normalizedSwatches: function() {
        return this.swatches.map(function(e3) {
          return "object" !== (void 0 === e3 ? "undefined" : (0, o.default)(e3)) ? { s: 0.5, l: e3 } : e3;
        });
      } }, methods: { isActive: function(e3, t30) {
        var n2 = this.colors.hsl;
        return 1 === n2.l && 1 === e3.l || (0 === n2.l && 0 === e3.l || Math.abs(n2.l - e3.l) < 0.01 && Math.abs(n2.s - e3.s) < 0.01);
      }, hueChange: function(e3) {
        this.colorChange(e3);
      }, handleSwClick: function(e3, t30) {
        this.colorChange({ h: this.colors.hsl.h, s: t30.s, l: t30.l, source: "hsl" });
      } } };
    }, function(e2, t4, n) {
      var r = n(23), i = n(41), o = n(44), a2 = n(7), s2 = n(6), c = n(26), l = n(87), u = n(31), f2 = n(94), d2 = n(11)("iterator"), h3 = !([].keys && "next" in [].keys()), p = function() {
        return this;
      };
      e2.exports = function(e3, t30, n2, v2, g, b, x2) {
        l(n2, t30, v2);
        var m2, _2, w3, y = function(e4) {
          if (!h3 && e4 in S2) return S2[e4];
          switch (e4) {
            case "keys":
            case "values":
              return function() {
                return new n2(this, e4);
              };
          }
          return function() {
            return new n2(this, e4);
          };
        }, C = t30 + " Iterator", k = "values" == g, F = false, S2 = e3.prototype, A2 = S2[d2] || S2["@@iterator"] || g && S2[g], E = A2 || y(g), O = g ? k ? y("entries") : E : void 0, M2 = "Array" == t30 ? S2.entries || A2 : A2;
        if (M2 && (w3 = f2(M2.call(new e3()))) !== Object.prototype && w3.next && (u(w3, C, true), r || s2(w3, d2) || a2(w3, d2, p)), k && A2 && "values" !== A2.name && (F = true, E = function() {
          return A2.call(this);
        }), r && !x2 || !h3 && !F && S2[d2] || a2(S2, d2, E), c[t30] = E, c[C] = p, g) if (m2 = { values: k ? E : y("values"), keys: b ? E : y("keys"), entries: O }, x2) for (_2 in m2) _2 in S2 || o(S2, _2, m2[_2]);
        else i(i.P + i.F * (h3 || F), t30, m2);
        return m2;
      };
    }, function(e2, t4, n) {
      var r = n(4), i = n(24), o = n(85), a2 = n(7), s2 = function(e3, t30, n2) {
        var c, l, u, f2 = e3 & s2.F, d2 = e3 & s2.G, h3 = e3 & s2.S, p = e3 & s2.P, v2 = e3 & s2.B, g = e3 & s2.W, b = d2 ? i : i[t30] || (i[t30] = {}), x2 = b.prototype, m2 = d2 ? r : h3 ? r[t30] : (r[t30] || {}).prototype;
        d2 && (n2 = t30);
        for (c in n2) (l = !f2 && m2 && void 0 !== m2[c]) && c in b || (u = l ? m2[c] : n2[c], b[c] = d2 && "function" != typeof m2[c] ? n2[c] : v2 && l ? o(u, r) : g && m2[c] == u ? function(e4) {
          var t33 = function(t51, n3, r2) {
            if (this instanceof e4) {
              switch (arguments.length) {
                case 0:
                  return new e4();
                case 1:
                  return new e4(t51);
                case 2:
                  return new e4(t51, n3);
              }
              return new e4(t51, n3, r2);
            }
            return e4.apply(this, arguments);
          };
          return t33.prototype = e4.prototype, t33;
        }(u) : p && "function" == typeof u ? o(Function.call, u) : u, p && ((b.virtual || (b.virtual = {}))[c] = u, e3 & s2.R && x2 && !x2[c] && a2(x2, c, u)));
      };
      s2.F = 1, s2.G = 2, s2.S = 4, s2.P = 8, s2.B = 16, s2.W = 32, s2.U = 64, s2.R = 128, e2.exports = s2;
    }, function(e2, t4, n) {
      e2.exports = !n(9) && !n(15)(function() {
        return 7 != Object.defineProperty(n(43)("div"), "a", { get: function() {
          return 7;
        } }).a;
      });
    }, function(e2, t4, n) {
      var r = n(14), i = n(4).document, o = r(i) && r(i.createElement);
      e2.exports = function(e3) {
        return o ? i.createElement(e3) : {};
      };
    }, function(e2, t4, n) {
      e2.exports = n(7);
    }, function(e2, t4, n) {
      var r = n(13), i = n(88), o = n(30), a2 = n(28)("IE_PROTO"), s2 = function() {
      }, c = function() {
        var e3, t30 = n(43)("iframe"), r2 = o.length;
        for (t30.style.display = "none", n(93).appendChild(t30), t30.src = "javascript:", e3 = t30.contentWindow.document, e3.open(), e3.write("<script>document.F=Object<\/script>"), e3.close(), c = e3.F; r2--; ) delete c.prototype[o[r2]];
        return c();
      };
      e2.exports = Object.create || function(e3, t30) {
        var n2;
        return null !== e3 ? (s2.prototype = r(e3), n2 = new s2(), s2.prototype = null, n2[a2] = e3) : n2 = c(), void 0 === t30 ? n2 : i(n2, t30);
      };
    }, function(e2, t4, n) {
      var r = n(6), i = n(10), o = n(90)(false), a2 = n(28)("IE_PROTO");
      e2.exports = function(e3, t30) {
        var n2, s2 = i(e3), c = 0, l = [];
        for (n2 in s2) n2 != a2 && r(s2, n2) && l.push(n2);
        for (; t30.length > c; ) r(s2, n2 = t30[c++]) && (~o(l, n2) || l.push(n2));
        return l;
      };
    }, function(e2, t4) {
      var n = {}.toString;
      e2.exports = function(e3) {
        return n.call(e3).slice(8, -1);
      };
    }, function(e2, t4) {
      t4.f = Object.getOwnPropertySymbols;
    }, function(e2, t4, n) {
      var r = n(46), i = n(30).concat("length", "prototype");
      t4.f = Object.getOwnPropertyNames || function(e3) {
        return r(e3, i);
      };
    }, function(e2, t4, n) {
      Object.defineProperty(t4, "__esModule", { value: true }), t4.default = { name: "Hue", props: { value: Object, direction: { type: String, default: "horizontal" } }, data: function() {
        return { oldHue: 0, pullDirection: "" };
      }, computed: { colors: function() {
        var e3 = this.value.hsl.h;
        return 0 !== e3 && e3 - this.oldHue > 0 && (this.pullDirection = "right"), 0 !== e3 && e3 - this.oldHue < 0 && (this.pullDirection = "left"), this.oldHue = e3, this.value;
      }, directionClass: function() {
        return { "vc-hue--horizontal": "horizontal" === this.direction, "vc-hue--vertical": "vertical" === this.direction };
      }, pointerTop: function() {
        return "vertical" === this.direction ? 0 === this.colors.hsl.h && "right" === this.pullDirection ? 0 : -100 * this.colors.hsl.h / 360 + 100 + "%" : 0;
      }, pointerLeft: function() {
        return "vertical" === this.direction ? 0 : 0 === this.colors.hsl.h && "right" === this.pullDirection ? "100%" : 100 * this.colors.hsl.h / 360 + "%";
      } }, methods: { handleChange: function(e3, t30) {
        !t30 && e3.preventDefault();
        var n2 = this.$refs.container;
        if (n2) {
          var r, i, o = n2.clientWidth, a2 = n2.clientHeight, s2 = n2.getBoundingClientRect().left + window.pageXOffset, c = n2.getBoundingClientRect().top + window.pageYOffset, l = e3.pageX || (e3.touches ? e3.touches[0].pageX : 0), u = e3.pageY || (e3.touches ? e3.touches[0].pageY : 0), f2 = l - s2, d2 = u - c;
          "vertical" === this.direction ? (d2 < 0 ? r = 360 : d2 > a2 ? r = 0 : (i = -100 * d2 / a2 + 100, r = 360 * i / 100), this.colors.hsl.h !== r && this.$emit("change", { h: r, s: this.colors.hsl.s, l: this.colors.hsl.l, a: this.colors.hsl.a, source: "hsl" })) : (f2 < 0 ? r = 0 : f2 > o ? r = 360 : (i = 100 * f2 / o, r = 360 * i / 100), this.colors.hsl.h !== r && this.$emit("change", { h: r, s: this.colors.hsl.s, l: this.colors.hsl.l, a: this.colors.hsl.a, source: "hsl" }));
        }
      }, handleMouseDown: function(e3) {
        this.handleChange(e3, true), window.addEventListener("mousemove", this.handleChange), window.addEventListener("mouseup", this.handleMouseUp);
      }, handleMouseUp: function(e3) {
        this.unbindEventListeners();
      }, unbindEventListeners: function() {
        window.removeEventListener("mousemove", this.handleChange), window.removeEventListener("mouseup", this.handleMouseUp);
      } } };
    }, function(e2, t4, n) {
      function r(e3) {
        return e3 && e3.__esModule ? e3 : { default: e3 };
      }
      Object.defineProperty(t4, "__esModule", { value: true });
      var i = n(118), o = r(i), a2 = n(3), s2 = r(a2), c = ["red", "pink", "purple", "deepPurple", "indigo", "blue", "lightBlue", "cyan", "teal", "green", "lightGreen", "lime", "yellow", "amber", "orange", "deepOrange", "brown", "blueGrey", "black"], l = ["900", "700", "500", "300", "100"], u = function() {
        var e3 = [];
        return c.forEach(function(t30) {
          var n2 = [];
          "black" === t30.toLowerCase() || "white" === t30.toLowerCase() ? n2 = n2.concat(["#000000", "#FFFFFF"]) : l.forEach(function(e4) {
            var r2 = o.default[t30][e4];
            n2.push(r2.toUpperCase());
          }), e3.push(n2);
        }), e3;
      }();
      t4.default = { name: "Swatches", mixins: [s2.default], props: { palette: { type: Array, default: function() {
        return u;
      } } }, computed: { pick: function() {
        return this.colors.hex;
      } }, methods: { equal: function(e3) {
        return e3.toLowerCase() === this.colors.hex.toLowerCase();
      }, handlerClick: function(e3) {
        this.colorChange({ hex: e3, source: "hex" });
      } } };
    }, function(e2, t4, n) {
      function r(e3) {
        return e3 && e3.__esModule ? e3 : { default: e3 };
      }
      Object.defineProperty(t4, "__esModule", { value: true });
      var i = n(3), o = r(i), a2 = n(5), s2 = r(a2), c = n(18), l = r(c), u = n(12), f2 = r(u), d2 = n(19), h3 = r(d2);
      t4.default = { name: "Photoshop", mixins: [o.default], props: { head: { type: String, default: "Color Picker" }, disableFields: { type: Boolean, default: false }, hasResetButton: { type: Boolean, default: false }, acceptLabel: { type: String, default: "OK" }, cancelLabel: { type: String, default: "Cancel" }, resetLabel: { type: String, default: "Reset" }, newLabel: { type: String, default: "new" }, currentLabel: { type: String, default: "current" } }, components: { saturation: l.default, hue: f2.default, alpha: h3.default, "ed-in": s2.default }, data: function() {
        return { currentColor: "#FFF" };
      }, computed: { hsv: function() {
        var e3 = this.colors.hsv;
        return { h: e3.h.toFixed(), s: (100 * e3.s).toFixed(), v: (100 * e3.v).toFixed() };
      }, hex: function() {
        var e3 = this.colors.hex;
        return e3 && e3.replace("#", "");
      } }, created: function() {
        this.currentColor = this.colors.hex;
      }, methods: { childChange: function(e3) {
        this.colorChange(e3);
      }, inputChange: function(e3) {
        e3 && (e3["#"] ? this.isValidHex(e3["#"]) && this.colorChange({ hex: e3["#"], source: "hex" }) : e3.r || e3.g || e3.b || e3.a ? this.colorChange({ r: e3.r || this.colors.rgba.r, g: e3.g || this.colors.rgba.g, b: e3.b || this.colors.rgba.b, a: e3.a || this.colors.rgba.a, source: "rgba" }) : (e3.h || e3.s || e3.v) && this.colorChange({ h: e3.h || this.colors.hsv.h, s: e3.s / 100 || this.colors.hsv.s, v: e3.v / 100 || this.colors.hsv.v, source: "hsv" }));
      }, clickCurrentColor: function() {
        this.colorChange({ hex: this.currentColor, source: "hex" });
      }, handleAccept: function() {
        this.$emit("ok");
      }, handleCancel: function() {
        this.$emit("cancel");
      }, handleReset: function() {
        this.$emit("reset");
      } } };
    }, function(e2, t4, n) {
      function r(e3) {
        return e3 && e3.__esModule ? e3 : { default: e3 };
      }
      Object.defineProperty(t4, "__esModule", { value: true });
      var i = n(125), o = r(i), a2 = n(126), s2 = r(a2);
      t4.default = { name: "Saturation", props: { value: Object }, computed: { colors: function() {
        return this.value;
      }, bgColor: function() {
        return "hsl(" + this.colors.hsv.h + ", 100%, 50%)";
      }, pointerTop: function() {
        return -100 * this.colors.hsv.v + 1 + 100 + "%";
      }, pointerLeft: function() {
        return 100 * this.colors.hsv.s + "%";
      } }, beforeDestroy: function() {
        this.unbindEventListeners();
      }, methods: { throttle: (0, s2.default)(function(e3, t30) {
        e3(t30);
      }, 20, { leading: true, trailing: false }), handleChange: function(e3, t30) {
        !t30 && e3.preventDefault();
        var n2 = this.$refs.container;
        if (n2) {
          var r2 = n2.clientWidth, i2 = n2.clientHeight, a3 = n2.getBoundingClientRect().left + window.pageXOffset, s3 = n2.getBoundingClientRect().top + window.pageYOffset, c = e3.pageX || (e3.touches ? e3.touches[0].pageX : 0), l = e3.pageY || (e3.touches ? e3.touches[0].pageY : 0), u = (0, o.default)(c - a3, 0, r2), f2 = (0, o.default)(l - s3, 0, i2), d2 = u / r2, h3 = (0, o.default)(-f2 / i2 + 1, 0, 1);
          this.throttle(this.onChange, { h: this.colors.hsv.h, s: d2, v: h3, a: this.colors.hsv.a, source: "hsva" });
        }
      }, onChange: function(e3) {
        this.$emit("change", e3);
      }, handleMouseDown: function(e3) {
        window.addEventListener("mousemove", this.handleChange), window.addEventListener("mouseup", this.handleChange), window.addEventListener("mouseup", this.handleMouseUp);
      }, handleMouseUp: function(e3) {
        this.unbindEventListeners();
      }, unbindEventListeners: function() {
        window.removeEventListener("mousemove", this.handleChange), window.removeEventListener("mouseup", this.handleChange), window.removeEventListener("mouseup", this.handleMouseUp);
      } } };
    }, function(e2, t4, n) {
      Object.defineProperty(t4, "__esModule", { value: true });
      var r = n(20), i = function(e3) {
        return e3 && e3.__esModule ? e3 : { default: e3 };
      }(r);
      t4.default = { name: "Alpha", props: { value: Object, onChange: Function }, components: { checkboard: i.default }, computed: { colors: function() {
        return this.value;
      }, gradientColor: function() {
        var e3 = this.colors.rgba, t30 = [e3.r, e3.g, e3.b].join(",");
        return "linear-gradient(to right, rgba(" + t30 + ", 0) 0%, rgba(" + t30 + ", 1) 100%)";
      } }, methods: { handleChange: function(e3, t30) {
        !t30 && e3.preventDefault();
        var n2 = this.$refs.container;
        if (n2) {
          var r2, i2 = n2.clientWidth, o = n2.getBoundingClientRect().left + window.pageXOffset, a2 = e3.pageX || (e3.touches ? e3.touches[0].pageX : 0), s2 = a2 - o;
          r2 = s2 < 0 ? 0 : s2 > i2 ? 1 : Math.round(100 * s2 / i2) / 100, this.colors.a !== r2 && this.$emit("change", { h: this.colors.hsl.h, s: this.colors.hsl.s, l: this.colors.hsl.l, a: r2, source: "rgba" });
        }
      }, handleMouseDown: function(e3) {
        this.handleChange(e3, true), window.addEventListener("mousemove", this.handleChange), window.addEventListener("mouseup", this.handleMouseUp);
      }, handleMouseUp: function() {
        this.unbindEventListeners();
      }, unbindEventListeners: function() {
        window.removeEventListener("mousemove", this.handleChange), window.removeEventListener("mouseup", this.handleMouseUp);
      } } };
    }, function(e2, t4, n) {
      function r(e3, t30, n2) {
        if ("undefined" == typeof document) return null;
        var r2 = document.createElement("canvas");
        r2.width = r2.height = 2 * n2;
        var i2 = r2.getContext("2d");
        return i2 ? (i2.fillStyle = e3, i2.fillRect(0, 0, r2.width, r2.height), i2.fillStyle = t30, i2.fillRect(0, 0, n2, n2), i2.translate(n2, n2), i2.fillRect(0, 0, n2, n2), r2.toDataURL()) : null;
      }
      function i(e3, t30, n2) {
        var i2 = e3 + "," + t30 + "," + n2;
        if (o[i2]) return o[i2];
        var a2 = r(e3, t30, n2);
        return o[i2] = a2, a2;
      }
      Object.defineProperty(t4, "__esModule", { value: true });
      var o = {};
      t4.default = { name: "Checkboard", props: { size: { type: [Number, String], default: 8 }, white: { type: String, default: "#fff" }, grey: { type: String, default: "#e6e6e6" } }, computed: { bgStyle: function() {
        return { "background-image": "url(" + i(this.white, this.grey, this.size) + ")" };
      } } };
    }, function(e2, t4, n) {
      function r(e3) {
        return e3 && e3.__esModule ? e3 : { default: e3 };
      }
      Object.defineProperty(t4, "__esModule", { value: true });
      var i = n(3), o = r(i), a2 = n(5), s2 = r(a2), c = n(18), l = r(c), u = n(12), f2 = r(u), d2 = n(19), h3 = r(d2), p = n(20), v2 = r(p), g = ["#D0021B", "#F5A623", "#F8E71C", "#8B572A", "#7ED321", "#417505", "#BD10E0", "#9013FE", "#4A90E2", "#50E3C2", "#B8E986", "#000000", "#4A4A4A", "#9B9B9B", "#FFFFFF", "rgba(0,0,0,0)"];
      t4.default = { name: "Sketch", mixins: [o.default], components: { saturation: l.default, hue: f2.default, alpha: h3.default, "ed-in": s2.default, checkboard: v2.default }, props: { presetColors: { type: Array, default: function() {
        return g;
      } }, disableAlpha: { type: Boolean, default: false }, disableFields: { type: Boolean, default: false } }, computed: { hex: function() {
        var e3 = void 0;
        return e3 = this.colors.a < 1 ? this.colors.hex8 : this.colors.hex, e3.replace("#", "");
      }, activeColor: function() {
        var e3 = this.colors.rgba;
        return "rgba(" + [e3.r, e3.g, e3.b, e3.a].join(",") + ")";
      } }, methods: { handlePreset: function(e3) {
        this.colorChange({ hex: e3, source: "hex" });
      }, childChange: function(e3) {
        this.colorChange(e3);
      }, inputChange: function(e3) {
        e3 && (e3.hex ? this.isValidHex(e3.hex) && this.colorChange({ hex: e3.hex, source: "hex" }) : (e3.r || e3.g || e3.b || e3.a) && this.colorChange({ r: e3.r || this.colors.rgba.r, g: e3.g || this.colors.rgba.g, b: e3.b || this.colors.rgba.b, a: e3.a || this.colors.rgba.a, source: "rgba" }));
      } } };
    }, function(e2, t4, n) {
      function r(e3) {
        return e3 && e3.__esModule ? e3 : { default: e3 };
      }
      Object.defineProperty(t4, "__esModule", { value: true });
      var i = n(3), o = r(i), a2 = n(5), s2 = r(a2), c = n(18), l = r(c), u = n(12), f2 = r(u), d2 = n(19), h3 = r(d2), p = n(20), v2 = r(p);
      t4.default = { name: "Chrome", mixins: [o.default], props: { disableAlpha: { type: Boolean, default: false }, disableFields: { type: Boolean, default: false } }, components: { saturation: l.default, hue: f2.default, alpha: h3.default, "ed-in": s2.default, checkboard: v2.default }, data: function() {
        return { fieldsIndex: 0, highlight: false };
      }, computed: { hsl: function() {
        var e3 = this.colors.hsl, t30 = e3.h, n2 = e3.s, r2 = e3.l;
        return { h: t30.toFixed(), s: (100 * n2).toFixed() + "%", l: (100 * r2).toFixed() + "%" };
      }, activeColor: function() {
        var e3 = this.colors.rgba;
        return "rgba(" + [e3.r, e3.g, e3.b, e3.a].join(",") + ")";
      }, hasAlpha: function() {
        return this.colors.a < 1;
      } }, methods: { childChange: function(e3) {
        this.colorChange(e3);
      }, inputChange: function(e3) {
        if (e3) {
          if (e3.hex) this.isValidHex(e3.hex) && this.colorChange({ hex: e3.hex, source: "hex" });
          else if (e3.r || e3.g || e3.b || e3.a) this.colorChange({ r: e3.r || this.colors.rgba.r, g: e3.g || this.colors.rgba.g, b: e3.b || this.colors.rgba.b, a: e3.a || this.colors.rgba.a, source: "rgba" });
          else if (e3.h || e3.s || e3.l) {
            var t30 = e3.s ? e3.s.replace("%", "") / 100 : this.colors.hsl.s, n2 = e3.l ? e3.l.replace("%", "") / 100 : this.colors.hsl.l;
            this.colorChange({ h: e3.h || this.colors.hsl.h, s: t30, l: n2, source: "hsl" });
          }
        }
      }, toggleViews: function() {
        if (this.fieldsIndex >= 2) return void (this.fieldsIndex = 0);
        this.fieldsIndex++;
      }, showHighlight: function() {
        this.highlight = true;
      }, hideHighlight: function() {
        this.highlight = false;
      } } };
    }, function(e2, t4, n) {
      function r(e3) {
        return e3 && e3.__esModule ? e3 : { default: e3 };
      }
      Object.defineProperty(t4, "__esModule", { value: true });
      var i = n(5), o = r(i), a2 = n(3), s2 = r(a2), c = ["#FF6900", "#FCB900", "#7BDCB5", "#00D084", "#8ED1FC", "#0693E3", "#ABB8C3", "#EB144C", "#F78DA7", "#9900EF"];
      t4.default = { name: "Twitter", mixins: [s2.default], components: { editableInput: o.default }, props: { width: { type: [String, Number], default: 276 }, defaultColors: { type: Array, default: function() {
        return c;
      } }, triangle: { default: "top-left", validator: function(e3) {
        return ["hide", "top-left", "top-right"].includes(e3);
      } } }, computed: { hsv: function() {
        var e3 = this.colors.hsv;
        return { h: e3.h.toFixed(), s: (100 * e3.s).toFixed(), v: (100 * e3.v).toFixed() };
      }, hex: function() {
        var e3 = this.colors.hex;
        return e3 && e3.replace("#", "");
      } }, methods: { equal: function(e3) {
        return e3.toLowerCase() === this.colors.hex.toLowerCase();
      }, handlerClick: function(e3) {
        this.colorChange({ hex: e3, source: "hex" });
      }, inputChange: function(e3) {
        e3 && (e3["#"] ? this.isValidHex(e3["#"]) && this.colorChange({ hex: e3["#"], source: "hex" }) : e3.r || e3.g || e3.b || e3.a ? this.colorChange({ r: e3.r || this.colors.rgba.r, g: e3.g || this.colors.rgba.g, b: e3.b || this.colors.rgba.b, a: e3.a || this.colors.rgba.a, source: "rgba" }) : (e3.h || e3.s || e3.v) && this.colorChange({ h: e3.h || this.colors.hsv.h, s: e3.s / 100 || this.colors.hsv.s, v: e3.v / 100 || this.colors.hsv.v, source: "hsv" }));
      } } };
    }, function(e2, t4, n) {
      function r(e3) {
        return e3 && e3.__esModule ? e3 : { default: e3 };
      }
      var i = n(60), o = r(i), a2 = n(69), s2 = r(a2), c = n(73), l = r(c), u = n(77), f2 = r(u), d2 = n(115), h3 = r(d2), p = n(120), v2 = r(p), g = n(135), b = r(g), x2 = n(139), m2 = r(x2), _2 = n(143), w3 = r(_2), y = n(19), C = r(y), k = n(20), F = r(k), S2 = n(5), A2 = r(S2), E = n(12), O = r(E), M2 = n(18), j = r(M2), L = n(3), P = r(L), R = { version: "2.8.2", Compact: o.default, Grayscale: s2.default, Twitter: w3.default, Material: l.default, Slider: f2.default, Swatches: h3.default, Photoshop: v2.default, Sketch: b.default, Chrome: m2.default, Alpha: C.default, Checkboard: F.default, EditableInput: A2.default, Hue: O.default, Saturation: j.default, ColorMixin: P.default };
      e2.exports = R;
    }, function(e2, t4, n) {
      function r(e3) {
        n(61);
      }
      Object.defineProperty(t4, "__esModule", { value: true });
      var i = n(35), o = n.n(i);
      for (var a2 in i) "default" !== a2 && function(e3) {
        n.d(t4, e3, function() {
          return i[e3];
        });
      }(a2);
      var s2 = n(68), l = n(2), u = r, f2 = l(o.a, s2.a, false, u, null, null);
      f2.options.__file = "src/components/Compact.vue", t4.default = f2.exports;
    }, function(e2, t4, n) {
      var r = n(62);
      "string" == typeof r && (r = [[e2.i, r, ""]]), r.locals && (e2.exports = r.locals);
      n(1)("6ce8a5a8", r, false, {});
    }, function(e2, t4, n) {
      t4 = e2.exports = n(0)(false), t4.push([e2.i, "\n.vc-compact {\n  padding-top: 5px;\n  padding-left: 5px;\n  width: 245px;\n  border-radius: 2px;\n  box-sizing: border-box;\n  box-shadow: 0 2px 10px rgba(0,0,0,.12), 0 2px 5px rgba(0,0,0,.16);\n  background-color: #fff;\n}\n.vc-compact-colors {\n  overflow: hidden;\n  padding: 0;\n  margin: 0;\n}\n.vc-compact-color-item {\n  list-style: none;\n  width: 15px;\n  height: 15px;\n  float: left;\n  margin-right: 5px;\n  margin-bottom: 5px;\n  position: relative;\n  cursor: pointer;\n}\n.vc-compact-color-item--white {\n  box-shadow: inset 0 0 0 1px #ddd;\n}\n.vc-compact-color-item--white .vc-compact-dot {\n  background: #000;\n}\n.vc-compact-dot {\n  position: absolute;\n  top: 5px;\n  right: 5px;\n  bottom: 5px;\n  left: 5px;\n  border-radius: 50%;\n  opacity: 1;\n  background: #fff;\n}\n", ""]);
    }, function(e2, t4) {
      e2.exports = function(e3, t30) {
        for (var n = [], r = {}, i = 0; i < t30.length; i++) {
          var o = t30[i], a2 = o[0], s2 = o[1], c = o[2], l = o[3], u = { id: e3 + ":" + i, css: s2, media: c, sourceMap: l };
          r[a2] ? r[a2].parts.push(u) : n.push(r[a2] = { id: a2, parts: [u] });
        }
        return n;
      };
    }, function(e2, t4, n) {
      var r;
      !function(i) {
        function o(e3, t30) {
          if (e3 = e3 || "", t30 = t30 || {}, e3 instanceof o) return e3;
          if (!(this instanceof o)) return new o(e3, t30);
          var n2 = a2(e3);
          this._originalInput = e3, this._r = n2.r, this._g = n2.g, this._b = n2.b, this._a = n2.a, this._roundA = G(100 * this._a) / 100, this._format = t30.format || n2.format, this._gradientType = t30.gradientType, this._r < 1 && (this._r = G(this._r)), this._g < 1 && (this._g = G(this._g)), this._b < 1 && (this._b = G(this._b)), this._ok = n2.ok, this._tc_id = U++;
        }
        function a2(e3) {
          var t30 = { r: 0, g: 0, b: 0 }, n2 = 1, r2 = null, i2 = null, o2 = null, a3 = false, c2 = false;
          return "string" == typeof e3 && (e3 = N(e3)), "object" == typeof e3 && (H2(e3.r) && H2(e3.g) && H2(e3.b) ? (t30 = s2(e3.r, e3.g, e3.b), a3 = true, c2 = "%" === String(e3.r).substr(-1) ? "prgb" : "rgb") : H2(e3.h) && H2(e3.s) && H2(e3.v) ? (r2 = D2(e3.s), i2 = D2(e3.v), t30 = f2(e3.h, r2, i2), a3 = true, c2 = "hsv") : H2(e3.h) && H2(e3.s) && H2(e3.l) && (r2 = D2(e3.s), o2 = D2(e3.l), t30 = l(e3.h, r2, o2), a3 = true, c2 = "hsl"), e3.hasOwnProperty("a") && (n2 = e3.a)), n2 = E(n2), { ok: a3, format: e3.format || c2, r: V(255, q(t30.r, 0)), g: V(255, q(t30.g, 0)), b: V(255, q(t30.b, 0)), a: n2 };
        }
        function s2(e3, t30, n2) {
          return { r: 255 * O(e3, 255), g: 255 * O(t30, 255), b: 255 * O(n2, 255) };
        }
        function c(e3, t30, n2) {
          e3 = O(e3, 255), t30 = O(t30, 255), n2 = O(n2, 255);
          var r2, i2, o2 = q(e3, t30, n2), a3 = V(e3, t30, n2), s3 = (o2 + a3) / 2;
          if (o2 == a3) r2 = i2 = 0;
          else {
            var c2 = o2 - a3;
            switch (i2 = s3 > 0.5 ? c2 / (2 - o2 - a3) : c2 / (o2 + a3), o2) {
              case e3:
                r2 = (t30 - n2) / c2 + (t30 < n2 ? 6 : 0);
                break;
              case t30:
                r2 = (n2 - e3) / c2 + 2;
                break;
              case n2:
                r2 = (e3 - t30) / c2 + 4;
            }
            r2 /= 6;
          }
          return { h: r2, s: i2, l: s3 };
        }
        function l(e3, t30, n2) {
          function r2(e4, t33, n3) {
            return n3 < 0 && (n3 += 1), n3 > 1 && (n3 -= 1), n3 < 1 / 6 ? e4 + 6 * (t33 - e4) * n3 : n3 < 0.5 ? t33 : n3 < 2 / 3 ? e4 + (t33 - e4) * (2 / 3 - n3) * 6 : e4;
          }
          var i2, o2, a3;
          if (e3 = O(e3, 360), t30 = O(t30, 100), n2 = O(n2, 100), 0 === t30) i2 = o2 = a3 = n2;
          else {
            var s3 = n2 < 0.5 ? n2 * (1 + t30) : n2 + t30 - n2 * t30, c2 = 2 * n2 - s3;
            i2 = r2(c2, s3, e3 + 1 / 3), o2 = r2(c2, s3, e3), a3 = r2(c2, s3, e3 - 1 / 3);
          }
          return { r: 255 * i2, g: 255 * o2, b: 255 * a3 };
        }
        function u(e3, t30, n2) {
          e3 = O(e3, 255), t30 = O(t30, 255), n2 = O(n2, 255);
          var r2, i2, o2 = q(e3, t30, n2), a3 = V(e3, t30, n2), s3 = o2, c2 = o2 - a3;
          if (i2 = 0 === o2 ? 0 : c2 / o2, o2 == a3) r2 = 0;
          else {
            switch (o2) {
              case e3:
                r2 = (t30 - n2) / c2 + (t30 < n2 ? 6 : 0);
                break;
              case t30:
                r2 = (n2 - e3) / c2 + 2;
                break;
              case n2:
                r2 = (e3 - t30) / c2 + 4;
            }
            r2 /= 6;
          }
          return { h: r2, s: i2, v: s3 };
        }
        function f2(e3, t30, n2) {
          e3 = 6 * O(e3, 360), t30 = O(t30, 100), n2 = O(n2, 100);
          var r2 = i.floor(e3), o2 = e3 - r2, a3 = n2 * (1 - t30), s3 = n2 * (1 - o2 * t30), c2 = n2 * (1 - (1 - o2) * t30), l2 = r2 % 6;
          return { r: 255 * [n2, s3, a3, a3, c2, n2][l2], g: 255 * [c2, n2, n2, s3, a3, a3][l2], b: 255 * [a3, a3, c2, n2, n2, s3][l2] };
        }
        function d2(e3, t30, n2, r2) {
          var i2 = [R(G(e3).toString(16)), R(G(t30).toString(16)), R(G(n2).toString(16))];
          return r2 && i2[0].charAt(0) == i2[0].charAt(1) && i2[1].charAt(0) == i2[1].charAt(1) && i2[2].charAt(0) == i2[2].charAt(1) ? i2[0].charAt(0) + i2[1].charAt(0) + i2[2].charAt(0) : i2.join("");
        }
        function h3(e3, t30, n2, r2, i2) {
          var o2 = [R(G(e3).toString(16)), R(G(t30).toString(16)), R(G(n2).toString(16)), R(B(r2))];
          return i2 && o2[0].charAt(0) == o2[0].charAt(1) && o2[1].charAt(0) == o2[1].charAt(1) && o2[2].charAt(0) == o2[2].charAt(1) && o2[3].charAt(0) == o2[3].charAt(1) ? o2[0].charAt(0) + o2[1].charAt(0) + o2[2].charAt(0) + o2[3].charAt(0) : o2.join("");
        }
        function p(e3, t30, n2, r2) {
          return [R(B(r2)), R(G(e3).toString(16)), R(G(t30).toString(16)), R(G(n2).toString(16))].join("");
        }
        function v2(e3, t30) {
          t30 = 0 === t30 ? 0 : t30 || 10;
          var n2 = o(e3).toHsl();
          return n2.s -= t30 / 100, n2.s = M2(n2.s), o(n2);
        }
        function g(e3, t30) {
          t30 = 0 === t30 ? 0 : t30 || 10;
          var n2 = o(e3).toHsl();
          return n2.s += t30 / 100, n2.s = M2(n2.s), o(n2);
        }
        function b(e3) {
          return o(e3).desaturate(100);
        }
        function x2(e3, t30) {
          t30 = 0 === t30 ? 0 : t30 || 10;
          var n2 = o(e3).toHsl();
          return n2.l += t30 / 100, n2.l = M2(n2.l), o(n2);
        }
        function m2(e3, t30) {
          t30 = 0 === t30 ? 0 : t30 || 10;
          var n2 = o(e3).toRgb();
          return n2.r = q(0, V(255, n2.r - G(-t30 / 100 * 255))), n2.g = q(0, V(255, n2.g - G(-t30 / 100 * 255))), n2.b = q(0, V(255, n2.b - G(-t30 / 100 * 255))), o(n2);
        }
        function _2(e3, t30) {
          t30 = 0 === t30 ? 0 : t30 || 10;
          var n2 = o(e3).toHsl();
          return n2.l -= t30 / 100, n2.l = M2(n2.l), o(n2);
        }
        function w3(e3, t30) {
          var n2 = o(e3).toHsl(), r2 = (n2.h + t30) % 360;
          return n2.h = r2 < 0 ? 360 + r2 : r2, o(n2);
        }
        function y(e3) {
          var t30 = o(e3).toHsl();
          return t30.h = (t30.h + 180) % 360, o(t30);
        }
        function C(e3) {
          var t30 = o(e3).toHsl(), n2 = t30.h;
          return [o(e3), o({ h: (n2 + 120) % 360, s: t30.s, l: t30.l }), o({ h: (n2 + 240) % 360, s: t30.s, l: t30.l })];
        }
        function k(e3) {
          var t30 = o(e3).toHsl(), n2 = t30.h;
          return [o(e3), o({ h: (n2 + 90) % 360, s: t30.s, l: t30.l }), o({ h: (n2 + 180) % 360, s: t30.s, l: t30.l }), o({ h: (n2 + 270) % 360, s: t30.s, l: t30.l })];
        }
        function F(e3) {
          var t30 = o(e3).toHsl(), n2 = t30.h;
          return [o(e3), o({ h: (n2 + 72) % 360, s: t30.s, l: t30.l }), o({ h: (n2 + 216) % 360, s: t30.s, l: t30.l })];
        }
        function S2(e3, t30, n2) {
          t30 = t30 || 6, n2 = n2 || 30;
          var r2 = o(e3).toHsl(), i2 = 360 / n2, a3 = [o(e3)];
          for (r2.h = (r2.h - (i2 * t30 >> 1) + 720) % 360; --t30; ) r2.h = (r2.h + i2) % 360, a3.push(o(r2));
          return a3;
        }
        function A2(e3, t30) {
          t30 = t30 || 6;
          for (var n2 = o(e3).toHsv(), r2 = n2.h, i2 = n2.s, a3 = n2.v, s3 = [], c2 = 1 / t30; t30--; ) s3.push(o({ h: r2, s: i2, v: a3 })), a3 = (a3 + c2) % 1;
          return s3;
        }
        function E(e3) {
          return e3 = parseFloat(e3), (isNaN(e3) || e3 < 0 || e3 > 1) && (e3 = 1), e3;
        }
        function O(e3, t30) {
          L(e3) && (e3 = "100%");
          var n2 = P(e3);
          return e3 = V(t30, q(0, parseFloat(e3))), n2 && (e3 = parseInt(e3 * t30, 10) / 100), i.abs(e3 - t30) < 1e-6 ? 1 : e3 % t30 / parseFloat(t30);
        }
        function M2(e3) {
          return V(1, q(0, e3));
        }
        function j(e3) {
          return parseInt(e3, 16);
        }
        function L(e3) {
          return "string" == typeof e3 && -1 != e3.indexOf(".") && 1 === parseFloat(e3);
        }
        function P(e3) {
          return "string" == typeof e3 && -1 != e3.indexOf("%");
        }
        function R(e3) {
          return 1 == e3.length ? "0" + e3 : "" + e3;
        }
        function D2(e3) {
          return e3 <= 1 && (e3 = 100 * e3 + "%"), e3;
        }
        function B(e3) {
          return i.round(255 * parseFloat(e3)).toString(16);
        }
        function T(e3) {
          return j(e3) / 255;
        }
        function H2(e3) {
          return !!J.CSS_UNIT.exec(e3);
        }
        function N(e3) {
          e3 = e3.replace(I, "").replace($, "").toLowerCase();
          var t30 = false;
          if (W[e3]) e3 = W[e3], t30 = true;
          else if ("transparent" == e3) return { r: 0, g: 0, b: 0, a: 0, format: "name" };
          var n2;
          return (n2 = J.rgb.exec(e3)) ? { r: n2[1], g: n2[2], b: n2[3] } : (n2 = J.rgba.exec(e3)) ? { r: n2[1], g: n2[2], b: n2[3], a: n2[4] } : (n2 = J.hsl.exec(e3)) ? { h: n2[1], s: n2[2], l: n2[3] } : (n2 = J.hsla.exec(e3)) ? { h: n2[1], s: n2[2], l: n2[3], a: n2[4] } : (n2 = J.hsv.exec(e3)) ? { h: n2[1], s: n2[2], v: n2[3] } : (n2 = J.hsva.exec(e3)) ? { h: n2[1], s: n2[2], v: n2[3], a: n2[4] } : (n2 = J.hex8.exec(e3)) ? { r: j(n2[1]), g: j(n2[2]), b: j(n2[3]), a: T(n2[4]), format: t30 ? "name" : "hex8" } : (n2 = J.hex6.exec(e3)) ? { r: j(n2[1]), g: j(n2[2]), b: j(n2[3]), format: t30 ? "name" : "hex" } : (n2 = J.hex4.exec(e3)) ? { r: j(n2[1] + "" + n2[1]), g: j(n2[2] + "" + n2[2]), b: j(n2[3] + "" + n2[3]), a: T(n2[4] + "" + n2[4]), format: t30 ? "name" : "hex8" } : !!(n2 = J.hex3.exec(e3)) && { r: j(n2[1] + "" + n2[1]), g: j(n2[2] + "" + n2[2]), b: j(n2[3] + "" + n2[3]), format: t30 ? "name" : "hex" };
        }
        function z(e3) {
          var t30, n2;
          return e3 = e3 || { level: "AA", size: "small" }, t30 = (e3.level || "AA").toUpperCase(), n2 = (e3.size || "small").toLowerCase(), "AA" !== t30 && "AAA" !== t30 && (t30 = "AA"), "small" !== n2 && "large" !== n2 && (n2 = "small"), { level: t30, size: n2 };
        }
        var I = /^\s+/, $ = /\s+$/, U = 0, G = i.round, V = i.min, q = i.max, X2 = i.random;
        o.prototype = { isDark: function() {
          return this.getBrightness() < 128;
        }, isLight: function() {
          return !this.isDark();
        }, isValid: function() {
          return this._ok;
        }, getOriginalInput: function() {
          return this._originalInput;
        }, getFormat: function() {
          return this._format;
        }, getAlpha: function() {
          return this._a;
        }, getBrightness: function() {
          var e3 = this.toRgb();
          return (299 * e3.r + 587 * e3.g + 114 * e3.b) / 1e3;
        }, getLuminance: function() {
          var e3, t30, n2, r2, o2, a3, s3 = this.toRgb();
          return e3 = s3.r / 255, t30 = s3.g / 255, n2 = s3.b / 255, r2 = e3 <= 0.03928 ? e3 / 12.92 : i.pow((e3 + 0.055) / 1.055, 2.4), o2 = t30 <= 0.03928 ? t30 / 12.92 : i.pow((t30 + 0.055) / 1.055, 2.4), a3 = n2 <= 0.03928 ? n2 / 12.92 : i.pow((n2 + 0.055) / 1.055, 2.4), 0.2126 * r2 + 0.7152 * o2 + 0.0722 * a3;
        }, setAlpha: function(e3) {
          return this._a = E(e3), this._roundA = G(100 * this._a) / 100, this;
        }, toHsv: function() {
          var e3 = u(this._r, this._g, this._b);
          return { h: 360 * e3.h, s: e3.s, v: e3.v, a: this._a };
        }, toHsvString: function() {
          var e3 = u(this._r, this._g, this._b), t30 = G(360 * e3.h), n2 = G(100 * e3.s), r2 = G(100 * e3.v);
          return 1 == this._a ? "hsv(" + t30 + ", " + n2 + "%, " + r2 + "%)" : "hsva(" + t30 + ", " + n2 + "%, " + r2 + "%, " + this._roundA + ")";
        }, toHsl: function() {
          var e3 = c(this._r, this._g, this._b);
          return { h: 360 * e3.h, s: e3.s, l: e3.l, a: this._a };
        }, toHslString: function() {
          var e3 = c(this._r, this._g, this._b), t30 = G(360 * e3.h), n2 = G(100 * e3.s), r2 = G(100 * e3.l);
          return 1 == this._a ? "hsl(" + t30 + ", " + n2 + "%, " + r2 + "%)" : "hsla(" + t30 + ", " + n2 + "%, " + r2 + "%, " + this._roundA + ")";
        }, toHex: function(e3) {
          return d2(this._r, this._g, this._b, e3);
        }, toHexString: function(e3) {
          return "#" + this.toHex(e3);
        }, toHex8: function(e3) {
          return h3(this._r, this._g, this._b, this._a, e3);
        }, toHex8String: function(e3) {
          return "#" + this.toHex8(e3);
        }, toRgb: function() {
          return { r: G(this._r), g: G(this._g), b: G(this._b), a: this._a };
        }, toRgbString: function() {
          return 1 == this._a ? "rgb(" + G(this._r) + ", " + G(this._g) + ", " + G(this._b) + ")" : "rgba(" + G(this._r) + ", " + G(this._g) + ", " + G(this._b) + ", " + this._roundA + ")";
        }, toPercentageRgb: function() {
          return { r: G(100 * O(this._r, 255)) + "%", g: G(100 * O(this._g, 255)) + "%", b: G(100 * O(this._b, 255)) + "%", a: this._a };
        }, toPercentageRgbString: function() {
          return 1 == this._a ? "rgb(" + G(100 * O(this._r, 255)) + "%, " + G(100 * O(this._g, 255)) + "%, " + G(100 * O(this._b, 255)) + "%)" : "rgba(" + G(100 * O(this._r, 255)) + "%, " + G(100 * O(this._g, 255)) + "%, " + G(100 * O(this._b, 255)) + "%, " + this._roundA + ")";
        }, toName: function() {
          return 0 === this._a ? "transparent" : !(this._a < 1) && (Y2[d2(this._r, this._g, this._b, true)] || false);
        }, toFilter: function(e3) {
          var t30 = "#" + p(this._r, this._g, this._b, this._a), n2 = t30, r2 = this._gradientType ? "GradientType = 1, " : "";
          if (e3) {
            var i2 = o(e3);
            n2 = "#" + p(i2._r, i2._g, i2._b, i2._a);
          }
          return "progid:DXImageTransform.Microsoft.gradient(" + r2 + "startColorstr=" + t30 + ",endColorstr=" + n2 + ")";
        }, toString: function(e3) {
          var t30 = !!e3;
          e3 = e3 || this._format;
          var n2 = false, r2 = this._a < 1 && this._a >= 0;
          return t30 || !r2 || "hex" !== e3 && "hex6" !== e3 && "hex3" !== e3 && "hex4" !== e3 && "hex8" !== e3 && "name" !== e3 ? ("rgb" === e3 && (n2 = this.toRgbString()), "prgb" === e3 && (n2 = this.toPercentageRgbString()), "hex" !== e3 && "hex6" !== e3 || (n2 = this.toHexString()), "hex3" === e3 && (n2 = this.toHexString(true)), "hex4" === e3 && (n2 = this.toHex8String(true)), "hex8" === e3 && (n2 = this.toHex8String()), "name" === e3 && (n2 = this.toName()), "hsl" === e3 && (n2 = this.toHslString()), "hsv" === e3 && (n2 = this.toHsvString()), n2 || this.toHexString()) : "name" === e3 && 0 === this._a ? this.toName() : this.toRgbString();
        }, clone: function() {
          return o(this.toString());
        }, _applyModification: function(e3, t30) {
          var n2 = e3.apply(null, [this].concat([].slice.call(t30)));
          return this._r = n2._r, this._g = n2._g, this._b = n2._b, this.setAlpha(n2._a), this;
        }, lighten: function() {
          return this._applyModification(x2, arguments);
        }, brighten: function() {
          return this._applyModification(m2, arguments);
        }, darken: function() {
          return this._applyModification(_2, arguments);
        }, desaturate: function() {
          return this._applyModification(v2, arguments);
        }, saturate: function() {
          return this._applyModification(g, arguments);
        }, greyscale: function() {
          return this._applyModification(b, arguments);
        }, spin: function() {
          return this._applyModification(w3, arguments);
        }, _applyCombination: function(e3, t30) {
          return e3.apply(null, [this].concat([].slice.call(t30)));
        }, analogous: function() {
          return this._applyCombination(S2, arguments);
        }, complement: function() {
          return this._applyCombination(y, arguments);
        }, monochromatic: function() {
          return this._applyCombination(A2, arguments);
        }, splitcomplement: function() {
          return this._applyCombination(F, arguments);
        }, triad: function() {
          return this._applyCombination(C, arguments);
        }, tetrad: function() {
          return this._applyCombination(k, arguments);
        } }, o.fromRatio = function(e3, t30) {
          if ("object" == typeof e3) {
            var n2 = {};
            for (var r2 in e3) e3.hasOwnProperty(r2) && (n2[r2] = "a" === r2 ? e3[r2] : D2(e3[r2]));
            e3 = n2;
          }
          return o(e3, t30);
        }, o.equals = function(e3, t30) {
          return !(!e3 || !t30) && o(e3).toRgbString() == o(t30).toRgbString();
        }, o.random = function() {
          return o.fromRatio({ r: X2(), g: X2(), b: X2() });
        }, o.mix = function(e3, t30, n2) {
          n2 = 0 === n2 ? 0 : n2 || 50;
          var r2 = o(e3).toRgb(), i2 = o(t30).toRgb(), a3 = n2 / 100;
          return o({ r: (i2.r - r2.r) * a3 + r2.r, g: (i2.g - r2.g) * a3 + r2.g, b: (i2.b - r2.b) * a3 + r2.b, a: (i2.a - r2.a) * a3 + r2.a });
        }, o.readability = function(e3, t30) {
          var n2 = o(e3), r2 = o(t30);
          return (i.max(n2.getLuminance(), r2.getLuminance()) + 0.05) / (i.min(n2.getLuminance(), r2.getLuminance()) + 0.05);
        }, o.isReadable = function(e3, t30, n2) {
          var r2, i2, a3 = o.readability(e3, t30);
          switch (i2 = false, r2 = z(n2), r2.level + r2.size) {
            case "AAsmall":
            case "AAAlarge":
              i2 = a3 >= 4.5;
              break;
            case "AAlarge":
              i2 = a3 >= 3;
              break;
            case "AAAsmall":
              i2 = a3 >= 7;
          }
          return i2;
        }, o.mostReadable = function(e3, t30, n2) {
          var r2, i2, a3, s3, c2 = null, l2 = 0;
          n2 = n2 || {}, i2 = n2.includeFallbackColors, a3 = n2.level, s3 = n2.size;
          for (var u2 = 0; u2 < t30.length; u2++) (r2 = o.readability(e3, t30[u2])) > l2 && (l2 = r2, c2 = o(t30[u2]));
          return o.isReadable(e3, c2, { level: a3, size: s3 }) || !i2 ? c2 : (n2.includeFallbackColors = false, o.mostReadable(e3, ["#fff", "#000"], n2));
        };
        var W = o.names = { aliceblue: "f0f8ff", antiquewhite: "faebd7", aqua: "0ff", aquamarine: "7fffd4", azure: "f0ffff", beige: "f5f5dc", bisque: "ffe4c4", black: "000", blanchedalmond: "ffebcd", blue: "00f", blueviolet: "8a2be2", brown: "a52a2a", burlywood: "deb887", burntsienna: "ea7e5d", cadetblue: "5f9ea0", chartreuse: "7fff00", chocolate: "d2691e", coral: "ff7f50", cornflowerblue: "6495ed", cornsilk: "fff8dc", crimson: "dc143c", cyan: "0ff", darkblue: "00008b", darkcyan: "008b8b", darkgoldenrod: "b8860b", darkgray: "a9a9a9", darkgreen: "006400", darkgrey: "a9a9a9", darkkhaki: "bdb76b", darkmagenta: "8b008b", darkolivegreen: "556b2f", darkorange: "ff8c00", darkorchid: "9932cc", darkred: "8b0000", darksalmon: "e9967a", darkseagreen: "8fbc8f", darkslateblue: "483d8b", darkslategray: "2f4f4f", darkslategrey: "2f4f4f", darkturquoise: "00ced1", darkviolet: "9400d3", deeppink: "ff1493", deepskyblue: "00bfff", dimgray: "696969", dimgrey: "696969", dodgerblue: "1e90ff", firebrick: "b22222", floralwhite: "fffaf0", forestgreen: "228b22", fuchsia: "f0f", gainsboro: "dcdcdc", ghostwhite: "f8f8ff", gold: "ffd700", goldenrod: "daa520", gray: "808080", green: "008000", greenyellow: "adff2f", grey: "808080", honeydew: "f0fff0", hotpink: "ff69b4", indianred: "cd5c5c", indigo: "4b0082", ivory: "fffff0", khaki: "f0e68c", lavender: "e6e6fa", lavenderblush: "fff0f5", lawngreen: "7cfc00", lemonchiffon: "fffacd", lightblue: "add8e6", lightcoral: "f08080", lightcyan: "e0ffff", lightgoldenrodyellow: "fafad2", lightgray: "d3d3d3", lightgreen: "90ee90", lightgrey: "d3d3d3", lightpink: "ffb6c1", lightsalmon: "ffa07a", lightseagreen: "20b2aa", lightskyblue: "87cefa", lightslategray: "789", lightslategrey: "789", lightsteelblue: "b0c4de", lightyellow: "ffffe0", lime: "0f0", limegreen: "32cd32", linen: "faf0e6", magenta: "f0f", maroon: "800000", mediumaquamarine: "66cdaa", mediumblue: "0000cd", mediumorchid: "ba55d3", mediumpurple: "9370db", mediumseagreen: "3cb371", mediumslateblue: "7b68ee", mediumspringgreen: "00fa9a", mediumturquoise: "48d1cc", mediumvioletred: "c71585", midnightblue: "191970", mintcream: "f5fffa", mistyrose: "ffe4e1", moccasin: "ffe4b5", navajowhite: "ffdead", navy: "000080", oldlace: "fdf5e6", olive: "808000", olivedrab: "6b8e23", orange: "ffa500", orangered: "ff4500", orchid: "da70d6", palegoldenrod: "eee8aa", palegreen: "98fb98", paleturquoise: "afeeee", palevioletred: "db7093", papayawhip: "ffefd5", peachpuff: "ffdab9", peru: "cd853f", pink: "ffc0cb", plum: "dda0dd", powderblue: "b0e0e6", purple: "800080", rebeccapurple: "663399", red: "f00", rosybrown: "bc8f8f", royalblue: "4169e1", saddlebrown: "8b4513", salmon: "fa8072", sandybrown: "f4a460", seagreen: "2e8b57", seashell: "fff5ee", sienna: "a0522d", silver: "c0c0c0", skyblue: "87ceeb", slateblue: "6a5acd", slategray: "708090", slategrey: "708090", snow: "fffafa", springgreen: "00ff7f", steelblue: "4682b4", tan: "d2b48c", teal: "008080", thistle: "d8bfd8", tomato: "ff6347", turquoise: "40e0d0", violet: "ee82ee", wheat: "f5deb3", white: "fff", whitesmoke: "f5f5f5", yellow: "ff0", yellowgreen: "9acd32" }, Y2 = o.hexNames = function(e3) {
          var t30 = {};
          for (var n2 in e3) e3.hasOwnProperty(n2) && (t30[e3[n2]] = n2);
          return t30;
        }(W), J = function() {
          var e3 = "(?:[-\\+]?\\d*\\.\\d+%?)|(?:[-\\+]?\\d+%?)", t30 = "[\\s|\\(]+(" + e3 + ")[,|\\s]+(" + e3 + ")[,|\\s]+(" + e3 + ")\\s*\\)?", n2 = "[\\s|\\(]+(" + e3 + ")[,|\\s]+(" + e3 + ")[,|\\s]+(" + e3 + ")[,|\\s]+(" + e3 + ")\\s*\\)?";
          return { CSS_UNIT: new RegExp(e3), rgb: new RegExp("rgb" + t30), rgba: new RegExp("rgba" + n2), hsl: new RegExp("hsl" + t30), hsla: new RegExp("hsla" + n2), hsv: new RegExp("hsv" + t30), hsva: new RegExp("hsva" + n2), hex3: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/, hex6: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/, hex4: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/, hex8: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/ };
        }();
        void 0 !== e2 && e2.exports ? e2.exports = o : void 0 !== (r = function() {
          return o;
        }.call(t4, n, t4, e2)) && (e2.exports = r);
      }(Math);
    }, function(e2, t4, n) {
      var r = n(66);
      "string" == typeof r && (r = [[e2.i, r, ""]]), r.locals && (e2.exports = r.locals);
      n(1)("0f73e73c", r, false, {});
    }, function(e2, t4, n) {
      t4 = e2.exports = n(0)(false), t4.push([e2.i, "\n.vc-editable-input {\n  position: relative;\n}\n.vc-input__input {\n  padding: 0;\n  border: 0;\n  outline: none;\n}\n.vc-input__label {\n  text-transform: capitalize;\n}\n", ""]);
    }, function(e2, t4, n) {
      var r = function() {
        var e3 = this, t30 = e3.$createElement, n2 = e3._self._c || t30;
        return n2("div", { staticClass: "vc-editable-input" }, [n2("input", { directives: [{ name: "model", rawName: "v-model", value: e3.val, expression: "val" }], ref: "input", staticClass: "vc-input__input", attrs: { "aria-labelledby": e3.labelId }, domProps: { value: e3.val }, on: { keydown: e3.handleKeyDown, input: [function(t33) {
          t33.target.composing || (e3.val = t33.target.value);
        }, e3.update] } }), e3._v(" "), n2("span", { staticClass: "vc-input__label", attrs: { for: e3.label, id: e3.labelId } }, [e3._v(e3._s(e3.labelSpanText))]), e3._v(" "), n2("span", { staticClass: "vc-input__desc" }, [e3._v(e3._s(e3.desc))])]);
      }, i = [];
      r._withStripped = true;
      var o = { render: r, staticRenderFns: i };
      t4.a = o;
    }, function(e2, t4, n) {
      var r = function() {
        var e3 = this, t30 = e3.$createElement, n2 = e3._self._c || t30;
        return n2("div", { staticClass: "vc-compact", attrs: { role: "application", "aria-label": "Compact color picker" } }, [n2("ul", { staticClass: "vc-compact-colors", attrs: { role: "listbox" } }, e3._l(e3.paletteUpperCase(e3.palette), function(t33) {
          return n2("li", { key: t33, staticClass: "vc-compact-color-item", class: { "vc-compact-color-item--white": "#FFFFFF" === t33 }, style: { background: t33 }, attrs: { role: "option", "aria-label": "color:" + t33, "aria-selected": t33 === e3.pick }, on: { click: function(n3) {
            e3.handlerClick(t33);
          } } }, [n2("div", { directives: [{ name: "show", rawName: "v-show", value: t33 === e3.pick, expression: "c === pick" }], staticClass: "vc-compact-dot" })]);
        }))]);
      }, i = [];
      r._withStripped = true;
      var o = { render: r, staticRenderFns: i };
      t4.a = o;
    }, function(e2, t4, n) {
      function r(e3) {
        n(70);
      }
      Object.defineProperty(t4, "__esModule", { value: true });
      var i = n(37), o = n.n(i);
      for (var a2 in i) "default" !== a2 && function(e3) {
        n.d(t4, e3, function() {
          return i[e3];
        });
      }(a2);
      var s2 = n(72), l = n(2), u = r, f2 = l(o.a, s2.a, false, u, null, null);
      f2.options.__file = "src/components/Grayscale.vue", t4.default = f2.exports;
    }, function(e2, t4, n) {
      var r = n(71);
      "string" == typeof r && (r = [[e2.i, r, ""]]), r.locals && (e2.exports = r.locals);
      n(1)("21ddbb74", r, false, {});
    }, function(e2, t4, n) {
      t4 = e2.exports = n(0)(false), t4.push([e2.i, "\n.vc-grayscale {\n  width: 125px;\n  border-radius: 2px;\n  box-shadow: 0 2px 15px rgba(0,0,0,.12), 0 2px 10px rgba(0,0,0,.16);\n  background-color: #fff;\n}\n.vc-grayscale-colors {\n  border-radius: 2px;\n  overflow: hidden;\n  padding: 0;\n  margin: 0;\n}\n.vc-grayscale-color-item {\n  list-style: none;\n  width: 25px;\n  height: 25px;\n  float: left;\n  position: relative;\n  cursor: pointer;\n}\n.vc-grayscale-color-item--white .vc-grayscale-dot {\n  background: #000;\n}\n.vc-grayscale-dot {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  width: 6px;\n  height: 6px;\n  margin: -3px 0 0 -2px;\n  border-radius: 50%;\n  opacity: 1;\n  background: #fff;\n}\n", ""]);
    }, function(e2, t4, n) {
      var r = function() {
        var e3 = this, t30 = e3.$createElement, n2 = e3._self._c || t30;
        return n2("div", { staticClass: "vc-grayscale", attrs: { role: "application", "aria-label": "Grayscale color picker" } }, [n2("ul", { staticClass: "vc-grayscale-colors", attrs: { role: "listbox" } }, e3._l(e3.paletteUpperCase(e3.palette), function(t33) {
          return n2("li", { key: t33, staticClass: "vc-grayscale-color-item", class: { "vc-grayscale-color-item--white": "#FFFFFF" == t33 }, style: { background: t33 }, attrs: { role: "option", "aria-label": "Color:" + t33, "aria-selected": t33 === e3.pick }, on: { click: function(n3) {
            e3.handlerClick(t33);
          } } }, [n2("div", { directives: [{ name: "show", rawName: "v-show", value: t33 === e3.pick, expression: "c === pick" }], staticClass: "vc-grayscale-dot" })]);
        }))]);
      }, i = [];
      r._withStripped = true;
      var o = { render: r, staticRenderFns: i };
      t4.a = o;
    }, function(e2, t4, n) {
      function r(e3) {
        n(74);
      }
      Object.defineProperty(t4, "__esModule", { value: true });
      var i = n(38), o = n.n(i);
      for (var a2 in i) "default" !== a2 && function(e3) {
        n.d(t4, e3, function() {
          return i[e3];
        });
      }(a2);
      var s2 = n(76), l = n(2), u = r, f2 = l(o.a, s2.a, false, u, null, null);
      f2.options.__file = "src/components/Material.vue", t4.default = f2.exports;
    }, function(e2, t4, n) {
      var r = n(75);
      "string" == typeof r && (r = [[e2.i, r, ""]]), r.locals && (e2.exports = r.locals);
      n(1)("1ff3af73", r, false, {});
    }, function(e2, t4, n) {
      t4 = e2.exports = n(0)(false), t4.push([e2.i, '\n.vc-material {\n  width: 98px;\n  height: 98px;\n  padding: 16px;\n  font-family: "Roboto";\n  position: relative;\n  border-radius: 2px;\n  box-shadow: 0 2px 10px rgba(0,0,0,.12), 0 2px 5px rgba(0,0,0,.16);\n  background-color: #fff;\n}\n.vc-material .vc-input__input {\n  width: 100%;\n  margin-top: 12px;\n  font-size: 15px;\n  color: #333;\n  height: 30px;\n}\n.vc-material .vc-input__label {\n  position: absolute;\n  top: 0;\n  left: 0;\n  font-size: 11px;\n  color: #999;\n  text-transform: capitalize;\n}\n.vc-material-hex {\n  border-bottom-width: 2px;\n  border-bottom-style: solid;\n}\n.vc-material-split {\n  display: flex;\n  margin-right: -10px;\n  padding-top: 11px;\n}\n.vc-material-third {\n  flex: 1;\n  padding-right: 10px;\n}\n', ""]);
    }, function(e2, t4, n) {
      var r = function() {
        var e3 = this, t30 = e3.$createElement, n2 = e3._self._c || t30;
        return n2("div", { staticClass: "vc-material", attrs: { role: "application", "aria-label": "Material color picker" } }, [n2("ed-in", { staticClass: "vc-material-hex", style: { borderColor: e3.colors.hex }, attrs: { label: "hex" }, on: { change: e3.onChange }, model: { value: e3.colors.hex, callback: function(t33) {
          e3.$set(e3.colors, "hex", t33);
        }, expression: "colors.hex" } }), e3._v(" "), n2("div", { staticClass: "vc-material-split" }, [n2("div", { staticClass: "vc-material-third" }, [n2("ed-in", { attrs: { label: "r" }, on: { change: e3.onChange }, model: { value: e3.colors.rgba.r, callback: function(t33) {
          e3.$set(e3.colors.rgba, "r", t33);
        }, expression: "colors.rgba.r" } })], 1), e3._v(" "), n2("div", { staticClass: "vc-material-third" }, [n2("ed-in", { attrs: { label: "g" }, on: { change: e3.onChange }, model: { value: e3.colors.rgba.g, callback: function(t33) {
          e3.$set(e3.colors.rgba, "g", t33);
        }, expression: "colors.rgba.g" } })], 1), e3._v(" "), n2("div", { staticClass: "vc-material-third" }, [n2("ed-in", { attrs: { label: "b" }, on: { change: e3.onChange }, model: { value: e3.colors.rgba.b, callback: function(t33) {
          e3.$set(e3.colors.rgba, "b", t33);
        }, expression: "colors.rgba.b" } })], 1)])], 1);
      }, i = [];
      r._withStripped = true;
      var o = { render: r, staticRenderFns: i };
      t4.a = o;
    }, function(e2, t4, n) {
      function r(e3) {
        n(78);
      }
      Object.defineProperty(t4, "__esModule", { value: true });
      var i = n(39), o = n.n(i);
      for (var a2 in i) "default" !== a2 && function(e3) {
        n.d(t4, e3, function() {
          return i[e3];
        });
      }(a2);
      var s2 = n(114), l = n(2), u = r, f2 = l(o.a, s2.a, false, u, null, null);
      f2.options.__file = "src/components/Slider.vue", t4.default = f2.exports;
    }, function(e2, t4, n) {
      var r = n(79);
      "string" == typeof r && (r = [[e2.i, r, ""]]), r.locals && (e2.exports = r.locals);
      n(1)("7982aa43", r, false, {});
    }, function(e2, t4, n) {
      t4 = e2.exports = n(0)(false), t4.push([e2.i, "\n.vc-slider {\n  position: relative;\n  width: 410px;\n}\n.vc-slider-hue-warp {\n  height: 12px;\n  position: relative;\n}\n.vc-slider-hue-warp .vc-hue-picker {\n  width: 14px;\n  height: 14px;\n  border-radius: 6px;\n  transform: translate(-7px, -2px);\n  background-color: rgb(248, 248, 248);\n  box-shadow: 0 1px 4px 0 rgba(0, 0, 0, 0.37);\n}\n.vc-slider-swatches {\n  display: flex;\n  margin-top: 20px;\n}\n.vc-slider-swatch {\n  margin-right: 1px;\n  flex: 1;\n  width: 20%;\n}\n.vc-slider-swatch:first-child {\n  margin-right: 1px;\n}\n.vc-slider-swatch:first-child .vc-slider-swatch-picker {\n  border-radius: 2px 0px 0px 2px;\n}\n.vc-slider-swatch:last-child {\n  margin-right: 0;\n}\n.vc-slider-swatch:last-child .vc-slider-swatch-picker {\n  border-radius: 0px 2px 2px 0px;\n}\n.vc-slider-swatch-picker {\n  cursor: pointer;\n  height: 12px;\n}\n.vc-slider-swatch:nth-child(n) .vc-slider-swatch-picker.vc-slider-swatch-picker--active {\n  transform: scaleY(1.8);\n  border-radius: 3.6px/2px;\n}\n.vc-slider-swatch-picker--white {\n  box-shadow: inset 0 0 0 1px #ddd;\n}\n.vc-slider-swatch-picker--active.vc-slider-swatch-picker--white {\n  box-shadow: inset 0 0 0 0.6px #ddd;\n}\n", ""]);
    }, function(e2, t4, n) {
      function r(e3) {
        return e3 && e3.__esModule ? e3 : { default: e3 };
      }
      t4.__esModule = true;
      var i = n(81), o = r(i), a2 = n(100), s2 = r(a2), c = "function" == typeof s2.default && "symbol" == typeof o.default ? function(e3) {
        return typeof e3;
      } : function(e3) {
        return e3 && "function" == typeof s2.default && e3.constructor === s2.default && e3 !== s2.default.prototype ? "symbol" : typeof e3;
      };
      t4.default = "function" == typeof s2.default && "symbol" === c(o.default) ? function(e3) {
        return void 0 === e3 ? "undefined" : c(e3);
      } : function(e3) {
        return e3 && "function" == typeof s2.default && e3.constructor === s2.default && e3 !== s2.default.prototype ? "symbol" : void 0 === e3 ? "undefined" : c(e3);
      };
    }, function(e2, t4, n) {
      e2.exports = { default: n(82), __esModule: true };
    }, function(e2, t4, n) {
      n(83), n(96), e2.exports = n(32).f("iterator");
    }, function(e2, t4, n) {
      var r = n(84)(true);
      n(40)(String, "String", function(e3) {
        this._t = String(e3), this._i = 0;
      }, function() {
        var e3, t30 = this._t, n2 = this._i;
        return n2 >= t30.length ? { value: void 0, done: true } : (e3 = r(t30, n2), this._i += e3.length, { value: e3, done: false });
      });
    }, function(e2, t4, n) {
      var r = n(21), i = n(22);
      e2.exports = function(e3) {
        return function(t30, n2) {
          var o, a2, s2 = String(i(t30)), c = r(n2), l = s2.length;
          return c < 0 || c >= l ? e3 ? "" : void 0 : (o = s2.charCodeAt(c), o < 55296 || o > 56319 || c + 1 === l || (a2 = s2.charCodeAt(c + 1)) < 56320 || a2 > 57343 ? e3 ? s2.charAt(c) : o : e3 ? s2.slice(c, c + 2) : a2 - 56320 + (o - 55296 << 10) + 65536);
        };
      };
    }, function(e2, t4, n) {
      var r = n(86);
      e2.exports = function(e3, t30, n2) {
        if (r(e3), void 0 === t30) return e3;
        switch (n2) {
          case 1:
            return function(n3) {
              return e3.call(t30, n3);
            };
          case 2:
            return function(n3, r2) {
              return e3.call(t30, n3, r2);
            };
          case 3:
            return function(n3, r2, i) {
              return e3.call(t30, n3, r2, i);
            };
        }
        return function() {
          return e3.apply(t30, arguments);
        };
      };
    }, function(e2, t4) {
      e2.exports = function(e3) {
        if ("function" != typeof e3) throw TypeError(e3 + " is not a function!");
        return e3;
      };
    }, function(e2, t4, n) {
      var r = n(45), i = n(16), o = n(31), a2 = {};
      n(7)(a2, n(11)("iterator"), function() {
        return this;
      }), e2.exports = function(e3, t30, n2) {
        e3.prototype = r(a2, { next: i(1, n2) }), o(e3, t30 + " Iterator");
      };
    }, function(e2, t4, n) {
      var r = n(8), i = n(13), o = n(27);
      e2.exports = n(9) ? Object.defineProperties : function(e3, t30) {
        i(e3);
        for (var n2, a2 = o(t30), s2 = a2.length, c = 0; s2 > c; ) r.f(e3, n2 = a2[c++], t30[n2]);
        return e3;
      };
    }, function(e2, t4, n) {
      var r = n(47);
      e2.exports = Object("z").propertyIsEnumerable(0) ? Object : function(e3) {
        return "String" == r(e3) ? e3.split("") : Object(e3);
      };
    }, function(e2, t4, n) {
      var r = n(10), i = n(91), o = n(92);
      e2.exports = function(e3) {
        return function(t30, n2, a2) {
          var s2, c = r(t30), l = i(c.length), u = o(a2, l);
          if (e3 && n2 != n2) {
            for (; l > u; ) if ((s2 = c[u++]) != s2) return true;
          } else for (; l > u; u++) if ((e3 || u in c) && c[u] === n2) return e3 || u || 0;
          return !e3 && -1;
        };
      };
    }, function(e2, t4, n) {
      var r = n(21), i = Math.min;
      e2.exports = function(e3) {
        return e3 > 0 ? i(r(e3), 9007199254740991) : 0;
      };
    }, function(e2, t4, n) {
      var r = n(21), i = Math.max, o = Math.min;
      e2.exports = function(e3, t30) {
        return e3 = r(e3), e3 < 0 ? i(e3 + t30, 0) : o(e3, t30);
      };
    }, function(e2, t4, n) {
      var r = n(4).document;
      e2.exports = r && r.documentElement;
    }, function(e2, t4, n) {
      var r = n(6), i = n(95), o = n(28)("IE_PROTO"), a2 = Object.prototype;
      e2.exports = Object.getPrototypeOf || function(e3) {
        return e3 = i(e3), r(e3, o) ? e3[o] : "function" == typeof e3.constructor && e3 instanceof e3.constructor ? e3.constructor.prototype : e3 instanceof Object ? a2 : null;
      };
    }, function(e2, t4, n) {
      var r = n(22);
      e2.exports = function(e3) {
        return Object(r(e3));
      };
    }, function(e2, t4, n) {
      n(97);
      for (var r = n(4), i = n(7), o = n(26), a2 = n(11)("toStringTag"), s2 = "CSSRuleList,CSSStyleDeclaration,CSSValueList,ClientRectList,DOMRectList,DOMStringList,DOMTokenList,DataTransferItemList,FileList,HTMLAllCollection,HTMLCollection,HTMLFormElement,HTMLSelectElement,MediaList,MimeTypeArray,NamedNodeMap,NodeList,PaintRequestList,Plugin,PluginArray,SVGLengthList,SVGNumberList,SVGPathSegList,SVGPointList,SVGStringList,SVGTransformList,SourceBufferList,StyleSheetList,TextTrackCueList,TextTrackList,TouchList".split(","), c = 0; c < s2.length; c++) {
        var l = s2[c], u = r[l], f2 = u && u.prototype;
        f2 && !f2[a2] && i(f2, a2, l), o[l] = o.Array;
      }
    }, function(e2, t4, n) {
      var r = n(98), i = n(99), o = n(26), a2 = n(10);
      e2.exports = n(40)(Array, "Array", function(e3, t30) {
        this._t = a2(e3), this._i = 0, this._k = t30;
      }, function() {
        var e3 = this._t, t30 = this._k, n2 = this._i++;
        return !e3 || n2 >= e3.length ? (this._t = void 0, i(1)) : "keys" == t30 ? i(0, n2) : "values" == t30 ? i(0, e3[n2]) : i(0, [n2, e3[n2]]);
      }, "values"), o.Arguments = o.Array, r("keys"), r("values"), r("entries");
    }, function(e2, t4) {
      e2.exports = function() {
      };
    }, function(e2, t4) {
      e2.exports = function(e3, t30) {
        return { value: t30, done: !!e3 };
      };
    }, function(e2, t4, n) {
      e2.exports = { default: n(101), __esModule: true };
    }, function(e2, t4, n) {
      n(102), n(108), n(109), n(110), e2.exports = n(24).Symbol;
    }, function(e2, t4, n) {
      var r = n(4), i = n(6), o = n(9), a2 = n(41), s2 = n(44), c = n(103).KEY, l = n(15), u = n(29), f2 = n(31), d2 = n(17), h3 = n(11), p = n(32), v2 = n(33), g = n(104), b = n(105), x2 = n(13), m2 = n(10), _2 = n(25), w3 = n(16), y = n(45), C = n(106), k = n(107), F = n(8), S2 = n(27), A2 = k.f, E = F.f, O = C.f, M2 = r.Symbol, j = r.JSON, L = j && j.stringify, P = h3("_hidden"), R = h3("toPrimitive"), D2 = {}.propertyIsEnumerable, B = u("symbol-registry"), T = u("symbols"), H2 = u("op-symbols"), N = Object.prototype, z = "function" == typeof M2, I = r.QObject, $ = !I || !I.prototype || !I.prototype.findChild, U = o && l(function() {
        return 7 != y(E({}, "a", { get: function() {
          return E(this, "a", { value: 7 }).a;
        } })).a;
      }) ? function(e3, t30, n2) {
        var r2 = A2(N, t30);
        r2 && delete N[t30], E(e3, t30, n2), r2 && e3 !== N && E(N, t30, r2);
      } : E, G = function(e3) {
        var t30 = T[e3] = y(M2.prototype);
        return t30._k = e3, t30;
      }, V = z && "symbol" == typeof M2.iterator ? function(e3) {
        return "symbol" == typeof e3;
      } : function(e3) {
        return e3 instanceof M2;
      }, q = function(e3, t30, n2) {
        return e3 === N && q(H2, t30, n2), x2(e3), t30 = _2(t30, true), x2(n2), i(T, t30) ? (n2.enumerable ? (i(e3, P) && e3[P][t30] && (e3[P][t30] = false), n2 = y(n2, { enumerable: w3(0, false) })) : (i(e3, P) || E(e3, P, w3(1, {})), e3[P][t30] = true), U(e3, t30, n2)) : E(e3, t30, n2);
      }, X2 = function(e3, t30) {
        x2(e3);
        for (var n2, r2 = g(t30 = m2(t30)), i2 = 0, o2 = r2.length; o2 > i2; ) q(e3, n2 = r2[i2++], t30[n2]);
        return e3;
      }, W = function(e3, t30) {
        return void 0 === t30 ? y(e3) : X2(y(e3), t30);
      }, Y2 = function(e3) {
        var t30 = D2.call(this, e3 = _2(e3, true));
        return !(this === N && i(T, e3) && !i(H2, e3)) && (!(t30 || !i(this, e3) || !i(T, e3) || i(this, P) && this[P][e3]) || t30);
      }, J = function(e3, t30) {
        if (e3 = m2(e3), t30 = _2(t30, true), e3 !== N || !i(T, t30) || i(H2, t30)) {
          var n2 = A2(e3, t30);
          return !n2 || !i(T, t30) || i(e3, P) && e3[P][t30] || (n2.enumerable = true), n2;
        }
      }, K = function(e3) {
        for (var t30, n2 = O(m2(e3)), r2 = [], o2 = 0; n2.length > o2; ) i(T, t30 = n2[o2++]) || t30 == P || t30 == c || r2.push(t30);
        return r2;
      }, Z2 = function(e3) {
        for (var t30, n2 = e3 === N, r2 = O(n2 ? H2 : m2(e3)), o2 = [], a3 = 0; r2.length > a3; ) !i(T, t30 = r2[a3++]) || n2 && !i(N, t30) || o2.push(T[t30]);
        return o2;
      };
      z || (M2 = function() {
        if (this instanceof M2) throw TypeError("Symbol is not a constructor!");
        var e3 = d2(arguments.length > 0 ? arguments[0] : void 0), t30 = function(n2) {
          this === N && t30.call(H2, n2), i(this, P) && i(this[P], e3) && (this[P][e3] = false), U(this, e3, w3(1, n2));
        };
        return o && $ && U(N, e3, { configurable: true, set: t30 }), G(e3);
      }, s2(M2.prototype, "toString", function() {
        return this._k;
      }), k.f = J, F.f = q, n(49).f = C.f = K, n(34).f = Y2, n(48).f = Z2, o && !n(23) && s2(N, "propertyIsEnumerable", Y2, true), p.f = function(e3) {
        return G(h3(e3));
      }), a2(a2.G + a2.W + a2.F * !z, { Symbol: M2 });
      for (var Q = "hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables".split(","), ee = 0; Q.length > ee; ) h3(Q[ee++]);
      for (var te = S2(h3.store), ne = 0; te.length > ne; ) v2(te[ne++]);
      a2(a2.S + a2.F * !z, "Symbol", { for: function(e3) {
        return i(B, e3 += "") ? B[e3] : B[e3] = M2(e3);
      }, keyFor: function(e3) {
        if (!V(e3)) throw TypeError(e3 + " is not a symbol!");
        for (var t30 in B) if (B[t30] === e3) return t30;
      }, useSetter: function() {
        $ = true;
      }, useSimple: function() {
        $ = false;
      } }), a2(a2.S + a2.F * !z, "Object", { create: W, defineProperty: q, defineProperties: X2, getOwnPropertyDescriptor: J, getOwnPropertyNames: K, getOwnPropertySymbols: Z2 }), j && a2(a2.S + a2.F * (!z || l(function() {
        var e3 = M2();
        return "[null]" != L([e3]) || "{}" != L({ a: e3 }) || "{}" != L(Object(e3));
      })), "JSON", { stringify: function(e3) {
        if (void 0 !== e3 && !V(e3)) {
          for (var t30, n2, r2 = [e3], i2 = 1; arguments.length > i2; ) r2.push(arguments[i2++]);
          return t30 = r2[1], "function" == typeof t30 && (n2 = t30), !n2 && b(t30) || (t30 = function(e4, t33) {
            if (n2 && (t33 = n2.call(this, e4, t33)), !V(t33)) return t33;
          }), r2[1] = t30, L.apply(j, r2);
        }
      } }), M2.prototype[R] || n(7)(M2.prototype, R, M2.prototype.valueOf), f2(M2, "Symbol"), f2(Math, "Math", true), f2(r.JSON, "JSON", true);
    }, function(e2, t4, n) {
      var r = n(17)("meta"), i = n(14), o = n(6), a2 = n(8).f, s2 = 0, c = Object.isExtensible || function() {
        return true;
      }, l = !n(15)(function() {
        return c(Object.preventExtensions({}));
      }), u = function(e3) {
        a2(e3, r, { value: { i: "O" + ++s2, w: {} } });
      }, f2 = function(e3, t30) {
        if (!i(e3)) return "symbol" == typeof e3 ? e3 : ("string" == typeof e3 ? "S" : "P") + e3;
        if (!o(e3, r)) {
          if (!c(e3)) return "F";
          if (!t30) return "E";
          u(e3);
        }
        return e3[r].i;
      }, d2 = function(e3, t30) {
        if (!o(e3, r)) {
          if (!c(e3)) return true;
          if (!t30) return false;
          u(e3);
        }
        return e3[r].w;
      }, h3 = function(e3) {
        return l && p.NEED && c(e3) && !o(e3, r) && u(e3), e3;
      }, p = e2.exports = { KEY: r, NEED: false, fastKey: f2, getWeak: d2, onFreeze: h3 };
    }, function(e2, t4, n) {
      var r = n(27), i = n(48), o = n(34);
      e2.exports = function(e3) {
        var t30 = r(e3), n2 = i.f;
        if (n2) for (var a2, s2 = n2(e3), c = o.f, l = 0; s2.length > l; ) c.call(e3, a2 = s2[l++]) && t30.push(a2);
        return t30;
      };
    }, function(e2, t4, n) {
      var r = n(47);
      e2.exports = Array.isArray || function(e3) {
        return "Array" == r(e3);
      };
    }, function(e2, t4, n) {
      var r = n(10), i = n(49).f, o = {}.toString, a2 = "object" == typeof window && window && Object.getOwnPropertyNames ? Object.getOwnPropertyNames(window) : [], s2 = function(e3) {
        try {
          return i(e3);
        } catch (e4) {
          return a2.slice();
        }
      };
      e2.exports.f = function(e3) {
        return a2 && "[object Window]" == o.call(e3) ? s2(e3) : i(r(e3));
      };
    }, function(e2, t4, n) {
      var r = n(34), i = n(16), o = n(10), a2 = n(25), s2 = n(6), c = n(42), l = Object.getOwnPropertyDescriptor;
      t4.f = n(9) ? l : function(e3, t30) {
        if (e3 = o(e3), t30 = a2(t30, true), c) try {
          return l(e3, t30);
        } catch (e4) {
        }
        if (s2(e3, t30)) return i(!r.f.call(e3, t30), e3[t30]);
      };
    }, function(e2, t4) {
    }, function(e2, t4, n) {
      n(33)("asyncIterator");
    }, function(e2, t4, n) {
      n(33)("observable");
    }, function(e2, t4, n) {
      var r = n(112);
      "string" == typeof r && (r = [[e2.i, r, ""]]), r.locals && (e2.exports = r.locals);
      n(1)("7c5f1a1c", r, false, {});
    }, function(e2, t4, n) {
      t4 = e2.exports = n(0)(false), t4.push([e2.i, "\n.vc-hue {\n  position: absolute;\n  top: 0px;\n  right: 0px;\n  bottom: 0px;\n  left: 0px;\n  border-radius: 2px;\n}\n.vc-hue--horizontal {\n  background: linear-gradient(to right, #f00 0%, #ff0 17%, #0f0 33%, #0ff 50%, #00f 67%, #f0f 83%, #f00 100%);\n}\n.vc-hue--vertical {\n  background: linear-gradient(to top, #f00 0%, #ff0 17%, #0f0 33%, #0ff 50%, #00f 67%, #f0f 83%, #f00 100%);\n}\n.vc-hue-container {\n  cursor: pointer;\n  margin: 0 2px;\n  position: relative;\n  height: 100%;\n}\n.vc-hue-pointer {\n  z-index: 2;\n  position: absolute;\n}\n.vc-hue-picker {\n  cursor: pointer;\n  margin-top: 1px;\n  width: 4px;\n  border-radius: 1px;\n  height: 8px;\n  box-shadow: 0 0 2px rgba(0, 0, 0, .6);\n  background: #fff;\n  transform: translateX(-2px) ;\n}\n", ""]);
    }, function(e2, t4, n) {
      var r = function() {
        var e3 = this, t30 = e3.$createElement, n2 = e3._self._c || t30;
        return n2("div", { class: ["vc-hue", e3.directionClass] }, [n2("div", { ref: "container", staticClass: "vc-hue-container", attrs: { role: "slider", "aria-valuenow": e3.colors.hsl.h, "aria-valuemin": "0", "aria-valuemax": "360" }, on: { mousedown: e3.handleMouseDown, touchmove: e3.handleChange, touchstart: e3.handleChange } }, [n2("div", { staticClass: "vc-hue-pointer", style: { top: e3.pointerTop, left: e3.pointerLeft }, attrs: { role: "presentation" } }, [n2("div", { staticClass: "vc-hue-picker" })])])]);
      }, i = [];
      r._withStripped = true;
      var o = { render: r, staticRenderFns: i };
      t4.a = o;
    }, function(e2, t4, n) {
      var r = function() {
        var e3 = this, t30 = e3.$createElement, n2 = e3._self._c || t30;
        return n2("div", { staticClass: "vc-slider", attrs: { role: "application", "aria-label": "Slider color picker" } }, [n2("div", { staticClass: "vc-slider-hue-warp" }, [n2("hue", { on: { change: e3.hueChange }, model: { value: e3.colors, callback: function(t33) {
          e3.colors = t33;
        }, expression: "colors" } })], 1), e3._v(" "), n2("div", { staticClass: "vc-slider-swatches", attrs: { role: "group" } }, e3._l(e3.normalizedSwatches, function(t33, r2) {
          return n2("div", { key: r2, staticClass: "vc-slider-swatch", attrs: { "data-index": r2, "aria-label": "color:" + e3.colors.hex, role: "button" }, on: { click: function(n3) {
            e3.handleSwClick(r2, t33);
          } } }, [n2("div", { staticClass: "vc-slider-swatch-picker", class: { "vc-slider-swatch-picker--active": e3.isActive(t33, r2), "vc-slider-swatch-picker--white": 1 === t33.l }, style: { background: "hsl(" + e3.colors.hsl.h + ", " + 100 * t33.s + "%, " + 100 * t33.l + "%)" } })]);
        }))]);
      }, i = [];
      r._withStripped = true;
      var o = { render: r, staticRenderFns: i };
      t4.a = o;
    }, function(e2, t4, n) {
      function r(e3) {
        n(116);
      }
      Object.defineProperty(t4, "__esModule", { value: true });
      var i = n(51), o = n.n(i);
      for (var a2 in i) "default" !== a2 && function(e3) {
        n.d(t4, e3, function() {
          return i[e3];
        });
      }(a2);
      var s2 = n(119), l = n(2), u = r, f2 = l(o.a, s2.a, false, u, null, null);
      f2.options.__file = "src/components/Swatches.vue", t4.default = f2.exports;
    }, function(e2, t4, n) {
      var r = n(117);
      "string" == typeof r && (r = [[e2.i, r, ""]]), r.locals && (e2.exports = r.locals);
      n(1)("10f839a2", r, false, {});
    }, function(e2, t4, n) {
      t4 = e2.exports = n(0)(false), t4.push([e2.i, "\n.vc-swatches {\n  width: 320px;\n  height: 240px;\n  overflow-y: scroll;\n  background-color: #fff;\n  box-shadow: 0 2px 10px rgba(0,0,0,.12), 0 2px 5px rgba(0,0,0,.16);\n}\n.vc-swatches-box {\n  padding: 16px 0 6px 16px;\n  overflow: hidden;\n}\n.vc-swatches-color-group {\n  padding-bottom: 10px;\n  width: 40px;\n  float: left;\n  margin-right: 10px;\n}\n.vc-swatches-color-it {\n  box-sizing: border-box;\n  width: 40px;\n  height: 24px;\n  cursor: pointer;\n  background: #880e4f;\n  margin-bottom: 1px;\n  overflow: hidden;\n  -ms-border-radius: 2px 2px 0 0;\n  -moz-border-radius: 2px 2px 0 0;\n  -o-border-radius: 2px 2px 0 0;\n  -webkit-border-radius: 2px 2px 0 0;\n  border-radius: 2px 2px 0 0;\n}\n.vc-swatches-color--white {\n  border: 1px solid #DDD;\n}\n.vc-swatches-pick {\n  fill: rgb(255, 255, 255);\n  margin-left: 8px;\n  display: block;\n}\n.vc-swatches-color--white .vc-swatches-pick {\n  fill: rgb(51, 51, 51);\n}\n", ""]);
    }, function(e2, t4, n) {
      Object.defineProperty(t4, "__esModule", { value: true }), n.d(t4, "red", function() {
        return r;
      }), n.d(t4, "pink", function() {
        return i;
      }), n.d(t4, "purple", function() {
        return o;
      }), n.d(t4, "deepPurple", function() {
        return a2;
      }), n.d(t4, "indigo", function() {
        return s2;
      }), n.d(t4, "blue", function() {
        return c;
      }), n.d(t4, "lightBlue", function() {
        return l;
      }), n.d(t4, "cyan", function() {
        return u;
      }), n.d(t4, "teal", function() {
        return f2;
      }), n.d(t4, "green", function() {
        return d2;
      }), n.d(t4, "lightGreen", function() {
        return h3;
      }), n.d(t4, "lime", function() {
        return p;
      }), n.d(t4, "yellow", function() {
        return v2;
      }), n.d(t4, "amber", function() {
        return g;
      }), n.d(t4, "orange", function() {
        return b;
      }), n.d(t4, "deepOrange", function() {
        return x2;
      }), n.d(t4, "brown", function() {
        return m2;
      }), n.d(t4, "grey", function() {
        return _2;
      }), n.d(t4, "blueGrey", function() {
        return w3;
      }), n.d(t4, "darkText", function() {
        return y;
      }), n.d(t4, "lightText", function() {
        return C;
      }), n.d(t4, "darkIcons", function() {
        return k;
      }), n.d(t4, "lightIcons", function() {
        return F;
      }), n.d(t4, "white", function() {
        return S2;
      }), n.d(t4, "black", function() {
        return A2;
      });
      var r = { 50: "#ffebee", 100: "#ffcdd2", 200: "#ef9a9a", 300: "#e57373", 400: "#ef5350", 500: "#f44336", 600: "#e53935", 700: "#d32f2f", 800: "#c62828", 900: "#b71c1c", a100: "#ff8a80", a200: "#ff5252", a400: "#ff1744", a700: "#d50000" }, i = { 50: "#fce4ec", 100: "#f8bbd0", 200: "#f48fb1", 300: "#f06292", 400: "#ec407a", 500: "#e91e63", 600: "#d81b60", 700: "#c2185b", 800: "#ad1457", 900: "#880e4f", a100: "#ff80ab", a200: "#ff4081", a400: "#f50057", a700: "#c51162" }, o = { 50: "#f3e5f5", 100: "#e1bee7", 200: "#ce93d8", 300: "#ba68c8", 400: "#ab47bc", 500: "#9c27b0", 600: "#8e24aa", 700: "#7b1fa2", 800: "#6a1b9a", 900: "#4a148c", a100: "#ea80fc", a200: "#e040fb", a400: "#d500f9", a700: "#aa00ff" }, a2 = { 50: "#ede7f6", 100: "#d1c4e9", 200: "#b39ddb", 300: "#9575cd", 400: "#7e57c2", 500: "#673ab7", 600: "#5e35b1", 700: "#512da8", 800: "#4527a0", 900: "#311b92", a100: "#b388ff", a200: "#7c4dff", a400: "#651fff", a700: "#6200ea" }, s2 = { 50: "#e8eaf6", 100: "#c5cae9", 200: "#9fa8da", 300: "#7986cb", 400: "#5c6bc0", 500: "#3f51b5", 600: "#3949ab", 700: "#303f9f", 800: "#283593", 900: "#1a237e", a100: "#8c9eff", a200: "#536dfe", a400: "#3d5afe", a700: "#304ffe" }, c = { 50: "#e3f2fd", 100: "#bbdefb", 200: "#90caf9", 300: "#64b5f6", 400: "#42a5f5", 500: "#2196f3", 600: "#1e88e5", 700: "#1976d2", 800: "#1565c0", 900: "#0d47a1", a100: "#82b1ff", a200: "#448aff", a400: "#2979ff", a700: "#2962ff" }, l = { 50: "#e1f5fe", 100: "#b3e5fc", 200: "#81d4fa", 300: "#4fc3f7", 400: "#29b6f6", 500: "#03a9f4", 600: "#039be5", 700: "#0288d1", 800: "#0277bd", 900: "#01579b", a100: "#80d8ff", a200: "#40c4ff", a400: "#00b0ff", a700: "#0091ea" }, u = { 50: "#e0f7fa", 100: "#b2ebf2", 200: "#80deea", 300: "#4dd0e1", 400: "#26c6da", 500: "#00bcd4", 600: "#00acc1", 700: "#0097a7", 800: "#00838f", 900: "#006064", a100: "#84ffff", a200: "#18ffff", a400: "#00e5ff", a700: "#00b8d4" }, f2 = { 50: "#e0f2f1", 100: "#b2dfdb", 200: "#80cbc4", 300: "#4db6ac", 400: "#26a69a", 500: "#009688", 600: "#00897b", 700: "#00796b", 800: "#00695c", 900: "#004d40", a100: "#a7ffeb", a200: "#64ffda", a400: "#1de9b6", a700: "#00bfa5" }, d2 = { 50: "#e8f5e9", 100: "#c8e6c9", 200: "#a5d6a7", 300: "#81c784", 400: "#66bb6a", 500: "#4caf50", 600: "#43a047", 700: "#388e3c", 800: "#2e7d32", 900: "#1b5e20", a100: "#b9f6ca", a200: "#69f0ae", a400: "#00e676", a700: "#00c853" }, h3 = { 50: "#f1f8e9", 100: "#dcedc8", 200: "#c5e1a5", 300: "#aed581", 400: "#9ccc65", 500: "#8bc34a", 600: "#7cb342", 700: "#689f38", 800: "#558b2f", 900: "#33691e", a100: "#ccff90", a200: "#b2ff59", a400: "#76ff03", a700: "#64dd17" }, p = { 50: "#f9fbe7", 100: "#f0f4c3", 200: "#e6ee9c", 300: "#dce775", 400: "#d4e157", 500: "#cddc39", 600: "#c0ca33", 700: "#afb42b", 800: "#9e9d24", 900: "#827717", a100: "#f4ff81", a200: "#eeff41", a400: "#c6ff00", a700: "#aeea00" }, v2 = { 50: "#fffde7", 100: "#fff9c4", 200: "#fff59d", 300: "#fff176", 400: "#ffee58", 500: "#ffeb3b", 600: "#fdd835", 700: "#fbc02d", 800: "#f9a825", 900: "#f57f17", a100: "#ffff8d", a200: "#ffff00", a400: "#ffea00", a700: "#ffd600" }, g = { 50: "#fff8e1", 100: "#ffecb3", 200: "#ffe082", 300: "#ffd54f", 400: "#ffca28", 500: "#ffc107", 600: "#ffb300", 700: "#ffa000", 800: "#ff8f00", 900: "#ff6f00", a100: "#ffe57f", a200: "#ffd740", a400: "#ffc400", a700: "#ffab00" }, b = { 50: "#fff3e0", 100: "#ffe0b2", 200: "#ffcc80", 300: "#ffb74d", 400: "#ffa726", 500: "#ff9800", 600: "#fb8c00", 700: "#f57c00", 800: "#ef6c00", 900: "#e65100", a100: "#ffd180", a200: "#ffab40", a400: "#ff9100", a700: "#ff6d00" }, x2 = { 50: "#fbe9e7", 100: "#ffccbc", 200: "#ffab91", 300: "#ff8a65", 400: "#ff7043", 500: "#ff5722", 600: "#f4511e", 700: "#e64a19", 800: "#d84315", 900: "#bf360c", a100: "#ff9e80", a200: "#ff6e40", a400: "#ff3d00", a700: "#dd2c00" }, m2 = { 50: "#efebe9", 100: "#d7ccc8", 200: "#bcaaa4", 300: "#a1887f", 400: "#8d6e63", 500: "#795548", 600: "#6d4c41", 700: "#5d4037", 800: "#4e342e", 900: "#3e2723" }, _2 = { 50: "#fafafa", 100: "#f5f5f5", 200: "#eeeeee", 300: "#e0e0e0", 400: "#bdbdbd", 500: "#9e9e9e", 600: "#757575", 700: "#616161", 800: "#424242", 900: "#212121" }, w3 = { 50: "#eceff1", 100: "#cfd8dc", 200: "#b0bec5", 300: "#90a4ae", 400: "#78909c", 500: "#607d8b", 600: "#546e7a", 700: "#455a64", 800: "#37474f", 900: "#263238" }, y = { primary: "rgba(0, 0, 0, 0.87)", secondary: "rgba(0, 0, 0, 0.54)", disabled: "rgba(0, 0, 0, 0.38)", dividers: "rgba(0, 0, 0, 0.12)" }, C = { primary: "rgba(255, 255, 255, 1)", secondary: "rgba(255, 255, 255, 0.7)", disabled: "rgba(255, 255, 255, 0.5)", dividers: "rgba(255, 255, 255, 0.12)" }, k = { active: "rgba(0, 0, 0, 0.54)", inactive: "rgba(0, 0, 0, 0.38)" }, F = { active: "rgba(255, 255, 255, 1)", inactive: "rgba(255, 255, 255, 0.5)" }, S2 = "#ffffff", A2 = "#000000";
      t4.default = { red: r, pink: i, purple: o, deepPurple: a2, indigo: s2, blue: c, lightBlue: l, cyan: u, teal: f2, green: d2, lightGreen: h3, lime: p, yellow: v2, amber: g, orange: b, deepOrange: x2, brown: m2, grey: _2, blueGrey: w3, darkText: y, lightText: C, darkIcons: k, lightIcons: F, white: S2, black: A2 };
    }, function(e2, t4, n) {
      var r = function() {
        var e3 = this, t30 = e3.$createElement, n2 = e3._self._c || t30;
        return n2("div", { staticClass: "vc-swatches", attrs: { role: "application", "aria-label": "Swatches color picker", "data-pick": e3.pick } }, [n2("div", { staticClass: "vc-swatches-box", attrs: { role: "listbox" } }, e3._l(e3.palette, function(t33, r2) {
          return n2("div", { key: r2, staticClass: "vc-swatches-color-group" }, e3._l(t33, function(t51) {
            return n2("div", { key: t51, class: ["vc-swatches-color-it", { "vc-swatches-color--white": "#FFFFFF" === t51 }], style: { background: t51 }, attrs: { role: "option", "aria-label": "Color:" + t51, "aria-selected": e3.equal(t51), "data-color": t51 }, on: { click: function(n3) {
              e3.handlerClick(t51);
            } } }, [n2("div", { directives: [{ name: "show", rawName: "v-show", value: e3.equal(t51), expression: "equal(c)" }], staticClass: "vc-swatches-pick" }, [n2("svg", { staticStyle: { width: "24px", height: "24px" }, attrs: { viewBox: "0 0 24 24" } }, [n2("path", { attrs: { d: "M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z" } })])])]);
          }));
        }))]);
      }, i = [];
      r._withStripped = true;
      var o = { render: r, staticRenderFns: i };
      t4.a = o;
    }, function(e2, t4, n) {
      function r(e3) {
        n(121);
      }
      Object.defineProperty(t4, "__esModule", { value: true });
      var i = n(52), o = n.n(i);
      for (var a2 in i) "default" !== a2 && function(e3) {
        n.d(t4, e3, function() {
          return i[e3];
        });
      }(a2);
      var s2 = n(134), l = n(2), u = r, f2 = l(o.a, s2.a, false, u, null, null);
      f2.options.__file = "src/components/Photoshop.vue", t4.default = f2.exports;
    }, function(e2, t4, n) {
      var r = n(122);
      "string" == typeof r && (r = [[e2.i, r, ""]]), r.locals && (e2.exports = r.locals);
      n(1)("080365d4", r, false, {});
    }, function(e2, t4, n) {
      t4 = e2.exports = n(0)(false), t4.push([e2.i, '\n.vc-photoshop {\n  background: #DCDCDC;\n  border-radius: 4px;\n  box-shadow: 0 0 0 1px rgba(0,0,0,.25), 0 8px 16px rgba(0,0,0,.15);\n  box-sizing: initial;\n  width: 513px;\n  font-family: Roboto;\n}\n.vc-photoshop__disable-fields {\n  width: 390px;\n}\n.vc-ps-head {\n  background-image: linear-gradient(-180deg, #F0F0F0 0%, #D4D4D4 100%);\n  border-bottom: 1px solid #B1B1B1;\n  box-shadow: inset 0 1px 0 0 rgba(255,255,255,.2), inset 0 -1px 0 0 rgba(0,0,0,.02);\n  height: 23px;\n  line-height: 24px;\n  border-radius: 4px 4px 0 0;\n  font-size: 13px;\n  color: #4D4D4D;\n  text-align: center;\n}\n.vc-ps-body {\n  padding: 15px;\n  display: flex;\n}\n.vc-ps-saturation-wrap {\n  width: 256px;\n  height: 256px;\n  position: relative;\n  border: 2px solid #B3B3B3;\n  border-bottom: 2px solid #F0F0F0;\n  overflow: hidden;\n}\n.vc-ps-saturation-wrap .vc-saturation-circle {\n  width: 12px;\n  height: 12px;\n}\n.vc-ps-hue-wrap {\n  position: relative;\n  height: 256px;\n  width: 19px;\n  margin-left: 10px;\n  border: 2px solid #B3B3B3;\n  border-bottom: 2px solid #F0F0F0;\n}\n.vc-ps-hue-pointer {\n  position: relative;\n}\n.vc-ps-hue-pointer--left,\n.vc-ps-hue-pointer--right {\n  position: absolute;\n  width: 0;\n  height: 0;\n  border-style: solid;\n  border-width: 5px 0 5px 8px;\n  border-color: transparent transparent transparent #555;\n}\n.vc-ps-hue-pointer--left:after,\n.vc-ps-hue-pointer--right:after {\n  content: "";\n  width: 0;\n  height: 0;\n  border-style: solid;\n  border-width: 4px 0 4px 6px;\n  border-color: transparent transparent transparent #fff;\n  position: absolute;\n  top: 1px;\n  left: 1px;\n  transform: translate(-8px, -5px);\n}\n.vc-ps-hue-pointer--left {\n  transform: translate(-13px, -4px);\n}\n.vc-ps-hue-pointer--right {\n  transform: translate(20px, -4px) rotate(180deg);\n}\n.vc-ps-controls {\n  width: 180px;\n  margin-left: 10px;\n  display: flex;\n}\n.vc-ps-controls__disable-fields {\n  width: auto;\n}\n.vc-ps-actions {\n  margin-left: 20px;\n  flex: 1;\n}\n.vc-ps-ac-btn {\n  cursor: pointer;\n  background-image: linear-gradient(-180deg, #FFFFFF 0%, #E6E6E6 100%);\n  border: 1px solid #878787;\n  border-radius: 2px;\n  height: 20px;\n  box-shadow: 0 1px 0 0 #EAEAEA;\n  font-size: 14px;\n  color: #000;\n  line-height: 20px;\n  text-align: center;\n  margin-bottom: 10px;\n}\n.vc-ps-previews {\n  width: 60px;\n}\n.vc-ps-previews__swatches {\n  border: 1px solid #B3B3B3;\n  border-bottom: 1px solid #F0F0F0;\n  margin-bottom: 2px;\n  margin-top: 1px;\n}\n.vc-ps-previews__pr-color {\n  height: 34px;\n  box-shadow: inset 1px 0 0 #000, inset -1px 0 0 #000, inset 0 1px 0 #000;\n}\n.vc-ps-previews__label {\n  font-size: 14px;\n  color: #000;\n  text-align: center;\n}\n.vc-ps-fields {\n  padding-top: 5px;\n  padding-bottom: 9px;\n  width: 80px;\n  position: relative;\n}\n.vc-ps-fields .vc-input__input {\n  margin-left: 40%;\n  width: 40%;\n  height: 18px;\n  border: 1px solid #888888;\n  box-shadow: inset 0 1px 1px rgba(0,0,0,.1), 0 1px 0 0 #ECECEC;\n  margin-bottom: 5px;\n  font-size: 13px;\n  padding-left: 3px;\n  margin-right: 10px;\n}\n.vc-ps-fields .vc-input__label, .vc-ps-fields .vc-input__desc {\n  top: 0;\n  text-transform: uppercase;\n  font-size: 13px;\n  height: 18px;\n  line-height: 22px;\n  position: absolute;\n}\n.vc-ps-fields .vc-input__label {\n  left: 0;\n  width: 34px;\n}\n.vc-ps-fields .vc-input__desc {\n  right: 0;\n  width: 0;\n}\n.vc-ps-fields__divider {\n  height: 5px;\n}\n.vc-ps-fields__hex .vc-input__input {\n  margin-left: 20%;\n  width: 80%;\n  height: 18px;\n  border: 1px solid #888888;\n  box-shadow: inset 0 1px 1px rgba(0,0,0,.1), 0 1px 0 0 #ECECEC;\n  margin-bottom: 6px;\n  font-size: 13px;\n  padding-left: 3px;\n}\n.vc-ps-fields__hex .vc-input__label {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 14px;\n  text-transform: uppercase;\n  font-size: 13px;\n  height: 18px;\n  line-height: 22px;\n}\n', ""]);
    }, function(e2, t4, n) {
      var r = n(124);
      "string" == typeof r && (r = [[e2.i, r, ""]]), r.locals && (e2.exports = r.locals);
      n(1)("b5380e52", r, false, {});
    }, function(e2, t4, n) {
      t4 = e2.exports = n(0)(false), t4.push([e2.i, "\n.vc-saturation,\n.vc-saturation--white,\n.vc-saturation--black {\n  cursor: pointer;\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n}\n.vc-saturation--white {\n  background: linear-gradient(to right, #fff, rgba(255,255,255,0));\n}\n.vc-saturation--black {\n  background: linear-gradient(to top, #000, rgba(0,0,0,0));\n}\n.vc-saturation-pointer {\n  cursor: pointer;\n  position: absolute;\n}\n.vc-saturation-circle {\n  cursor: pointer;\n  width: 4px;\n  height: 4px;\n  box-shadow: 0 0 0 1.6px #fff, inset 0 0 1px 1px rgba(0,0,0,.3), 0 0 1px 2px rgba(0,0,0,.4);\n  border-radius: 50%;\n  transform: translate(-2px, -2px);\n}\n", ""]);
    }, function(e2, t4) {
      function n(e3, t30, n2) {
        return t30 < n2 ? e3 < t30 ? t30 : e3 > n2 ? n2 : e3 : e3 < n2 ? n2 : e3 > t30 ? t30 : e3;
      }
      e2.exports = n;
    }, function(e2, t4) {
      function n(e3, t30, n2) {
        function r2(t33) {
          var n3 = v3, r3 = g2;
          return v3 = g2 = void 0, k = t33, x3 = e3.apply(r3, n3);
        }
        function o2(e4) {
          return k = e4, m3 = setTimeout(u2, t30), F ? r2(e4) : x3;
        }
        function a3(e4) {
          var n3 = e4 - _3, r3 = e4 - k, i2 = t30 - n3;
          return S2 ? y(i2, b2 - r3) : i2;
        }
        function l2(e4) {
          var n3 = e4 - _3, r3 = e4 - k;
          return void 0 === _3 || n3 >= t30 || n3 < 0 || S2 && r3 >= b2;
        }
        function u2() {
          var e4 = C();
          if (l2(e4)) return f3(e4);
          m3 = setTimeout(u2, a3(e4));
        }
        function f3(e4) {
          return m3 = void 0, A2 && v3 ? r2(e4) : (v3 = g2 = void 0, x3);
        }
        function d3() {
          void 0 !== m3 && clearTimeout(m3), k = 0, v3 = _3 = g2 = m3 = void 0;
        }
        function h4() {
          return void 0 === m3 ? x3 : f3(C());
        }
        function p2() {
          var e4 = C(), n3 = l2(e4);
          if (v3 = arguments, g2 = this, _3 = e4, n3) {
            if (void 0 === m3) return o2(_3);
            if (S2) return m3 = setTimeout(u2, t30), r2(_3);
          }
          return void 0 === m3 && (m3 = setTimeout(u2, t30)), x3;
        }
        var v3, g2, b2, x3, m3, _3, k = 0, F = false, S2 = false, A2 = true;
        if ("function" != typeof e3) throw new TypeError(c);
        return t30 = s2(t30) || 0, i(n2) && (F = !!n2.leading, S2 = "maxWait" in n2, b2 = S2 ? w3(s2(n2.maxWait) || 0, t30) : b2, A2 = "trailing" in n2 ? !!n2.trailing : A2), p2.cancel = d3, p2.flush = h4, p2;
      }
      function r(e3, t30, r2) {
        var o2 = true, a3 = true;
        if ("function" != typeof e3) throw new TypeError(c);
        return i(r2) && (o2 = "leading" in r2 ? !!r2.leading : o2, a3 = "trailing" in r2 ? !!r2.trailing : a3), n(e3, t30, { leading: o2, maxWait: t30, trailing: a3 });
      }
      function i(e3) {
        var t30 = typeof e3;
        return !!e3 && ("object" == t30 || "function" == t30);
      }
      function o(e3) {
        return !!e3 && "object" == typeof e3;
      }
      function a2(e3) {
        return "symbol" == typeof e3 || o(e3) && _2.call(e3) == u;
      }
      function s2(e3) {
        if ("number" == typeof e3) return e3;
        if (a2(e3)) return l;
        if (i(e3)) {
          var t30 = "function" == typeof e3.valueOf ? e3.valueOf() : e3;
          e3 = i(t30) ? t30 + "" : t30;
        }
        if ("string" != typeof e3) return 0 === e3 ? e3 : +e3;
        e3 = e3.replace(f2, "");
        var n2 = h3.test(e3);
        return n2 || p.test(e3) ? v2(e3.slice(2), n2 ? 2 : 8) : d2.test(e3) ? l : +e3;
      }
      var c = "Expected a function", l = NaN, u = "[object Symbol]", f2 = /^\s+|\s+$/g, d2 = /^[-+]0x[0-9a-f]+$/i, h3 = /^0b[01]+$/i, p = /^0o[0-7]+$/i, v2 = parseInt, g = "object" == typeof commonjsGlobal && commonjsGlobal && commonjsGlobal.Object === Object && commonjsGlobal, b = "object" == typeof self && self && self.Object === Object && self, x2 = g || b || Function("return this")(), m2 = Object.prototype, _2 = m2.toString, w3 = Math.max, y = Math.min, C = function() {
        return x2.Date.now();
      };
      e2.exports = r;
    }, function(e2, t4, n) {
      var r = function() {
        var e3 = this, t30 = e3.$createElement, n2 = e3._self._c || t30;
        return n2("div", { ref: "container", staticClass: "vc-saturation", style: { background: e3.bgColor }, on: { mousedown: e3.handleMouseDown, touchmove: e3.handleChange, touchstart: e3.handleChange } }, [n2("div", { staticClass: "vc-saturation--white" }), e3._v(" "), n2("div", { staticClass: "vc-saturation--black" }), e3._v(" "), n2("div", { staticClass: "vc-saturation-pointer", style: { top: e3.pointerTop, left: e3.pointerLeft } }, [n2("div", { staticClass: "vc-saturation-circle" })])]);
      }, i = [];
      r._withStripped = true;
      var o = { render: r, staticRenderFns: i };
      t4.a = o;
    }, function(e2, t4, n) {
      var r = n(129);
      "string" == typeof r && (r = [[e2.i, r, ""]]), r.locals && (e2.exports = r.locals);
      n(1)("4dc1b086", r, false, {});
    }, function(e2, t4, n) {
      t4 = e2.exports = n(0)(false), t4.push([e2.i, "\n.vc-alpha {\n  position: absolute;\n  top: 0px;\n  right: 0px;\n  bottom: 0px;\n  left: 0px;\n}\n.vc-alpha-checkboard-wrap {\n  position: absolute;\n  top: 0px;\n  right: 0px;\n  bottom: 0px;\n  left: 0px;\n  overflow: hidden;\n}\n.vc-alpha-gradient {\n  position: absolute;\n  top: 0px;\n  right: 0px;\n  bottom: 0px;\n  left: 0px;\n}\n.vc-alpha-container {\n  cursor: pointer;\n  position: relative;\n  z-index: 2;\n  height: 100%;\n  margin: 0 3px;\n}\n.vc-alpha-pointer {\n  z-index: 2;\n  position: absolute;\n}\n.vc-alpha-picker {\n  cursor: pointer;\n  width: 4px;\n  border-radius: 1px;\n  height: 8px;\n  box-shadow: 0 0 2px rgba(0, 0, 0, .6);\n  background: #fff;\n  margin-top: 1px;\n  transform: translateX(-2px);\n}\n", ""]);
    }, function(e2, t4, n) {
      var r = n(131);
      "string" == typeof r && (r = [[e2.i, r, ""]]), r.locals && (e2.exports = r.locals);
      n(1)("7e15c05b", r, false, {});
    }, function(e2, t4, n) {
      t4 = e2.exports = n(0)(false), t4.push([e2.i, "\n.vc-checkerboard {\n  position: absolute;\n  top: 0px;\n  right: 0px;\n  bottom: 0px;\n  left: 0px;\n  background-size: contain;\n}\n", ""]);
    }, function(e2, t4, n) {
      var r = function() {
        var e3 = this, t30 = e3.$createElement;
        return (e3._self._c || t30)("div", { staticClass: "vc-checkerboard", style: e3.bgStyle });
      }, i = [];
      r._withStripped = true;
      var o = { render: r, staticRenderFns: i };
      t4.a = o;
    }, function(e2, t4, n) {
      var r = function() {
        var e3 = this, t30 = e3.$createElement, n2 = e3._self._c || t30;
        return n2("div", { staticClass: "vc-alpha" }, [n2("div", { staticClass: "vc-alpha-checkboard-wrap" }, [n2("checkboard")], 1), e3._v(" "), n2("div", { staticClass: "vc-alpha-gradient", style: { background: e3.gradientColor } }), e3._v(" "), n2("div", { ref: "container", staticClass: "vc-alpha-container", on: { mousedown: e3.handleMouseDown, touchmove: e3.handleChange, touchstart: e3.handleChange } }, [n2("div", { staticClass: "vc-alpha-pointer", style: { left: 100 * e3.colors.a + "%" } }, [n2("div", { staticClass: "vc-alpha-picker" })])])]);
      }, i = [];
      r._withStripped = true;
      var o = { render: r, staticRenderFns: i };
      t4.a = o;
    }, function(e2, t4, n) {
      var r = function() {
        var e3 = this, t30 = e3.$createElement, n2 = e3._self._c || t30;
        return n2("div", { class: ["vc-photoshop", e3.disableFields ? "vc-photoshop__disable-fields" : ""], attrs: { role: "application", "aria-label": "PhotoShop color picker" } }, [n2("div", { staticClass: "vc-ps-head", attrs: { role: "heading" } }, [e3._v(e3._s(e3.head))]), e3._v(" "), n2("div", { staticClass: "vc-ps-body" }, [n2("div", { staticClass: "vc-ps-saturation-wrap" }, [n2("saturation", { on: { change: e3.childChange }, model: { value: e3.colors, callback: function(t33) {
          e3.colors = t33;
        }, expression: "colors" } })], 1), e3._v(" "), n2("div", { staticClass: "vc-ps-hue-wrap" }, [n2("hue", { attrs: { direction: "vertical" }, on: { change: e3.childChange }, model: { value: e3.colors, callback: function(t33) {
          e3.colors = t33;
        }, expression: "colors" } }, [n2("div", { staticClass: "vc-ps-hue-pointer" }, [n2("i", { staticClass: "vc-ps-hue-pointer--left" }), n2("i", { staticClass: "vc-ps-hue-pointer--right" })])])], 1), e3._v(" "), n2("div", { class: ["vc-ps-controls", e3.disableFields ? "vc-ps-controls__disable-fields" : ""] }, [n2("div", { staticClass: "vc-ps-previews" }, [n2("div", { staticClass: "vc-ps-previews__label" }, [e3._v(e3._s(e3.newLabel))]), e3._v(" "), n2("div", { staticClass: "vc-ps-previews__swatches" }, [n2("div", { staticClass: "vc-ps-previews__pr-color", style: { background: e3.colors.hex }, attrs: { "aria-label": "New color is " + e3.colors.hex } }), e3._v(" "), n2("div", { staticClass: "vc-ps-previews__pr-color", style: { background: e3.currentColor }, attrs: { "aria-label": "Current color is " + e3.currentColor }, on: { click: e3.clickCurrentColor } })]), e3._v(" "), n2("div", { staticClass: "vc-ps-previews__label" }, [e3._v(e3._s(e3.currentLabel))])]), e3._v(" "), e3.disableFields ? e3._e() : n2("div", { staticClass: "vc-ps-actions" }, [n2("div", { staticClass: "vc-ps-ac-btn", attrs: { role: "button", "aria-label": e3.acceptLabel }, on: { click: e3.handleAccept } }, [e3._v(e3._s(e3.acceptLabel))]), e3._v(" "), n2("div", { staticClass: "vc-ps-ac-btn", attrs: { role: "button", "aria-label": e3.cancelLabel }, on: { click: e3.handleCancel } }, [e3._v(e3._s(e3.cancelLabel))]), e3._v(" "), n2("div", { staticClass: "vc-ps-fields" }, [n2("ed-in", { attrs: { label: "h", desc: "°", value: e3.hsv.h }, on: { change: e3.inputChange } }), e3._v(" "), n2("ed-in", { attrs: { label: "s", desc: "%", value: e3.hsv.s, max: 100 }, on: { change: e3.inputChange } }), e3._v(" "), n2("ed-in", { attrs: { label: "v", desc: "%", value: e3.hsv.v, max: 100 }, on: { change: e3.inputChange } }), e3._v(" "), n2("div", { staticClass: "vc-ps-fields__divider" }), e3._v(" "), n2("ed-in", { attrs: { label: "r", value: e3.colors.rgba.r }, on: { change: e3.inputChange } }), e3._v(" "), n2("ed-in", { attrs: { label: "g", value: e3.colors.rgba.g }, on: { change: e3.inputChange } }), e3._v(" "), n2("ed-in", { attrs: { label: "b", value: e3.colors.rgba.b }, on: { change: e3.inputChange } }), e3._v(" "), n2("div", { staticClass: "vc-ps-fields__divider" }), e3._v(" "), n2("ed-in", { staticClass: "vc-ps-fields__hex", attrs: { label: "#", value: e3.hex }, on: { change: e3.inputChange } })], 1), e3._v(" "), e3.hasResetButton ? n2("div", { staticClass: "vc-ps-ac-btn", attrs: { "aria-label": "reset" }, on: { click: e3.handleReset } }, [e3._v(e3._s(e3.resetLabel))]) : e3._e()])])])]);
      }, i = [];
      r._withStripped = true;
      var o = { render: r, staticRenderFns: i };
      t4.a = o;
    }, function(e2, t4, n) {
      function r(e3) {
        n(136);
      }
      Object.defineProperty(t4, "__esModule", { value: true });
      var i = n(56), o = n.n(i);
      for (var a2 in i) "default" !== a2 && function(e3) {
        n.d(t4, e3, function() {
          return i[e3];
        });
      }(a2);
      var s2 = n(138), l = n(2), u = r, f2 = l(o.a, s2.a, false, u, null, null);
      f2.options.__file = "src/components/Sketch.vue", t4.default = f2.exports;
    }, function(e2, t4, n) {
      var r = n(137);
      "string" == typeof r && (r = [[e2.i, r, ""]]), r.locals && (e2.exports = r.locals);
      n(1)("612c6604", r, false, {});
    }, function(e2, t4, n) {
      t4 = e2.exports = n(0)(false), t4.push([e2.i, "\n.vc-sketch {\n  position: relative;\n  width: 200px;\n  padding: 10px 10px 0;\n  box-sizing: initial;\n  background: #fff;\n  border-radius: 4px;\n  box-shadow: 0 0 0 1px rgba(0, 0, 0, .15), 0 8px 16px rgba(0, 0, 0, .15);\n}\n.vc-sketch-saturation-wrap {\n  width: 100%;\n  padding-bottom: 75%;\n  position: relative;\n  overflow: hidden;\n}\n.vc-sketch-controls {\n  display: flex;\n}\n.vc-sketch-sliders {\n  padding: 4px 0;\n  flex: 1;\n}\n.vc-sketch-sliders .vc-hue,\n.vc-sketch-sliders .vc-alpha-gradient {\n  border-radius: 2px;\n}\n.vc-sketch-hue-wrap {\n  position: relative;\n  height: 10px;\n}\n.vc-sketch-alpha-wrap {\n  position: relative;\n  height: 10px;\n  margin-top: 4px;\n  overflow: hidden;\n}\n.vc-sketch-color-wrap {\n  width: 24px;\n  height: 24px;\n  position: relative;\n  margin-top: 4px;\n  margin-left: 4px;\n  border-radius: 3px;\n}\n.vc-sketch-active-color {\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  border-radius: 2px;\n  box-shadow: inset 0 0 0 1px rgba(0, 0, 0, .15), inset 0 0 4px rgba(0, 0, 0, .25);\n  z-index: 2;\n}\n.vc-sketch-color-wrap .vc-checkerboard {\n  background-size: auto;\n}\n.vc-sketch-field {\n  display: flex;\n  padding-top: 4px;\n}\n.vc-sketch-field .vc-input__input {\n  width: 90%;\n  padding: 4px 0 3px 10%;\n  border: none;\n  box-shadow: inset 0 0 0 1px #ccc;\n  font-size: 10px;\n}\n.vc-sketch-field .vc-input__label {\n  display: block;\n  text-align: center;\n  font-size: 11px;\n  color: #222;\n  padding-top: 3px;\n  padding-bottom: 4px;\n  text-transform: capitalize;\n}\n.vc-sketch-field--single {\n  flex: 1;\n  padding-left: 6px;\n}\n.vc-sketch-field--double {\n  flex: 2;\n}\n.vc-sketch-presets {\n  margin-right: -10px;\n  margin-left: -10px;\n  padding-left: 10px;\n  padding-top: 10px;\n  border-top: 1px solid #eee;\n}\n.vc-sketch-presets-color {\n  border-radius: 3px;\n  overflow: hidden;\n  position: relative;\n  display: inline-block;\n  margin: 0 10px 10px 0;\n  vertical-align: top;\n  cursor: pointer;\n  width: 16px;\n  height: 16px;\n  box-shadow: inset 0 0 0 1px rgba(0, 0, 0, .15);\n}\n.vc-sketch-presets-color .vc-checkerboard {\n  box-shadow: inset 0 0 0 1px rgba(0, 0, 0, .15);\n  border-radius: 3px;\n}\n.vc-sketch__disable-alpha .vc-sketch-color-wrap {\n  height: 10px;\n}\n", ""]);
    }, function(e2, t4, n) {
      var r = function() {
        var e3 = this, t30 = e3.$createElement, n2 = e3._self._c || t30;
        return n2("div", { class: ["vc-sketch", e3.disableAlpha ? "vc-sketch__disable-alpha" : ""], attrs: { role: "application", "aria-label": "Sketch color picker" } }, [n2("div", { staticClass: "vc-sketch-saturation-wrap" }, [n2("saturation", { on: { change: e3.childChange }, model: { value: e3.colors, callback: function(t33) {
          e3.colors = t33;
        }, expression: "colors" } })], 1), e3._v(" "), n2("div", { staticClass: "vc-sketch-controls" }, [n2("div", { staticClass: "vc-sketch-sliders" }, [n2("div", { staticClass: "vc-sketch-hue-wrap" }, [n2("hue", { on: { change: e3.childChange }, model: { value: e3.colors, callback: function(t33) {
          e3.colors = t33;
        }, expression: "colors" } })], 1), e3._v(" "), e3.disableAlpha ? e3._e() : n2("div", { staticClass: "vc-sketch-alpha-wrap" }, [n2("alpha", { on: { change: e3.childChange }, model: { value: e3.colors, callback: function(t33) {
          e3.colors = t33;
        }, expression: "colors" } })], 1)]), e3._v(" "), n2("div", { staticClass: "vc-sketch-color-wrap" }, [n2("div", { staticClass: "vc-sketch-active-color", style: { background: e3.activeColor }, attrs: { "aria-label": "Current color is " + e3.activeColor } }), e3._v(" "), n2("checkboard")], 1)]), e3._v(" "), e3.disableFields ? e3._e() : n2("div", { staticClass: "vc-sketch-field" }, [n2("div", { staticClass: "vc-sketch-field--double" }, [n2("ed-in", { attrs: { label: "hex", value: e3.hex }, on: { change: e3.inputChange } })], 1), e3._v(" "), n2("div", { staticClass: "vc-sketch-field--single" }, [n2("ed-in", { attrs: { label: "r", value: e3.colors.rgba.r }, on: { change: e3.inputChange } })], 1), e3._v(" "), n2("div", { staticClass: "vc-sketch-field--single" }, [n2("ed-in", { attrs: { label: "g", value: e3.colors.rgba.g }, on: { change: e3.inputChange } })], 1), e3._v(" "), n2("div", { staticClass: "vc-sketch-field--single" }, [n2("ed-in", { attrs: { label: "b", value: e3.colors.rgba.b }, on: { change: e3.inputChange } })], 1), e3._v(" "), e3.disableAlpha ? e3._e() : n2("div", { staticClass: "vc-sketch-field--single" }, [n2("ed-in", { attrs: { label: "a", value: e3.colors.a, "arrow-offset": 0.01, max: 1 }, on: { change: e3.inputChange } })], 1)]), e3._v(" "), n2("div", { staticClass: "vc-sketch-presets", attrs: { role: "group", "aria-label": "A color preset, pick one to set as current color" } }, [e3._l(e3.presetColors, function(t33) {
          return [e3.isTransparent(t33) ? n2("div", { key: t33, staticClass: "vc-sketch-presets-color", attrs: { "aria-label": "Color:" + t33 }, on: { click: function(n3) {
            e3.handlePreset(t33);
          } } }, [n2("checkboard")], 1) : n2("div", { key: t33, staticClass: "vc-sketch-presets-color", style: { background: t33 }, attrs: { "aria-label": "Color:" + t33 }, on: { click: function(n3) {
            e3.handlePreset(t33);
          } } })];
        })], 2)]);
      }, i = [];
      r._withStripped = true;
      var o = { render: r, staticRenderFns: i };
      t4.a = o;
    }, function(e2, t4, n) {
      function r(e3) {
        n(140);
      }
      Object.defineProperty(t4, "__esModule", { value: true });
      var i = n(57), o = n.n(i);
      for (var a2 in i) "default" !== a2 && function(e3) {
        n.d(t4, e3, function() {
          return i[e3];
        });
      }(a2);
      var s2 = n(142), l = n(2), u = r, f2 = l(o.a, s2.a, false, u, null, null);
      f2.options.__file = "src/components/Chrome.vue", t4.default = f2.exports;
    }, function(e2, t4, n) {
      var r = n(141);
      "string" == typeof r && (r = [[e2.i, r, ""]]), r.locals && (e2.exports = r.locals);
      n(1)("1cd16048", r, false, {});
    }, function(e2, t4, n) {
      t4 = e2.exports = n(0)(false), t4.push([e2.i, "\n.vc-chrome {\n  background: #fff;\n  border-radius: 2px;\n  box-shadow: 0 0 2px rgba(0,0,0,.3), 0 4px 8px rgba(0,0,0,.3);\n  box-sizing: initial;\n  width: 225px;\n  font-family: Menlo, monospace;\n  background-color: #fff;\n}\n.vc-chrome-controls {\n  display: flex;\n}\n.vc-chrome-color-wrap {\n  position: relative;\n  width: 36px;\n}\n.vc-chrome-active-color {\n  position: relative;\n  width: 30px;\n  height: 30px;\n  border-radius: 15px;\n  overflow: hidden;\n  z-index: 1;\n}\n.vc-chrome-color-wrap .vc-checkerboard {\n  width: 30px;\n  height: 30px;\n  border-radius: 15px;\n  background-size: auto;\n}\n.vc-chrome-sliders {\n  flex: 1;\n}\n.vc-chrome-fields-wrap {\n  display: flex;\n  padding-top: 16px;\n}\n.vc-chrome-fields {\n  display: flex;\n  margin-left: -6px;\n  flex: 1;\n}\n.vc-chrome-field {\n  padding-left: 6px;\n  width: 100%;\n}\n.vc-chrome-toggle-btn {\n  width: 32px;\n  text-align: right;\n  position: relative;\n}\n.vc-chrome-toggle-icon {\n  margin-right: -4px;\n  margin-top: 12px;\n  cursor: pointer;\n  position: relative;\n  z-index: 2;\n}\n.vc-chrome-toggle-icon-highlight {\n  position: absolute;\n  width: 24px;\n  height: 28px;\n  background: #eee;\n  border-radius: 4px;\n  top: 10px;\n  left: 12px;\n}\n.vc-chrome-hue-wrap {\n  position: relative;\n  height: 10px;\n  margin-bottom: 8px;\n}\n.vc-chrome-alpha-wrap {\n  position: relative;\n  height: 10px;\n}\n.vc-chrome-hue-wrap .vc-hue {\n  border-radius: 2px;\n}\n.vc-chrome-alpha-wrap .vc-alpha-gradient {\n  border-radius: 2px;\n}\n.vc-chrome-hue-wrap .vc-hue-picker, .vc-chrome-alpha-wrap .vc-alpha-picker {\n  width: 12px;\n  height: 12px;\n  border-radius: 6px;\n  transform: translate(-6px, -2px);\n  background-color: rgb(248, 248, 248);\n  box-shadow: 0 1px 4px 0 rgba(0, 0, 0, 0.37);\n}\n.vc-chrome-body {\n  padding: 16px 16px 12px;\n  background-color: #fff;\n}\n.vc-chrome-saturation-wrap {\n  width: 100%;\n  padding-bottom: 55%;\n  position: relative;\n  border-radius: 2px 2px 0 0;\n  overflow: hidden;\n}\n.vc-chrome-saturation-wrap .vc-saturation-circle {\n  width: 12px;\n  height: 12px;\n}\n.vc-chrome-fields .vc-input__input {\n  font-size: 11px;\n  color: #333;\n  width: 100%;\n  border-radius: 2px;\n  border: none;\n  box-shadow: inset 0 0 0 1px #dadada;\n  height: 21px;\n  text-align: center;\n}\n.vc-chrome-fields .vc-input__label {\n  text-transform: uppercase;\n  font-size: 11px;\n  line-height: 11px;\n  color: #969696;\n  text-align: center;\n  display: block;\n  margin-top: 12px;\n}\n.vc-chrome__disable-alpha .vc-chrome-active-color {\n  width: 18px;\n  height: 18px;\n}\n.vc-chrome__disable-alpha .vc-chrome-color-wrap {\n  width: 30px;\n}\n.vc-chrome__disable-alpha .vc-chrome-hue-wrap {\n  margin-top: 4px;\n  margin-bottom: 4px;\n}\n", ""]);
    }, function(e2, t4, n) {
      var r = function() {
        var e3 = this, t30 = e3.$createElement, n2 = e3._self._c || t30;
        return n2("div", { class: ["vc-chrome", e3.disableAlpha ? "vc-chrome__disable-alpha" : ""], attrs: { role: "application", "aria-label": "Chrome color picker" } }, [n2("div", { staticClass: "vc-chrome-saturation-wrap" }, [n2("saturation", { on: { change: e3.childChange }, model: { value: e3.colors, callback: function(t33) {
          e3.colors = t33;
        }, expression: "colors" } })], 1), e3._v(" "), n2("div", { staticClass: "vc-chrome-body" }, [n2("div", { staticClass: "vc-chrome-controls" }, [n2("div", { staticClass: "vc-chrome-color-wrap" }, [n2("div", { staticClass: "vc-chrome-active-color", style: { background: e3.activeColor }, attrs: { "aria-label": "current color is " + e3.colors.hex } }), e3._v(" "), e3.disableAlpha ? e3._e() : n2("checkboard")], 1), e3._v(" "), n2("div", { staticClass: "vc-chrome-sliders" }, [n2("div", { staticClass: "vc-chrome-hue-wrap" }, [n2("hue", { on: { change: e3.childChange }, model: { value: e3.colors, callback: function(t33) {
          e3.colors = t33;
        }, expression: "colors" } })], 1), e3._v(" "), e3.disableAlpha ? e3._e() : n2("div", { staticClass: "vc-chrome-alpha-wrap" }, [n2("alpha", { on: { change: e3.childChange }, model: { value: e3.colors, callback: function(t33) {
          e3.colors = t33;
        }, expression: "colors" } })], 1)])]), e3._v(" "), e3.disableFields ? e3._e() : n2("div", { staticClass: "vc-chrome-fields-wrap" }, [n2("div", { directives: [{ name: "show", rawName: "v-show", value: 0 === e3.fieldsIndex, expression: "fieldsIndex === 0" }], staticClass: "vc-chrome-fields" }, [n2("div", { staticClass: "vc-chrome-field" }, [e3.hasAlpha ? e3._e() : n2("ed-in", { attrs: { label: "hex", value: e3.colors.hex }, on: { change: e3.inputChange } }), e3._v(" "), e3.hasAlpha ? n2("ed-in", { attrs: { label: "hex", value: e3.colors.hex8 }, on: { change: e3.inputChange } }) : e3._e()], 1)]), e3._v(" "), n2("div", { directives: [{ name: "show", rawName: "v-show", value: 1 === e3.fieldsIndex, expression: "fieldsIndex === 1" }], staticClass: "vc-chrome-fields" }, [n2("div", { staticClass: "vc-chrome-field" }, [n2("ed-in", { attrs: { label: "r", value: e3.colors.rgba.r }, on: { change: e3.inputChange } })], 1), e3._v(" "), n2("div", { staticClass: "vc-chrome-field" }, [n2("ed-in", { attrs: { label: "g", value: e3.colors.rgba.g }, on: { change: e3.inputChange } })], 1), e3._v(" "), n2("div", { staticClass: "vc-chrome-field" }, [n2("ed-in", { attrs: { label: "b", value: e3.colors.rgba.b }, on: { change: e3.inputChange } })], 1), e3._v(" "), e3.disableAlpha ? e3._e() : n2("div", { staticClass: "vc-chrome-field" }, [n2("ed-in", { attrs: { label: "a", value: e3.colors.a, "arrow-offset": 0.01, max: 1 }, on: { change: e3.inputChange } })], 1)]), e3._v(" "), n2("div", { directives: [{ name: "show", rawName: "v-show", value: 2 === e3.fieldsIndex, expression: "fieldsIndex === 2" }], staticClass: "vc-chrome-fields" }, [n2("div", { staticClass: "vc-chrome-field" }, [n2("ed-in", { attrs: { label: "h", value: e3.hsl.h }, on: { change: e3.inputChange } })], 1), e3._v(" "), n2("div", { staticClass: "vc-chrome-field" }, [n2("ed-in", { attrs: { label: "s", value: e3.hsl.s }, on: { change: e3.inputChange } })], 1), e3._v(" "), n2("div", { staticClass: "vc-chrome-field" }, [n2("ed-in", { attrs: { label: "l", value: e3.hsl.l }, on: { change: e3.inputChange } })], 1), e3._v(" "), e3.disableAlpha ? e3._e() : n2("div", { staticClass: "vc-chrome-field" }, [n2("ed-in", { attrs: { label: "a", value: e3.colors.a, "arrow-offset": 0.01, max: 1 }, on: { change: e3.inputChange } })], 1)]), e3._v(" "), n2("div", { staticClass: "vc-chrome-toggle-btn", attrs: { role: "button", "aria-label": "Change another color definition" }, on: { click: e3.toggleViews } }, [n2("div", { staticClass: "vc-chrome-toggle-icon" }, [n2("svg", { staticStyle: { width: "24px", height: "24px" }, attrs: { viewBox: "0 0 24 24" }, on: { mouseover: e3.showHighlight, mouseenter: e3.showHighlight, mouseout: e3.hideHighlight } }, [n2("path", { attrs: { fill: "#333", d: "M12,18.17L8.83,15L7.42,16.41L12,21L16.59,16.41L15.17,15M12,5.83L15.17,9L16.58,7.59L12,3L7.41,7.59L8.83,9L12,5.83Z" } })])]), e3._v(" "), n2("div", { directives: [{ name: "show", rawName: "v-show", value: e3.highlight, expression: "highlight" }], staticClass: "vc-chrome-toggle-icon-highlight" })])])])]);
      }, i = [];
      r._withStripped = true;
      var o = { render: r, staticRenderFns: i };
      t4.a = o;
    }, function(e2, t4, n) {
      function r(e3) {
        n(144);
      }
      Object.defineProperty(t4, "__esModule", { value: true });
      var i = n(58), o = n.n(i);
      for (var a2 in i) "default" !== a2 && function(e3) {
        n.d(t4, e3, function() {
          return i[e3];
        });
      }(a2);
      var s2 = n(146), l = n(2), u = r, f2 = l(o.a, s2.a, false, u, null, null);
      f2.options.__file = "src/components/Twitter.vue", t4.default = f2.exports;
    }, function(e2, t4, n) {
      var r = n(145);
      "string" == typeof r && (r = [[e2.i, r, ""]]), r.locals && (e2.exports = r.locals);
      n(1)("669a48a5", r, false, {});
    }, function(e2, t4, n) {
      t4 = e2.exports = n(0)(false), t4.push([e2.i, "\n.vc-twitter {\n  background: #fff;\n  border: 0 solid rgba(0,0,0,0.25);\n  box-shadow: 0 1px 4px rgba(0,0,0,0.25);\n  border-radius: 4px;\n  position: relative;\n}\n.vc-twitter-triangle {\n  width: 0px;\n  height: 0px;\n  border-style: solid;\n  border-width: 0 9px 10px 9px;\n  border-color: transparent transparent #fff transparent;\n  position: absolute;\n}\n.vc-twitter-triangle-shadow {\n  width: 0px;\n  height: 0px;\n  border-style: solid;\n  border-width: 0 9px 10px 9px;\n  border-color: transparent transparent rgba(0, 0, 0, .1) transparent;\n  position: absolute;\n}\n.vc-twitter-body {\n  padding: 15px 9px 9px 15px;\n}\n.vc-twitter .vc-editable-input {\n  position: relative;\n}\n.vc-twitter .vc-editable-input input {\n  width: 100px;\n  font-size: 14px;\n  color: #666;\n  border: 0px;\n  outline: none;\n  height: 28px;\n  box-shadow: inset 0 0 0 1px #F0F0F0;\n  box-sizing: content-box;\n  border-radius: 0 4px 4px 0;\n  float: left;\n  padding: 1px;\n  padding-left: 8px;\n}\n.vc-twitter .vc-editable-input span {\n  display: none;\n}\n.vc-twitter-hash {\n  background: #F0F0F0;\n  height: 30px;\n  width: 30px;\n  border-radius: 4px 0 0 4px;\n  float: left;\n  color: #98A1A4;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n.vc-twitter-swatch {\n  width: 30px;\n  height: 30px;\n  float: left;\n  border-radius: 4px;\n  margin: 0 6px 6px 0;\n  cursor: pointer;\n  position: relative;\n  outline: none;\n}\n.vc-twitter-clear {\n  clear: both;\n}\n.vc-twitter-hide-triangle .vc-twitter-triangle {\n  display: none;\n}\n.vc-twitter-hide-triangle .vc-twitter-triangle-shadow {\n  display: none;\n}\n.vc-twitter-top-left-triangle .vc-twitter-triangle{\n  top: -10px;\n  left: 12px;\n}\n.vc-twitter-top-left-triangle .vc-twitter-triangle-shadow{\n  top: -11px;\n  left: 12px;\n}\n.vc-twitter-top-right-triangle .vc-twitter-triangle{\n  top: -10px;\n  right: 12px;\n}\n.vc-twitter-top-right-triangle .vc-twitter-triangle-shadow{\n  top: -11px;\n  right: 12px;\n}\n", ""]);
    }, function(e2, t4, n) {
      var r = function() {
        var e3 = this, t30 = e3.$createElement, n2 = e3._self._c || t30;
        return n2("div", { staticClass: "vc-twitter", class: { "vc-twitter-hide-triangle ": "hide" === e3.triangle, "vc-twitter-top-left-triangle ": "top-left" === e3.triangle, "vc-twitter-top-right-triangle ": "top-right" === e3.triangle }, style: { width: "number" == typeof e3.width ? e3.width + "px" : e3.width } }, [n2("div", { staticClass: "vc-twitter-triangle-shadow" }), e3._v(" "), n2("div", { staticClass: "vc-twitter-triangle" }), e3._v(" "), n2("div", { staticClass: "vc-twitter-body" }, [e3._l(e3.defaultColors, function(t33, r2) {
          return n2("span", { key: r2, staticClass: "vc-twitter-swatch", style: { background: t33, boxShadow: "0 0 4px " + (e3.equal(t33) ? t33 : "transparent") }, on: { click: function(n3) {
            e3.handlerClick(t33);
          } } });
        }), e3._v(" "), n2("div", { staticClass: "vc-twitter-hash" }, [e3._v("#")]), e3._v(" "), n2("editable-input", { attrs: { label: "#", value: e3.hex }, on: { change: e3.inputChange } }), e3._v(" "), n2("div", { staticClass: "vc-twitter-clear" })], 2)]);
      }, i = [];
      r._withStripped = true;
      var o = { render: r, staticRenderFns: i };
      t4.a = o;
    }]);
  });
})(vueColor_min);
register(t1);
register(t28);
register(t32);
({
  props: {
    /**
     * The text of show more button.
     *
     * Expected to be in the form "More {itemName} …"
     */
    showMoreLabel: {
      default: t("More items …")
    }
  }
});
register(t2);
({
  long: t("a few seconds ago"),
  short: t("seconds ago"),
  // FOR TRANSLATORS: Shorter version of 'a few seconds ago'
  narrow: t("sec. ago")
  // FOR TRANSLATORS: If possible in your language an even shorter version of 'a few seconds ago'
});
var emojiMart = { exports: {} };
(function(module, exports) {
  !function(e2, t4) {
    module.exports = t4();
  }("undefined" != typeof self ? self : commonjsGlobal, function() {
    return function() {
      var e2 = { 537: function() {
        "undefined" != typeof window && function() {
          for (var e3 = 0, t30 = ["ms", "moz", "webkit", "o"], i2 = 0; i2 < t30.length && !window.requestAnimationFrame; ++i2) window.requestAnimationFrame = window[t30[i2] + "RequestAnimationFrame"], window.cancelAnimationFrame = window[t30[i2] + "CancelAnimationFrame"] || window[t30[i2] + "CancelRequestAnimationFrame"];
          window.requestAnimationFrame || (window.requestAnimationFrame = function(t33, i3) {
            var n2 = (/* @__PURE__ */ new Date()).getTime(), r = Math.max(0, 16 - (n2 - e3)), o = window.setTimeout(function() {
              t33(n2 + r);
            }, r);
            return e3 = n2 + r, o;
          }), window.cancelAnimationFrame || (window.cancelAnimationFrame = function(e4) {
            clearTimeout(e4);
          });
        }();
      } }, t4 = {};
      function i(n2) {
        var r = t4[n2];
        if (void 0 !== r) return r.exports;
        var o = t4[n2] = { exports: {} };
        return e2[n2](o, o.exports, i), o.exports;
      }
      i.d = function(e3, t30) {
        for (var n2 in t30) i.o(t30, n2) && !i.o(e3, n2) && Object.defineProperty(e3, n2, { enumerable: true, get: t30[n2] });
      }, i.o = function(e3, t30) {
        return Object.prototype.hasOwnProperty.call(e3, t30);
      }, i.r = function(e3) {
        "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(e3, Symbol.toStringTag, { value: "Module" }), Object.defineProperty(e3, "__esModule", { value: true });
      };
      var n = {};
      return function() {
        i.r(n), i.d(n, { Anchors: function() {
          return k;
        }, Category: function() {
          return X2;
        }, Emoji: function() {
          return J;
        }, EmojiData: function() {
          return N;
        }, EmojiIndex: function() {
          return R;
        }, EmojiView: function() {
          return $;
        }, Picker: function() {
          return se;
        }, Preview: function() {
          return G;
        }, Search: function() {
          return Q;
        }, Skins: function() {
          return Z2;
        }, frequently: function() {
          return w3;
        }, sanitize: function() {
          return D2;
        }, store: function() {
          return c;
        }, uncompress: function() {
          return v2;
        } });
        var e3, t30, r = "emoji-mart", o = JSON, s2 = "undefined" != typeof window && "localStorage" in window;
        function a2(e4, i2) {
          if (t30) t30(e4, i2);
          else {
            if (!s2) return;
            try {
              window.localStorage["".concat(r, ".").concat(e4)] = o.stringify(i2);
            } catch (e5) {
            }
          }
        }
        var c = { update: function(e4) {
          for (var t33 in e4) a2(t33, e4[t33]);
        }, set: a2, get: function(t33) {
          if (e3) return e3(t33);
          if (s2) {
            try {
              var i2 = window.localStorage["".concat(r, ".").concat(t33)];
            } catch (e4) {
              return;
            }
            return i2 ? JSON.parse(i2) : void 0;
          }
        }, setNamespace: function(e4) {
          r = e4;
        }, setHandlers: function(i2) {
          i2 || (i2 = {}), e3 = i2.getter, t30 = i2.setter;
        } };
        function u(e4) {
          return u = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e5) {
            return typeof e5;
          } : function(e5) {
            return e5 && "function" == typeof Symbol && e5.constructor === Symbol && e5 !== Symbol.prototype ? "symbol" : typeof e5;
          }, u(e4);
        }
        function l(e4, t33) {
          (null == t33 || t33 > e4.length) && (t33 = e4.length);
          for (var i2 = 0, n2 = new Array(t33); i2 < t33; i2++) n2[i2] = e4[i2];
          return n2;
        }
        var h3 = { name: "a", unified: "b", non_qualified: "c", has_img_apple: "d", has_img_google: "e", has_img_twitter: "f", has_img_facebook: "h", keywords: "j", sheet: "k", emoticons: "l", text: "m", short_names: "n", added_in: "o" }, m2 = function(e4) {
          var t33 = [], i2 = function(e5, i3) {
            e5 && (Array.isArray(e5) ? e5 : [e5]).forEach(function(e6) {
              (i3 ? e6.split(/[-|_|\s]+/) : [e6]).forEach(function(e7) {
                e7 = e7.toLowerCase(), -1 == t33.indexOf(e7) && t33.push(e7);
              });
            });
          };
          return i2(e4.short_names, true), i2(e4.name, true), i2(e4.keywords, false), i2(e4.emoticons, false), t33.join(",");
        };
        function d2(e4) {
          var t33, i2 = function(e5, t51) {
            var i3 = "undefined" != typeof Symbol && e5[Symbol.iterator] || e5["@@iterator"];
            if (!i3) {
              if (Array.isArray(e5) || (i3 = function(e6, t52) {
                if (e6) {
                  if ("string" == typeof e6) return l(e6, t52);
                  var i4 = Object.prototype.toString.call(e6).slice(8, -1);
                  return "Object" === i4 && e6.constructor && (i4 = e6.constructor.name), "Map" === i4 || "Set" === i4 ? Array.from(e6) : "Arguments" === i4 || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(i4) ? l(e6, t52) : void 0;
                }
              }(e5)) || t51) {
                i3 && (e5 = i3);
                var n3 = 0, r3 = function() {
                };
                return { s: r3, n: function() {
                  return n3 >= e5.length ? { done: true } : { done: false, value: e5[n3++] };
                }, e: function(e6) {
                  throw e6;
                }, f: r3 };
              }
              throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
            }
            var o2, s3 = true, a3 = false;
            return { s: function() {
              i3 = i3.call(e5);
            }, n: function() {
              var e6 = i3.next();
              return s3 = e6.done, e6;
            }, e: function(e6) {
              a3 = true, o2 = e6;
            }, f: function() {
              try {
                s3 || null == i3.return || i3.return();
              } finally {
                if (a3) throw o2;
              }
            } };
          }(Object.getOwnPropertyNames(e4));
          try {
            for (i2.s(); !(t33 = i2.n()).done; ) {
              var n2 = t33.value, r2 = e4[n2];
              e4[n2] = r2 && "object" === u(r2) ? d2(r2) : r2;
            }
          } catch (e5) {
            i2.e(e5);
          } finally {
            i2.f();
          }
          return Object.freeze(e4);
        }
        var f2, p, v2 = function(e4) {
          if (!e4.compressed) return e4;
          for (var t33 in e4.compressed = false, e4.emojis) {
            var i2 = e4.emojis[t33];
            for (var n2 in h3) i2[n2] = i2[h3[n2]], delete i2[h3[n2]];
            i2.short_names || (i2.short_names = []), i2.short_names.unshift(t33), i2.sheet_x = i2.sheet[0], i2.sheet_y = i2.sheet[1], delete i2.sheet, i2.text || (i2.text = ""), i2.added_in || (i2.added_in = 6), i2.added_in = i2.added_in.toFixed(1), i2.search = m2(i2);
          }
          return d2(e4);
        }, j = ["+1", "grinning", "kissing_heart", "heart_eyes", "laughing", "stuck_out_tongue_winking_eye", "sweat_smile", "joy", "scream", "disappointed", "unamused", "weary", "sob", "sunglasses", "heart", "hankey"], g = {};
        function y() {
          p = true, f2 = c.get("frequently");
        }
        var w3 = { add: function(e4) {
          p || y();
          var t33 = e4.id;
          f2 || (f2 = g), f2[t33] || (f2[t33] = 0), f2[t33] += 1, c.set("last", t33), c.set("frequently", f2);
        }, get: function(e4) {
          if (p || y(), !f2) {
            g = {};
            for (var t33 = [], i2 = Math.min(e4, j.length), n2 = 0; n2 < i2; n2++) g[j[n2]] = parseInt((i2 - n2) / 4, 10) + 1, t33.push(j[n2]);
            return t33;
          }
          var r2 = e4, o2 = [];
          for (var s3 in f2) f2.hasOwnProperty(s3) && o2.push(s3);
          var a3 = o2.sort(function(e5, t51) {
            return f2[e5] - f2[t51];
          }).reverse().slice(0, r2), u2 = c.get("last");
          return u2 && -1 == a3.indexOf(u2) && (a3.pop(), a3.push(u2)), a3;
        } }, _2 = { activity: '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="24" height="24"><path d="M12 0C5.373 0 0 5.372 0 12c0 6.627 5.373 12 12 12 6.628 0 12-5.373 12-12 0-6.628-5.372-12-12-12m9.949 11H17.05c.224-2.527 1.232-4.773 1.968-6.113A9.966 9.966 0 0 1 21.949 11M13 11V2.051a9.945 9.945 0 0 1 4.432 1.564c-.858 1.491-2.156 4.22-2.392 7.385H13zm-2 0H8.961c-.238-3.165-1.536-5.894-2.393-7.385A9.95 9.95 0 0 1 11 2.051V11zm0 2v8.949a9.937 9.937 0 0 1-4.432-1.564c.857-1.492 2.155-4.221 2.393-7.385H11zm4.04 0c.236 3.164 1.534 5.893 2.392 7.385A9.92 9.92 0 0 1 13 21.949V13h2.04zM4.982 4.887C5.718 6.227 6.726 8.473 6.951 11h-4.9a9.977 9.977 0 0 1 2.931-6.113M2.051 13h4.9c-.226 2.527-1.233 4.771-1.969 6.113A9.972 9.972 0 0 1 2.051 13m16.967 6.113c-.735-1.342-1.744-3.586-1.968-6.113h4.899a9.961 9.961 0 0 1-2.931 6.113"/></svg>', custom: '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="24" height="24"><g transform="translate(2.000000, 1.000000)"><rect id="Rectangle" x="8" y="0" width="3" height="21" rx="1.5"></rect><rect id="Rectangle" transform="translate(9.843, 10.549) rotate(60) translate(-9.843, -10.549) " x="8.343" y="0.049" width="3" height="21" rx="1.5"></rect><rect id="Rectangle" transform="translate(9.843, 10.549) rotate(-60) translate(-9.843, -10.549) " x="8.343" y="0.049" width="3" height="21" rx="1.5"></rect></g></svg>', flags: '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="24" height="24"><path d="M0 0l6.084 24H8L1.916 0zM21 5h-4l-1-4H4l3 12h3l1 4h13L21 5zM6.563 3h7.875l2 8H8.563l-2-8zm8.832 10l-2.856 1.904L12.063 13h3.332zM19 13l-1.5-6h1.938l2 8H16l3-2z"/></svg>', foods: '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="24" height="24"><path d="M17 4.978c-1.838 0-2.876.396-3.68.934.513-1.172 1.768-2.934 4.68-2.934a1 1 0 0 0 0-2c-2.921 0-4.629 1.365-5.547 2.512-.064.078-.119.162-.18.244C11.73 1.838 10.798.023 9.207.023 8.579.022 7.85.306 7 .978 5.027 2.54 5.329 3.902 6.492 4.999 3.609 5.222 0 7.352 0 12.969c0 4.582 4.961 11.009 9 11.009 1.975 0 2.371-.486 3-1 .629.514 1.025 1 3 1 4.039 0 9-6.418 9-11 0-5.953-4.055-8-7-8M8.242 2.546c.641-.508.943-.523.965-.523.426.169.975 1.405 1.357 3.055-1.527-.629-2.741-1.352-2.98-1.846.059-.112.241-.356.658-.686M15 21.978c-1.08 0-1.21-.109-1.559-.402l-.176-.146c-.367-.302-.816-.452-1.266-.452s-.898.15-1.266.452l-.176.146c-.347.292-.477.402-1.557.402-2.813 0-7-5.389-7-9.009 0-5.823 4.488-5.991 5-5.991 1.939 0 2.484.471 3.387 1.251l.323.276a1.995 1.995 0 0 0 2.58 0l.323-.276c.902-.78 1.447-1.251 3.387-1.251.512 0 5 .168 5 6 0 3.617-4.187 9-7 9"/></svg>', nature: '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="24" height="24"><path d="M15.5 8a1.5 1.5 0 1 0 .001 3.001A1.5 1.5 0 0 0 15.5 8M8.5 8a1.5 1.5 0 1 0 .001 3.001A1.5 1.5 0 0 0 8.5 8"/><path d="M18.933 0h-.027c-.97 0-2.138.787-3.018 1.497-1.274-.374-2.612-.51-3.887-.51-1.285 0-2.616.133-3.874.517C7.245.79 6.069 0 5.093 0h-.027C3.352 0 .07 2.67.002 7.026c-.039 2.479.276 4.238 1.04 5.013.254.258.882.677 1.295.882.191 3.177.922 5.238 2.536 6.38.897.637 2.187.949 3.2 1.102C8.04 20.6 8 20.795 8 21c0 1.773 2.35 3 4 3 1.648 0 4-1.227 4-3 0-.201-.038-.393-.072-.586 2.573-.385 5.435-1.877 5.925-7.587.396-.22.887-.568 1.104-.788.763-.774 1.079-2.534 1.04-5.013C23.929 2.67 20.646 0 18.933 0M3.223 9.135c-.237.281-.837 1.155-.884 1.238-.15-.41-.368-1.349-.337-3.291.051-3.281 2.478-4.972 3.091-5.031.256.015.731.27 1.265.646-1.11 1.171-2.275 2.915-2.352 5.125-.133.546-.398.858-.783 1.313M12 22c-.901 0-1.954-.693-2-1 0-.654.475-1.236 1-1.602V20a1 1 0 1 0 2 0v-.602c.524.365 1 .947 1 1.602-.046.307-1.099 1-2 1m3-3.48v.02a4.752 4.752 0 0 0-1.262-1.02c1.092-.516 2.239-1.334 2.239-2.217 0-1.842-1.781-2.195-3.977-2.195-2.196 0-3.978.354-3.978 2.195 0 .883 1.148 1.701 2.238 2.217A4.8 4.8 0 0 0 9 18.539v-.025c-1-.076-2.182-.281-2.973-.842-1.301-.92-1.838-3.045-1.853-6.478l.023-.041c.496-.826 1.49-1.45 1.804-3.102 0-2.047 1.357-3.631 2.362-4.522C9.37 3.178 10.555 3 11.948 3c1.447 0 2.685.192 3.733.57 1 .9 2.316 2.465 2.316 4.48.313 1.651 1.307 2.275 1.803 3.102.035.058.068.117.102.178-.059 5.967-1.949 7.01-4.902 7.19m6.628-8.202c-.037-.065-.074-.13-.113-.195a7.587 7.587 0 0 0-.739-.987c-.385-.455-.648-.768-.782-1.313-.076-2.209-1.241-3.954-2.353-5.124.531-.376 1.004-.63 1.261-.647.636.071 3.044 1.764 3.096 5.031.027 1.81-.347 3.218-.37 3.235"/></svg>', objects: '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="24" height="24"><path d="M12 0a9 9 0 0 0-5 16.482V21s2.035 3 5 3 5-3 5-3v-4.518A9 9 0 0 0 12 0zm0 2c3.86 0 7 3.141 7 7s-3.14 7-7 7-7-3.141-7-7 3.14-7 7-7zM9 17.477c.94.332 1.946.523 3 .523s2.06-.19 3-.523v.834c-.91.436-1.925.689-3 .689a6.924 6.924 0 0 1-3-.69v-.833zm.236 3.07A8.854 8.854 0 0 0 12 21c.965 0 1.888-.167 2.758-.451C14.155 21.173 13.153 22 12 22c-1.102 0-2.117-.789-2.764-1.453z"/><path d="M14.745 12.449h-.004c-.852-.024-1.188-.858-1.577-1.824-.421-1.061-.703-1.561-1.182-1.566h-.009c-.481 0-.783.497-1.235 1.537-.436.982-.801 1.811-1.636 1.791l-.276-.043c-.565-.171-.853-.691-1.284-1.794-.125-.313-.202-.632-.27-.913-.051-.213-.127-.53-.195-.634C7.067 9.004 7.039 9 6.99 9A1 1 0 0 1 7 7h.01c1.662.017 2.015 1.373 2.198 2.134.486-.981 1.304-2.058 2.797-2.075 1.531.018 2.28 1.153 2.731 2.141l.002-.008C14.944 8.424 15.327 7 16.979 7h.032A1 1 0 1 1 17 9h-.011c-.149.076-.256.474-.319.709a6.484 6.484 0 0 1-.311.951c-.429.973-.79 1.789-1.614 1.789"/></svg>', smileys: '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="24" height="24"><path d="M12 0C5.373 0 0 5.373 0 12s5.373 12 12 12 12-5.373 12-12S18.627 0 12 0m0 22C6.486 22 2 17.514 2 12S6.486 2 12 2s10 4.486 10 10-4.486 10-10 10"/><path d="M8 7a2 2 0 1 0-.001 3.999A2 2 0 0 0 8 7M16 7a2 2 0 1 0-.001 3.999A2 2 0 0 0 16 7M15.232 15c-.693 1.195-1.87 2-3.349 2-1.477 0-2.655-.805-3.347-2H15m3-2H6a6 6 0 1 0 12 0"/></svg>', people: '<svg xmlns:svg="http://www.w3.org/2000/svg" height="24" width="24" viewBox="0 0 24 24"> <path id="path3814" d="m 3.3591089,21.17726 c 0.172036,0.09385 4.265994,2.29837 8.8144451,2.29837 4.927767,0 8.670894,-2.211883 8.82782,-2.306019 0.113079,-0.06785 0.182268,-0.190051 0.182267,-0.321923 0,-3.03119 -0.929494,-5.804936 -2.617196,-7.810712 -1.180603,-1.403134 -2.661918,-2.359516 -4.295699,-2.799791 4.699118,-2.236258 3.102306,-9.28617162 -2.097191,-9.28617162 -5.1994978,0 -6.7963103,7.04991362 -2.097192,9.28617162 -1.6337821,0.440275 -3.1150971,1.396798 -4.2956991,2.799791 -1.687703,2.005776 -2.617196,4.779522 -2.617196,7.810712 1.2e-6,0.137378 0.075039,0.263785 0.195641,0.329572 z M 8.0439319,5.8308783 C 8.0439309,2.151521 12.492107,0.30955811 15.093491,2.9109411 17.694874,5.5123241 15.852911,9.9605006 12.173554,9.9605 9.8938991,9.9579135 8.0465186,8.1105332 8.0439319,5.8308783 Z m -1.688782,7.6894977 c 1.524535,-1.811449 3.5906601,-2.809035 5.8184041,-2.809035 2.227744,0 4.293869,0.997586 5.818404,2.809035 1.533639,1.822571 2.395932,4.339858 2.439152,7.108301 -0.803352,0.434877 -4.141636,2.096112 -8.257556,2.096112 -3.8062921,0 -7.3910861,-1.671043 -8.2573681,-2.104981 0.04505,-2.765017 0.906968,-5.278785 2.438964,-7.099432 z" /> <path id="path3816" d="M 12.173828 0.38867188 C 9.3198513 0.38867187 7.3770988 2.3672285 6.8652344 4.6308594 C 6.4218608 6.5916015 7.1153562 8.7676117 8.9648438 10.126953 C 7.6141249 10.677376 6.3550511 11.480944 5.3496094 12.675781 C 3.5629317 14.799185 2.6015625 17.701475 2.6015625 20.847656 C 2.6015654 21.189861 2.7894276 21.508002 3.0898438 21.671875 C 3.3044068 21.788925 7.4436239 24.039062 12.173828 24.039062 C 17.269918 24.039062 21.083568 21.776786 21.291016 21.652344 C 21.57281 21.483266 21.746097 21.176282 21.746094 20.847656 C 21.746094 17.701475 20.78277 14.799185 18.996094 12.675781 C 17.990455 11.480591 16.733818 10.675362 15.382812 10.125 C 17.231132 8.7655552 17.925675 6.5910701 17.482422 4.6308594 C 16.970557 2.3672285 15.027805 0.38867188 12.173828 0.38867188 z M 12.792969 2.3007812 C 13.466253 2.4161792 14.125113 2.7383941 14.695312 3.3085938 C 15.835712 4.4489931 15.985604 5.9473549 15.46875 7.1953125 C 14.951896 8.4432701 13.786828 9.3984378 12.173828 9.3984375 C 10.197719 9.3961954 8.607711 7.806187 8.6054688 5.8300781 C 8.6054683 4.2170785 9.5606362 3.0520102 10.808594 2.5351562 C 11.432573 2.2767293 12.119685 2.1853833 12.792969 2.3007812 z M 12.173828 11.273438 C 14.233647 11.273438 16.133674 12.185084 17.5625 13.882812 C 18.93069 15.508765 19.698347 17.776969 19.808594 20.283203 C 18.807395 20.800235 15.886157 22.162109 12.173828 22.162109 C 8.7614632 22.162109 5.6245754 20.787069 4.5390625 20.265625 C 4.6525896 17.766717 5.4203315 15.504791 6.7851562 13.882812 C 8.2139827 12.185084 10.11401 11.273438 12.173828 11.273438 z " /> </svg>', places: '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="24" height="24"><path d="M6.5 12C5.122 12 4 13.121 4 14.5S5.122 17 6.5 17 9 15.879 9 14.5 7.878 12 6.5 12m0 3c-.275 0-.5-.225-.5-.5s.225-.5.5-.5.5.225.5.5-.225.5-.5.5M17.5 12c-1.378 0-2.5 1.121-2.5 2.5s1.122 2.5 2.5 2.5 2.5-1.121 2.5-2.5-1.122-2.5-2.5-2.5m0 3c-.275 0-.5-.225-.5-.5s.225-.5.5-.5.5.225.5.5-.225.5-.5.5"/><path d="M22.482 9.494l-1.039-.346L21.4 9h.6c.552 0 1-.439 1-.992 0-.006-.003-.008-.003-.008H23c0-1-.889-2-1.984-2h-.642l-.731-1.717C19.262 3.012 18.091 2 16.764 2H7.236C5.909 2 4.738 3.012 4.357 4.283L3.626 6h-.642C1.889 6 1 7 1 8h.003S1 8.002 1 8.008C1 8.561 1.448 9 2 9h.6l-.043.148-1.039.346a2.001 2.001 0 0 0-1.359 2.097l.751 7.508a1 1 0 0 0 .994.901H3v1c0 1.103.896 2 2 2h2c1.104 0 2-.897 2-2v-1h6v1c0 1.103.896 2 2 2h2c1.104 0 2-.897 2-2v-1h1.096a.999.999 0 0 0 .994-.901l.751-7.508a2.001 2.001 0 0 0-1.359-2.097M6.273 4.857C6.402 4.43 6.788 4 7.236 4h9.527c.448 0 .834.43.963.857L19.313 9H4.688l1.585-4.143zM7 21H5v-1h2v1zm12 0h-2v-1h2v1zm2.189-3H2.811l-.662-6.607L3 11h18l.852.393L21.189 18z"/></svg>', recent: '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="24" height="24"><path d="M13 4h-2l-.001 7H9v2h2v2h2v-2h4v-2h-4z"/><path d="M12 0C5.373 0 0 5.373 0 12s5.373 12 12 12 12-5.373 12-12S18.627 0 12 0m0 22C6.486 22 2 17.514 2 12S6.486 2 12 2s10 4.486 10 10-4.486 10-10 10"/></svg>', symbols: '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="24" height="24"><path d="M0 0h11v2H0zM4 11h3V6h4V4H0v2h4zM15.5 17c1.381 0 2.5-1.116 2.5-2.493s-1.119-2.493-2.5-2.493S13 13.13 13 14.507 14.119 17 15.5 17m0-2.986c.276 0 .5.222.5.493 0 .272-.224.493-.5.493s-.5-.221-.5-.493.224-.493.5-.493M21.5 19.014c-1.381 0-2.5 1.116-2.5 2.493S20.119 24 21.5 24s2.5-1.116 2.5-2.493-1.119-2.493-2.5-2.493m0 2.986a.497.497 0 0 1-.5-.493c0-.271.224-.493.5-.493s.5.222.5.493a.497.497 0 0 1-.5.493M22 13l-9 9 1.513 1.5 8.99-9.009zM17 11c2.209 0 4-1.119 4-2.5V2s.985-.161 1.498.949C23.01 4.055 23 6 23 6s1-1.119 1-3.135C24-.02 21 0 21 0h-2v6.347A5.853 5.853 0 0 0 17 6c-2.209 0-4 1.119-4 2.5s1.791 2.5 4 2.5M10.297 20.482l-1.475-1.585a47.54 47.54 0 0 1-1.442 1.129c-.307-.288-.989-1.016-2.045-2.183.902-.836 1.479-1.466 1.729-1.892s.376-.871.376-1.336c0-.592-.273-1.178-.818-1.759-.546-.581-1.329-.871-2.349-.871-1.008 0-1.79.293-2.344.879-.556.587-.832 1.181-.832 1.784 0 .813.419 1.748 1.256 2.805-.847.614-1.444 1.208-1.794 1.784a3.465 3.465 0 0 0-.523 1.833c0 .857.308 1.56.924 2.107.616.549 1.423.823 2.42.823 1.173 0 2.444-.379 3.813-1.137L8.235 24h2.819l-2.09-2.383 1.333-1.135zm-6.736-6.389a1.02 1.02 0 0 1 .73-.286c.31 0 .559.085.747.254a.849.849 0 0 1 .283.659c0 .518-.419 1.112-1.257 1.784-.536-.651-.805-1.231-.805-1.742a.901.901 0 0 1 .302-.669M3.74 22c-.427 0-.778-.116-1.057-.349-.279-.232-.418-.487-.418-.766 0-.594.509-1.288 1.527-2.083.968 1.134 1.717 1.946 2.248 2.438-.921.507-1.686.76-2.3.76"/></svg>' };
        function b(e4, t33, i2, n2, r2, o2, s3, a3) {
          var c2, u2 = "function" == typeof e4 ? e4.options : e4;
          if (t33 && (u2.render = t33, u2.staticRenderFns = i2, u2._compiled = true), c2) ;
          return { exports: e4, options: u2 };
        }
        var C = b({ props: { i18n: { type: Object, required: true }, color: { type: String }, categories: { type: Array, required: true }, activeCategory: { type: Object, default: function() {
          return {};
        } } }, emits: ["click"], created: function() {
          this.svgs = _2;
        } }, function() {
          var e4 = this, t33 = e4._self._c;
          return t33("div", { staticClass: "emoji-mart-anchors", attrs: { role: "tablist" } }, e4._l(e4.categories, function(i2) {
            return t33("button", { key: i2.id, class: { "emoji-mart-anchor": true, "emoji-mart-anchor-selected": i2.id == e4.activeCategory.id }, style: { color: i2.id == e4.activeCategory.id ? e4.color : "" }, attrs: { role: "tab", type: "button", "aria-label": i2.name, "aria-selected": i2.id == e4.activeCategory.id, "data-title": e4.i18n.categories[i2.id] }, on: { click: function(t51) {
              return e4.$emit("click", i2);
            } } }, [t33("div", { attrs: { "aria-hidden": "true" }, domProps: { innerHTML: e4._s(e4.svgs[i2.id]) } }), e4._v(" "), t33("span", { staticClass: "emoji-mart-anchor-bar", style: { backgroundColor: e4.color }, attrs: { "aria-hidden": "true" } })]);
          }), 0);
        }, []), k = C.exports;
        function E(e4, t33) {
          if (!(e4 instanceof t33)) throw new TypeError("Cannot call a class as a function");
        }
        function S2(e4) {
          var t33 = function(e5, t51) {
            if ("object" != u(e5) || !e5) return e5;
            var i2 = e5[Symbol.toPrimitive];
            if (void 0 !== i2) {
              var n2 = i2.call(e5, "string");
              if ("object" != u(n2)) return n2;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return String(e5);
          }(e4);
          return "symbol" == u(t33) ? t33 : t33 + "";
        }
        function x2(e4, t33) {
          for (var i2 = 0; i2 < t33.length; i2++) {
            var n2 = t33[i2];
            n2.enumerable = n2.enumerable || false, n2.configurable = true, "value" in n2 && (n2.writable = true), Object.defineProperty(e4, S2(n2.key), n2);
          }
        }
        function O(e4, t33, i2) {
          return t33 && x2(e4.prototype, t33), Object.defineProperty(e4, "prototype", { writable: false }), e4;
        }
        var P = String.fromCodePoint || function() {
          var e4, t33, i2 = [], n2 = -1, r2 = arguments.length;
          if (!r2) return "";
          for (var o2 = ""; ++n2 < r2; ) {
            var s3 = Number(arguments[n2]);
            if (!isFinite(s3) || s3 < 0 || s3 > 1114111 || Math.floor(s3) != s3) throw RangeError("Invalid code point: " + s3);
            s3 <= 65535 ? i2.push(s3) : (e4 = 55296 + ((s3 -= 65536) >> 10), t33 = s3 % 1024 + 56320, i2.push(e4, t33)), (n2 + 1 === r2 || i2.length > 16384) && (o2 += String.fromCharCode.apply(null, i2), i2.length = 0);
          }
          return o2;
        };
        function A2(e4) {
          var t33 = e4.split("-").map(function(e5) {
            return "0x".concat(e5);
          });
          return P.apply(null, t33);
        }
        function M2(e4) {
          return e4.reduce(function(e5, t33) {
            return -1 === e5.indexOf(t33) && e5.push(t33), e5;
          }, []);
        }
        function I(e4, t33) {
          var i2 = M2(e4), n2 = M2(t33);
          return i2.filter(function(e5) {
            return n2.indexOf(e5) >= 0;
          });
        }
        function F(e4, t33) {
          var i2 = {};
          for (var n2 in e4) {
            var r2 = e4[n2], o2 = r2;
            Object.prototype.hasOwnProperty.call(t33, n2) && (o2 = t33[n2]), "object" === u(o2) && (o2 = F(r2, o2)), i2[n2] = o2;
          }
          return i2;
        }
        function z(e4, t33) {
          var i2 = "undefined" != typeof Symbol && e4[Symbol.iterator] || e4["@@iterator"];
          if (!i2) {
            if (Array.isArray(e4) || (i2 = function(e5, t51) {
              if (e5) {
                if ("string" == typeof e5) return L(e5, t51);
                var i3 = Object.prototype.toString.call(e5).slice(8, -1);
                return "Object" === i3 && e5.constructor && (i3 = e5.constructor.name), "Map" === i3 || "Set" === i3 ? Array.from(e5) : "Arguments" === i3 || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(i3) ? L(e5, t51) : void 0;
              }
            }(e4)) || t33) {
              i2 && (e4 = i2);
              var n2 = 0, r2 = function() {
              };
              return { s: r2, n: function() {
                return n2 >= e4.length ? { done: true } : { done: false, value: e4[n2++] };
              }, e: function(e5) {
                throw e5;
              }, f: r2 };
            }
            throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
          }
          var o2, s3 = true, a3 = false;
          return { s: function() {
            i2 = i2.call(e4);
          }, n: function() {
            var e5 = i2.next();
            return s3 = e5.done, e5;
          }, e: function(e5) {
            a3 = true, o2 = e5;
          }, f: function() {
            try {
              s3 || null == i2.return || i2.return();
            } finally {
              if (a3) throw o2;
            }
          } };
        }
        function L(e4, t33) {
          (null == t33 || t33 > e4.length) && (t33 = e4.length);
          for (var i2 = 0, n2 = new Array(t33); i2 < t33; i2++) n2[i2] = e4[i2];
          return n2;
        }
        var T = /^(?:\:([^\:]+)\:)(?:\:skin-tone-(\d)\:)?$/, q = ["1F3FA", "1F3FB", "1F3FC", "1F3FD", "1F3FE", "1F3FF"], R = function() {
          return O(function e4(t33) {
            var i2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {}, n2 = i2.emojisToShowFilter, r2 = i2.include, o2 = i2.exclude, s3 = i2.custom, a3 = i2.recent, c2 = i2.recentLength, u2 = void 0 === c2 ? 20 : c2;
            E(this, e4), this._data = v2(t33), this._emojisFilter = n2 || null, this._include = r2 || null, this._exclude = o2 || null, this._custom = s3 || [], this._recent = a3 || w3.get(u2), this._emojis = {}, this._nativeEmojis = {}, this._emoticons = {}, this._categories = [], this._recentCategory = { id: "recent", name: "Recent", emojis: [] }, this._customCategory = { id: "custom", name: "Custom", emojis: [] }, this._searchIndex = {}, this.buildIndex(), Object.freeze(this);
          }, [{ key: "buildIndex", value: function() {
            var e4 = this, t33 = this._data.categories;
            if (this._include && (t33 = (t33 = t33.filter(function(t51) {
              return e4._include.includes(t51.id);
            })).sort(function(t51, i3) {
              var n3 = e4._include.indexOf(t51.id), r3 = e4._include.indexOf(i3.id);
              return n3 < r3 ? -1 : n3 > r3 ? 1 : 0;
            })), t33.forEach(function(t51) {
              if (e4.isCategoryNeeded(t51.id)) {
                var i3 = { id: t51.id, name: t51.name, emojis: [] };
                t51.emojis.forEach(function(t52) {
                  var n3 = e4.addEmoji(t52);
                  n3 && i3.emojis.push(n3);
                }), i3.emojis.length && e4._categories.push(i3);
              }
            }), this.isCategoryNeeded("custom")) {
              if (this._custom.length > 0) {
                var i2, n2 = z(this._custom);
                try {
                  for (n2.s(); !(i2 = n2.n()).done; ) {
                    var r2 = i2.value;
                    this.addCustomEmoji(r2);
                  }
                } catch (e5) {
                  n2.e(e5);
                } finally {
                  n2.f();
                }
              }
              this._customCategory.emojis.length && this._categories.push(this._customCategory);
            }
            this.isCategoryNeeded("recent") && (this._recent.length && this._recent.map(function(t51) {
              var i3, n3 = z(e4._customCategory.emojis);
              try {
                for (n3.s(); !(i3 = n3.n()).done; ) {
                  var r3 = i3.value;
                  if (r3.id === t51) return void e4._recentCategory.emojis.push(r3);
                }
              } catch (e5) {
                n3.e(e5);
              } finally {
                n3.f();
              }
              e4.hasEmoji(t51) && e4._recentCategory.emojis.push(e4.emoji(t51));
            }), this._recentCategory.emojis.length && this._categories.unshift(this._recentCategory));
          } }, { key: "findEmoji", value: function(e4, t33) {
            var i2 = e4.match(T);
            if (i2 && (e4 = i2[1], i2[2] && (t33 = parseInt(i2[2], 10))), this._data.aliases.hasOwnProperty(e4) && (e4 = this._data.aliases[e4]), this._emojis.hasOwnProperty(e4)) {
              var n2 = this._emojis[e4];
              return t33 ? n2.getSkin(t33) : n2;
            }
            return this._nativeEmojis.hasOwnProperty(e4) ? this._nativeEmojis[e4] : null;
          } }, { key: "categories", value: function() {
            return this._categories;
          } }, { key: "emoji", value: function(e4) {
            this._data.aliases.hasOwnProperty(e4) && (e4 = this._data.aliases[e4]);
            var t33 = this._emojis[e4];
            if (!t33) throw new Error("Can not find emoji by id: " + e4);
            return t33;
          } }, { key: "firstEmoji", value: function() {
            var e4 = this._emojis[Object.keys(this._emojis)[0]];
            if (!e4) throw new Error("Can not get first emoji");
            return e4;
          } }, { key: "hasEmoji", value: function(e4) {
            return this._data.aliases.hasOwnProperty(e4) && (e4 = this._data.aliases[e4]), !!this._emojis[e4];
          } }, { key: "nativeEmoji", value: function(e4) {
            return this._nativeEmojis.hasOwnProperty(e4) ? this._nativeEmojis[e4] : null;
          } }, { key: "search", value: function(e4, t33) {
            var i2 = this;
            if (t33 || (t33 = 75), !e4.length) return null;
            if ("-" == e4 || "-1" == e4) return [this.emoji("-1")];
            var n2, r2 = e4.toLowerCase().split(/[\s|,|\-|_]+/);
            r2.length > 2 && (r2 = [r2[0], r2[1]]), n2 = r2.map(function(e5) {
              for (var t51 = i2._emojis, n3 = i2._searchIndex, r3 = 0, o3 = function() {
                var i3 = e5[s3];
                if (r3++, n3[i3] || (n3[i3] = {}), !(n3 = n3[i3]).results) {
                  var o4 = {};
                  for (var a3 in n3.results = [], n3.emojis = {}, t51) {
                    var c2 = t51[a3], u2 = c2._data.search, l2 = e5.substr(0, r3), h4 = u2.indexOf(l2);
                    if (-1 != h4) {
                      var m3 = h4 + 1;
                      l2 == a3 && (m3 = 0), n3.results.push(c2), n3.emojis[a3] = c2, o4[a3] = m3;
                    }
                  }
                  n3.results.sort(function(e6, t52) {
                    return o4[e6.id] - o4[t52.id];
                  });
                }
                t51 = n3.emojis;
              }, s3 = 0; s3 < e5.length; s3++) o3();
              return n3.results;
            }).filter(function(e5) {
              return e5;
            });
            var o2 = null;
            return (o2 = n2.length > 1 ? I.apply(null, n2) : n2.length ? n2[0] : []) && o2.length > t33 && (o2 = o2.slice(0, t33)), o2;
          } }, { key: "addCustomEmoji", value: function(e4) {
            var t33 = Object.assign({}, e4, { id: e4.short_names[0], custom: true });
            t33.search || (t33.search = m2(t33));
            var i2 = new N(t33);
            return this._emojis[i2.id] = i2, this._customCategory.emojis.push(i2), i2;
          } }, { key: "addEmoji", value: function(e4) {
            var t33 = this, i2 = this._data.emojis[e4];
            if (!this.isEmojiNeeded(i2)) return false;
            var n2 = new N(i2);
            if (this._emojis[e4] = n2, n2.native && (this._nativeEmojis[n2.native] = n2), n2._skins) for (var r2 in n2._skins) {
              var o2 = n2._skins[r2];
              o2.native && (this._nativeEmojis[o2.native] = o2);
            }
            return n2.emoticons && n2.emoticons.forEach(function(i3) {
              t33._emoticons[i3] || (t33._emoticons[i3] = e4);
            }), n2;
          } }, { key: "isCategoryNeeded", value: function(e4) {
            var t33 = !this._include || !this._include.length || this._include.indexOf(e4) > -1, i2 = !(!this._exclude || !this._exclude.length) && this._exclude.indexOf(e4) > -1;
            return !(!t33 || i2);
          } }, { key: "isEmojiNeeded", value: function(e4) {
            return !this._emojisFilter || this._emojisFilter(e4);
          } }]);
        }(), N = function() {
          return O(function e4(t33) {
            if (E(this, e4), this._data = Object.assign({}, t33), this._skins = null, this._data.skin_variations) for (var i2 in this._skins = [], q) {
              var n2 = q[i2], r2 = this._data.skin_variations[n2], o2 = Object.assign({}, t33);
              for (var s3 in r2) o2[s3] = r2[s3];
              delete o2.skin_variations, o2.skin_tone = parseInt(i2) + 1, this._skins.push(new e4(o2));
            }
            for (var a3 in this._sanitized = D2(this._data), this._sanitized) this[a3] = this._sanitized[a3];
            this.short_names = this._data.short_names, this.short_name = this._data.short_names[0], Object.freeze(this);
          }, [{ key: "getSkin", value: function(e4) {
            return e4 && "native" != e4 && this._skins ? this._skins[e4 - 1] : this;
          } }, { key: "getPosition", value: function() {
            var e4 = +(100 / 60 * this._data.sheet_x).toFixed(2), t33 = +(100 / 60 * this._data.sheet_y).toFixed(2);
            return "".concat(e4, "% ").concat(t33, "%");
          } }, { key: "ariaLabel", value: function() {
            return [this.native].concat(this.short_names).filter(Boolean).join(", ");
          } }]);
        }(), $ = function() {
          return O(function e4(t33, i2, n2, r2, o2, s3, a3) {
            E(this, e4), this._emoji = t33, this._native = r2, this._skin = i2, this._set = n2, this._fallback = o2, this.canRender = this._canRender(), this.cssClass = this._cssClass(), this.cssStyle = this._cssStyle(a3), this.content = this._content(), this.title = true === s3 ? t33.short_name : null, this.ariaLabel = t33.ariaLabel(), Object.freeze(this);
          }, [{ key: "getEmoji", value: function() {
            return this._emoji.getSkin(this._skin);
          } }, { key: "_canRender", value: function() {
            return this._isCustom() || this._isNative() || this._hasEmoji() || this._fallback;
          } }, { key: "_cssClass", value: function() {
            return ["emoji-set-" + this._set, "emoji-type-" + this._emojiType()];
          } }, { key: "_cssStyle", value: function(e4) {
            var t33 = {};
            return this._isCustom() ? t33 = { backgroundImage: "url(" + this.getEmoji()._data.imageUrl + ")", backgroundSize: "100%", width: e4 + "px", height: e4 + "px" } : this._hasEmoji() && !this._isNative() && (t33 = { backgroundPosition: this.getEmoji().getPosition() }), e4 && (t33 = this._isNative() ? Object.assign(t33, { fontSize: Math.round(0.95 * e4 * 10) / 10 + "px" }) : Object.assign(t33, { width: e4 + "px", height: e4 + "px" })), t33;
          } }, { key: "_content", value: function() {
            return this._isCustom() ? "" : this._isNative() ? this.getEmoji().native : this._hasEmoji() ? "" : this._fallback ? this._fallback(this.getEmoji()) : null;
          } }, { key: "_isNative", value: function() {
            return this._native;
          } }, { key: "_isCustom", value: function() {
            return this.getEmoji().custom;
          } }, { key: "_hasEmoji", value: function() {
            if (!this.getEmoji()._data) return false;
            var e4 = this.getEmoji()._data["has_img_" + this._set];
            return void 0 === e4 || e4;
          } }, { key: "_emojiType", value: function() {
            return this._isCustom() ? "custom" : this._isNative() ? "native" : this._hasEmoji() ? "image" : "fallback";
          } }]);
        }();
        function D2(e4) {
          var t33 = e4.name, i2 = e4.short_names, n2 = e4.skin_tone, r2 = e4.skin_variations, o2 = e4.emoticons, s3 = e4.unified, a3 = e4.custom, c2 = e4.imageUrl, u2 = e4.id || i2[0], l2 = ":".concat(u2, ":");
          return a3 ? { id: u2, name: t33, colons: l2, emoticons: o2, custom: a3, imageUrl: c2 } : (n2 && (l2 += ":skin-tone-".concat(n2, ":")), { id: u2, name: t33, colons: l2, emoticons: o2, unified: s3.toLowerCase(), skin: n2 || (r2 ? 1 : null), native: A2(s3) });
        }
        function B(e4, t33, i2) {
          return (t33 = S2(t33)) in e4 ? Object.defineProperty(e4, t33, { value: i2, enumerable: true, configurable: true, writable: true }) : e4[t33] = i2, e4;
        }
        var H2 = { native: { type: Boolean, default: false }, tooltip: { type: Boolean, default: false }, fallback: { type: Function }, skin: { type: Number, default: 1 }, set: { type: String, default: "apple" }, emoji: { type: [String, Object], required: true }, size: { type: Number, default: null }, tag: { type: String, default: "span" } }, U = { perLine: { type: Number, default: 9 }, maxSearchResults: { type: Number, default: 75 }, emojiSize: { type: Number, default: 24 }, title: { type: String, default: "Emoji Mart™" }, emoji: { type: String, default: "department_store" }, color: { type: String, default: "#ae65c5" }, set: { type: String, default: "apple" }, skin: { type: Number, default: null }, defaultSkin: { type: Number, default: 1 }, native: { type: Boolean, default: false }, emojiTooltip: { type: Boolean, default: false }, autoFocus: { type: Boolean, default: false }, i18n: { type: Object, default: function() {
          return {};
        } }, showPreview: { type: Boolean, default: true }, showSearch: { type: Boolean, default: true }, showCategories: { type: Boolean, default: true }, showSkinTones: { type: Boolean, default: true }, infiniteScroll: { type: Boolean, default: true }, pickerStyles: { type: Object, default: function() {
          return {};
        } } };
        function V(e4, t33) {
          var i2 = Object.keys(e4);
          if (Object.getOwnPropertySymbols) {
            var n2 = Object.getOwnPropertySymbols(e4);
            t33 && (n2 = n2.filter(function(t51) {
              return Object.getOwnPropertyDescriptor(e4, t51).enumerable;
            })), i2.push.apply(i2, n2);
          }
          return i2;
        }
        function W(e4) {
          for (var t33 = 1; t33 < arguments.length; t33++) {
            var i2 = null != arguments[t33] ? arguments[t33] : {};
            t33 % 2 ? V(Object(i2), true).forEach(function(t51) {
              B(e4, t51, i2[t51]);
            }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e4, Object.getOwnPropertyDescriptors(i2)) : V(Object(i2)).forEach(function(t51) {
              Object.defineProperty(e4, t51, Object.getOwnPropertyDescriptor(i2, t51));
            });
          }
          return e4;
        }
        var J = b({ props: W(W({}, H2), {}, { data: { type: Object, required: true } }), emits: ["click", "mouseenter", "mouseleave"], computed: { view: function() {
          return new $(this.emojiObject, this.skin, this.set, this.native, this.fallback, this.tooltip, this.size);
        }, sanitizedData: function() {
          return this.emojiObject._sanitized;
        }, title: function() {
          return this.tooltip ? this.emojiObject.short_name : null;
        }, emojiObject: function() {
          return "string" == typeof this.emoji ? this.data.findEmoji(this.emoji) : this.emoji;
        } }, created: function() {
        }, methods: { onClick: function() {
          this.$emit("click", this.emojiObject);
        }, onMouseEnter: function() {
          this.$emit("mouseenter", this.emojiObject);
        }, onMouseLeave: function() {
          this.$emit("mouseleave", this.emojiObject);
        } } }, function() {
          var e4 = this, t33 = e4._self._c;
          return e4.view.canRender ? t33(e4.tag, { tag: "component", staticClass: "emoji-mart-emoji", attrs: { title: e4.view.title, "aria-label": e4.view.ariaLabel, "data-title": e4.title }, on: { mouseenter: e4.onMouseEnter, mouseleave: e4.onMouseLeave, click: e4.onClick } }, [t33("span", { class: e4.view.cssClass, style: e4.view.cssStyle }, [e4._v(e4._s(e4.view.content))])]) : e4._e();
        }, []).exports, X2 = b({ props: { data: { type: Object, required: true }, i18n: { type: Object, required: true }, id: { type: String, required: true }, name: { type: String, required: true }, emojis: { type: Array }, emojiProps: { type: Object, required: true } }, methods: { activeClass: function(e4) {
          return this.emojiProps.selectedEmoji && this.emojiProps.selectedEmojiCategory && this.emojiProps.selectedEmoji.id == e4.id && this.emojiProps.selectedEmojiCategory.id == this.id ? "emoji-mart-emoji-selected" : "";
        } }, computed: { isVisible: function() {
          return !!this.emojis;
        }, isSearch: function() {
          return "Search" == this.name;
        }, hasResults: function() {
          return this.emojis.length > 0;
        }, emojiObjects: function() {
          var e4 = this;
          return this.emojis.map(function(t33) {
            return { emojiObject: t33, emojiView: new $(t33, e4.emojiProps.skin, e4.emojiProps.set, e4.emojiProps.native, e4.emojiProps.fallback, e4.emojiProps.emojiTooltip, e4.emojiProps.emojiSize) };
          });
        } }, components: { Emoji: J } }, function() {
          var e4 = this, t33 = e4._self._c;
          return e4.isVisible && (e4.isSearch || e4.hasResults) ? t33("section", { class: { "emoji-mart-category": true, "emoji-mart-no-results": !e4.hasResults }, attrs: { "aria-label": e4.i18n.categories[e4.id] } }, [t33("div", { staticClass: "emoji-mart-category-label" }, [t33("h3", { staticClass: "emoji-mart-category-label" }, [e4._v(e4._s(e4.i18n.categories[e4.id]))])]), e4._v(" "), e4._l(e4.emojiObjects, function(i2) {
            var n2 = i2.emojiObject, r2 = i2.emojiView;
            return [r2.canRender ? t33("button", { key: n2.id, staticClass: "emoji-mart-emoji", class: e4.activeClass(n2), attrs: { "aria-label": r2.ariaLabel, role: "option", "aria-selected": "false", "aria-posinset": "1", "aria-setsize": "1812", type: "button", "data-title": n2.short_name, title: r2.title }, on: { mouseenter: function(t51) {
              e4.emojiProps.onEnter(r2.getEmoji());
            }, mouseleave: function(t51) {
              e4.emojiProps.onLeave(r2.getEmoji());
            }, click: function(t51) {
              e4.emojiProps.onClick(r2.getEmoji());
            } } }, [t33("span", { class: r2.cssClass, style: r2.cssStyle }, [e4._v(e4._s(r2.content))])]) : e4._e()];
          }), e4._v(" "), e4.hasResults ? e4._e() : t33("div", [t33("emoji", { attrs: { data: e4.data, emoji: "sleuth_or_spy", native: e4.emojiProps.native, skin: e4.emojiProps.skin, set: e4.emojiProps.set } }), e4._v(" "), t33("div", { staticClass: "emoji-mart-no-results-label" }, [e4._v(e4._s(e4.i18n.notfound))])], 1)], 2) : e4._e();
        }, []).exports, Z2 = b({ props: { skin: { type: Number, required: true } }, emits: ["change"], data: function() {
          return { opened: false };
        }, methods: { onClick: function(e4) {
          this.opened && e4 != this.skin && this.$emit("change", e4), this.opened = !this.opened;
        } } }, function() {
          var e4 = this, t33 = e4._self._c;
          return t33("div", { class: { "emoji-mart-skin-swatches": true, "emoji-mart-skin-swatches-opened": e4.opened } }, e4._l(6, function(i2) {
            return t33("span", { key: i2, class: { "emoji-mart-skin-swatch": true, "emoji-mart-skin-swatch-selected": e4.skin == i2 } }, [t33("span", { class: "emoji-mart-skin emoji-mart-skin-tone-" + i2, on: { click: function(t51) {
              return e4.onClick(i2);
            } } })]);
          }), 0);
        }, []).exports, G = b({ props: { data: { type: Object, required: true }, title: { type: String, required: true }, emoji: { type: [String, Object] }, idleEmoji: { type: [String, Object], required: true }, showSkinTones: { type: Boolean, default: true }, emojiProps: { type: Object, required: true }, skinProps: { type: Object, required: true }, onSkinChange: { type: Function, required: true } }, computed: { emojiData: function() {
          return this.emoji ? this.emoji : {};
        }, emojiShortNames: function() {
          return this.emojiData.short_names;
        }, emojiEmoticons: function() {
          return this.emojiData.emoticons;
        } }, components: { Emoji: J, Skins: Z2 } }, function() {
          var e4 = this, t33 = e4._self._c;
          return t33("div", { staticClass: "emoji-mart-preview" }, [e4.emoji ? [t33("div", { staticClass: "emoji-mart-preview-emoji" }, [t33("emoji", { attrs: { data: e4.data, emoji: e4.emoji, native: e4.emojiProps.native, skin: e4.emojiProps.skin, set: e4.emojiProps.set } })], 1), e4._v(" "), t33("div", { staticClass: "emoji-mart-preview-data" }, [t33("div", { staticClass: "emoji-mart-preview-name" }, [e4._v(e4._s(e4.emoji.name))]), e4._v(" "), t33("div", { staticClass: "emoji-mart-preview-shortnames" }, e4._l(e4.emojiShortNames, function(i2) {
            return t33("span", { key: i2, staticClass: "emoji-mart-preview-shortname" }, [e4._v(":" + e4._s(i2) + ":")]);
          }), 0), e4._v(" "), t33("div", { staticClass: "emoji-mart-preview-emoticons" }, e4._l(e4.emojiEmoticons, function(i2) {
            return t33("span", { key: i2, staticClass: "emoji-mart-preview-emoticon" }, [e4._v(e4._s(i2))]);
          }), 0)])] : [t33("div", { staticClass: "emoji-mart-preview-emoji" }, [t33("emoji", { attrs: { data: e4.data, emoji: e4.idleEmoji, native: e4.emojiProps.native, skin: e4.emojiProps.skin, set: e4.emojiProps.set } })], 1), e4._v(" "), t33("div", { staticClass: "emoji-mart-preview-data" }, [t33("span", { staticClass: "emoji-mart-title-label" }, [e4._v(e4._s(e4.title))])]), e4._v(" "), e4.showSkinTones ? t33("div", { staticClass: "emoji-mart-preview-skins" }, [t33("skins", { attrs: { skin: e4.skinProps.skin }, on: { change: function(t51) {
            return e4.onSkinChange(t51);
          } } })], 1) : e4._e()]], 2);
        }, []).exports, K = b({ props: { data: { type: Object, required: true }, i18n: { type: Object, required: true }, autoFocus: { type: Boolean, default: false }, onSearch: { type: Function, required: true }, onArrowLeft: { type: Function, required: false }, onArrowRight: { type: Function, required: false }, onArrowDown: { type: Function, required: false }, onArrowUp: { type: Function, required: false }, onEnter: { type: Function, required: false } }, emits: ["search", "enter", "arrowUp", "arrowDown", "arrowRight", "arrowLeft"], data: function() {
          return { value: "" };
        }, computed: { emojiIndex: function() {
          return this.data;
        } }, watch: { value: function() {
          this.$emit("search", this.value);
        } }, methods: { clear: function() {
          this.value = "";
        } }, mounted: function() {
          var e4 = this.$el.querySelector("input");
          this.autoFocus && e4.focus();
        } }, function() {
          var e4 = this, t33 = e4._self._c;
          return t33("div", { staticClass: "emoji-mart-search" }, [t33("input", { directives: [{ name: "model", rawName: "v-model", value: e4.value, expression: "value" }], attrs: { type: "text", placeholder: e4.i18n.search, role: "textbox", "aria-autocomplete": "list", "aria-owns": "emoji-mart-list", "aria-label": "Search for an emoji", "aria-describedby": "emoji-mart-search-description" }, domProps: { value: e4.value }, on: { keydown: [function(t51) {
            return !t51.type.indexOf("key") && e4._k(t51.keyCode, "left", 37, t51.key, ["Left", "ArrowLeft"]) || "button" in t51 && 0 !== t51.button ? null : function(t52) {
              return e4.$emit("arrowLeft", t52);
            }.apply(null, arguments);
          }, function(t51) {
            return !t51.type.indexOf("key") && e4._k(t51.keyCode, "right", 39, t51.key, ["Right", "ArrowRight"]) || "button" in t51 && 2 !== t51.button ? null : function() {
              return e4.$emit("arrowRight");
            }.apply(null, arguments);
          }, function(t51) {
            return !t51.type.indexOf("key") && e4._k(t51.keyCode, "down", 40, t51.key, ["Down", "ArrowDown"]) ? null : function() {
              return e4.$emit("arrowDown");
            }.apply(null, arguments);
          }, function(t51) {
            return !t51.type.indexOf("key") && e4._k(t51.keyCode, "up", 38, t51.key, ["Up", "ArrowUp"]) ? null : function(t52) {
              return e4.$emit("arrowUp", t52);
            }.apply(null, arguments);
          }, function(t51) {
            return !t51.type.indexOf("key") && e4._k(t51.keyCode, "enter", 13, t51.key, "Enter") ? null : function() {
              return e4.$emit("enter");
            }.apply(null, arguments);
          }], input: function(t51) {
            t51.target.composing || (e4.value = t51.target.value);
          } } }), e4._v(" "), t33("span", { staticClass: "hidden", attrs: { id: "emoji-picker-search-description" } }, [e4._v("Use the left, right, up and down arrow keys to navigate the emoji search\n    results.")])]);
        }, []), Q = K.exports;
        function Y2(e4, t33) {
          (null == t33 || t33 > e4.length) && (t33 = e4.length);
          for (var i2 = 0, n2 = new Array(t33); i2 < t33; i2++) n2[i2] = e4[i2];
          return n2;
        }
        i(537);
        var ee = function() {
          return O(function e4(t33) {
            var i2, n2;
            E(this, e4), this._vm = t33, this._data = t33.data, this._perLine = t33.perLine, this._categories = [], (i2 = this._categories).push.apply(i2, function(e5) {
              if (Array.isArray(e5)) return Y2(e5);
            }(n2 = this._data.categories()) || function(e5) {
              if ("undefined" != typeof Symbol && null != e5[Symbol.iterator] || null != e5["@@iterator"]) return Array.from(e5);
            }(n2) || function(e5, t51) {
              if (e5) {
                if ("string" == typeof e5) return Y2(e5, t51);
                var i3 = Object.prototype.toString.call(e5).slice(8, -1);
                return "Object" === i3 && e5.constructor && (i3 = e5.constructor.name), "Map" === i3 || "Set" === i3 ? Array.from(e5) : "Arguments" === i3 || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(i3) ? Y2(e5, t51) : void 0;
              }
            }(n2) || function() {
              throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
            }()), this._categories = this._categories.filter(function(e5) {
              return e5.emojis.length > 0;
            }), this._categories[0].first = true, Object.freeze(this._categories), this.activeCategory = this._categories[0], this.searchEmojis = null, this.previewEmoji = null, this.previewEmojiCategoryIdx = 0, this.previewEmojiIdx = -1;
          }, [{ key: "onScroll", value: function() {
            for (var e4 = this._vm.$refs.scroll.scrollTop, t33 = this.filteredCategories[0], i2 = 0, n2 = this.filteredCategories.length; i2 < n2; i2++) {
              var r2 = this.filteredCategories[i2], o2 = this._vm.getCategoryComponent(i2);
              if (o2 && o2.$el.offsetTop - 50 > e4) break;
              t33 = r2;
            }
            this.activeCategory = t33;
          } }, { key: "allCategories", get: function() {
            return this._categories;
          } }, { key: "filteredCategories", get: function() {
            return this.searchEmojis ? [{ id: "search", name: "Search", emojis: this.searchEmojis }] : this._categories.filter(function(e4) {
              return e4.emojis.length > 0;
            });
          } }, { key: "previewEmojiCategory", get: function() {
            return this.previewEmojiCategoryIdx >= 0 ? this.filteredCategories[this.previewEmojiCategoryIdx] : null;
          } }, { key: "onAnchorClick", value: function(e4) {
            var t33 = this;
            if (!this.searchEmojis) {
              var i2 = this.filteredCategories.indexOf(e4), n2 = this._vm.getCategoryComponent(i2);
              this._vm.infiniteScroll ? function() {
                if (n2) {
                  var i3 = n2.$el.offsetTop;
                  e4.first && (i3 = 0), t33._vm.$refs.scroll.scrollTop = i3;
                }
              }() : this.activeCategory = this.filteredCategories[i2];
            }
          } }, { key: "onSearch", value: function(e4) {
            var t33 = this._data.search(e4, this.maxSearchResults);
            this.searchEmojis = t33, this.previewEmojiCategoryIdx = 0, this.previewEmojiIdx = 0, this.updatePreviewEmoji();
          } }, { key: "onEmojiEnter", value: function(e4) {
            this.previewEmoji = e4, this.previewEmojiIdx = -1, this.previewEmojiCategoryIdx = -1;
          } }, { key: "onEmojiLeave", value: function(e4) {
            this.previewEmoji = null;
          } }, { key: "onArrowLeft", value: function() {
            this.previewEmojiIdx > 0 ? this.previewEmojiIdx -= 1 : (this.previewEmojiCategoryIdx -= 1, this.previewEmojiCategoryIdx < 0 ? this.previewEmojiCategoryIdx = 0 : this.previewEmojiIdx = this.filteredCategories[this.previewEmojiCategoryIdx].emojis.length - 1), this.updatePreviewEmoji();
          } }, { key: "onArrowRight", value: function() {
            this.previewEmojiIdx < this.emojisLength(this.previewEmojiCategoryIdx) - 1 ? this.previewEmojiIdx += 1 : (this.previewEmojiCategoryIdx += 1, this.previewEmojiCategoryIdx >= this.filteredCategories.length ? this.previewEmojiCategoryIdx = this.filteredCategories.length - 1 : this.previewEmojiIdx = 0), this.updatePreviewEmoji();
          } }, { key: "onArrowDown", value: function() {
            if (-1 == this.previewEmojiIdx) return this.onArrowRight();
            var e4 = this.filteredCategories[this.previewEmojiCategoryIdx].emojis.length, t33 = this._perLine;
            this.previewEmojiIdx + t33 > e4 && (t33 = e4 % this._perLine);
            for (var i2 = 0; i2 < t33; i2++) this.onArrowRight();
            this.updatePreviewEmoji();
          } }, { key: "onArrowUp", value: function() {
            var e4 = this._perLine;
            this.previewEmojiIdx - e4 < 0 && (e4 = this.previewEmojiCategoryIdx > 0 ? this.filteredCategories[this.previewEmojiCategoryIdx - 1].emojis.length % this._perLine : 0);
            for (var t33 = 0; t33 < e4; t33++) this.onArrowLeft();
            this.updatePreviewEmoji();
          } }, { key: "updatePreviewEmoji", value: function() {
            var e4 = this;
            this.previewEmoji = this.filteredCategories[this.previewEmojiCategoryIdx].emojis[this.previewEmojiIdx], this._vm.$nextTick(function() {
              var t33 = e4._vm.$refs.scroll, i2 = t33.querySelector(".emoji-mart-emoji-selected"), n2 = t33.offsetTop - t33.offsetHeight;
              i2 && i2.offsetTop + i2.offsetHeight > n2 + t33.scrollTop && (t33.scrollTop += i2.offsetHeight), i2 && i2.offsetTop < t33.scrollTop && (t33.scrollTop -= i2.offsetHeight);
            });
          } }, { key: "emojisLength", value: function(e4) {
            return -1 == e4 ? 0 : this.filteredCategories[e4].emojis.length;
          } }]);
        }();
        function te(e4, t33) {
          var i2 = Object.keys(e4);
          if (Object.getOwnPropertySymbols) {
            var n2 = Object.getOwnPropertySymbols(e4);
            t33 && (n2 = n2.filter(function(t51) {
              return Object.getOwnPropertyDescriptor(e4, t51).enumerable;
            })), i2.push.apply(i2, n2);
          }
          return i2;
        }
        function ie(e4) {
          for (var t33 = 1; t33 < arguments.length; t33++) {
            var i2 = null != arguments[t33] ? arguments[t33] : {};
            t33 % 2 ? te(Object(i2), true).forEach(function(t51) {
              B(e4, t51, i2[t51]);
            }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e4, Object.getOwnPropertyDescriptors(i2)) : te(Object(i2)).forEach(function(t51) {
              Object.defineProperty(e4, t51, Object.getOwnPropertyDescriptor(i2, t51));
            });
          }
          return e4;
        }
        var ne = { search: "Search", notfound: "No Emoji Found", categories: { search: "Search Results", recent: "Frequently Used", smileys: "Smileys & Emotion", people: "People & Body", nature: "Animals & Nature", foods: "Food & Drink", activity: "Activity", places: "Travel & Places", objects: "Objects", symbols: "Symbols", flags: "Flags", custom: "Custom" } }, re = { props: ie(ie({}, U), {}, { data: { type: Object, required: true } }), emits: ["select", "skin-change"], data: function() {
          return { activeSkin: this.skin || c.get("skin") || this.defaultSkin, view: new ee(this) };
        }, computed: { customStyles: function() {
          return ie({ width: this.calculateWidth + "px" }, this.pickerStyles);
        }, emojiProps: function() {
          return { native: this.native, skin: this.activeSkin, set: this.set, emojiTooltip: this.emojiTooltip, emojiSize: this.emojiSize, selectedEmoji: this.view.previewEmoji, selectedEmojiCategory: this.view.previewEmojiCategory, onEnter: this.onEmojiEnter.bind(this), onLeave: this.onEmojiLeave.bind(this), onClick: this.onEmojiClick.bind(this) };
        }, skinProps: function() {
          return { skin: this.activeSkin };
        }, calculateWidth: function() {
          return this.perLine * (this.emojiSize + 12) + 12 + 2 + function() {
            if ("undefined" == typeof document) return 0;
            var e4 = document.createElement("div");
            e4.style.width = "100px", e4.style.height = "100px", e4.style.overflow = "scroll", e4.style.position = "absolute", e4.style.top = "-9999px", document.body.appendChild(e4);
            var t33 = e4.offsetWidth - e4.clientWidth;
            return document.body.removeChild(e4), t33;
          }();
        }, filteredCategories: function() {
          return this.view.filteredCategories;
        }, mergedI18n: function() {
          return Object.freeze(F(ne, this.i18n));
        }, idleEmoji: function() {
          try {
            return this.data.emoji(this.emoji);
          } catch (e4) {
            return console.error("Default preview emoji `" + this.emoji + "` is not available, check the Picker `emoji` property"), console.error(e4), this.data.firstEmoji();
          }
        }, isSearching: function() {
          return null != this.view.searchEmojis;
        } }, watch: { skin: function() {
          this.onSkinChange(this.skin);
        } }, methods: { onScroll: function() {
          this.infiniteScroll && !this.waitingForPaint && (this.waitingForPaint = true, window.requestAnimationFrame(this.onScrollPaint.bind(this)));
        }, onScrollPaint: function() {
          this.waitingForPaint = false, this.view.onScroll();
        }, onAnchorClick: function(e4) {
          this.view.onAnchorClick(e4);
        }, onSearch: function(e4) {
          this.view.onSearch(e4);
        }, onEmojiEnter: function(e4) {
          this.view.onEmojiEnter(e4);
        }, onEmojiLeave: function(e4) {
          this.view.onEmojiLeave(e4);
        }, onArrowLeft: function(e4) {
          var t33 = this.view.previewEmojiIdx;
          this.view.onArrowLeft(), e4 && this.view.previewEmojiIdx !== t33 && e4.preventDefault();
        }, onArrowRight: function() {
          this.view.onArrowRight();
        }, onArrowDown: function() {
          this.view.onArrowDown();
        }, onArrowUp: function(e4) {
          this.view.onArrowUp(), e4.preventDefault();
        }, onEnter: function() {
          this.view.previewEmoji && (this.$emit("select", this.view.previewEmoji), w3.add(this.view.previewEmoji));
        }, onEmojiClick: function(e4) {
          this.$emit("select", e4), w3.add(e4);
        }, onTextSelect: function(e4) {
          e4.stopPropagation();
        }, onSkinChange: function(e4) {
          this.activeSkin = e4, c.update({ skin: e4 }), this.$emit("skin-change", e4);
        }, getCategoryComponent: function(e4) {
          var t33 = this.$refs["categories_" + e4];
          return t33 && "0" in t33 ? t33[0] : t33;
        } }, components: { Anchors: k, Category: X2, Preview: G, Search: Q } }, oe = b(re, function() {
          var e4 = this, t33 = e4._self._c;
          return t33("section", { staticClass: "emoji-mart emoji-mart-static", style: e4.customStyles }, [e4.showCategories ? t33("div", { staticClass: "emoji-mart-bar emoji-mart-bar-anchors" }, [t33("anchors", { attrs: { data: e4.data, i18n: e4.mergedI18n, color: e4.color, categories: e4.view.allCategories, "active-category": e4.view.activeCategory }, on: { click: e4.onAnchorClick } })], 1) : e4._e(), e4._v(" "), e4._t("searchTemplate", function() {
            return [e4.showSearch ? t33("search", { ref: "search", attrs: { data: e4.data, i18n: e4.mergedI18n, "auto-focus": e4.autoFocus, "on-search": e4.onSearch }, on: { search: e4.onSearch, arrowLeft: e4.onArrowLeft, arrowRight: e4.onArrowRight, arrowDown: e4.onArrowDown, arrowUp: e4.onArrowUp, enter: e4.onEnter, select: e4.onTextSelect } }) : e4._e()];
          }, { data: e4.data, i18n: e4.i18n, autoFocus: e4.autoFocus, onSearch: e4.onSearch }), e4._v(" "), t33("div", { ref: "scroll", staticClass: "emoji-mart-scroll", attrs: { role: "tabpanel" }, on: { scroll: e4.onScroll } }, [t33("div", { ref: "scrollContent", attrs: { id: "emoji-mart-list", role: "listbox", "aria-expanded": "true" } }, [e4._t("customCategory"), e4._v(" "), e4._l(e4.view.filteredCategories, function(i2, n2) {
            return t33("category", { directives: [{ name: "show", rawName: "v-show", value: e4.infiniteScroll || i2 == e4.view.activeCategory || e4.isSearching, expression: "infiniteScroll || category == view.activeCategory || isSearching" }], key: i2.id, ref: "categories_" + n2, refInFor: true, attrs: { data: e4.data, i18n: e4.mergedI18n, id: i2.id, name: i2.name, emojis: i2.emojis, "emoji-props": e4.emojiProps } });
          })], 2)]), e4._v(" "), e4._t("previewTemplate", function() {
            return [e4.showPreview ? t33("div", { staticClass: "emoji-mart-bar emoji-mart-bar-preview" }, [t33("preview", { attrs: { data: e4.data, title: e4.title, emoji: e4.view.previewEmoji, "idle-emoji": e4.idleEmoji, "show-skin-tones": e4.showSkinTones, "emoji-props": e4.emojiProps, "skin-props": e4.skinProps, "on-skin-change": e4.onSkinChange } })], 1) : e4._e()];
          }, { data: e4.data, title: e4.title, emoji: e4.view.previewEmoji, idleEmoji: e4.idleEmoji, showSkinTones: e4.showSkinTones, emojiProps: e4.emojiProps, skinProps: e4.skinProps, onSkinChange: e4.onSkinChange })], 2);
        }, []), se = oe.exports;
      }(), n;
    }();
  });
})(emojiMart);
getBuilder_1("nextcloud-vue").persist(true).build();
register(t5, t14, t34, t40);
({
  search: t("Search emoji"),
  notfound: t("No emoji found"),
  categories: {
    search: t("Search results"),
    recent: t("Frequently used"),
    smileys: t("Smileys & Emotion"),
    people: t("People & Body"),
    nature: t("Animals & Nature"),
    foods: t("Food & Drink"),
    activity: t("Activities"),
    places: t("Travel & Places"),
    objects: t("Objects"),
    symbols: t("Symbols"),
    flags: t("Flags"),
    custom: t("Custom")
  }
});
[
  new Color(255, 222, 52, t("Neutral skin color")),
  new Color(228, 205, 166, t("Light skin tone")),
  new Color(250, 221, 192, t("Medium light skin tone")),
  new Color(174, 129, 87, t("Medium skin tone")),
  new Color(158, 113, 88, t("Medium dark skin tone")),
  new Color(96, 79, 69, t("Dark skin tone"))
];
({
  props: {
    /**
     * The fallback text in the preview section
     */
    previewFallbackName: {
      default: t("Pick an emoji")
    }
  }
});
const __default__ = {};
const __injectCSSVars__ = () => {
  useCssVars((_vm, _setup) => ({
    "497e8a2b": _vm.color
  }));
};
const __setup__ = __default__.setup;
__default__.setup = __setup__ ? (props, ctx) => {
  __injectCSSVars__();
  return __setup__(props, ctx);
} : __injectCSSVars__;
register(t39);
e()?.circles?.teamResourceProviders ?? [];
register(t36);
register(t8);
({
  props: {
    /**
     * Make the header name dynamic
     */
    header: {
      default: t("Related resources")
    },
    description: {
      default: t("Anything shared with the same group of people will show up here")
    }
  }
});
if (!window._vue_richtext_widgets) {
  window._vue_richtext_widgets = {};
}
const registerWidget = (id, callback, onDestroy = (el) => {
}, props) => {
  const propsWithDefaults = {
    hasInteractiveView: true,
    fullWidth: false,
    ...props
  };
  if (window._vue_richtext_widgets[id]) {
    console.error("Widget for id " + id + " already registered");
    return;
  }
  window._vue_richtext_widgets[id] = {
    id,
    callback,
    onDestroy,
    ...propsWithDefaults
  };
};
window._registerWidget = (id, callback, onDestroy, props) => {
  registerWidget(id, callback, onDestroy, props);
};
if (!window._vue_richtext_custom_picker_elements) {
  window._vue_richtext_custom_picker_elements = {};
}
const registerCustomPickerElement = (id, callback, onDestroy = (el) => {
}, size = "large") => {
  if (window._vue_richtext_custom_picker_elements[id]) {
    console.error("Custom reference picker element for id " + id + " already registered");
    return;
  }
  window._vue_richtext_custom_picker_elements[id] = {
    id,
    callback,
    onDestroy,
    size
  };
};
window._registerCustomPickerElement = registerCustomPickerElement;
register(t21);
register(t7);
({
  title: t("Any link"),
  icon_url: h("core", "filetypes/link.svg")
});
if (!window._vue_richtext_reference_providers) {
  window._vue_richtext_reference_providers = loadState("core", "reference-provider-list", []);
}
if (!window._vue_richtext_reference_provider_timestamps) {
  window._vue_richtext_reference_provider_timestamps = loadState("core", "reference-provider-timestamps", {});
}
register(t38, t44);
register(t22);
register(t29, t38, t40);
register(t11, t17);
const asciiAlpha = regexCheck(/[A-Za-z]/);
const asciiAlphanumeric = regexCheck(/[\dA-Za-z]/);
function asciiControl(code2) {
  return (
    // Special whitespace codes (which have negative values), C0 and Control
    // character DEL
    code2 !== null && (code2 < 32 || code2 === 127)
  );
}
function markdownLineEndingOrSpace(code2) {
  return code2 !== null && (code2 < 0 || code2 === 32);
}
const unicodePunctuation = regexCheck(new RegExp("\\p{P}|\\p{S}", "u"));
const unicodeWhitespace = regexCheck(/\s/);
function regexCheck(regex) {
  return check;
  function check(code2) {
    return code2 !== null && code2 > -1 && regex.test(String.fromCharCode(code2));
  }
}
const convert = (
  // Note: overloads in JSDoc can’t yet use different `@template`s.
  /**
   * @type {(
   *   (<Condition extends string>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & {type: Condition}) &
   *   (<Condition extends Props>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Condition) &
   *   (<Condition extends TestFunction>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Predicate<Condition, Node>) &
   *   ((test?: null | undefined) => (node?: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node) &
   *   ((test?: Test) => Check)
   * )}
   */
  /**
   * @param {Test} [test]
   * @returns {Check}
   */
  function(test) {
    if (test === null || test === void 0) {
      return ok;
    }
    if (typeof test === "function") {
      return castFactory(test);
    }
    if (typeof test === "object") {
      return Array.isArray(test) ? anyFactory(test) : propsFactory(test);
    }
    if (typeof test === "string") {
      return typeFactory(test);
    }
    throw new Error("Expected function, string, or object as test");
  }
);
function anyFactory(tests) {
  const checks = [];
  let index = -1;
  while (++index < tests.length) {
    checks[index] = convert(tests[index]);
  }
  return castFactory(any);
  function any(...parameters) {
    let index2 = -1;
    while (++index2 < checks.length) {
      if (checks[index2].apply(this, parameters)) return true;
    }
    return false;
  }
}
function propsFactory(check) {
  const checkAsRecord = (
    /** @type {Record<string, unknown>} */
    check
  );
  return castFactory(all2);
  function all2(node2) {
    const nodeAsRecord = (
      /** @type {Record<string, unknown>} */
      /** @type {unknown} */
      node2
    );
    let key;
    for (key in check) {
      if (nodeAsRecord[key] !== checkAsRecord[key]) return false;
    }
    return true;
  }
}
function typeFactory(check) {
  return castFactory(type);
  function type(node2) {
    return node2 && node2.type === check;
  }
}
function castFactory(testFunction) {
  return check;
  function check(value3, index, parent) {
    return Boolean(
      looksLikeANode(value3) && testFunction.call(
        this,
        value3,
        typeof index === "number" ? index : void 0,
        parent || void 0
      )
    );
  }
}
function ok() {
  return true;
}
function looksLikeANode(value3) {
  return value3 !== null && typeof value3 === "object" && "type" in value3;
}
/** @type {(node?: unknown) => node is Exclude<PhrasingContent, Html>} */
convert([
  "break",
  "delete",
  "emphasis",
  // To do: next major: removed since footnotes were added to GFM.
  "footnote",
  "footnoteReference",
  "image",
  "imageReference",
  "inlineCode",
  // Enabled by `mdast-util-math`:
  "inlineMath",
  "link",
  "linkReference",
  // Enabled by `mdast-util-mdx`:
  "mdxJsxTextElement",
  // Enabled by `mdast-util-mdx`:
  "mdxTextExpression",
  "strong",
  "text",
  // Enabled by `mdast-util-directive`:
  "textDirective"
]);
const wwwPrefix = {
  tokenize: tokenizeWwwPrefix,
  partial: true
};
const domain = {
  tokenize: tokenizeDomain,
  partial: true
};
const path = {
  tokenize: tokenizePath,
  partial: true
};
const trail = {
  tokenize: tokenizeTrail,
  partial: true
};
const emailDomainDotTrail = {
  tokenize: tokenizeEmailDomainDotTrail,
  partial: true
};
const wwwAutolink = {
  tokenize: tokenizeWwwAutolink,
  previous: previousWww
};
const protocolAutolink = {
  tokenize: tokenizeProtocolAutolink,
  previous: previousProtocol
};
const emailAutolink = {
  tokenize: tokenizeEmailAutolink,
  previous: previousEmail
};
const text2 = {};
let code = 48;
while (code < 123) {
  text2[code] = emailAutolink;
  code++;
  if (code === 58) code = 65;
  else if (code === 91) code = 97;
}
text2[43] = emailAutolink;
text2[45] = emailAutolink;
text2[46] = emailAutolink;
text2[95] = emailAutolink;
text2[72] = [emailAutolink, protocolAutolink];
text2[104] = [emailAutolink, protocolAutolink];
text2[87] = [emailAutolink, wwwAutolink];
text2[119] = [emailAutolink, wwwAutolink];
function tokenizeEmailAutolink(effects, ok2, nok) {
  const self2 = this;
  let dot;
  let data11;
  return start;
  function start(code2) {
    if (!gfmAtext(code2) || !previousEmail.call(self2, self2.previous) || previousUnbalanced(self2.events)) {
      return nok(code2);
    }
    effects.enter("literalAutolink");
    effects.enter("literalAutolinkEmail");
    return atext(code2);
  }
  function atext(code2) {
    if (gfmAtext(code2)) {
      effects.consume(code2);
      return atext;
    }
    if (code2 === 64) {
      effects.consume(code2);
      return emailDomain;
    }
    return nok(code2);
  }
  function emailDomain(code2) {
    if (code2 === 46) {
      return effects.check(
        emailDomainDotTrail,
        emailDomainAfter,
        emailDomainDot
      )(code2);
    }
    if (code2 === 45 || code2 === 95 || asciiAlphanumeric(code2)) {
      data11 = true;
      effects.consume(code2);
      return emailDomain;
    }
    return emailDomainAfter(code2);
  }
  function emailDomainDot(code2) {
    effects.consume(code2);
    dot = true;
    return emailDomain;
  }
  function emailDomainAfter(code2) {
    if (data11 && dot && asciiAlpha(self2.previous)) {
      effects.exit("literalAutolinkEmail");
      effects.exit("literalAutolink");
      return ok2(code2);
    }
    return nok(code2);
  }
}
function tokenizeWwwAutolink(effects, ok2, nok) {
  const self2 = this;
  return wwwStart;
  function wwwStart(code2) {
    if (code2 !== 87 && code2 !== 119 || !previousWww.call(self2, self2.previous) || previousUnbalanced(self2.events)) {
      return nok(code2);
    }
    effects.enter("literalAutolink");
    effects.enter("literalAutolinkWww");
    return effects.check(
      wwwPrefix,
      effects.attempt(domain, effects.attempt(path, wwwAfter), nok),
      nok
    )(code2);
  }
  function wwwAfter(code2) {
    effects.exit("literalAutolinkWww");
    effects.exit("literalAutolink");
    return ok2(code2);
  }
}
function tokenizeProtocolAutolink(effects, ok2, nok) {
  const self2 = this;
  let buffer = "";
  let seen = false;
  return protocolStart;
  function protocolStart(code2) {
    if ((code2 === 72 || code2 === 104) && previousProtocol.call(self2, self2.previous) && !previousUnbalanced(self2.events)) {
      effects.enter("literalAutolink");
      effects.enter("literalAutolinkHttp");
      buffer += String.fromCodePoint(code2);
      effects.consume(code2);
      return protocolPrefixInside;
    }
    return nok(code2);
  }
  function protocolPrefixInside(code2) {
    if (asciiAlpha(code2) && buffer.length < 5) {
      buffer += String.fromCodePoint(code2);
      effects.consume(code2);
      return protocolPrefixInside;
    }
    if (code2 === 58) {
      const protocol = buffer.toLowerCase();
      if (protocol === "http" || protocol === "https") {
        effects.consume(code2);
        return protocolSlashesInside;
      }
    }
    return nok(code2);
  }
  function protocolSlashesInside(code2) {
    if (code2 === 47) {
      effects.consume(code2);
      if (seen) {
        return afterProtocol;
      }
      seen = true;
      return protocolSlashesInside;
    }
    return nok(code2);
  }
  function afterProtocol(code2) {
    return code2 === null || asciiControl(code2) || markdownLineEndingOrSpace(code2) || unicodeWhitespace(code2) || unicodePunctuation(code2) ? nok(code2) : effects.attempt(domain, effects.attempt(path, protocolAfter), nok)(code2);
  }
  function protocolAfter(code2) {
    effects.exit("literalAutolinkHttp");
    effects.exit("literalAutolink");
    return ok2(code2);
  }
}
function tokenizeWwwPrefix(effects, ok2, nok) {
  let size = 0;
  return wwwPrefixInside;
  function wwwPrefixInside(code2) {
    if ((code2 === 87 || code2 === 119) && size < 3) {
      size++;
      effects.consume(code2);
      return wwwPrefixInside;
    }
    if (code2 === 46 && size === 3) {
      effects.consume(code2);
      return wwwPrefixAfter;
    }
    return nok(code2);
  }
  function wwwPrefixAfter(code2) {
    return code2 === null ? nok(code2) : ok2(code2);
  }
}
function tokenizeDomain(effects, ok2, nok) {
  let underscoreInLastSegment;
  let underscoreInLastLastSegment;
  let seen;
  return domainInside;
  function domainInside(code2) {
    if (code2 === 46 || code2 === 95) {
      return effects.check(trail, domainAfter, domainAtPunctuation)(code2);
    }
    if (code2 === null || markdownLineEndingOrSpace(code2) || unicodeWhitespace(code2) || code2 !== 45 && unicodePunctuation(code2)) {
      return domainAfter(code2);
    }
    seen = true;
    effects.consume(code2);
    return domainInside;
  }
  function domainAtPunctuation(code2) {
    if (code2 === 95) {
      underscoreInLastSegment = true;
    } else {
      underscoreInLastLastSegment = underscoreInLastSegment;
      underscoreInLastSegment = void 0;
    }
    effects.consume(code2);
    return domainInside;
  }
  function domainAfter(code2) {
    if (underscoreInLastLastSegment || underscoreInLastSegment || !seen) {
      return nok(code2);
    }
    return ok2(code2);
  }
}
function tokenizePath(effects, ok2) {
  let sizeOpen = 0;
  let sizeClose = 0;
  return pathInside;
  function pathInside(code2) {
    if (code2 === 40) {
      sizeOpen++;
      effects.consume(code2);
      return pathInside;
    }
    if (code2 === 41 && sizeClose < sizeOpen) {
      return pathAtPunctuation(code2);
    }
    if (code2 === 33 || code2 === 34 || code2 === 38 || code2 === 39 || code2 === 41 || code2 === 42 || code2 === 44 || code2 === 46 || code2 === 58 || code2 === 59 || code2 === 60 || code2 === 63 || code2 === 93 || code2 === 95 || code2 === 126) {
      return effects.check(trail, ok2, pathAtPunctuation)(code2);
    }
    if (code2 === null || markdownLineEndingOrSpace(code2) || unicodeWhitespace(code2)) {
      return ok2(code2);
    }
    effects.consume(code2);
    return pathInside;
  }
  function pathAtPunctuation(code2) {
    if (code2 === 41) {
      sizeClose++;
    }
    effects.consume(code2);
    return pathInside;
  }
}
function tokenizeTrail(effects, ok2, nok) {
  return trail2;
  function trail2(code2) {
    if (code2 === 33 || code2 === 34 || code2 === 39 || code2 === 41 || code2 === 42 || code2 === 44 || code2 === 46 || code2 === 58 || code2 === 59 || code2 === 63 || code2 === 95 || code2 === 126) {
      effects.consume(code2);
      return trail2;
    }
    if (code2 === 38) {
      effects.consume(code2);
      return trailCharRefStart;
    }
    if (code2 === 93) {
      effects.consume(code2);
      return trailBracketAfter;
    }
    if (
      // `<` is an end.
      code2 === 60 || // So is whitespace.
      code2 === null || markdownLineEndingOrSpace(code2) || unicodeWhitespace(code2)
    ) {
      return ok2(code2);
    }
    return nok(code2);
  }
  function trailBracketAfter(code2) {
    if (code2 === null || code2 === 40 || code2 === 91 || markdownLineEndingOrSpace(code2) || unicodeWhitespace(code2)) {
      return ok2(code2);
    }
    return trail2(code2);
  }
  function trailCharRefStart(code2) {
    return asciiAlpha(code2) ? trailCharRefInside(code2) : nok(code2);
  }
  function trailCharRefInside(code2) {
    if (code2 === 59) {
      effects.consume(code2);
      return trail2;
    }
    if (asciiAlpha(code2)) {
      effects.consume(code2);
      return trailCharRefInside;
    }
    return nok(code2);
  }
}
function tokenizeEmailDomainDotTrail(effects, ok2, nok) {
  return start;
  function start(code2) {
    effects.consume(code2);
    return after;
  }
  function after(code2) {
    return asciiAlphanumeric(code2) ? nok(code2) : ok2(code2);
  }
}
function previousWww(code2) {
  return code2 === null || code2 === 40 || code2 === 42 || code2 === 95 || code2 === 91 || code2 === 93 || code2 === 126 || markdownLineEndingOrSpace(code2);
}
function previousProtocol(code2) {
  return !asciiAlpha(code2);
}
function previousEmail(code2) {
  return !(code2 === 47 || gfmAtext(code2));
}
function gfmAtext(code2) {
  return code2 === 43 || code2 === 45 || code2 === 46 || code2 === 95 || asciiAlphanumeric(code2);
}
function previousUnbalanced(events) {
  let index = events.length;
  let result = false;
  while (index--) {
    const token = events[index][1];
    if ((token.type === "labelLink" || token.type === "labelImage") && !token._balanced) {
      result = true;
      break;
    }
    if (token._gfmAutolinkLiteralWalkedInto) {
      result = false;
      break;
    }
  }
  if (events.length > 0 && !result) {
    events[events.length - 1][1]._gfmAutolinkLiteralWalkedInto = true;
  }
  return result;
}
ref$1(null);
if (!Array.prototype.find) {
  Array.prototype.find = function(predicate) {
    if (this === null) {
      throw new TypeError("Array.prototype.find called on null or undefined");
    }
    if (typeof predicate !== "function") {
      throw new TypeError("predicate must be a function");
    }
    var list2 = Object(this);
    var length = list2.length >>> 0;
    var thisArg = arguments[1];
    var value3;
    for (var i = 0; i < length; i++) {
      value3 = list2[i];
      if (predicate.call(thisArg, value3, i, list2)) {
        return value3;
      }
    }
    return void 0;
  };
}
if (window && typeof window.CustomEvent !== "function") {
  let CustomEvent$1 = function(event, params) {
    params = params || {
      bubbles: false,
      cancelable: false,
      detail: void 0
    };
    var evt = document.createEvent("CustomEvent");
    evt.initCustomEvent(event, params.bubbles, params.cancelable, params.detail);
    return evt;
  };
  if (typeof window.Event !== "undefined") {
    CustomEvent$1.prototype = window.Event.prototype;
  }
  window.CustomEvent = CustomEvent$1;
}
function ansiRegex({ onlyFirst = false } = {}) {
  const ST = "(?:\\u0007|\\u001B\\u005C|\\u009C)";
  const pattern = [
    `[\\u001B\\u009B][[\\]()#;?]*(?:(?:(?:(?:;[-a-zA-Z\\d\\/#&.:=?%@~_]+)*|[a-zA-Z\\d]+(?:;[-a-zA-Z\\d\\/#&.:=?%@~_]*)*)?${ST})`,
    "(?:(?:\\d{1,4}(?:;\\d{0,4})*)?[\\dA-PR-TZcf-nq-uy=><~]))"
  ].join("|");
  return new RegExp(pattern, onlyFirst ? void 0 : "g");
}
ansiRegex();
register(t31, t34);
({
  props: {
    placeholder: {
      default: t("Write a message …")
    }
  }
});
register(t0);
({
  props: {
    // Add NcSelect prop defaults and populate $props
    ...NcSelect.props,
    /**
     * Placeholder text
     *
     * @see https://vue-select.org/api/props.html#placeholder
     */
    placeholder: {
      default: t("Select a tag")
    }
  }
});
register(t15, t43);
({
  props: {
    /**
     * `aria-label` for the clear input button
     */
    ariaLabelClearSelected: {
      default: t("Clear selected")
    },
    /**
     * `aria-label` for the listbox element
     */
    ariaLabelListbox: {
      default: t("Options")
    },
    /**
     * Visible label for the input element
     *
     * @default 'Select account'
     */
    inputLabel: {
      default: t("Select account")
    }
  }
});
register(t47);
const _sfc_main$3 = {
  name: "NcSettingsInputText",
  model: {
    prop: "value",
    event: "update:value"
  },
  props: {
    /**
     * label of the select group element
     */
    label: {
      type: String,
      required: true
    },
    /**
     * hint of the select group input
     */
    hint: {
      type: String,
      default: ""
    },
    /**
     * Removed in v9 - use `modelValue` (`v-model`) instead
     * @deprecated
     */
    value: {
      type: String,
      default: void 0
    },
    /**
     * value of the select group input
     */
    modelValue: {
      type: String,
      default: ""
    },
    /**
     * disabled state of the settings select group input
     */
    disabled: {
      type: Boolean,
      default: false
    },
    /**
     * id attribute of the select group element
     */
    id: {
      type: String,
      default: () => "settings-input-text-" + GenRandomId(),
      validator: (id) => id.trim() !== ""
    }
  },
  emits: [
    /**
     * Removed in v9 - use `update:modelValue` (`v-model`) instead
     * @deprecated
     */
    "update:value",
    /**
     * Emitted when the inputs value changes
     *
     * @type {string}
     */
    "update:modelValue",
    /* Same as update:modelValue for Vue 2 compatibility */
    "update:model-value",
    "input",
    "submit",
    "change"
  ],
  setup() {
    const model = useModelMigration("value", "update:value");
    return {
      model
    };
  },
  data() {
    return {
      submitTranslated: t("Submit")
    };
  },
  computed: {
    /**
     * @return {string}
     */
    idSubmit() {
      return this.id + "-submit";
    }
  },
  methods: {
    onInput(event) {
      this.$emit("input", event);
      this.model = event.target.value;
    },
    onSubmit(event) {
      if (!this.disabled) {
        this.$emit("submit", event);
      }
    },
    onChange(event) {
      this.$emit("change", event);
    }
  }
};
var _sfc_render$3 = function render25() {
  var _vm = this, _c = _vm._self._c;
  return _c("form", { ref: "form", attrs: { "disabled": _vm.disabled }, on: { "submit": function($event) {
    $event.preventDefault();
    $event.stopPropagation();
    return _vm.onSubmit.apply(null, arguments);
  } } }, [_c("div", { staticClass: "input-wrapper" }, [_c("label", { staticClass: "action-input__label", attrs: { "for": _vm.id } }, [_vm._v(_vm._s(_vm.label))]), _c("input", { attrs: { "id": _vm.id, "type": "text", "disabled": _vm.disabled }, domProps: { "value": _vm.model }, on: { "input": _vm.onInput, "change": _vm.onChange } }), _c("input", { staticClass: "action-input__submit", attrs: { "id": _vm.idSubmit, "type": "submit" }, domProps: { "value": _vm.submitTranslated } }), _vm.hint ? _c("p", { staticClass: "hint" }, [_vm._v(" " + _vm._s(_vm.hint) + " ")]) : _vm._e()])]);
};
var _sfc_staticRenderFns$3 = [];
var __component__$3 = /* @__PURE__ */ normalizeComponent$1(
  _sfc_main$3,
  _sfc_render$3,
  _sfc_staticRenderFns$3,
  false,
  null,
  "0907eb0a"
);
const NcSettingsInputText = __component__$3.exports;
register(t23);
const _sfc_main$1$1 = {
  name: "HelpCircleIcon",
  emits: ["click"],
  props: {
    title: {
      type: String
    },
    fillColor: {
      type: String,
      default: "currentColor"
    },
    size: {
      type: Number,
      default: 24
    }
  }
};
var _sfc_render$1$1 = function render26() {
  var _vm = this, _c = _vm._self._c;
  return _c("span", _vm._b({ staticClass: "material-design-icon help-circle-icon", attrs: { "aria-hidden": _vm.title ? null : "true", "aria-label": _vm.title, "role": "img" }, on: { "click": function($event) {
    return _vm.$emit("click", $event);
  } } }, "span", _vm.$attrs, false), [_c("svg", { staticClass: "material-design-icon__svg", attrs: { "fill": _vm.fillColor, "width": _vm.size, "height": _vm.size, "viewBox": "0 0 24 24" } }, [_c("path", { attrs: { "d": "M15.07,11.25L14.17,12.17C13.45,12.89 13,13.5 13,15H11V14.5C11,13.39 11.45,12.39 12.17,11.67L13.41,10.41C13.78,10.05 14,9.55 14,9C14,7.89 13.1,7 12,7A2,2 0 0,0 10,9H8A4,4 0 0,1 12,5A4,4 0 0,1 16,9C16,9.88 15.64,10.67 15.07,11.25M13,19H11V17H13M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12C22,6.47 17.5,2 12,2Z" } }, [_vm.title ? _c("title", [_vm._v(_vm._s(_vm.title))]) : _vm._e()])])]);
};
var _sfc_staticRenderFns$1$1 = [];
var __component__$1$1 = /* @__PURE__ */ normalizeComponent$1(
  _sfc_main$1$1,
  _sfc_render$1$1,
  _sfc_staticRenderFns$1$1,
  false,
  null,
  null
);
const HelpCircle = __component__$1$1.exports;
const _sfc_main$2 = {
  name: "NcSettingsSection",
  components: {
    HelpCircle
  },
  props: {
    name: {
      type: String,
      required: true
    },
    description: {
      type: String,
      default: ""
    },
    docUrl: {
      type: String,
      default: ""
    },
    /**
     * Limit the width of the setting's content
     *
     * Setting this to false allows unrestricted (width) settings content.
     * Note that the name and description have always a width limit.
     * @deprecated Will be removed with next version and will not be used on Nextcloud 30+ (always forced to true)
     */
    limitWidth: {
      type: Boolean,
      default: true
    }
  },
  data() {
    return {
      docNameTranslated: t("External documentation for {name}", {
        name: this.name
      })
    };
  },
  computed: {
    forceLimitWidth() {
      if (this.limitWidth) {
        return true;
      }
      const [major] = window._oc_config?.version.split(".", 2) ?? [];
      return major && Number.parseInt(major) >= 30;
    },
    hasDescription() {
      return this.description.length > 0;
    },
    hasDocUrl() {
      return this.docUrl.length > 0;
    }
  }
};
var _sfc_render$2 = function render27() {
  var _vm = this, _c = _vm._self._c;
  return _c("div", { staticClass: "settings-section", class: { "settings-section--limit-width": _vm.forceLimitWidth } }, [_c("h2", { staticClass: "settings-section__name" }, [_vm._v(" " + _vm._s(_vm.name) + " "), _vm.hasDocUrl ? _c("a", { staticClass: "settings-section__info", attrs: { "href": _vm.docUrl, "title": _vm.docNameTranslated, "aria-label": _vm.docNameTranslated, "target": "_blank", "rel": "noreferrer nofollow" } }, [_c("HelpCircle", { attrs: { "size": 20 } })], 1) : _vm._e()]), _vm.hasDescription ? _c("p", { staticClass: "settings-section__desc" }, [_vm._v(" " + _vm._s(_vm.description) + " ")]) : _vm._e(), _vm._t("default")], 2);
};
var _sfc_staticRenderFns$2 = [];
var __component__$2 = /* @__PURE__ */ normalizeComponent$1(
  _sfc_main$2,
  _sfc_render$2,
  _sfc_staticRenderFns$2,
  false,
  null,
  "6f6953b5"
);
const NcSettingsSection = __component__$2.exports;
register(t48);
({
  methods: {
    /**
     * Debounce the group search (reduce API calls)
     */
    onSearch: debounce$1(function(query) {
      this.loadGroup(query);
    }, 200)
  }
});
function checkIfDarkTheme(el = document.body) {
  const backgroundInvertIfDark = window.getComputedStyle(el).getPropertyValue("--background-invert-if-dark");
  if (backgroundInvertIfDark !== void 0) {
    return backgroundInvertIfDark === "invert(100%)";
  }
  return false;
}
checkIfDarkTheme();
options.themes.tooltip.html = false;
options.themes.tooltip.delay = { show: 500, hide: 200 };
options.themes.tooltip.distance = 10;
options.themes.tooltip["arrow-padding"] = 3;
const _sfc_main$1 = {
  name: "AlertCircleIcon",
  emits: ["click"],
  props: {
    title: {
      type: String
    },
    fillColor: {
      type: String,
      default: "currentColor"
    },
    size: {
      type: Number,
      default: 24
    }
  }
};
var _sfc_render$1 = function render28() {
  var _vm = this, _c = _vm._self._c;
  return _c("span", _vm._b({ staticClass: "material-design-icon alert-circle-icon", attrs: { "aria-hidden": _vm.title ? null : "true", "aria-label": _vm.title, "role": "img" }, on: { "click": function($event) {
    return _vm.$emit("click", $event);
  } } }, "span", _vm.$attrs, false), [_c("svg", { staticClass: "material-design-icon__svg", attrs: { "fill": _vm.fillColor, "width": _vm.size, "height": _vm.size, "viewBox": "0 0 24 24" } }, [_c("path", { attrs: { "d": "M13,13H11V7H13M13,17H11V15H13M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2Z" } }, [_vm.title ? _c("title", [_vm._v(_vm._s(_vm.title))]) : _vm._e()])])]);
};
var _sfc_staticRenderFns$1 = [];
_sfc_render$1._withStripped = true;
var __component__$1 = /* @__PURE__ */ normalizeComponent$2(
  _sfc_main$1,
  _sfc_render$1,
  _sfc_staticRenderFns$1,
  false,
  null,
  null
);
__component__$1.options.__file = "/home/bperraud/Documents/code/nc-permalink/node_modules/vue-material-design-icons/AlertCircle.vue";
const AlertIcon = __component__$1.exports;
/*! third party licenses: js/vendor.LICENSE.txt */
var SettingsKey = /* @__PURE__ */ ((SettingsKey2) => {
  SettingsKey2["JwtSecretKey"] = "jwt_secret_key";
  SettingsKey2["PermalinkApiEndpoint"] = "permalink_api_endpoint";
  return SettingsKey2;
})(SettingsKey || {});
/*! third party licenses: js/vendor.LICENSE.txt */
var UpdateState = /* @__PURE__ */ ((UpdateState2) => {
  UpdateState2[UpdateState2["Idle"] = 0] = "Idle";
  UpdateState2[UpdateState2["Updating"] = 1] = "Updating";
  UpdateState2[UpdateState2["Completed"] = 2] = "Completed";
  UpdateState2[UpdateState2["Error"] = 3] = "Error";
  return UpdateState2;
})(UpdateState || {});
/*! third party licenses: js/vendor.LICENSE.txt */
const SettingsMixin = {
  data() {
    return {
      settings: null
    };
  },
  methods: {
    async fetchSettings() {
      try {
        const response = await cancelableClient.get(
          _("/apps/permalink/settings")
        );
        if (response.data) {
          this.settings = response.data;
        }
      } catch (e2) {
        console.error(e2.response);
      }
    },
    async getSettings() {
      if (this.settings) {
        return this.settings;
      } else {
        await this.fetchSettings();
        return this.settings;
      }
    },
    async getJwtSecret() {
      const settings = await this.getSettings();
      return settings && settings.jwtSecretKey ? settings.jwtSecretKey : "";
    },
    async getPermalinkApiEndpoint() {
      const settings = await this.getSettings();
      return settings && settings.permalinkApiEndpoint ? settings.permalinkApiEndpoint : "";
    }
  }
};
/*! third party licenses: js/vendor.LICENSE.txt */
const _sfc_main = {
  name: "AdminSettings",
  components: {
    NcSettingsSection,
    NcSettingsInputText,
    NcLoadingIcon,
    CheckIcon,
    AlertIcon
  },
  directives: {
    Tooltip: VTooltip
  },
  mixins: [SettingsMixin],
  data() {
    return {
      updating: {
        status: UpdateState.Idle,
        key: null
      },
      loading: true,
      jwtSecretKey: "",
      permalinkApiEndpoint: "",
      deleteConflicts: false
    };
  },
  computed: {
    UpdateState() {
      return UpdateState;
    },
    SettingsKey() {
      return SettingsKey;
    }
  },
  async mounted() {
    this.loading = true;
    this.jwtSecretKey = await this.getJwtSecret();
    this.permalinkApiEndpoint = await this.getPermalinkApiEndpoint();
    this.loading = false;
  },
  methods: {
    t: translate,
    setUpdate(key, status) {
      this.updating.status = status;
      this.updating.key = key;
    },
    async onSecretKeySubmit() {
      await this.saveSettings(SettingsKey.JwtSecretKey, this.jwtSecretKey);
    },
    async onApiEndpointSubmit() {
      await this.saveSettings(SettingsKey.PermalinkApiEndpoint, this.permalinkApiEndpoint);
    },
    async onDeleteConflictsChange(value3) {
      await this.saveSettings(
        SettingsKey.DeleteRemovedShareConflicts,
        value3 ? "1" : "0"
      );
    },
    async saveSettings(key, value3) {
      const data11 = {
        key,
        value: value3
      };
      this.setUpdate(key, UpdateState.Updating);
      try {
        await cancelableClient.post(
          _("/apps/permalink/settings/save"),
          data11
        );
        this.setUpdate(key, UpdateState.Completed);
      } catch (e2) {
        if (e2.response.data && e2.response.data.message) {
          showError(translate("permalink", e2.response.data.message));
        } else {
          showError(
            translate("permalink", "Error occurred while saving settings")
          );
          console.error(e2.response);
        }
        this.setUpdate(key, UpdateState.Error);
      }
    }
  }
};
var _sfc_render = function render29() {
  var _vm = this, _c = _vm._self._c;
  return _c("div", { attrs: { "id": "permalink-admin-settings" } }, [_c("NcSettingsSection", { attrs: { "name": _vm.t("permalink", "API Endpoint"), "description": _vm.t("permalink", "Base URL of the external Permalink API that handles link creation") } }, [_c("div", { staticClass: "input-with-icon" }, [_c("h3", [_vm.updating.key === _vm.SettingsKey.PermalinkApiEndpoint ? _c("span", { staticClass: "status-icon" }, [_vm.updating.status === _vm.UpdateState.Updating ? _c("NcLoadingIcon", { attrs: { "name": _vm.t("permalink", "Saving..."), "size": 20 } }) : _vm.updating.status === _vm.UpdateState.Completed ? _c("CheckIcon", { attrs: { "size": 20 } }) : _vm.updating.status === _vm.UpdateState.Error ? _c("AlertIcon", { attrs: { "size": 20 } }) : _vm._e()], 1) : _vm._e()]), _c("NcSettingsInputText", { attrs: { "id": "permalink-api-endpoint", "label": "", "value": _vm.permalinkApiEndpoint, "disabled": _vm.updating.status === _vm.UpdateState.Updating || _vm.loading }, on: { "update:value": function($event) {
    _vm.permalinkApiEndpoint = $event;
  }, "submit": _vm.onApiEndpointSubmit } })], 1)]), _c("NcSettingsSection", { attrs: { "name": _vm.t("permalink", "Jwt secret key"), "description": _vm.t("permalink", "Secret key used to sign JWT tokens for authenticating requests to the Permalink API. Must match the API's configuration") } }, [_c("div", { staticClass: "input-with-icon" }, [_c("h3", [_vm.updating.key === _vm.SettingsKey.JwtSecretKey ? _c("span", { staticClass: "status-icon" }, [_vm.updating.status === _vm.UpdateState.Updating ? _c("NcLoadingIcon", { attrs: { "name": _vm.t("permalink", "Saving..."), "size": 20 } }) : _vm.updating.status === _vm.UpdateState.Completed ? _c("CheckIcon", { attrs: { "size": 20 } }) : _vm.updating.status === _vm.UpdateState.Error ? _c("AlertIcon", { attrs: { "size": 20 } }) : _vm._e()], 1) : _vm._e()]), _c("NcSettingsInputText", { attrs: { "id": "jwt-secret-key", "label": "", "value": _vm.jwtSecretKey, "disabled": _vm.updating.status === _vm.UpdateState.Updating || _vm.loading }, on: { "update:value": function($event) {
    _vm.jwtSecretKey = $event;
  }, "submit": _vm.onSecretKeySubmit } })], 1)])], 1);
};
var _sfc_staticRenderFns = [];
_sfc_render._withStripped = true;
var __component__ = /* @__PURE__ */ normalizeComponent$2(
  _sfc_main,
  _sfc_render,
  _sfc_staticRenderFns,
  false,
  null,
  "e8c7e823"
);
__component__.options.__file = "/home/bperraud/Documents/code/nc-permalink/src/components/AdminSettings.vue";
const AdminSettings = __component__.exports;
/*! third party licenses: js/vendor.LICENSE.txt */
console.debug("Permalink: SettingsAdmin init");
const View = Vue.extend(AdminSettings);
new View().$mount("#permalink-admin-settings");
//# sourceMappingURL=permalink-settingsAdmin.mjs.map
